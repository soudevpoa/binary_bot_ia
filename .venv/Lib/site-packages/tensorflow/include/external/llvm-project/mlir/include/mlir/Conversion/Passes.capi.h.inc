
/* Autogenerated by mlir-tblgen; don't manually edit. */

#include "mlir-c/Pass.h"

#ifdef __cplusplus
extern "C" {
#endif

// Registration for the entire group
MLIR_CAPI_EXPORTED void mlirRegisterConversionPasses(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionArithToAMDGPUConversionPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionArithToAMDGPUConversionPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionArithToArmSMEConversionPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionArithToArmSMEConversionPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionArithToLLVMConversionPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionArithToLLVMConversionPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertAMDGPUToROCDLPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertAMDGPUToROCDLPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertAffineForToGPUPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertAffineForToGPUPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertArithToEmitC(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertArithToEmitC(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertArithToSPIRVPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertArithToSPIRVPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertArmNeon2dToIntrPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertArmNeon2dToIntrPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertArmSMEToLLVM(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertArmSMEToLLVM(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertArmSMEToSCFPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertArmSMEToSCFPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertAsyncToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertAsyncToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertBufferizationToMemRefPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertBufferizationToMemRefPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertComplexToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertComplexToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertComplexToLibm(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertComplexToLibm(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertComplexToSPIRVPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertComplexToSPIRVPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertComplexToStandardPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertComplexToStandardPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertControlFlowToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertControlFlowToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertControlFlowToSPIRVPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertControlFlowToSPIRVPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertFuncToEmitC(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertFuncToEmitC(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertFuncToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertFuncToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertFuncToSPIRVPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertFuncToSPIRVPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertGPUToSPIRV(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertGPUToSPIRV(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertGpuOpsToLLVMSPVOps(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertGpuOpsToLLVMSPVOps(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertGpuOpsToNVVMOps(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertGpuOpsToNVVMOps(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertGpuOpsToROCDLOps(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertGpuOpsToROCDLOps(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertIndexToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertIndexToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertIndexToSPIRVPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertIndexToSPIRVPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertLinalgToStandardPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertLinalgToStandardPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertMathToEmitC(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertMathToEmitC(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertMathToFuncs(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertMathToFuncs(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertMathToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertMathToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertMathToLibmPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertMathToLibmPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertMathToROCDL(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertMathToROCDL(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertMathToSPIRVPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertMathToSPIRVPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertMemRefToEmitC(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertMemRefToEmitC(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertMemRefToSPIRVPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertMemRefToSPIRVPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertMeshToMPIPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertMeshToMPIPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertNVGPUToNVVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertNVGPUToNVVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertNVVMToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertNVVMToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertOpenACCToSCFPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertOpenACCToSCFPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertOpenMPToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertOpenMPToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertPDLToPDLInterpPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertPDLToPDLInterpPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertParallelLoopToGpuPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertParallelLoopToGpuPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertSCFToOpenMPPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertSCFToOpenMPPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertSPIRVToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertSPIRVToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertShapeConstraintsPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertShapeConstraintsPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertShapeToStandardPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertShapeToStandardPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertTensorToLinalgPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertTensorToLinalgPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertTensorToSPIRVPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertTensorToSPIRVPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertToEmitC(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertToEmitC(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertVectorToArmSMEPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertVectorToArmSMEPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertVectorToGPU(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertVectorToGPU(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertVectorToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertVectorToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertVectorToSCF(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertVectorToSCF(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertVectorToSPIRVPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertVectorToSPIRVPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionConvertVectorToXeGPU(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionConvertVectorToXeGPU(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionFinalizeMemRefToLLVMConversionPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionFinalizeMemRefToLLVMConversionPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionGpuToLLVMConversionPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionGpuToLLVMConversionPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionLiftControlFlowToSCFPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionLiftControlFlowToSCFPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionLowerAffinePass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionLowerAffinePass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionLowerHostCodeToLLVMPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionLowerHostCodeToLLVMPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionMapMemRefStorageClass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionMapMemRefStorageClass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionReconcileUnrealizedCastsPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionReconcileUnrealizedCastsPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionSCFToControlFlowPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionSCFToControlFlowPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionSCFToEmitC(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionSCFToEmitC(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionSCFToSPIRV(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionSCFToSPIRV(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionSetLLVMModuleDataLayoutPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionSetLLVMModuleDataLayoutPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionTosaToArithPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionTosaToArithPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionTosaToLinalg(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionTosaToLinalg(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionTosaToLinalgNamed(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionTosaToLinalgNamed(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionTosaToMLProgram(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionTosaToMLProgram(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionTosaToSCFPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionTosaToSCFPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionTosaToTensorPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionTosaToTensorPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionUBToLLVMConversionPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionUBToLLVMConversionPass(void);


/* Create Conversion Pass. */
MLIR_CAPI_EXPORTED MlirPass mlirCreateConversionUBToSPIRVConversionPass(void);
MLIR_CAPI_EXPORTED void mlirRegisterConversionUBToSPIRVConversionPass(void);



#ifdef __cplusplus
}
#endif
