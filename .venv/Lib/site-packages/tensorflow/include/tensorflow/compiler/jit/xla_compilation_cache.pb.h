// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/compiler/jit/xla_compilation_cache.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "xla/service/hlo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto;
namespace tensorflow {
class XlaSerializedCacheEntry;
struct XlaSerializedCacheEntryDefaultTypeInternal;
PROTOBUF_EXPORT extern XlaSerializedCacheEntryDefaultTypeInternal _XlaSerializedCacheEntry_default_instance_;
class XlaSerializedCacheKey;
struct XlaSerializedCacheKeyDefaultTypeInternal;
PROTOBUF_EXPORT extern XlaSerializedCacheKeyDefaultTypeInternal _XlaSerializedCacheKey_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT XlaSerializedCacheKey final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.XlaSerializedCacheKey) */ {
 public:
  inline XlaSerializedCacheKey() : XlaSerializedCacheKey(nullptr) {}
  ~XlaSerializedCacheKey() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR XlaSerializedCacheKey(
      ::google::protobuf::internal::ConstantInitialized);

  inline XlaSerializedCacheKey(const XlaSerializedCacheKey& from) : XlaSerializedCacheKey(nullptr, from) {}
  inline XlaSerializedCacheKey(XlaSerializedCacheKey&& from) noexcept
      : XlaSerializedCacheKey(nullptr, std::move(from)) {}
  inline XlaSerializedCacheKey& operator=(const XlaSerializedCacheKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline XlaSerializedCacheKey& operator=(XlaSerializedCacheKey&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const XlaSerializedCacheKey& default_instance() {
    return *internal_default_instance();
  }
  static inline const XlaSerializedCacheKey* internal_default_instance() {
    return reinterpret_cast<const XlaSerializedCacheKey*>(
        &_XlaSerializedCacheKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(XlaSerializedCacheKey& a, XlaSerializedCacheKey& b) { a.Swap(&b); }
  inline void Swap(XlaSerializedCacheKey* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(XlaSerializedCacheKey* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  XlaSerializedCacheKey* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<XlaSerializedCacheKey>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const XlaSerializedCacheKey& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const XlaSerializedCacheKey& from) { XlaSerializedCacheKey::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(XlaSerializedCacheKey* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.XlaSerializedCacheKey"; }

 protected:
  explicit XlaSerializedCacheKey(::google::protobuf::Arena* arena);
  XlaSerializedCacheKey(::google::protobuf::Arena* arena, const XlaSerializedCacheKey& from);
  XlaSerializedCacheKey(::google::protobuf::Arena* arena, XlaSerializedCacheKey&& from) noexcept
      : XlaSerializedCacheKey(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceTypeFieldNumber = 3,
    kPrefixFieldNumber = 4,
    kSignatureFingerprintFieldNumber = 1,
    kClusterFingerprintFieldNumber = 2,
    kCompiledUsingPjrtFieldNumber = 5,
  };
  // string device_type = 3;
  void clear_device_type() ;
  const std::string& device_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_type();
  PROTOBUF_NODISCARD std::string* release_device_type();
  void set_allocated_device_type(std::string* value);

  private:
  const std::string& _internal_device_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_type(
      const std::string& value);
  std::string* _internal_mutable_device_type();

  public:
  // string prefix = 4;
  void clear_prefix() ;
  const std::string& prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_prefix();
  PROTOBUF_NODISCARD std::string* release_prefix();
  void set_allocated_prefix(std::string* value);

  private:
  const std::string& _internal_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prefix(
      const std::string& value);
  std::string* _internal_mutable_prefix();

  public:
  // uint64 signature_fingerprint = 1;
  void clear_signature_fingerprint() ;
  ::uint64_t signature_fingerprint() const;
  void set_signature_fingerprint(::uint64_t value);

  private:
  ::uint64_t _internal_signature_fingerprint() const;
  void _internal_set_signature_fingerprint(::uint64_t value);

  public:
  // uint64 cluster_fingerprint = 2;
  void clear_cluster_fingerprint() ;
  ::uint64_t cluster_fingerprint() const;
  void set_cluster_fingerprint(::uint64_t value);

  private:
  ::uint64_t _internal_cluster_fingerprint() const;
  void _internal_set_cluster_fingerprint(::uint64_t value);

  public:
  // bool compiled_using_pjrt = 5;
  void clear_compiled_using_pjrt() ;
  bool compiled_using_pjrt() const;
  void set_compiled_using_pjrt(bool value);

  private:
  bool _internal_compiled_using_pjrt() const;
  void _internal_set_compiled_using_pjrt(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.XlaSerializedCacheKey)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      58, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const XlaSerializedCacheKey& from_msg);
    ::google::protobuf::internal::ArenaStringPtr device_type_;
    ::google::protobuf::internal::ArenaStringPtr prefix_;
    ::uint64_t signature_fingerprint_;
    ::uint64_t cluster_fingerprint_;
    bool compiled_using_pjrt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT XlaSerializedCacheEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.XlaSerializedCacheEntry) */ {
 public:
  inline XlaSerializedCacheEntry() : XlaSerializedCacheEntry(nullptr) {}
  ~XlaSerializedCacheEntry() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR XlaSerializedCacheEntry(
      ::google::protobuf::internal::ConstantInitialized);

  inline XlaSerializedCacheEntry(const XlaSerializedCacheEntry& from) : XlaSerializedCacheEntry(nullptr, from) {}
  inline XlaSerializedCacheEntry(XlaSerializedCacheEntry&& from) noexcept
      : XlaSerializedCacheEntry(nullptr, std::move(from)) {}
  inline XlaSerializedCacheEntry& operator=(const XlaSerializedCacheEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline XlaSerializedCacheEntry& operator=(XlaSerializedCacheEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const XlaSerializedCacheEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const XlaSerializedCacheEntry* internal_default_instance() {
    return reinterpret_cast<const XlaSerializedCacheEntry*>(
        &_XlaSerializedCacheEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(XlaSerializedCacheEntry& a, XlaSerializedCacheEntry& b) { a.Swap(&b); }
  inline void Swap(XlaSerializedCacheEntry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(XlaSerializedCacheEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  XlaSerializedCacheEntry* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<XlaSerializedCacheEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const XlaSerializedCacheEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const XlaSerializedCacheEntry& from) { XlaSerializedCacheEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(XlaSerializedCacheEntry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.XlaSerializedCacheEntry"; }

 protected:
  explicit XlaSerializedCacheEntry(::google::protobuf::Arena* arena);
  XlaSerializedCacheEntry(::google::protobuf::Arena* arena, const XlaSerializedCacheEntry& from);
  XlaSerializedCacheEntry(::google::protobuf::Arena* arena, XlaSerializedCacheEntry&& from) noexcept
      : XlaSerializedCacheEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExecutableFieldNumber = 3,
    kKeyFieldNumber = 1,
    kHloModuleFieldNumber = 2,
  };
  // bytes executable = 3;
  void clear_executable() ;
  const std::string& executable() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_executable(Arg_&& arg, Args_... args);
  std::string* mutable_executable();
  PROTOBUF_NODISCARD std::string* release_executable();
  void set_allocated_executable(std::string* value);

  private:
  const std::string& _internal_executable() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_executable(
      const std::string& value);
  std::string* _internal_mutable_executable();

  public:
  // .tensorflow.XlaSerializedCacheKey key = 1;
  bool has_key() const;
  void clear_key() ;
  const ::tensorflow::XlaSerializedCacheKey& key() const;
  PROTOBUF_NODISCARD ::tensorflow::XlaSerializedCacheKey* release_key();
  ::tensorflow::XlaSerializedCacheKey* mutable_key();
  void set_allocated_key(::tensorflow::XlaSerializedCacheKey* value);
  void unsafe_arena_set_allocated_key(::tensorflow::XlaSerializedCacheKey* value);
  ::tensorflow::XlaSerializedCacheKey* unsafe_arena_release_key();

  private:
  const ::tensorflow::XlaSerializedCacheKey& _internal_key() const;
  ::tensorflow::XlaSerializedCacheKey* _internal_mutable_key();

  public:
  // .xla.HloModuleProto hlo_module = 2;
  bool has_hlo_module() const;
  void clear_hlo_module() ;
  const ::xla::HloModuleProto& hlo_module() const;
  PROTOBUF_NODISCARD ::xla::HloModuleProto* release_hlo_module();
  ::xla::HloModuleProto* mutable_hlo_module();
  void set_allocated_hlo_module(::xla::HloModuleProto* value);
  void unsafe_arena_set_allocated_hlo_module(::xla::HloModuleProto* value);
  ::xla::HloModuleProto* unsafe_arena_release_hlo_module();

  private:
  const ::xla::HloModuleProto& _internal_hlo_module() const;
  ::xla::HloModuleProto* _internal_mutable_hlo_module();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.XlaSerializedCacheEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const XlaSerializedCacheEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr executable_;
    ::tensorflow::XlaSerializedCacheKey* key_;
    ::xla::HloModuleProto* hlo_module_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XlaSerializedCacheKey

// uint64 signature_fingerprint = 1;
inline void XlaSerializedCacheKey::clear_signature_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_fingerprint_ = ::uint64_t{0u};
}
inline ::uint64_t XlaSerializedCacheKey::signature_fingerprint() const {
  // @@protoc_insertion_point(field_get:tensorflow.XlaSerializedCacheKey.signature_fingerprint)
  return _internal_signature_fingerprint();
}
inline void XlaSerializedCacheKey::set_signature_fingerprint(::uint64_t value) {
  _internal_set_signature_fingerprint(value);
  // @@protoc_insertion_point(field_set:tensorflow.XlaSerializedCacheKey.signature_fingerprint)
}
inline ::uint64_t XlaSerializedCacheKey::_internal_signature_fingerprint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_fingerprint_;
}
inline void XlaSerializedCacheKey::_internal_set_signature_fingerprint(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_fingerprint_ = value;
}

// uint64 cluster_fingerprint = 2;
inline void XlaSerializedCacheKey::clear_cluster_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_fingerprint_ = ::uint64_t{0u};
}
inline ::uint64_t XlaSerializedCacheKey::cluster_fingerprint() const {
  // @@protoc_insertion_point(field_get:tensorflow.XlaSerializedCacheKey.cluster_fingerprint)
  return _internal_cluster_fingerprint();
}
inline void XlaSerializedCacheKey::set_cluster_fingerprint(::uint64_t value) {
  _internal_set_cluster_fingerprint(value);
  // @@protoc_insertion_point(field_set:tensorflow.XlaSerializedCacheKey.cluster_fingerprint)
}
inline ::uint64_t XlaSerializedCacheKey::_internal_cluster_fingerprint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_fingerprint_;
}
inline void XlaSerializedCacheKey::_internal_set_cluster_fingerprint(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_fingerprint_ = value;
}

// string device_type = 3;
inline void XlaSerializedCacheKey::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.ClearToEmpty();
}
inline const std::string& XlaSerializedCacheKey::device_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.XlaSerializedCacheKey.device_type)
  return _internal_device_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void XlaSerializedCacheKey::set_device_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.XlaSerializedCacheKey.device_type)
}
inline std::string* XlaSerializedCacheKey::mutable_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_type();
  // @@protoc_insertion_point(field_mutable:tensorflow.XlaSerializedCacheKey.device_type)
  return _s;
}
inline const std::string& XlaSerializedCacheKey::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_type_.Get();
}
inline void XlaSerializedCacheKey::_internal_set_device_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(value, GetArena());
}
inline std::string* XlaSerializedCacheKey::_internal_mutable_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_type_.Mutable( GetArena());
}
inline std::string* XlaSerializedCacheKey::release_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.XlaSerializedCacheKey.device_type)
  return _impl_.device_type_.Release();
}
inline void XlaSerializedCacheKey::set_allocated_device_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_type_.IsDefault()) {
          _impl_.device_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.XlaSerializedCacheKey.device_type)
}

// string prefix = 4;
inline void XlaSerializedCacheKey::clear_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.ClearToEmpty();
}
inline const std::string& XlaSerializedCacheKey::prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.XlaSerializedCacheKey.prefix)
  return _internal_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void XlaSerializedCacheKey::set_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.XlaSerializedCacheKey.prefix)
}
inline std::string* XlaSerializedCacheKey::mutable_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prefix();
  // @@protoc_insertion_point(field_mutable:tensorflow.XlaSerializedCacheKey.prefix)
  return _s;
}
inline const std::string& XlaSerializedCacheKey::_internal_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prefix_.Get();
}
inline void XlaSerializedCacheKey::_internal_set_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.Set(value, GetArena());
}
inline std::string* XlaSerializedCacheKey::_internal_mutable_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.prefix_.Mutable( GetArena());
}
inline std::string* XlaSerializedCacheKey::release_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.XlaSerializedCacheKey.prefix)
  return _impl_.prefix_.Release();
}
inline void XlaSerializedCacheKey::set_allocated_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.prefix_.IsDefault()) {
          _impl_.prefix_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.XlaSerializedCacheKey.prefix)
}

// bool compiled_using_pjrt = 5;
inline void XlaSerializedCacheKey::clear_compiled_using_pjrt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compiled_using_pjrt_ = false;
}
inline bool XlaSerializedCacheKey::compiled_using_pjrt() const {
  // @@protoc_insertion_point(field_get:tensorflow.XlaSerializedCacheKey.compiled_using_pjrt)
  return _internal_compiled_using_pjrt();
}
inline void XlaSerializedCacheKey::set_compiled_using_pjrt(bool value) {
  _internal_set_compiled_using_pjrt(value);
  // @@protoc_insertion_point(field_set:tensorflow.XlaSerializedCacheKey.compiled_using_pjrt)
}
inline bool XlaSerializedCacheKey::_internal_compiled_using_pjrt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compiled_using_pjrt_;
}
inline void XlaSerializedCacheKey::_internal_set_compiled_using_pjrt(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compiled_using_pjrt_ = value;
}

// -------------------------------------------------------------------

// XlaSerializedCacheEntry

// .tensorflow.XlaSerializedCacheKey key = 1;
inline bool XlaSerializedCacheEntry::has_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.key_ != nullptr);
  return value;
}
inline void XlaSerializedCacheEntry::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::XlaSerializedCacheKey& XlaSerializedCacheEntry::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::XlaSerializedCacheKey* p = _impl_.key_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::XlaSerializedCacheKey&>(::tensorflow::_XlaSerializedCacheKey_default_instance_);
}
inline const ::tensorflow::XlaSerializedCacheKey& XlaSerializedCacheEntry::key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.XlaSerializedCacheEntry.key)
  return _internal_key();
}
inline void XlaSerializedCacheEntry::unsafe_arena_set_allocated_key(::tensorflow::XlaSerializedCacheKey* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.key_);
  }
  _impl_.key_ = reinterpret_cast<::tensorflow::XlaSerializedCacheKey*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.XlaSerializedCacheEntry.key)
}
inline ::tensorflow::XlaSerializedCacheKey* XlaSerializedCacheEntry::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::XlaSerializedCacheKey* released = _impl_.key_;
  _impl_.key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::XlaSerializedCacheKey* XlaSerializedCacheEntry::unsafe_arena_release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.XlaSerializedCacheEntry.key)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::XlaSerializedCacheKey* temp = _impl_.key_;
  _impl_.key_ = nullptr;
  return temp;
}
inline ::tensorflow::XlaSerializedCacheKey* XlaSerializedCacheEntry::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::XlaSerializedCacheKey>(GetArena());
    _impl_.key_ = reinterpret_cast<::tensorflow::XlaSerializedCacheKey*>(p);
  }
  return _impl_.key_;
}
inline ::tensorflow::XlaSerializedCacheKey* XlaSerializedCacheEntry::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::XlaSerializedCacheKey* _msg = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:tensorflow.XlaSerializedCacheEntry.key)
  return _msg;
}
inline void XlaSerializedCacheEntry::set_allocated_key(::tensorflow::XlaSerializedCacheKey* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.key_ = reinterpret_cast<::tensorflow::XlaSerializedCacheKey*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.XlaSerializedCacheEntry.key)
}

// .xla.HloModuleProto hlo_module = 2;
inline bool XlaSerializedCacheEntry::has_hlo_module() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hlo_module_ != nullptr);
  return value;
}
inline const ::xla::HloModuleProto& XlaSerializedCacheEntry::_internal_hlo_module() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::HloModuleProto* p = _impl_.hlo_module_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::HloModuleProto&>(::xla::_HloModuleProto_default_instance_);
}
inline const ::xla::HloModuleProto& XlaSerializedCacheEntry::hlo_module() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.XlaSerializedCacheEntry.hlo_module)
  return _internal_hlo_module();
}
inline void XlaSerializedCacheEntry::unsafe_arena_set_allocated_hlo_module(::xla::HloModuleProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hlo_module_);
  }
  _impl_.hlo_module_ = reinterpret_cast<::xla::HloModuleProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.XlaSerializedCacheEntry.hlo_module)
}
inline ::xla::HloModuleProto* XlaSerializedCacheEntry::release_hlo_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::HloModuleProto* released = _impl_.hlo_module_;
  _impl_.hlo_module_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xla::HloModuleProto* XlaSerializedCacheEntry::unsafe_arena_release_hlo_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.XlaSerializedCacheEntry.hlo_module)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::HloModuleProto* temp = _impl_.hlo_module_;
  _impl_.hlo_module_ = nullptr;
  return temp;
}
inline ::xla::HloModuleProto* XlaSerializedCacheEntry::_internal_mutable_hlo_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hlo_module_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::HloModuleProto>(GetArena());
    _impl_.hlo_module_ = reinterpret_cast<::xla::HloModuleProto*>(p);
  }
  return _impl_.hlo_module_;
}
inline ::xla::HloModuleProto* XlaSerializedCacheEntry::mutable_hlo_module() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::xla::HloModuleProto* _msg = _internal_mutable_hlo_module();
  // @@protoc_insertion_point(field_mutable:tensorflow.XlaSerializedCacheEntry.hlo_module)
  return _msg;
}
inline void XlaSerializedCacheEntry::set_allocated_hlo_module(::xla::HloModuleProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hlo_module_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.hlo_module_ = reinterpret_cast<::xla::HloModuleProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.XlaSerializedCacheEntry.hlo_module)
}

// bytes executable = 3;
inline void XlaSerializedCacheEntry::clear_executable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executable_.ClearToEmpty();
}
inline const std::string& XlaSerializedCacheEntry::executable() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.XlaSerializedCacheEntry.executable)
  return _internal_executable();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void XlaSerializedCacheEntry::set_executable(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executable_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.XlaSerializedCacheEntry.executable)
}
inline std::string* XlaSerializedCacheEntry::mutable_executable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_executable();
  // @@protoc_insertion_point(field_mutable:tensorflow.XlaSerializedCacheEntry.executable)
  return _s;
}
inline const std::string& XlaSerializedCacheEntry::_internal_executable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.executable_.Get();
}
inline void XlaSerializedCacheEntry::_internal_set_executable(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executable_.Set(value, GetArena());
}
inline std::string* XlaSerializedCacheEntry::_internal_mutable_executable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.executable_.Mutable( GetArena());
}
inline std::string* XlaSerializedCacheEntry::release_executable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.XlaSerializedCacheEntry.executable)
  return _impl_.executable_.Release();
}
inline void XlaSerializedCacheEntry::set_allocated_executable(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executable_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.executable_.IsDefault()) {
          _impl_.executable_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.XlaSerializedCacheEntry.executable)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fjit_2fxla_5fcompilation_5fcache_2eproto_2epb_2eh
