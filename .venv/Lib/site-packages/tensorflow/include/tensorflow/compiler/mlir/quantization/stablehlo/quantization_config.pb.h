// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/compiler/mlir/quantization/stablehlo/quantization_config.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
namespace stablehlo {
namespace quantization {
class CalibrationOptions;
struct CalibrationOptionsDefaultTypeInternal;
PROTOBUF_EXPORT extern CalibrationOptionsDefaultTypeInternal _CalibrationOptions_default_instance_;
class CalibrationOptions_CalibrationParameters;
struct CalibrationOptions_CalibrationParametersDefaultTypeInternal;
PROTOBUF_EXPORT extern CalibrationOptions_CalibrationParametersDefaultTypeInternal _CalibrationOptions_CalibrationParameters_default_instance_;
class DebuggerConfig;
struct DebuggerConfigDefaultTypeInternal;
PROTOBUF_EXPORT extern DebuggerConfigDefaultTypeInternal _DebuggerConfig_default_instance_;
class FunctionNameMatcherSpec;
struct FunctionNameMatcherSpecDefaultTypeInternal;
PROTOBUF_EXPORT extern FunctionNameMatcherSpecDefaultTypeInternal _FunctionNameMatcherSpec_default_instance_;
class MatcherSpec;
struct MatcherSpecDefaultTypeInternal;
PROTOBUF_EXPORT extern MatcherSpecDefaultTypeInternal _MatcherSpec_default_instance_;
class Method;
struct MethodDefaultTypeInternal;
PROTOBUF_EXPORT extern MethodDefaultTypeInternal _Method_default_instance_;
class NoQuantization;
struct NoQuantizationDefaultTypeInternal;
PROTOBUF_EXPORT extern NoQuantizationDefaultTypeInternal _NoQuantization_default_instance_;
class PerTensor;
struct PerTensorDefaultTypeInternal;
PROTOBUF_EXPORT extern PerTensorDefaultTypeInternal _PerTensor_default_instance_;
class PipelineConfig;
struct PipelineConfigDefaultTypeInternal;
PROTOBUF_EXPORT extern PipelineConfigDefaultTypeInternal _PipelineConfig_default_instance_;
class QuantizableUnit;
struct QuantizableUnitDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizableUnitDefaultTypeInternal _QuantizableUnit_default_instance_;
class QuantizationConfig;
struct QuantizationConfigDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizationConfigDefaultTypeInternal _QuantizationConfig_default_instance_;
class QuantizationResult;
struct QuantizationResultDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizationResultDefaultTypeInternal _QuantizationResult_default_instance_;
class QuantizationResults;
struct QuantizationResultsDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizationResultsDefaultTypeInternal _QuantizationResults_default_instance_;
class QuantizationSpec;
struct QuantizationSpecDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizationSpecDefaultTypeInternal _QuantizationSpec_default_instance_;
class QuantizationSpecs;
struct QuantizationSpecsDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizationSpecsDefaultTypeInternal _QuantizationSpecs_default_instance_;
class QuantizedDimension;
struct QuantizedDimensionDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizedDimensionDefaultTypeInternal _QuantizedDimension_default_instance_;
class QuantizedType;
struct QuantizedTypeDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizedTypeDefaultTypeInternal _QuantizedType_default_instance_;
class RepresentativeDatasetConfig;
struct RepresentativeDatasetConfigDefaultTypeInternal;
PROTOBUF_EXPORT extern RepresentativeDatasetConfigDefaultTypeInternal _RepresentativeDatasetConfig_default_instance_;
class StaticRangePtq;
struct StaticRangePtqDefaultTypeInternal;
PROTOBUF_EXPORT extern StaticRangePtqDefaultTypeInternal _StaticRangePtq_default_instance_;
class StaticRangePtqPreset;
struct StaticRangePtqPresetDefaultTypeInternal;
PROTOBUF_EXPORT extern StaticRangePtqPresetDefaultTypeInternal _StaticRangePtqPreset_default_instance_;
class StaticRangePtq_InputQuantizedTypesEntry_DoNotUse;
struct StaticRangePtq_InputQuantizedTypesEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern StaticRangePtq_InputQuantizedTypesEntry_DoNotUseDefaultTypeInternal _StaticRangePtq_InputQuantizedTypesEntry_DoNotUse_default_instance_;
class TfRecordFile;
struct TfRecordFileDefaultTypeInternal;
PROTOBUF_EXPORT extern TfRecordFileDefaultTypeInternal _TfRecordFile_default_instance_;
class TfSavedModelConfig;
struct TfSavedModelConfigDefaultTypeInternal;
PROTOBUF_EXPORT extern TfSavedModelConfigDefaultTypeInternal _TfSavedModelConfig_default_instance_;
class WeightOnlyPtq;
struct WeightOnlyPtqDefaultTypeInternal;
PROTOBUF_EXPORT extern WeightOnlyPtqDefaultTypeInternal _WeightOnlyPtq_default_instance_;
class WeightOnlyPtqPreset;
struct WeightOnlyPtqPresetDefaultTypeInternal;
PROTOBUF_EXPORT extern WeightOnlyPtqPresetDefaultTypeInternal _WeightOnlyPtqPreset_default_instance_;
class WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse;
struct WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUseDefaultTypeInternal _WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse_default_instance_;
}  // namespace quantization
}  // namespace stablehlo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace stablehlo {
namespace quantization {
enum DebuggerConfig_DebuggerType : int {
  DebuggerConfig_DebuggerType_DEBUGGER_TYPE_UNSPECIFIED = 0,
  DebuggerConfig_DebuggerType_DEBUGGER_TYPE_WHOLE_MODEL = 1,
  DebuggerConfig_DebuggerType_DEBUGGER_TYPE_INT_PER_LAYER = 2,
  DebuggerConfig_DebuggerType_DEBUGGER_TYPE_FLOAT_PER_LAYER = 3,
  DebuggerConfig_DebuggerType_DebuggerConfig_DebuggerType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DebuggerConfig_DebuggerType_DebuggerConfig_DebuggerType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool DebuggerConfig_DebuggerType_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t DebuggerConfig_DebuggerType_internal_data_[];
constexpr DebuggerConfig_DebuggerType DebuggerConfig_DebuggerType_DebuggerType_MIN = static_cast<DebuggerConfig_DebuggerType>(0);
constexpr DebuggerConfig_DebuggerType DebuggerConfig_DebuggerType_DebuggerType_MAX = static_cast<DebuggerConfig_DebuggerType>(3);
constexpr int DebuggerConfig_DebuggerType_DebuggerType_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
DebuggerConfig_DebuggerType_descriptor();
template <typename T>
const std::string& DebuggerConfig_DebuggerType_Name(T value) {
  static_assert(std::is_same<T, DebuggerConfig_DebuggerType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DebuggerType_Name().");
  return DebuggerConfig_DebuggerType_Name(static_cast<DebuggerConfig_DebuggerType>(value));
}
template <>
inline const std::string& DebuggerConfig_DebuggerType_Name(DebuggerConfig_DebuggerType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DebuggerConfig_DebuggerType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool DebuggerConfig_DebuggerType_Parse(absl::string_view name, DebuggerConfig_DebuggerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DebuggerConfig_DebuggerType>(
      DebuggerConfig_DebuggerType_descriptor(), name, value);
}
enum CalibrationOptions_CalibrationMethod : int {
  CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_UNSPECIFIED = 0,
  CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_MIN_MAX = 1,
  CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_AVERAGE_MIN_MAX = 2,
  CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_HISTOGRAM_PERCENTILE = 3,
  CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_HISTOGRAM_MSE_BRUTEFORCE = 4,
  CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_HISTOGRAM_MSE_MAX_FREQUENCY = 5,
  CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_HISTOGRAM_MSE_SYMMETRIC = 6,
  CalibrationOptions_CalibrationMethod_CalibrationOptions_CalibrationMethod_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CalibrationOptions_CalibrationMethod_CalibrationOptions_CalibrationMethod_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool CalibrationOptions_CalibrationMethod_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t CalibrationOptions_CalibrationMethod_internal_data_[];
constexpr CalibrationOptions_CalibrationMethod CalibrationOptions_CalibrationMethod_CalibrationMethod_MIN = static_cast<CalibrationOptions_CalibrationMethod>(0);
constexpr CalibrationOptions_CalibrationMethod CalibrationOptions_CalibrationMethod_CalibrationMethod_MAX = static_cast<CalibrationOptions_CalibrationMethod>(6);
constexpr int CalibrationOptions_CalibrationMethod_CalibrationMethod_ARRAYSIZE = 6 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
CalibrationOptions_CalibrationMethod_descriptor();
template <typename T>
const std::string& CalibrationOptions_CalibrationMethod_Name(T value) {
  static_assert(std::is_same<T, CalibrationOptions_CalibrationMethod>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CalibrationMethod_Name().");
  return CalibrationOptions_CalibrationMethod_Name(static_cast<CalibrationOptions_CalibrationMethod>(value));
}
template <>
inline const std::string& CalibrationOptions_CalibrationMethod_Name(CalibrationOptions_CalibrationMethod value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CalibrationOptions_CalibrationMethod_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool CalibrationOptions_CalibrationMethod_Parse(absl::string_view name, CalibrationOptions_CalibrationMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CalibrationOptions_CalibrationMethod>(
      CalibrationOptions_CalibrationMethod_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT WeightOnlyPtqPreset final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.WeightOnlyPtqPreset) */ {
 public:
  inline WeightOnlyPtqPreset() : WeightOnlyPtqPreset(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WeightOnlyPtqPreset(
      ::google::protobuf::internal::ConstantInitialized);

  inline WeightOnlyPtqPreset(const WeightOnlyPtqPreset& from) : WeightOnlyPtqPreset(nullptr, from) {}
  inline WeightOnlyPtqPreset(WeightOnlyPtqPreset&& from) noexcept
      : WeightOnlyPtqPreset(nullptr, std::move(from)) {}
  inline WeightOnlyPtqPreset& operator=(const WeightOnlyPtqPreset& from) {
    CopyFrom(from);
    return *this;
  }
  inline WeightOnlyPtqPreset& operator=(WeightOnlyPtqPreset&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WeightOnlyPtqPreset& default_instance() {
    return *internal_default_instance();
  }
  static inline const WeightOnlyPtqPreset* internal_default_instance() {
    return reinterpret_cast<const WeightOnlyPtqPreset*>(
        &_WeightOnlyPtqPreset_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(WeightOnlyPtqPreset& a, WeightOnlyPtqPreset& b) { a.Swap(&b); }
  inline void Swap(WeightOnlyPtqPreset* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WeightOnlyPtqPreset* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WeightOnlyPtqPreset* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<WeightOnlyPtqPreset>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const WeightOnlyPtqPreset& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const WeightOnlyPtqPreset& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.WeightOnlyPtqPreset"; }

 protected:
  explicit WeightOnlyPtqPreset(::google::protobuf::Arena* arena);
  WeightOnlyPtqPreset(::google::protobuf::Arena* arena, const WeightOnlyPtqPreset& from);
  WeightOnlyPtqPreset(::google::protobuf::Arena* arena, WeightOnlyPtqPreset&& from) noexcept
      : WeightOnlyPtqPreset(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.WeightOnlyPtqPreset)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WeightOnlyPtqPreset& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TfSavedModelConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.TfSavedModelConfig) */ {
 public:
  inline TfSavedModelConfig() : TfSavedModelConfig(nullptr) {}
  ~TfSavedModelConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TfSavedModelConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline TfSavedModelConfig(const TfSavedModelConfig& from) : TfSavedModelConfig(nullptr, from) {}
  inline TfSavedModelConfig(TfSavedModelConfig&& from) noexcept
      : TfSavedModelConfig(nullptr, std::move(from)) {}
  inline TfSavedModelConfig& operator=(const TfSavedModelConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline TfSavedModelConfig& operator=(TfSavedModelConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TfSavedModelConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const TfSavedModelConfig* internal_default_instance() {
    return reinterpret_cast<const TfSavedModelConfig*>(
        &_TfSavedModelConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(TfSavedModelConfig& a, TfSavedModelConfig& b) { a.Swap(&b); }
  inline void Swap(TfSavedModelConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TfSavedModelConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TfSavedModelConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TfSavedModelConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TfSavedModelConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TfSavedModelConfig& from) { TfSavedModelConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TfSavedModelConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.TfSavedModelConfig"; }

 protected:
  explicit TfSavedModelConfig(::google::protobuf::Arena* arena);
  TfSavedModelConfig(::google::protobuf::Arena* arena, const TfSavedModelConfig& from);
  TfSavedModelConfig(::google::protobuf::Arena* arena, TfSavedModelConfig&& from) noexcept
      : TfSavedModelConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTagsFieldNumber = 1,
  };
  // repeated string tags = 1;
  int tags_size() const;
  private:
  int _internal_tags_size() const;

  public:
  void clear_tags() ;
  const std::string& tags(int index) const;
  std::string* mutable_tags(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tags(int index, Arg_&& value, Args_... args);
  std::string* add_tags();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_tags(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_tags();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_tags() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_tags();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.TfSavedModelConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TfSavedModelConfig& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> tags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TfRecordFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.TfRecordFile) */ {
 public:
  inline TfRecordFile() : TfRecordFile(nullptr) {}
  ~TfRecordFile() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TfRecordFile(
      ::google::protobuf::internal::ConstantInitialized);

  inline TfRecordFile(const TfRecordFile& from) : TfRecordFile(nullptr, from) {}
  inline TfRecordFile(TfRecordFile&& from) noexcept
      : TfRecordFile(nullptr, std::move(from)) {}
  inline TfRecordFile& operator=(const TfRecordFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline TfRecordFile& operator=(TfRecordFile&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TfRecordFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const TfRecordFile* internal_default_instance() {
    return reinterpret_cast<const TfRecordFile*>(
        &_TfRecordFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TfRecordFile& a, TfRecordFile& b) { a.Swap(&b); }
  inline void Swap(TfRecordFile* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TfRecordFile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TfRecordFile* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TfRecordFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TfRecordFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TfRecordFile& from) { TfRecordFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TfRecordFile* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.TfRecordFile"; }

 protected:
  explicit TfRecordFile(::google::protobuf::Arena* arena);
  TfRecordFile(::google::protobuf::Arena* arena, const TfRecordFile& from);
  TfRecordFile(::google::protobuf::Arena* arena, TfRecordFile&& from) noexcept
      : TfRecordFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 1,
  };
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.TfRecordFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TfRecordFile& from_msg);
    ::google::protobuf::internal::ArenaStringPtr path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizedDimension final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizedDimension) */ {
 public:
  inline QuantizedDimension() : QuantizedDimension(nullptr) {}
  ~QuantizedDimension() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizedDimension(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizedDimension(const QuantizedDimension& from) : QuantizedDimension(nullptr, from) {}
  inline QuantizedDimension(QuantizedDimension&& from) noexcept
      : QuantizedDimension(nullptr, std::move(from)) {}
  inline QuantizedDimension& operator=(const QuantizedDimension& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizedDimension& operator=(QuantizedDimension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizedDimension& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuantizedDimension* internal_default_instance() {
    return reinterpret_cast<const QuantizedDimension*>(
        &_QuantizedDimension_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(QuantizedDimension& a, QuantizedDimension& b) { a.Swap(&b); }
  inline void Swap(QuantizedDimension* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizedDimension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizedDimension* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizedDimension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizedDimension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizedDimension& from) { QuantizedDimension::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizedDimension* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizedDimension"; }

 protected:
  explicit QuantizedDimension(::google::protobuf::Arena* arena);
  QuantizedDimension(::google::protobuf::Arena* arena, const QuantizedDimension& from);
  QuantizedDimension(::google::protobuf::Arena* arena, QuantizedDimension&& from) noexcept
      : QuantizedDimension(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDimensionFieldNumber = 1,
  };
  // optional int32 dimension = 1;
  bool has_dimension() const;
  void clear_dimension() ;
  ::int32_t dimension() const;
  void set_dimension(::int32_t value);

  private:
  ::int32_t _internal_dimension() const;
  void _internal_set_dimension(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizedDimension)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizedDimension& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t dimension_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizableUnit final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizableUnit) */ {
 public:
  inline QuantizableUnit() : QuantizableUnit(nullptr) {}
  ~QuantizableUnit() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizableUnit(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizableUnit(const QuantizableUnit& from) : QuantizableUnit(nullptr, from) {}
  inline QuantizableUnit(QuantizableUnit&& from) noexcept
      : QuantizableUnit(nullptr, std::move(from)) {}
  inline QuantizableUnit& operator=(const QuantizableUnit& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizableUnit& operator=(QuantizableUnit&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizableUnit& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuantizableUnit* internal_default_instance() {
    return reinterpret_cast<const QuantizableUnit*>(
        &_QuantizableUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QuantizableUnit& a, QuantizableUnit& b) { a.Swap(&b); }
  inline void Swap(QuantizableUnit* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizableUnit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizableUnit* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizableUnit>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizableUnit& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizableUnit& from) { QuantizableUnit::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizableUnit* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizableUnit"; }

 protected:
  explicit QuantizableUnit(::google::protobuf::Arena* arena);
  QuantizableUnit(::google::protobuf::Arena* arena, const QuantizableUnit& from);
  QuantizableUnit(::google::protobuf::Arena* arena, QuantizableUnit&& from) noexcept
      : QuantizableUnit(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizableUnit)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizableUnit& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT PipelineConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.PipelineConfig) */ {
 public:
  inline PipelineConfig() : PipelineConfig(nullptr) {}
  ~PipelineConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PipelineConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PipelineConfig(const PipelineConfig& from) : PipelineConfig(nullptr, from) {}
  inline PipelineConfig(PipelineConfig&& from) noexcept
      : PipelineConfig(nullptr, std::move(from)) {}
  inline PipelineConfig& operator=(const PipelineConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PipelineConfig& operator=(PipelineConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PipelineConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PipelineConfig* internal_default_instance() {
    return reinterpret_cast<const PipelineConfig*>(
        &_PipelineConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(PipelineConfig& a, PipelineConfig& b) { a.Swap(&b); }
  inline void Swap(PipelineConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PipelineConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PipelineConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PipelineConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PipelineConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PipelineConfig& from) { PipelineConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PipelineConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.PipelineConfig"; }

 protected:
  explicit PipelineConfig(::google::protobuf::Arena* arena);
  PipelineConfig(::google::protobuf::Arena* arena, const PipelineConfig& from);
  PipelineConfig(::google::protobuf::Arena* arena, PipelineConfig&& from) noexcept
      : PipelineConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUnpackQuantizedTypesFieldNumber = 1,
    kMergeFusionWithDequantizeFieldNumber = 2,
  };
  // optional bool unpack_quantized_types = 1;
  bool has_unpack_quantized_types() const;
  void clear_unpack_quantized_types() ;
  bool unpack_quantized_types() const;
  void set_unpack_quantized_types(bool value);

  private:
  bool _internal_unpack_quantized_types() const;
  void _internal_set_unpack_quantized_types(bool value);

  public:
  // bool merge_fusion_with_dequantize = 2;
  void clear_merge_fusion_with_dequantize() ;
  bool merge_fusion_with_dequantize() const;
  void set_merge_fusion_with_dequantize(bool value);

  private:
  bool _internal_merge_fusion_with_dequantize() const;
  void _internal_set_merge_fusion_with_dequantize(bool value);

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.PipelineConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PipelineConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool unpack_quantized_types_;
    bool merge_fusion_with_dequantize_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT PerTensor final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.PerTensor) */ {
 public:
  inline PerTensor() : PerTensor(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PerTensor(
      ::google::protobuf::internal::ConstantInitialized);

  inline PerTensor(const PerTensor& from) : PerTensor(nullptr, from) {}
  inline PerTensor(PerTensor&& from) noexcept
      : PerTensor(nullptr, std::move(from)) {}
  inline PerTensor& operator=(const PerTensor& from) {
    CopyFrom(from);
    return *this;
  }
  inline PerTensor& operator=(PerTensor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PerTensor& default_instance() {
    return *internal_default_instance();
  }
  static inline const PerTensor* internal_default_instance() {
    return reinterpret_cast<const PerTensor*>(
        &_PerTensor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(PerTensor& a, PerTensor& b) { a.Swap(&b); }
  inline void Swap(PerTensor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PerTensor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PerTensor* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PerTensor>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PerTensor& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PerTensor& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.PerTensor"; }

 protected:
  explicit PerTensor(::google::protobuf::Arena* arena);
  PerTensor(::google::protobuf::Arena* arena, const PerTensor& from);
  PerTensor(::google::protobuf::Arena* arena, PerTensor&& from) noexcept
      : PerTensor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.PerTensor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PerTensor& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT NoQuantization final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.NoQuantization) */ {
 public:
  inline NoQuantization() : NoQuantization(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NoQuantization(
      ::google::protobuf::internal::ConstantInitialized);

  inline NoQuantization(const NoQuantization& from) : NoQuantization(nullptr, from) {}
  inline NoQuantization(NoQuantization&& from) noexcept
      : NoQuantization(nullptr, std::move(from)) {}
  inline NoQuantization& operator=(const NoQuantization& from) {
    CopyFrom(from);
    return *this;
  }
  inline NoQuantization& operator=(NoQuantization&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NoQuantization& default_instance() {
    return *internal_default_instance();
  }
  static inline const NoQuantization* internal_default_instance() {
    return reinterpret_cast<const NoQuantization*>(
        &_NoQuantization_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(NoQuantization& a, NoQuantization& b) { a.Swap(&b); }
  inline void Swap(NoQuantization* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NoQuantization* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NoQuantization* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<NoQuantization>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NoQuantization& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NoQuantization& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.NoQuantization"; }

 protected:
  explicit NoQuantization(::google::protobuf::Arena* arena);
  NoQuantization(::google::protobuf::Arena* arena, const NoQuantization& from);
  NoQuantization(::google::protobuf::Arena* arena, NoQuantization&& from) noexcept
      : NoQuantization(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.NoQuantization)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NoQuantization& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT FunctionNameMatcherSpec final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.FunctionNameMatcherSpec) */ {
 public:
  inline FunctionNameMatcherSpec() : FunctionNameMatcherSpec(nullptr) {}
  ~FunctionNameMatcherSpec() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionNameMatcherSpec(
      ::google::protobuf::internal::ConstantInitialized);

  inline FunctionNameMatcherSpec(const FunctionNameMatcherSpec& from) : FunctionNameMatcherSpec(nullptr, from) {}
  inline FunctionNameMatcherSpec(FunctionNameMatcherSpec&& from) noexcept
      : FunctionNameMatcherSpec(nullptr, std::move(from)) {}
  inline FunctionNameMatcherSpec& operator=(const FunctionNameMatcherSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionNameMatcherSpec& operator=(FunctionNameMatcherSpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionNameMatcherSpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionNameMatcherSpec* internal_default_instance() {
    return reinterpret_cast<const FunctionNameMatcherSpec*>(
        &_FunctionNameMatcherSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(FunctionNameMatcherSpec& a, FunctionNameMatcherSpec& b) { a.Swap(&b); }
  inline void Swap(FunctionNameMatcherSpec* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionNameMatcherSpec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionNameMatcherSpec* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FunctionNameMatcherSpec>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionNameMatcherSpec& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FunctionNameMatcherSpec& from) { FunctionNameMatcherSpec::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionNameMatcherSpec* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.FunctionNameMatcherSpec"; }

 protected:
  explicit FunctionNameMatcherSpec(::google::protobuf::Arena* arena);
  FunctionNameMatcherSpec(::google::protobuf::Arena* arena, const FunctionNameMatcherSpec& from);
  FunctionNameMatcherSpec(::google::protobuf::Arena* arena, FunctionNameMatcherSpec&& from) noexcept
      : FunctionNameMatcherSpec(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRegexFieldNumber = 1,
  };
  // string regex = 1;
  void clear_regex() ;
  const std::string& regex() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_regex(Arg_&& arg, Args_... args);
  std::string* mutable_regex();
  PROTOBUF_NODISCARD std::string* release_regex();
  void set_allocated_regex(std::string* value);

  private:
  const std::string& _internal_regex() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_regex(
      const std::string& value);
  std::string* _internal_mutable_regex();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.FunctionNameMatcherSpec)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FunctionNameMatcherSpec& from_msg);
    ::google::protobuf::internal::ArenaStringPtr regex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT DebuggerConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.DebuggerConfig) */ {
 public:
  inline DebuggerConfig() : DebuggerConfig(nullptr) {}
  ~DebuggerConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DebuggerConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline DebuggerConfig(const DebuggerConfig& from) : DebuggerConfig(nullptr, from) {}
  inline DebuggerConfig(DebuggerConfig&& from) noexcept
      : DebuggerConfig(nullptr, std::move(from)) {}
  inline DebuggerConfig& operator=(const DebuggerConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DebuggerConfig& operator=(DebuggerConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DebuggerConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const DebuggerConfig* internal_default_instance() {
    return reinterpret_cast<const DebuggerConfig*>(
        &_DebuggerConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(DebuggerConfig& a, DebuggerConfig& b) { a.Swap(&b); }
  inline void Swap(DebuggerConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DebuggerConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DebuggerConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DebuggerConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DebuggerConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DebuggerConfig& from) { DebuggerConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DebuggerConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.DebuggerConfig"; }

 protected:
  explicit DebuggerConfig(::google::protobuf::Arena* arena);
  DebuggerConfig(::google::protobuf::Arena* arena, const DebuggerConfig& from);
  DebuggerConfig(::google::protobuf::Arena* arena, DebuggerConfig&& from) noexcept
      : DebuggerConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DebuggerType = DebuggerConfig_DebuggerType;
  static constexpr DebuggerType DEBUGGER_TYPE_UNSPECIFIED = DebuggerConfig_DebuggerType_DEBUGGER_TYPE_UNSPECIFIED;
  static constexpr DebuggerType DEBUGGER_TYPE_WHOLE_MODEL = DebuggerConfig_DebuggerType_DEBUGGER_TYPE_WHOLE_MODEL;
  static constexpr DebuggerType DEBUGGER_TYPE_INT_PER_LAYER = DebuggerConfig_DebuggerType_DEBUGGER_TYPE_INT_PER_LAYER;
  static constexpr DebuggerType DEBUGGER_TYPE_FLOAT_PER_LAYER = DebuggerConfig_DebuggerType_DEBUGGER_TYPE_FLOAT_PER_LAYER;
  static inline bool DebuggerType_IsValid(int value) {
    return DebuggerConfig_DebuggerType_IsValid(value);
  }
  static constexpr DebuggerType DebuggerType_MIN = DebuggerConfig_DebuggerType_DebuggerType_MIN;
  static constexpr DebuggerType DebuggerType_MAX = DebuggerConfig_DebuggerType_DebuggerType_MAX;
  static constexpr int DebuggerType_ARRAYSIZE = DebuggerConfig_DebuggerType_DebuggerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* DebuggerType_descriptor() {
    return DebuggerConfig_DebuggerType_descriptor();
  }
  template <typename T>
  static inline const std::string& DebuggerType_Name(T value) {
    return DebuggerConfig_DebuggerType_Name(value);
  }
  static inline bool DebuggerType_Parse(absl::string_view name, DebuggerType* value) {
    return DebuggerConfig_DebuggerType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kUnquantizedDumpModelPathFieldNumber = 2,
    kLogDirPathFieldNumber = 3,
    kDebuggerTypeFieldNumber = 1,
  };
  // string unquantized_dump_model_path = 2;
  void clear_unquantized_dump_model_path() ;
  const std::string& unquantized_dump_model_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_unquantized_dump_model_path(Arg_&& arg, Args_... args);
  std::string* mutable_unquantized_dump_model_path();
  PROTOBUF_NODISCARD std::string* release_unquantized_dump_model_path();
  void set_allocated_unquantized_dump_model_path(std::string* value);

  private:
  const std::string& _internal_unquantized_dump_model_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_unquantized_dump_model_path(
      const std::string& value);
  std::string* _internal_mutable_unquantized_dump_model_path();

  public:
  // string log_dir_path = 3;
  void clear_log_dir_path() ;
  const std::string& log_dir_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log_dir_path(Arg_&& arg, Args_... args);
  std::string* mutable_log_dir_path();
  PROTOBUF_NODISCARD std::string* release_log_dir_path();
  void set_allocated_log_dir_path(std::string* value);

  private:
  const std::string& _internal_log_dir_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_log_dir_path(
      const std::string& value);
  std::string* _internal_mutable_log_dir_path();

  public:
  // .stablehlo.quantization.DebuggerConfig.DebuggerType debugger_type = 1;
  void clear_debugger_type() ;
  ::stablehlo::quantization::DebuggerConfig_DebuggerType debugger_type() const;
  void set_debugger_type(::stablehlo::quantization::DebuggerConfig_DebuggerType value);

  private:
  ::stablehlo::quantization::DebuggerConfig_DebuggerType _internal_debugger_type() const;
  void _internal_set_debugger_type(::stablehlo::quantization::DebuggerConfig_DebuggerType value);

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.DebuggerConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      85, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DebuggerConfig& from_msg);
    ::google::protobuf::internal::ArenaStringPtr unquantized_dump_model_path_;
    ::google::protobuf::internal::ArenaStringPtr log_dir_path_;
    int debugger_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CalibrationOptions_CalibrationParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.CalibrationOptions.CalibrationParameters) */ {
 public:
  inline CalibrationOptions_CalibrationParameters() : CalibrationOptions_CalibrationParameters(nullptr) {}
  ~CalibrationOptions_CalibrationParameters() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CalibrationOptions_CalibrationParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline CalibrationOptions_CalibrationParameters(const CalibrationOptions_CalibrationParameters& from) : CalibrationOptions_CalibrationParameters(nullptr, from) {}
  inline CalibrationOptions_CalibrationParameters(CalibrationOptions_CalibrationParameters&& from) noexcept
      : CalibrationOptions_CalibrationParameters(nullptr, std::move(from)) {}
  inline CalibrationOptions_CalibrationParameters& operator=(const CalibrationOptions_CalibrationParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalibrationOptions_CalibrationParameters& operator=(CalibrationOptions_CalibrationParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalibrationOptions_CalibrationParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalibrationOptions_CalibrationParameters* internal_default_instance() {
    return reinterpret_cast<const CalibrationOptions_CalibrationParameters*>(
        &_CalibrationOptions_CalibrationParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(CalibrationOptions_CalibrationParameters& a, CalibrationOptions_CalibrationParameters& b) { a.Swap(&b); }
  inline void Swap(CalibrationOptions_CalibrationParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalibrationOptions_CalibrationParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalibrationOptions_CalibrationParameters* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CalibrationOptions_CalibrationParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalibrationOptions_CalibrationParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CalibrationOptions_CalibrationParameters& from) { CalibrationOptions_CalibrationParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CalibrationOptions_CalibrationParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.CalibrationOptions.CalibrationParameters"; }

 protected:
  explicit CalibrationOptions_CalibrationParameters(::google::protobuf::Arena* arena);
  CalibrationOptions_CalibrationParameters(::google::protobuf::Arena* arena, const CalibrationOptions_CalibrationParameters& from);
  CalibrationOptions_CalibrationParameters(::google::protobuf::Arena* arena, CalibrationOptions_CalibrationParameters&& from) noexcept
      : CalibrationOptions_CalibrationParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumBinsFieldNumber = 1,
    kMinPercentileFieldNumber = 2,
    kMaxPercentileFieldNumber = 3,
  };
  // int32 num_bins = 1;
  void clear_num_bins() ;
  ::int32_t num_bins() const;
  void set_num_bins(::int32_t value);

  private:
  ::int32_t _internal_num_bins() const;
  void _internal_set_num_bins(::int32_t value);

  public:
  // float min_percentile = 2;
  void clear_min_percentile() ;
  float min_percentile() const;
  void set_min_percentile(float value);

  private:
  float _internal_min_percentile() const;
  void _internal_set_min_percentile(float value);

  public:
  // float max_percentile = 3;
  void clear_max_percentile() ;
  float max_percentile() const;
  void set_max_percentile(float value);

  private:
  float _internal_max_percentile() const;
  void _internal_set_max_percentile(float value);

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.CalibrationOptions.CalibrationParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CalibrationOptions_CalibrationParameters& from_msg);
    ::int32_t num_bins_;
    float min_percentile_;
    float max_percentile_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RepresentativeDatasetConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.RepresentativeDatasetConfig) */ {
 public:
  inline RepresentativeDatasetConfig() : RepresentativeDatasetConfig(nullptr) {}
  ~RepresentativeDatasetConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RepresentativeDatasetConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline RepresentativeDatasetConfig(const RepresentativeDatasetConfig& from) : RepresentativeDatasetConfig(nullptr, from) {}
  inline RepresentativeDatasetConfig(RepresentativeDatasetConfig&& from) noexcept
      : RepresentativeDatasetConfig(nullptr, std::move(from)) {}
  inline RepresentativeDatasetConfig& operator=(const RepresentativeDatasetConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline RepresentativeDatasetConfig& operator=(RepresentativeDatasetConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RepresentativeDatasetConfig& default_instance() {
    return *internal_default_instance();
  }
  enum FileCase {
    kTfRecord = 1,
    FILE_NOT_SET = 0,
  };
  static inline const RepresentativeDatasetConfig* internal_default_instance() {
    return reinterpret_cast<const RepresentativeDatasetConfig*>(
        &_RepresentativeDatasetConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RepresentativeDatasetConfig& a, RepresentativeDatasetConfig& b) { a.Swap(&b); }
  inline void Swap(RepresentativeDatasetConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RepresentativeDatasetConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RepresentativeDatasetConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RepresentativeDatasetConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RepresentativeDatasetConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RepresentativeDatasetConfig& from) { RepresentativeDatasetConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RepresentativeDatasetConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.RepresentativeDatasetConfig"; }

 protected:
  explicit RepresentativeDatasetConfig(::google::protobuf::Arena* arena);
  RepresentativeDatasetConfig(::google::protobuf::Arena* arena, const RepresentativeDatasetConfig& from);
  RepresentativeDatasetConfig(::google::protobuf::Arena* arena, RepresentativeDatasetConfig&& from) noexcept
      : RepresentativeDatasetConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignatureKeyFieldNumber = 2,
    kTfRecordFieldNumber = 1,
  };
  // optional string signature_key = 2;
  bool has_signature_key() const;
  void clear_signature_key() ;
  const std::string& signature_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature_key(Arg_&& arg, Args_... args);
  std::string* mutable_signature_key();
  PROTOBUF_NODISCARD std::string* release_signature_key();
  void set_allocated_signature_key(std::string* value);

  private:
  const std::string& _internal_signature_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature_key(
      const std::string& value);
  std::string* _internal_mutable_signature_key();

  public:
  // .stablehlo.quantization.TfRecordFile tf_record = 1;
  bool has_tf_record() const;
  private:
  bool _internal_has_tf_record() const;

  public:
  void clear_tf_record() ;
  const ::stablehlo::quantization::TfRecordFile& tf_record() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::TfRecordFile* release_tf_record();
  ::stablehlo::quantization::TfRecordFile* mutable_tf_record();
  void set_allocated_tf_record(::stablehlo::quantization::TfRecordFile* value);
  void unsafe_arena_set_allocated_tf_record(::stablehlo::quantization::TfRecordFile* value);
  ::stablehlo::quantization::TfRecordFile* unsafe_arena_release_tf_record();

  private:
  const ::stablehlo::quantization::TfRecordFile& _internal_tf_record() const;
  ::stablehlo::quantization::TfRecordFile* _internal_mutable_tf_record();

  public:
  void clear_file();
  FileCase file_case() const;
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.RepresentativeDatasetConfig)
 private:
  class _Internal;
  void set_has_tf_record();
  inline bool has_file() const;
  inline void clear_has_file();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      72, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RepresentativeDatasetConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr signature_key_;
    union FileUnion {
      constexpr FileUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::stablehlo::quantization::TfRecordFile* tf_record_;
    } file_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizedType final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizedType) */ {
 public:
  inline QuantizedType() : QuantizedType(nullptr) {}
  ~QuantizedType() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizedType(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizedType(const QuantizedType& from) : QuantizedType(nullptr, from) {}
  inline QuantizedType(QuantizedType&& from) noexcept
      : QuantizedType(nullptr, std::move(from)) {}
  inline QuantizedType& operator=(const QuantizedType& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizedType& operator=(QuantizedType&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizedType& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kDimensionSpecs = 1,
    kPerTensor = 2,
    TYPE_NOT_SET = 0,
  };
  static inline const QuantizedType* internal_default_instance() {
    return reinterpret_cast<const QuantizedType*>(
        &_QuantizedType_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(QuantizedType& a, QuantizedType& b) { a.Swap(&b); }
  inline void Swap(QuantizedType* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizedType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizedType* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizedType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizedType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizedType& from) { QuantizedType::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizedType* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizedType"; }

 protected:
  explicit QuantizedType(::google::protobuf::Arena* arena);
  QuantizedType(::google::protobuf::Arena* arena, const QuantizedType& from);
  QuantizedType(::google::protobuf::Arena* arena, QuantizedType&& from) noexcept
      : QuantizedType(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDimensionSpecsFieldNumber = 1,
    kPerTensorFieldNumber = 2,
  };
  // .stablehlo.quantization.QuantizedDimension dimension_specs = 1;
  bool has_dimension_specs() const;
  private:
  bool _internal_has_dimension_specs() const;

  public:
  void clear_dimension_specs() ;
  const ::stablehlo::quantization::QuantizedDimension& dimension_specs() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::QuantizedDimension* release_dimension_specs();
  ::stablehlo::quantization::QuantizedDimension* mutable_dimension_specs();
  void set_allocated_dimension_specs(::stablehlo::quantization::QuantizedDimension* value);
  void unsafe_arena_set_allocated_dimension_specs(::stablehlo::quantization::QuantizedDimension* value);
  ::stablehlo::quantization::QuantizedDimension* unsafe_arena_release_dimension_specs();

  private:
  const ::stablehlo::quantization::QuantizedDimension& _internal_dimension_specs() const;
  ::stablehlo::quantization::QuantizedDimension* _internal_mutable_dimension_specs();

  public:
  // .stablehlo.quantization.PerTensor per_tensor = 2;
  bool has_per_tensor() const;
  private:
  bool _internal_has_per_tensor() const;

  public:
  void clear_per_tensor() ;
  const ::stablehlo::quantization::PerTensor& per_tensor() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::PerTensor* release_per_tensor();
  ::stablehlo::quantization::PerTensor* mutable_per_tensor();
  void set_allocated_per_tensor(::stablehlo::quantization::PerTensor* value);
  void unsafe_arena_set_allocated_per_tensor(::stablehlo::quantization::PerTensor* value);
  ::stablehlo::quantization::PerTensor* unsafe_arena_release_per_tensor();

  private:
  const ::stablehlo::quantization::PerTensor& _internal_per_tensor() const;
  ::stablehlo::quantization::PerTensor* _internal_mutable_per_tensor();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizedType)
 private:
  class _Internal;
  void set_has_dimension_specs();
  void set_has_per_tensor();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizedType& from_msg);
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::stablehlo::quantization::QuantizedDimension* dimension_specs_;
      ::stablehlo::quantization::PerTensor* per_tensor_;
    } type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT MatcherSpec final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.MatcherSpec) */ {
 public:
  inline MatcherSpec() : MatcherSpec(nullptr) {}
  ~MatcherSpec() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MatcherSpec(
      ::google::protobuf::internal::ConstantInitialized);

  inline MatcherSpec(const MatcherSpec& from) : MatcherSpec(nullptr, from) {}
  inline MatcherSpec(MatcherSpec&& from) noexcept
      : MatcherSpec(nullptr, std::move(from)) {}
  inline MatcherSpec& operator=(const MatcherSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatcherSpec& operator=(MatcherSpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MatcherSpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const MatcherSpec* internal_default_instance() {
    return reinterpret_cast<const MatcherSpec*>(
        &_MatcherSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(MatcherSpec& a, MatcherSpec& b) { a.Swap(&b); }
  inline void Swap(MatcherSpec* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MatcherSpec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MatcherSpec* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MatcherSpec>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MatcherSpec& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MatcherSpec& from) { MatcherSpec::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MatcherSpec* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.MatcherSpec"; }

 protected:
  explicit MatcherSpec(::google::protobuf::Arena* arena);
  MatcherSpec(::google::protobuf::Arena* arena, const MatcherSpec& from);
  MatcherSpec(::google::protobuf::Arena* arena, MatcherSpec&& from) noexcept
      : MatcherSpec(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFunctionNameFieldNumber = 1,
  };
  // .stablehlo.quantization.FunctionNameMatcherSpec function_name = 1;
  bool has_function_name() const;
  void clear_function_name() ;
  const ::stablehlo::quantization::FunctionNameMatcherSpec& function_name() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::FunctionNameMatcherSpec* release_function_name();
  ::stablehlo::quantization::FunctionNameMatcherSpec* mutable_function_name();
  void set_allocated_function_name(::stablehlo::quantization::FunctionNameMatcherSpec* value);
  void unsafe_arena_set_allocated_function_name(::stablehlo::quantization::FunctionNameMatcherSpec* value);
  ::stablehlo::quantization::FunctionNameMatcherSpec* unsafe_arena_release_function_name();

  private:
  const ::stablehlo::quantization::FunctionNameMatcherSpec& _internal_function_name() const;
  ::stablehlo::quantization::FunctionNameMatcherSpec* _internal_mutable_function_name();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.MatcherSpec)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MatcherSpec& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::stablehlo::quantization::FunctionNameMatcherSpec* function_name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse, ::int32_t, ::stablehlo::quantization::QuantizedType,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse, ::int32_t, ::stablehlo::quantization::QuantizedType,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse*>(
        &_WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT StaticRangePtqPreset final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.StaticRangePtqPreset) */ {
 public:
  inline StaticRangePtqPreset() : StaticRangePtqPreset(nullptr) {}
  ~StaticRangePtqPreset() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticRangePtqPreset(
      ::google::protobuf::internal::ConstantInitialized);

  inline StaticRangePtqPreset(const StaticRangePtqPreset& from) : StaticRangePtqPreset(nullptr, from) {}
  inline StaticRangePtqPreset(StaticRangePtqPreset&& from) noexcept
      : StaticRangePtqPreset(nullptr, std::move(from)) {}
  inline StaticRangePtqPreset& operator=(const StaticRangePtqPreset& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticRangePtqPreset& operator=(StaticRangePtqPreset&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticRangePtqPreset& default_instance() {
    return *internal_default_instance();
  }
  static inline const StaticRangePtqPreset* internal_default_instance() {
    return reinterpret_cast<const StaticRangePtqPreset*>(
        &_StaticRangePtqPreset_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StaticRangePtqPreset& a, StaticRangePtqPreset& b) { a.Swap(&b); }
  inline void Swap(StaticRangePtqPreset* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticRangePtqPreset* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticRangePtqPreset* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StaticRangePtqPreset>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticRangePtqPreset& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StaticRangePtqPreset& from) { StaticRangePtqPreset::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StaticRangePtqPreset* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.StaticRangePtqPreset"; }

 protected:
  explicit StaticRangePtqPreset(::google::protobuf::Arena* arena);
  StaticRangePtqPreset(::google::protobuf::Arena* arena, const StaticRangePtqPreset& from);
  StaticRangePtqPreset(::google::protobuf::Arena* arena, StaticRangePtqPreset&& from) noexcept
      : StaticRangePtqPreset(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepresentativeDatasetsFieldNumber = 1,
    kEnablePerChannelQuantizedWeightFieldNumber = 2,
    kEnableFullIntQuantizationFieldNumber = 3,
  };
  // repeated .stablehlo.quantization.RepresentativeDatasetConfig representative_datasets = 1;
  int representative_datasets_size() const;
  private:
  int _internal_representative_datasets_size() const;

  public:
  void clear_representative_datasets() ;
  ::stablehlo::quantization::RepresentativeDatasetConfig* mutable_representative_datasets(int index);
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>* mutable_representative_datasets();

  private:
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>& _internal_representative_datasets() const;
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>* _internal_mutable_representative_datasets();
  public:
  const ::stablehlo::quantization::RepresentativeDatasetConfig& representative_datasets(int index) const;
  ::stablehlo::quantization::RepresentativeDatasetConfig* add_representative_datasets();
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>& representative_datasets() const;
  // bool enable_per_channel_quantized_weight = 2 [deprecated = true];
  [[deprecated]]  void clear_enable_per_channel_quantized_weight() ;
  [[deprecated]] bool enable_per_channel_quantized_weight() const;
  [[deprecated]] void set_enable_per_channel_quantized_weight(bool value);

  private:
  bool _internal_enable_per_channel_quantized_weight() const;
  void _internal_set_enable_per_channel_quantized_weight(bool value);

  public:
  // bool enable_full_int_quantization = 3;
  void clear_enable_full_int_quantization() ;
  bool enable_full_int_quantization() const;
  void set_enable_full_int_quantization(bool value);

  private:
  bool _internal_enable_full_int_quantization() const;
  void _internal_set_enable_full_int_quantization(bool value);

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.StaticRangePtqPreset)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StaticRangePtqPreset& from_msg);
    ::google::protobuf::RepeatedPtrField< ::stablehlo::quantization::RepresentativeDatasetConfig > representative_datasets_;
    bool enable_per_channel_quantized_weight_;
    bool enable_full_int_quantization_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class StaticRangePtq_InputQuantizedTypesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          StaticRangePtq_InputQuantizedTypesEntry_DoNotUse, ::int32_t, ::stablehlo::quantization::QuantizedType,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      StaticRangePtq_InputQuantizedTypesEntry_DoNotUse, ::int32_t, ::stablehlo::quantization::QuantizedType,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  StaticRangePtq_InputQuantizedTypesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticRangePtq_InputQuantizedTypesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StaticRangePtq_InputQuantizedTypesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const StaticRangePtq_InputQuantizedTypesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const StaticRangePtq_InputQuantizedTypesEntry_DoNotUse*>(
        &_StaticRangePtq_InputQuantizedTypesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CalibrationOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.CalibrationOptions) */ {
 public:
  inline CalibrationOptions() : CalibrationOptions(nullptr) {}
  ~CalibrationOptions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CalibrationOptions(
      ::google::protobuf::internal::ConstantInitialized);

  inline CalibrationOptions(const CalibrationOptions& from) : CalibrationOptions(nullptr, from) {}
  inline CalibrationOptions(CalibrationOptions&& from) noexcept
      : CalibrationOptions(nullptr, std::move(from)) {}
  inline CalibrationOptions& operator=(const CalibrationOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalibrationOptions& operator=(CalibrationOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalibrationOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalibrationOptions* internal_default_instance() {
    return reinterpret_cast<const CalibrationOptions*>(
        &_CalibrationOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(CalibrationOptions& a, CalibrationOptions& b) { a.Swap(&b); }
  inline void Swap(CalibrationOptions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalibrationOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalibrationOptions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CalibrationOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalibrationOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CalibrationOptions& from) { CalibrationOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CalibrationOptions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.CalibrationOptions"; }

 protected:
  explicit CalibrationOptions(::google::protobuf::Arena* arena);
  CalibrationOptions(::google::protobuf::Arena* arena, const CalibrationOptions& from);
  CalibrationOptions(::google::protobuf::Arena* arena, CalibrationOptions&& from) noexcept
      : CalibrationOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CalibrationParameters = CalibrationOptions_CalibrationParameters;
  using CalibrationMethod = CalibrationOptions_CalibrationMethod;
  static constexpr CalibrationMethod CALIBRATION_METHOD_UNSPECIFIED = CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_UNSPECIFIED;
  static constexpr CalibrationMethod CALIBRATION_METHOD_MIN_MAX = CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_MIN_MAX;
  static constexpr CalibrationMethod CALIBRATION_METHOD_AVERAGE_MIN_MAX = CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_AVERAGE_MIN_MAX;
  static constexpr CalibrationMethod CALIBRATION_METHOD_HISTOGRAM_PERCENTILE = CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_HISTOGRAM_PERCENTILE;
  static constexpr CalibrationMethod CALIBRATION_METHOD_HISTOGRAM_MSE_BRUTEFORCE = CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_HISTOGRAM_MSE_BRUTEFORCE;
  static constexpr CalibrationMethod CALIBRATION_METHOD_HISTOGRAM_MSE_MAX_FREQUENCY = CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_HISTOGRAM_MSE_MAX_FREQUENCY;
  static constexpr CalibrationMethod CALIBRATION_METHOD_HISTOGRAM_MSE_SYMMETRIC = CalibrationOptions_CalibrationMethod_CALIBRATION_METHOD_HISTOGRAM_MSE_SYMMETRIC;
  static inline bool CalibrationMethod_IsValid(int value) {
    return CalibrationOptions_CalibrationMethod_IsValid(value);
  }
  static constexpr CalibrationMethod CalibrationMethod_MIN = CalibrationOptions_CalibrationMethod_CalibrationMethod_MIN;
  static constexpr CalibrationMethod CalibrationMethod_MAX = CalibrationOptions_CalibrationMethod_CalibrationMethod_MAX;
  static constexpr int CalibrationMethod_ARRAYSIZE = CalibrationOptions_CalibrationMethod_CalibrationMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* CalibrationMethod_descriptor() {
    return CalibrationOptions_CalibrationMethod_descriptor();
  }
  template <typename T>
  static inline const std::string& CalibrationMethod_Name(T value) {
    return CalibrationOptions_CalibrationMethod_Name(value);
  }
  static inline bool CalibrationMethod_Parse(absl::string_view name, CalibrationMethod* value) {
    return CalibrationOptions_CalibrationMethod_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRepresentativeDatasetsFieldNumber = 3,
    kCalibrationDataDirFieldNumber = 4,
    kCalibrationParametersFieldNumber = 2,
    kCalibrationMethodFieldNumber = 1,
    kForceRegenerateCalibrationDataFieldNumber = 5,
  };
  // repeated .stablehlo.quantization.RepresentativeDatasetConfig representative_datasets = 3;
  int representative_datasets_size() const;
  private:
  int _internal_representative_datasets_size() const;

  public:
  void clear_representative_datasets() ;
  ::stablehlo::quantization::RepresentativeDatasetConfig* mutable_representative_datasets(int index);
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>* mutable_representative_datasets();

  private:
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>& _internal_representative_datasets() const;
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>* _internal_mutable_representative_datasets();
  public:
  const ::stablehlo::quantization::RepresentativeDatasetConfig& representative_datasets(int index) const;
  ::stablehlo::quantization::RepresentativeDatasetConfig* add_representative_datasets();
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>& representative_datasets() const;
  // string calibration_data_dir = 4;
  void clear_calibration_data_dir() ;
  const std::string& calibration_data_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_calibration_data_dir(Arg_&& arg, Args_... args);
  std::string* mutable_calibration_data_dir();
  PROTOBUF_NODISCARD std::string* release_calibration_data_dir();
  void set_allocated_calibration_data_dir(std::string* value);

  private:
  const std::string& _internal_calibration_data_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_calibration_data_dir(
      const std::string& value);
  std::string* _internal_mutable_calibration_data_dir();

  public:
  // .stablehlo.quantization.CalibrationOptions.CalibrationParameters calibration_parameters = 2;
  bool has_calibration_parameters() const;
  void clear_calibration_parameters() ;
  const ::stablehlo::quantization::CalibrationOptions_CalibrationParameters& calibration_parameters() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* release_calibration_parameters();
  ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* mutable_calibration_parameters();
  void set_allocated_calibration_parameters(::stablehlo::quantization::CalibrationOptions_CalibrationParameters* value);
  void unsafe_arena_set_allocated_calibration_parameters(::stablehlo::quantization::CalibrationOptions_CalibrationParameters* value);
  ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* unsafe_arena_release_calibration_parameters();

  private:
  const ::stablehlo::quantization::CalibrationOptions_CalibrationParameters& _internal_calibration_parameters() const;
  ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* _internal_mutable_calibration_parameters();

  public:
  // .stablehlo.quantization.CalibrationOptions.CalibrationMethod calibration_method = 1;
  void clear_calibration_method() ;
  ::stablehlo::quantization::CalibrationOptions_CalibrationMethod calibration_method() const;
  void set_calibration_method(::stablehlo::quantization::CalibrationOptions_CalibrationMethod value);

  private:
  ::stablehlo::quantization::CalibrationOptions_CalibrationMethod _internal_calibration_method() const;
  void _internal_set_calibration_method(::stablehlo::quantization::CalibrationOptions_CalibrationMethod value);

  public:
  // bool force_regenerate_calibration_data = 5;
  void clear_force_regenerate_calibration_data() ;
  bool force_regenerate_calibration_data() const;
  void set_force_regenerate_calibration_data(bool value);

  private:
  bool _internal_force_regenerate_calibration_data() const;
  void _internal_set_force_regenerate_calibration_data(bool value);

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.CalibrationOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      70, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CalibrationOptions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::stablehlo::quantization::RepresentativeDatasetConfig > representative_datasets_;
    ::google::protobuf::internal::ArenaStringPtr calibration_data_dir_;
    ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* calibration_parameters_;
    int calibration_method_;
    bool force_regenerate_calibration_data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT WeightOnlyPtq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.WeightOnlyPtq) */ {
 public:
  inline WeightOnlyPtq() : WeightOnlyPtq(nullptr) {}
  ~WeightOnlyPtq() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WeightOnlyPtq(
      ::google::protobuf::internal::ConstantInitialized);

  inline WeightOnlyPtq(const WeightOnlyPtq& from) : WeightOnlyPtq(nullptr, from) {}
  inline WeightOnlyPtq(WeightOnlyPtq&& from) noexcept
      : WeightOnlyPtq(nullptr, std::move(from)) {}
  inline WeightOnlyPtq& operator=(const WeightOnlyPtq& from) {
    CopyFrom(from);
    return *this;
  }
  inline WeightOnlyPtq& operator=(WeightOnlyPtq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WeightOnlyPtq& default_instance() {
    return *internal_default_instance();
  }
  static inline const WeightOnlyPtq* internal_default_instance() {
    return reinterpret_cast<const WeightOnlyPtq*>(
        &_WeightOnlyPtq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(WeightOnlyPtq& a, WeightOnlyPtq& b) { a.Swap(&b); }
  inline void Swap(WeightOnlyPtq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WeightOnlyPtq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WeightOnlyPtq* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<WeightOnlyPtq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WeightOnlyPtq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WeightOnlyPtq& from) { WeightOnlyPtq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WeightOnlyPtq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.WeightOnlyPtq"; }

 protected:
  explicit WeightOnlyPtq(::google::protobuf::Arena* arena);
  WeightOnlyPtq(::google::protobuf::Arena* arena, const WeightOnlyPtq& from);
  WeightOnlyPtq(::google::protobuf::Arena* arena, WeightOnlyPtq&& from) noexcept
      : WeightOnlyPtq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputQuantizedTypesFieldNumber = 1,
  };
  // map<int32, .stablehlo.quantization.QuantizedType> input_quantized_types = 1;
  int input_quantized_types_size() const;
  private:
  int _internal_input_quantized_types_size() const;

  public:
  void clear_input_quantized_types() ;
  const ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>& input_quantized_types() const;
  ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>* mutable_input_quantized_types();

  private:
  const ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>& _internal_input_quantized_types() const;
  ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>* _internal_mutable_input_quantized_types();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.WeightOnlyPtq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WeightOnlyPtq& from_msg);
    ::google::protobuf::internal::MapField<WeightOnlyPtq_InputQuantizedTypesEntry_DoNotUse, ::int32_t, ::stablehlo::quantization::QuantizedType,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        input_quantized_types_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT StaticRangePtq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.StaticRangePtq) */ {
 public:
  inline StaticRangePtq() : StaticRangePtq(nullptr) {}
  ~StaticRangePtq() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticRangePtq(
      ::google::protobuf::internal::ConstantInitialized);

  inline StaticRangePtq(const StaticRangePtq& from) : StaticRangePtq(nullptr, from) {}
  inline StaticRangePtq(StaticRangePtq&& from) noexcept
      : StaticRangePtq(nullptr, std::move(from)) {}
  inline StaticRangePtq& operator=(const StaticRangePtq& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticRangePtq& operator=(StaticRangePtq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticRangePtq& default_instance() {
    return *internal_default_instance();
  }
  static inline const StaticRangePtq* internal_default_instance() {
    return reinterpret_cast<const StaticRangePtq*>(
        &_StaticRangePtq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(StaticRangePtq& a, StaticRangePtq& b) { a.Swap(&b); }
  inline void Swap(StaticRangePtq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticRangePtq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticRangePtq* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StaticRangePtq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticRangePtq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StaticRangePtq& from) { StaticRangePtq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StaticRangePtq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.StaticRangePtq"; }

 protected:
  explicit StaticRangePtq(::google::protobuf::Arena* arena);
  StaticRangePtq(::google::protobuf::Arena* arena, const StaticRangePtq& from);
  StaticRangePtq(::google::protobuf::Arena* arena, StaticRangePtq&& from) noexcept
      : StaticRangePtq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputQuantizedTypesFieldNumber = 1,
  };
  // map<int32, .stablehlo.quantization.QuantizedType> input_quantized_types = 1;
  int input_quantized_types_size() const;
  private:
  int _internal_input_quantized_types_size() const;

  public:
  void clear_input_quantized_types() ;
  const ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>& input_quantized_types() const;
  ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>* mutable_input_quantized_types();

  private:
  const ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>& _internal_input_quantized_types() const;
  ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>* _internal_mutable_input_quantized_types();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.StaticRangePtq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StaticRangePtq& from_msg);
    ::google::protobuf::internal::MapField<StaticRangePtq_InputQuantizedTypesEntry_DoNotUse, ::int32_t, ::stablehlo::quantization::QuantizedType,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        input_quantized_types_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT Method final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.Method) */ {
 public:
  inline Method() : Method(nullptr) {}
  ~Method() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Method(
      ::google::protobuf::internal::ConstantInitialized);

  inline Method(const Method& from) : Method(nullptr, from) {}
  inline Method(Method&& from) noexcept
      : Method(nullptr, std::move(from)) {}
  inline Method& operator=(const Method& from) {
    CopyFrom(from);
    return *this;
  }
  inline Method& operator=(Method&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Method& default_instance() {
    return *internal_default_instance();
  }
  enum MethodCase {
    kNoQuantization = 1,
    kStaticRangePtq = 2,
    kWeightOnlyPtq = 3,
    METHOD_NOT_SET = 0,
  };
  static inline const Method* internal_default_instance() {
    return reinterpret_cast<const Method*>(
        &_Method_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(Method& a, Method& b) { a.Swap(&b); }
  inline void Swap(Method* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Method* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Method* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Method>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Method& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Method& from) { Method::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Method* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.Method"; }

 protected:
  explicit Method(::google::protobuf::Arena* arena);
  Method(::google::protobuf::Arena* arena, const Method& from);
  Method(::google::protobuf::Arena* arena, Method&& from) noexcept
      : Method(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNoQuantizationFieldNumber = 1,
    kStaticRangePtqFieldNumber = 2,
    kWeightOnlyPtqFieldNumber = 3,
  };
  // .stablehlo.quantization.NoQuantization no_quantization = 1;
  bool has_no_quantization() const;
  private:
  bool _internal_has_no_quantization() const;

  public:
  void clear_no_quantization() ;
  const ::stablehlo::quantization::NoQuantization& no_quantization() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::NoQuantization* release_no_quantization();
  ::stablehlo::quantization::NoQuantization* mutable_no_quantization();
  void set_allocated_no_quantization(::stablehlo::quantization::NoQuantization* value);
  void unsafe_arena_set_allocated_no_quantization(::stablehlo::quantization::NoQuantization* value);
  ::stablehlo::quantization::NoQuantization* unsafe_arena_release_no_quantization();

  private:
  const ::stablehlo::quantization::NoQuantization& _internal_no_quantization() const;
  ::stablehlo::quantization::NoQuantization* _internal_mutable_no_quantization();

  public:
  // .stablehlo.quantization.StaticRangePtq static_range_ptq = 2;
  bool has_static_range_ptq() const;
  private:
  bool _internal_has_static_range_ptq() const;

  public:
  void clear_static_range_ptq() ;
  const ::stablehlo::quantization::StaticRangePtq& static_range_ptq() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::StaticRangePtq* release_static_range_ptq();
  ::stablehlo::quantization::StaticRangePtq* mutable_static_range_ptq();
  void set_allocated_static_range_ptq(::stablehlo::quantization::StaticRangePtq* value);
  void unsafe_arena_set_allocated_static_range_ptq(::stablehlo::quantization::StaticRangePtq* value);
  ::stablehlo::quantization::StaticRangePtq* unsafe_arena_release_static_range_ptq();

  private:
  const ::stablehlo::quantization::StaticRangePtq& _internal_static_range_ptq() const;
  ::stablehlo::quantization::StaticRangePtq* _internal_mutable_static_range_ptq();

  public:
  // .stablehlo.quantization.WeightOnlyPtq weight_only_ptq = 3;
  bool has_weight_only_ptq() const;
  private:
  bool _internal_has_weight_only_ptq() const;

  public:
  void clear_weight_only_ptq() ;
  const ::stablehlo::quantization::WeightOnlyPtq& weight_only_ptq() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::WeightOnlyPtq* release_weight_only_ptq();
  ::stablehlo::quantization::WeightOnlyPtq* mutable_weight_only_ptq();
  void set_allocated_weight_only_ptq(::stablehlo::quantization::WeightOnlyPtq* value);
  void unsafe_arena_set_allocated_weight_only_ptq(::stablehlo::quantization::WeightOnlyPtq* value);
  ::stablehlo::quantization::WeightOnlyPtq* unsafe_arena_release_weight_only_ptq();

  private:
  const ::stablehlo::quantization::WeightOnlyPtq& _internal_weight_only_ptq() const;
  ::stablehlo::quantization::WeightOnlyPtq* _internal_mutable_weight_only_ptq();

  public:
  void clear_method();
  MethodCase method_case() const;
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.Method)
 private:
  class _Internal;
  void set_has_no_quantization();
  void set_has_static_range_ptq();
  void set_has_weight_only_ptq();
  inline bool has_method() const;
  inline void clear_has_method();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Method& from_msg);
    union MethodUnion {
      constexpr MethodUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::stablehlo::quantization::NoQuantization* no_quantization_;
      ::stablehlo::quantization::StaticRangePtq* static_range_ptq_;
      ::stablehlo::quantization::WeightOnlyPtq* weight_only_ptq_;
    } method_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizationSpec final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizationSpec) */ {
 public:
  inline QuantizationSpec() : QuantizationSpec(nullptr) {}
  ~QuantizationSpec() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizationSpec(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizationSpec(const QuantizationSpec& from) : QuantizationSpec(nullptr, from) {}
  inline QuantizationSpec(QuantizationSpec&& from) noexcept
      : QuantizationSpec(nullptr, std::move(from)) {}
  inline QuantizationSpec& operator=(const QuantizationSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizationSpec& operator=(QuantizationSpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizationSpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuantizationSpec* internal_default_instance() {
    return reinterpret_cast<const QuantizationSpec*>(
        &_QuantizationSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(QuantizationSpec& a, QuantizationSpec& b) { a.Swap(&b); }
  inline void Swap(QuantizationSpec* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizationSpec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizationSpec* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizationSpec>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizationSpec& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizationSpec& from) { QuantizationSpec::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizationSpec* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizationSpec"; }

 protected:
  explicit QuantizationSpec(::google::protobuf::Arena* arena);
  QuantizationSpec(::google::protobuf::Arena* arena, const QuantizationSpec& from);
  QuantizationSpec(::google::protobuf::Arena* arena, QuantizationSpec&& from) noexcept
      : QuantizationSpec(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMatcherFieldNumber = 1,
    kMethodFieldNumber = 2,
  };
  // .stablehlo.quantization.MatcherSpec matcher = 1;
  bool has_matcher() const;
  void clear_matcher() ;
  const ::stablehlo::quantization::MatcherSpec& matcher() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::MatcherSpec* release_matcher();
  ::stablehlo::quantization::MatcherSpec* mutable_matcher();
  void set_allocated_matcher(::stablehlo::quantization::MatcherSpec* value);
  void unsafe_arena_set_allocated_matcher(::stablehlo::quantization::MatcherSpec* value);
  ::stablehlo::quantization::MatcherSpec* unsafe_arena_release_matcher();

  private:
  const ::stablehlo::quantization::MatcherSpec& _internal_matcher() const;
  ::stablehlo::quantization::MatcherSpec* _internal_mutable_matcher();

  public:
  // .stablehlo.quantization.Method method = 2;
  bool has_method() const;
  void clear_method() ;
  const ::stablehlo::quantization::Method& method() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::Method* release_method();
  ::stablehlo::quantization::Method* mutable_method();
  void set_allocated_method(::stablehlo::quantization::Method* value);
  void unsafe_arena_set_allocated_method(::stablehlo::quantization::Method* value);
  ::stablehlo::quantization::Method* unsafe_arena_release_method();

  private:
  const ::stablehlo::quantization::Method& _internal_method() const;
  ::stablehlo::quantization::Method* _internal_mutable_method();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizationSpec)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizationSpec& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::stablehlo::quantization::MatcherSpec* matcher_;
    ::stablehlo::quantization::Method* method_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizationResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizationResult) */ {
 public:
  inline QuantizationResult() : QuantizationResult(nullptr) {}
  ~QuantizationResult() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizationResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizationResult(const QuantizationResult& from) : QuantizationResult(nullptr, from) {}
  inline QuantizationResult(QuantizationResult&& from) noexcept
      : QuantizationResult(nullptr, std::move(from)) {}
  inline QuantizationResult& operator=(const QuantizationResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizationResult& operator=(QuantizationResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizationResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuantizationResult* internal_default_instance() {
    return reinterpret_cast<const QuantizationResult*>(
        &_QuantizationResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QuantizationResult& a, QuantizationResult& b) { a.Swap(&b); }
  inline void Swap(QuantizationResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizationResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizationResult* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizationResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizationResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizationResult& from) { QuantizationResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizationResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizationResult"; }

 protected:
  explicit QuantizationResult(::google::protobuf::Arena* arena);
  QuantizationResult(::google::protobuf::Arena* arena, const QuantizationResult& from);
  QuantizationResult(::google::protobuf::Arena* arena, QuantizationResult&& from) noexcept
      : QuantizationResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQuantizableUnitFieldNumber = 1,
    kMethodFieldNumber = 2,
  };
  // .stablehlo.quantization.QuantizableUnit quantizable_unit = 1;
  bool has_quantizable_unit() const;
  void clear_quantizable_unit() ;
  const ::stablehlo::quantization::QuantizableUnit& quantizable_unit() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::QuantizableUnit* release_quantizable_unit();
  ::stablehlo::quantization::QuantizableUnit* mutable_quantizable_unit();
  void set_allocated_quantizable_unit(::stablehlo::quantization::QuantizableUnit* value);
  void unsafe_arena_set_allocated_quantizable_unit(::stablehlo::quantization::QuantizableUnit* value);
  ::stablehlo::quantization::QuantizableUnit* unsafe_arena_release_quantizable_unit();

  private:
  const ::stablehlo::quantization::QuantizableUnit& _internal_quantizable_unit() const;
  ::stablehlo::quantization::QuantizableUnit* _internal_mutable_quantizable_unit();

  public:
  // .stablehlo.quantization.Method method = 2;
  bool has_method() const;
  void clear_method() ;
  const ::stablehlo::quantization::Method& method() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::Method* release_method();
  ::stablehlo::quantization::Method* mutable_method();
  void set_allocated_method(::stablehlo::quantization::Method* value);
  void unsafe_arena_set_allocated_method(::stablehlo::quantization::Method* value);
  ::stablehlo::quantization::Method* unsafe_arena_release_method();

  private:
  const ::stablehlo::quantization::Method& _internal_method() const;
  ::stablehlo::quantization::Method* _internal_mutable_method();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizationResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizationResult& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::stablehlo::quantization::QuantizableUnit* quantizable_unit_;
    ::stablehlo::quantization::Method* method_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizationSpecs final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizationSpecs) */ {
 public:
  inline QuantizationSpecs() : QuantizationSpecs(nullptr) {}
  ~QuantizationSpecs() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizationSpecs(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizationSpecs(const QuantizationSpecs& from) : QuantizationSpecs(nullptr, from) {}
  inline QuantizationSpecs(QuantizationSpecs&& from) noexcept
      : QuantizationSpecs(nullptr, std::move(from)) {}
  inline QuantizationSpecs& operator=(const QuantizationSpecs& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizationSpecs& operator=(QuantizationSpecs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizationSpecs& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuantizationSpecs* internal_default_instance() {
    return reinterpret_cast<const QuantizationSpecs*>(
        &_QuantizationSpecs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(QuantizationSpecs& a, QuantizationSpecs& b) { a.Swap(&b); }
  inline void Swap(QuantizationSpecs* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizationSpecs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizationSpecs* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizationSpecs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizationSpecs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizationSpecs& from) { QuantizationSpecs::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizationSpecs* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizationSpecs"; }

 protected:
  explicit QuantizationSpecs(::google::protobuf::Arena* arena);
  QuantizationSpecs(::google::protobuf::Arena* arena, const QuantizationSpecs& from);
  QuantizationSpecs(::google::protobuf::Arena* arena, QuantizationSpecs&& from) noexcept
      : QuantizationSpecs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpecsFieldNumber = 1,
  };
  // repeated .stablehlo.quantization.QuantizationSpec specs = 1;
  int specs_size() const;
  private:
  int _internal_specs_size() const;

  public:
  void clear_specs() ;
  ::stablehlo::quantization::QuantizationSpec* mutable_specs(int index);
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationSpec>* mutable_specs();

  private:
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationSpec>& _internal_specs() const;
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationSpec>* _internal_mutable_specs();
  public:
  const ::stablehlo::quantization::QuantizationSpec& specs(int index) const;
  ::stablehlo::quantization::QuantizationSpec* add_specs();
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationSpec>& specs() const;
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizationSpecs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizationSpecs& from_msg);
    ::google::protobuf::RepeatedPtrField< ::stablehlo::quantization::QuantizationSpec > specs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizationResults final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizationResults) */ {
 public:
  inline QuantizationResults() : QuantizationResults(nullptr) {}
  ~QuantizationResults() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizationResults(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizationResults(const QuantizationResults& from) : QuantizationResults(nullptr, from) {}
  inline QuantizationResults(QuantizationResults&& from) noexcept
      : QuantizationResults(nullptr, std::move(from)) {}
  inline QuantizationResults& operator=(const QuantizationResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizationResults& operator=(QuantizationResults&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizationResults& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuantizationResults* internal_default_instance() {
    return reinterpret_cast<const QuantizationResults*>(
        &_QuantizationResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QuantizationResults& a, QuantizationResults& b) { a.Swap(&b); }
  inline void Swap(QuantizationResults* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizationResults* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizationResults* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizationResults>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizationResults& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizationResults& from) { QuantizationResults::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizationResults* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizationResults"; }

 protected:
  explicit QuantizationResults(::google::protobuf::Arena* arena);
  QuantizationResults(::google::protobuf::Arena* arena, const QuantizationResults& from);
  QuantizationResults(::google::protobuf::Arena* arena, QuantizationResults&& from) noexcept
      : QuantizationResults(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultsFieldNumber = 1,
  };
  // repeated .stablehlo.quantization.QuantizationResult results = 1;
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  ::stablehlo::quantization::QuantizationResult* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationResult>* mutable_results();

  private:
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationResult>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationResult>* _internal_mutable_results();
  public:
  const ::stablehlo::quantization::QuantizationResult& results(int index) const;
  ::stablehlo::quantization::QuantizationResult* add_results();
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationResult>& results() const;
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizationResults)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizationResults& from_msg);
    ::google::protobuf::RepeatedPtrField< ::stablehlo::quantization::QuantizationResult > results_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizationConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizationConfig) */ {
 public:
  inline QuantizationConfig() : QuantizationConfig(nullptr) {}
  ~QuantizationConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizationConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizationConfig(const QuantizationConfig& from) : QuantizationConfig(nullptr, from) {}
  inline QuantizationConfig(QuantizationConfig&& from) noexcept
      : QuantizationConfig(nullptr, std::move(from)) {}
  inline QuantizationConfig& operator=(const QuantizationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizationConfig& operator=(QuantizationConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizationConfig& default_instance() {
    return *internal_default_instance();
  }
  enum PresetCase {
    kStaticRangePtqPreset = 1,
    kWeightOnlyPtqPreset = 7,
    PRESET_NOT_SET = 0,
  };
  static inline const QuantizationConfig* internal_default_instance() {
    return reinterpret_cast<const QuantizationConfig*>(
        &_QuantizationConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(QuantizationConfig& a, QuantizationConfig& b) { a.Swap(&b); }
  inline void Swap(QuantizationConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizationConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizationConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizationConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizationConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizationConfig& from) { QuantizationConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizationConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizationConfig"; }

 protected:
  explicit QuantizationConfig(::google::protobuf::Arena* arena);
  QuantizationConfig(::google::protobuf::Arena* arena, const QuantizationConfig& from);
  QuantizationConfig(::google::protobuf::Arena* arena, QuantizationConfig&& from) noexcept
      : QuantizationConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReportFilePathFieldNumber = 8,
    kTfSavedModelFieldNumber = 2,
    kPipelineConfigFieldNumber = 3,
    kSpecsFieldNumber = 4,
    kDebuggerConfigFieldNumber = 5,
    kCalibrationOptionsFieldNumber = 6,
    kStaticRangePtqPresetFieldNumber = 1,
    kWeightOnlyPtqPresetFieldNumber = 7,
  };
  // optional string report_file_path = 8;
  bool has_report_file_path() const;
  void clear_report_file_path() ;
  const std::string& report_file_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_report_file_path(Arg_&& arg, Args_... args);
  std::string* mutable_report_file_path();
  PROTOBUF_NODISCARD std::string* release_report_file_path();
  void set_allocated_report_file_path(std::string* value);

  private:
  const std::string& _internal_report_file_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_report_file_path(
      const std::string& value);
  std::string* _internal_mutable_report_file_path();

  public:
  // .stablehlo.quantization.TfSavedModelConfig tf_saved_model = 2;
  bool has_tf_saved_model() const;
  void clear_tf_saved_model() ;
  const ::stablehlo::quantization::TfSavedModelConfig& tf_saved_model() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::TfSavedModelConfig* release_tf_saved_model();
  ::stablehlo::quantization::TfSavedModelConfig* mutable_tf_saved_model();
  void set_allocated_tf_saved_model(::stablehlo::quantization::TfSavedModelConfig* value);
  void unsafe_arena_set_allocated_tf_saved_model(::stablehlo::quantization::TfSavedModelConfig* value);
  ::stablehlo::quantization::TfSavedModelConfig* unsafe_arena_release_tf_saved_model();

  private:
  const ::stablehlo::quantization::TfSavedModelConfig& _internal_tf_saved_model() const;
  ::stablehlo::quantization::TfSavedModelConfig* _internal_mutable_tf_saved_model();

  public:
  // .stablehlo.quantization.PipelineConfig pipeline_config = 3;
  bool has_pipeline_config() const;
  void clear_pipeline_config() ;
  const ::stablehlo::quantization::PipelineConfig& pipeline_config() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::PipelineConfig* release_pipeline_config();
  ::stablehlo::quantization::PipelineConfig* mutable_pipeline_config();
  void set_allocated_pipeline_config(::stablehlo::quantization::PipelineConfig* value);
  void unsafe_arena_set_allocated_pipeline_config(::stablehlo::quantization::PipelineConfig* value);
  ::stablehlo::quantization::PipelineConfig* unsafe_arena_release_pipeline_config();

  private:
  const ::stablehlo::quantization::PipelineConfig& _internal_pipeline_config() const;
  ::stablehlo::quantization::PipelineConfig* _internal_mutable_pipeline_config();

  public:
  // .stablehlo.quantization.QuantizationSpecs specs = 4;
  bool has_specs() const;
  void clear_specs() ;
  const ::stablehlo::quantization::QuantizationSpecs& specs() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::QuantizationSpecs* release_specs();
  ::stablehlo::quantization::QuantizationSpecs* mutable_specs();
  void set_allocated_specs(::stablehlo::quantization::QuantizationSpecs* value);
  void unsafe_arena_set_allocated_specs(::stablehlo::quantization::QuantizationSpecs* value);
  ::stablehlo::quantization::QuantizationSpecs* unsafe_arena_release_specs();

  private:
  const ::stablehlo::quantization::QuantizationSpecs& _internal_specs() const;
  ::stablehlo::quantization::QuantizationSpecs* _internal_mutable_specs();

  public:
  // .stablehlo.quantization.DebuggerConfig debugger_config = 5;
  bool has_debugger_config() const;
  void clear_debugger_config() ;
  const ::stablehlo::quantization::DebuggerConfig& debugger_config() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::DebuggerConfig* release_debugger_config();
  ::stablehlo::quantization::DebuggerConfig* mutable_debugger_config();
  void set_allocated_debugger_config(::stablehlo::quantization::DebuggerConfig* value);
  void unsafe_arena_set_allocated_debugger_config(::stablehlo::quantization::DebuggerConfig* value);
  ::stablehlo::quantization::DebuggerConfig* unsafe_arena_release_debugger_config();

  private:
  const ::stablehlo::quantization::DebuggerConfig& _internal_debugger_config() const;
  ::stablehlo::quantization::DebuggerConfig* _internal_mutable_debugger_config();

  public:
  // .stablehlo.quantization.CalibrationOptions calibration_options = 6;
  bool has_calibration_options() const;
  void clear_calibration_options() ;
  const ::stablehlo::quantization::CalibrationOptions& calibration_options() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::CalibrationOptions* release_calibration_options();
  ::stablehlo::quantization::CalibrationOptions* mutable_calibration_options();
  void set_allocated_calibration_options(::stablehlo::quantization::CalibrationOptions* value);
  void unsafe_arena_set_allocated_calibration_options(::stablehlo::quantization::CalibrationOptions* value);
  ::stablehlo::quantization::CalibrationOptions* unsafe_arena_release_calibration_options();

  private:
  const ::stablehlo::quantization::CalibrationOptions& _internal_calibration_options() const;
  ::stablehlo::quantization::CalibrationOptions* _internal_mutable_calibration_options();

  public:
  // .stablehlo.quantization.StaticRangePtqPreset static_range_ptq_preset = 1;
  bool has_static_range_ptq_preset() const;
  private:
  bool _internal_has_static_range_ptq_preset() const;

  public:
  void clear_static_range_ptq_preset() ;
  const ::stablehlo::quantization::StaticRangePtqPreset& static_range_ptq_preset() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::StaticRangePtqPreset* release_static_range_ptq_preset();
  ::stablehlo::quantization::StaticRangePtqPreset* mutable_static_range_ptq_preset();
  void set_allocated_static_range_ptq_preset(::stablehlo::quantization::StaticRangePtqPreset* value);
  void unsafe_arena_set_allocated_static_range_ptq_preset(::stablehlo::quantization::StaticRangePtqPreset* value);
  ::stablehlo::quantization::StaticRangePtqPreset* unsafe_arena_release_static_range_ptq_preset();

  private:
  const ::stablehlo::quantization::StaticRangePtqPreset& _internal_static_range_ptq_preset() const;
  ::stablehlo::quantization::StaticRangePtqPreset* _internal_mutable_static_range_ptq_preset();

  public:
  // .stablehlo.quantization.WeightOnlyPtqPreset weight_only_ptq_preset = 7;
  bool has_weight_only_ptq_preset() const;
  private:
  bool _internal_has_weight_only_ptq_preset() const;

  public:
  void clear_weight_only_ptq_preset() ;
  const ::stablehlo::quantization::WeightOnlyPtqPreset& weight_only_ptq_preset() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::WeightOnlyPtqPreset* release_weight_only_ptq_preset();
  ::stablehlo::quantization::WeightOnlyPtqPreset* mutable_weight_only_ptq_preset();
  void set_allocated_weight_only_ptq_preset(::stablehlo::quantization::WeightOnlyPtqPreset* value);
  void unsafe_arena_set_allocated_weight_only_ptq_preset(::stablehlo::quantization::WeightOnlyPtqPreset* value);
  ::stablehlo::quantization::WeightOnlyPtqPreset* unsafe_arena_release_weight_only_ptq_preset();

  private:
  const ::stablehlo::quantization::WeightOnlyPtqPreset& _internal_weight_only_ptq_preset() const;
  ::stablehlo::quantization::WeightOnlyPtqPreset* _internal_mutable_weight_only_ptq_preset();

  public:
  void clear_preset();
  PresetCase preset_case() const;
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizationConfig)
 private:
  class _Internal;
  void set_has_static_range_ptq_preset();
  void set_has_weight_only_ptq_preset();
  inline bool has_preset() const;
  inline void clear_has_preset();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 7,
      74, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizationConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr report_file_path_;
    ::stablehlo::quantization::TfSavedModelConfig* tf_saved_model_;
    ::stablehlo::quantization::PipelineConfig* pipeline_config_;
    ::stablehlo::quantization::QuantizationSpecs* specs_;
    ::stablehlo::quantization::DebuggerConfig* debugger_config_;
    ::stablehlo::quantization::CalibrationOptions* calibration_options_;
    union PresetUnion {
      constexpr PresetUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::stablehlo::quantization::StaticRangePtqPreset* static_range_ptq_preset_;
      ::stablehlo::quantization::WeightOnlyPtqPreset* weight_only_ptq_preset_;
    } preset_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TfRecordFile

// string path = 1;
inline void TfRecordFile::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& TfRecordFile::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.TfRecordFile.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TfRecordFile::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stablehlo.quantization.TfRecordFile.path)
}
inline std::string* TfRecordFile::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.TfRecordFile.path)
  return _s;
}
inline const std::string& TfRecordFile::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void TfRecordFile::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* TfRecordFile::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* TfRecordFile::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.TfRecordFile.path)
  return _impl_.path_.Release();
}
inline void TfRecordFile::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_.IsDefault()) {
          _impl_.path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.TfRecordFile.path)
}

// -------------------------------------------------------------------

// RepresentativeDatasetConfig

// .stablehlo.quantization.TfRecordFile tf_record = 1;
inline bool RepresentativeDatasetConfig::has_tf_record() const {
  return file_case() == kTfRecord;
}
inline bool RepresentativeDatasetConfig::_internal_has_tf_record() const {
  return file_case() == kTfRecord;
}
inline void RepresentativeDatasetConfig::set_has_tf_record() {
  _impl_._oneof_case_[0] = kTfRecord;
}
inline void RepresentativeDatasetConfig::clear_tf_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (file_case() == kTfRecord) {
    if (GetArena() == nullptr) {
      delete _impl_.file_.tf_record_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.file_.tf_record_);
    }
    clear_has_file();
  }
}
inline ::stablehlo::quantization::TfRecordFile* RepresentativeDatasetConfig::release_tf_record() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.RepresentativeDatasetConfig.tf_record)
  if (file_case() == kTfRecord) {
    clear_has_file();
    auto* temp = _impl_.file_.tf_record_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.file_.tf_record_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::TfRecordFile& RepresentativeDatasetConfig::_internal_tf_record() const {
  return file_case() == kTfRecord ? *_impl_.file_.tf_record_ : reinterpret_cast<::stablehlo::quantization::TfRecordFile&>(::stablehlo::quantization::_TfRecordFile_default_instance_);
}
inline const ::stablehlo::quantization::TfRecordFile& RepresentativeDatasetConfig::tf_record() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.RepresentativeDatasetConfig.tf_record)
  return _internal_tf_record();
}
inline ::stablehlo::quantization::TfRecordFile* RepresentativeDatasetConfig::unsafe_arena_release_tf_record() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.RepresentativeDatasetConfig.tf_record)
  if (file_case() == kTfRecord) {
    clear_has_file();
    auto* temp = _impl_.file_.tf_record_;
    _impl_.file_.tf_record_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RepresentativeDatasetConfig::unsafe_arena_set_allocated_tf_record(::stablehlo::quantization::TfRecordFile* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_file();
  if (value) {
    set_has_tf_record();
    _impl_.file_.tf_record_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.RepresentativeDatasetConfig.tf_record)
}
inline ::stablehlo::quantization::TfRecordFile* RepresentativeDatasetConfig::_internal_mutable_tf_record() {
  if (file_case() != kTfRecord) {
    clear_file();
    set_has_tf_record();
    _impl_.file_.tf_record_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::TfRecordFile>(GetArena());
  }
  return _impl_.file_.tf_record_;
}
inline ::stablehlo::quantization::TfRecordFile* RepresentativeDatasetConfig::mutable_tf_record() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::TfRecordFile* _msg = _internal_mutable_tf_record();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.RepresentativeDatasetConfig.tf_record)
  return _msg;
}

// optional string signature_key = 2;
inline bool RepresentativeDatasetConfig::has_signature_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void RepresentativeDatasetConfig::clear_signature_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RepresentativeDatasetConfig::signature_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.RepresentativeDatasetConfig.signature_key)
  return _internal_signature_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RepresentativeDatasetConfig::set_signature_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.signature_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stablehlo.quantization.RepresentativeDatasetConfig.signature_key)
}
inline std::string* RepresentativeDatasetConfig::mutable_signature_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature_key();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.RepresentativeDatasetConfig.signature_key)
  return _s;
}
inline const std::string& RepresentativeDatasetConfig::_internal_signature_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_key_.Get();
}
inline void RepresentativeDatasetConfig::_internal_set_signature_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.signature_key_.Set(value, GetArena());
}
inline std::string* RepresentativeDatasetConfig::_internal_mutable_signature_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.signature_key_.Mutable( GetArena());
}
inline std::string* RepresentativeDatasetConfig::release_signature_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.RepresentativeDatasetConfig.signature_key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.signature_key_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.signature_key_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void RepresentativeDatasetConfig::set_allocated_signature_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.signature_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_key_.IsDefault()) {
          _impl_.signature_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.RepresentativeDatasetConfig.signature_key)
}

inline bool RepresentativeDatasetConfig::has_file() const {
  return file_case() != FILE_NOT_SET;
}
inline void RepresentativeDatasetConfig::clear_has_file() {
  _impl_._oneof_case_[0] = FILE_NOT_SET;
}
inline RepresentativeDatasetConfig::FileCase RepresentativeDatasetConfig::file_case() const {
  return RepresentativeDatasetConfig::FileCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// StaticRangePtqPreset

// repeated .stablehlo.quantization.RepresentativeDatasetConfig representative_datasets = 1;
inline int StaticRangePtqPreset::_internal_representative_datasets_size() const {
  return _internal_representative_datasets().size();
}
inline int StaticRangePtqPreset::representative_datasets_size() const {
  return _internal_representative_datasets_size();
}
inline void StaticRangePtqPreset::clear_representative_datasets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.representative_datasets_.Clear();
}
inline ::stablehlo::quantization::RepresentativeDatasetConfig* StaticRangePtqPreset::mutable_representative_datasets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.StaticRangePtqPreset.representative_datasets)
  return _internal_mutable_representative_datasets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>* StaticRangePtqPreset::mutable_representative_datasets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:stablehlo.quantization.StaticRangePtqPreset.representative_datasets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_representative_datasets();
}
inline const ::stablehlo::quantization::RepresentativeDatasetConfig& StaticRangePtqPreset::representative_datasets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.StaticRangePtqPreset.representative_datasets)
  return _internal_representative_datasets().Get(index);
}
inline ::stablehlo::quantization::RepresentativeDatasetConfig* StaticRangePtqPreset::add_representative_datasets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::stablehlo::quantization::RepresentativeDatasetConfig* _add = _internal_mutable_representative_datasets()->Add();
  // @@protoc_insertion_point(field_add:stablehlo.quantization.StaticRangePtqPreset.representative_datasets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>& StaticRangePtqPreset::representative_datasets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:stablehlo.quantization.StaticRangePtqPreset.representative_datasets)
  return _internal_representative_datasets();
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>&
StaticRangePtqPreset::_internal_representative_datasets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.representative_datasets_;
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>*
StaticRangePtqPreset::_internal_mutable_representative_datasets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.representative_datasets_;
}

// bool enable_per_channel_quantized_weight = 2 [deprecated = true];
inline void StaticRangePtqPreset::clear_enable_per_channel_quantized_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_per_channel_quantized_weight_ = false;
}
inline bool StaticRangePtqPreset::enable_per_channel_quantized_weight() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.StaticRangePtqPreset.enable_per_channel_quantized_weight)
  return _internal_enable_per_channel_quantized_weight();
}
inline void StaticRangePtqPreset::set_enable_per_channel_quantized_weight(bool value) {
  _internal_set_enable_per_channel_quantized_weight(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.StaticRangePtqPreset.enable_per_channel_quantized_weight)
}
inline bool StaticRangePtqPreset::_internal_enable_per_channel_quantized_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_per_channel_quantized_weight_;
}
inline void StaticRangePtqPreset::_internal_set_enable_per_channel_quantized_weight(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_per_channel_quantized_weight_ = value;
}

// bool enable_full_int_quantization = 3;
inline void StaticRangePtqPreset::clear_enable_full_int_quantization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_full_int_quantization_ = false;
}
inline bool StaticRangePtqPreset::enable_full_int_quantization() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.StaticRangePtqPreset.enable_full_int_quantization)
  return _internal_enable_full_int_quantization();
}
inline void StaticRangePtqPreset::set_enable_full_int_quantization(bool value) {
  _internal_set_enable_full_int_quantization(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.StaticRangePtqPreset.enable_full_int_quantization)
}
inline bool StaticRangePtqPreset::_internal_enable_full_int_quantization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_full_int_quantization_;
}
inline void StaticRangePtqPreset::_internal_set_enable_full_int_quantization(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_full_int_quantization_ = value;
}

// -------------------------------------------------------------------

// WeightOnlyPtqPreset

// -------------------------------------------------------------------

// TfSavedModelConfig

// repeated string tags = 1;
inline int TfSavedModelConfig::_internal_tags_size() const {
  return _internal_tags().size();
}
inline int TfSavedModelConfig::tags_size() const {
  return _internal_tags_size();
}
inline void TfSavedModelConfig::clear_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tags_.Clear();
}
inline std::string* TfSavedModelConfig::add_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_tags()->Add();
  // @@protoc_insertion_point(field_add_mutable:stablehlo.quantization.TfSavedModelConfig.tags)
  return _s;
}
inline const std::string& TfSavedModelConfig::tags(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.TfSavedModelConfig.tags)
  return _internal_tags().Get(index);
}
inline std::string* TfSavedModelConfig::mutable_tags(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.TfSavedModelConfig.tags)
  return _internal_mutable_tags()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TfSavedModelConfig::set_tags(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_tags()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:stablehlo.quantization.TfSavedModelConfig.tags)
}
template <typename Arg_, typename... Args_>
inline void TfSavedModelConfig::add_tags(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_tags(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:stablehlo.quantization.TfSavedModelConfig.tags)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TfSavedModelConfig::tags() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:stablehlo.quantization.TfSavedModelConfig.tags)
  return _internal_tags();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TfSavedModelConfig::mutable_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:stablehlo.quantization.TfSavedModelConfig.tags)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tags();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TfSavedModelConfig::_internal_tags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tags_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TfSavedModelConfig::_internal_mutable_tags() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tags_;
}

// -------------------------------------------------------------------

// PipelineConfig

// optional bool unpack_quantized_types = 1;
inline bool PipelineConfig::has_unpack_quantized_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PipelineConfig::clear_unpack_quantized_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpack_quantized_types_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PipelineConfig::unpack_quantized_types() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.PipelineConfig.unpack_quantized_types)
  return _internal_unpack_quantized_types();
}
inline void PipelineConfig::set_unpack_quantized_types(bool value) {
  _internal_set_unpack_quantized_types(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:stablehlo.quantization.PipelineConfig.unpack_quantized_types)
}
inline bool PipelineConfig::_internal_unpack_quantized_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpack_quantized_types_;
}
inline void PipelineConfig::_internal_set_unpack_quantized_types(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpack_quantized_types_ = value;
}

// bool merge_fusion_with_dequantize = 2;
inline void PipelineConfig::clear_merge_fusion_with_dequantize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.merge_fusion_with_dequantize_ = false;
}
inline bool PipelineConfig::merge_fusion_with_dequantize() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.PipelineConfig.merge_fusion_with_dequantize)
  return _internal_merge_fusion_with_dequantize();
}
inline void PipelineConfig::set_merge_fusion_with_dequantize(bool value) {
  _internal_set_merge_fusion_with_dequantize(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.PipelineConfig.merge_fusion_with_dequantize)
}
inline bool PipelineConfig::_internal_merge_fusion_with_dequantize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.merge_fusion_with_dequantize_;
}
inline void PipelineConfig::_internal_set_merge_fusion_with_dequantize(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.merge_fusion_with_dequantize_ = value;
}

// -------------------------------------------------------------------

// QuantizableUnit

// string name = 1;
inline void QuantizableUnit::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& QuantizableUnit::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizableUnit.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QuantizableUnit::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stablehlo.quantization.QuantizableUnit.name)
}
inline std::string* QuantizableUnit::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizableUnit.name)
  return _s;
}
inline const std::string& QuantizableUnit::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void QuantizableUnit::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* QuantizableUnit::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* QuantizableUnit::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizableUnit.name)
  return _impl_.name_.Release();
}
inline void QuantizableUnit::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizableUnit.name)
}

// -------------------------------------------------------------------

// QuantizationResult

// .stablehlo.quantization.QuantizableUnit quantizable_unit = 1;
inline bool QuantizationResult::has_quantizable_unit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quantizable_unit_ != nullptr);
  return value;
}
inline void QuantizationResult::clear_quantizable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantizable_unit_ != nullptr) _impl_.quantizable_unit_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::stablehlo::quantization::QuantizableUnit& QuantizationResult::_internal_quantizable_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::QuantizableUnit* p = _impl_.quantizable_unit_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::QuantizableUnit&>(::stablehlo::quantization::_QuantizableUnit_default_instance_);
}
inline const ::stablehlo::quantization::QuantizableUnit& QuantizationResult::quantizable_unit() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationResult.quantizable_unit)
  return _internal_quantizable_unit();
}
inline void QuantizationResult::unsafe_arena_set_allocated_quantizable_unit(::stablehlo::quantization::QuantizableUnit* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quantizable_unit_);
  }
  _impl_.quantizable_unit_ = reinterpret_cast<::stablehlo::quantization::QuantizableUnit*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationResult.quantizable_unit)
}
inline ::stablehlo::quantization::QuantizableUnit* QuantizationResult::release_quantizable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::QuantizableUnit* released = _impl_.quantizable_unit_;
  _impl_.quantizable_unit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::QuantizableUnit* QuantizationResult::unsafe_arena_release_quantizable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationResult.quantizable_unit)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::QuantizableUnit* temp = _impl_.quantizable_unit_;
  _impl_.quantizable_unit_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::QuantizableUnit* QuantizationResult::_internal_mutable_quantizable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantizable_unit_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::QuantizableUnit>(GetArena());
    _impl_.quantizable_unit_ = reinterpret_cast<::stablehlo::quantization::QuantizableUnit*>(p);
  }
  return _impl_.quantizable_unit_;
}
inline ::stablehlo::quantization::QuantizableUnit* QuantizationResult::mutable_quantizable_unit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::stablehlo::quantization::QuantizableUnit* _msg = _internal_mutable_quantizable_unit();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationResult.quantizable_unit)
  return _msg;
}
inline void QuantizationResult::set_allocated_quantizable_unit(::stablehlo::quantization::QuantizableUnit* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.quantizable_unit_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.quantizable_unit_ = reinterpret_cast<::stablehlo::quantization::QuantizableUnit*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationResult.quantizable_unit)
}

// .stablehlo.quantization.Method method = 2;
inline bool QuantizationResult::has_method() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.method_ != nullptr);
  return value;
}
inline void QuantizationResult::clear_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.method_ != nullptr) _impl_.method_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::stablehlo::quantization::Method& QuantizationResult::_internal_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::Method* p = _impl_.method_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::Method&>(::stablehlo::quantization::_Method_default_instance_);
}
inline const ::stablehlo::quantization::Method& QuantizationResult::method() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationResult.method)
  return _internal_method();
}
inline void QuantizationResult::unsafe_arena_set_allocated_method(::stablehlo::quantization::Method* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.method_);
  }
  _impl_.method_ = reinterpret_cast<::stablehlo::quantization::Method*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationResult.method)
}
inline ::stablehlo::quantization::Method* QuantizationResult::release_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::stablehlo::quantization::Method* released = _impl_.method_;
  _impl_.method_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::Method* QuantizationResult::unsafe_arena_release_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationResult.method)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::stablehlo::quantization::Method* temp = _impl_.method_;
  _impl_.method_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::Method* QuantizationResult::_internal_mutable_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.method_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::Method>(GetArena());
    _impl_.method_ = reinterpret_cast<::stablehlo::quantization::Method*>(p);
  }
  return _impl_.method_;
}
inline ::stablehlo::quantization::Method* QuantizationResult::mutable_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::stablehlo::quantization::Method* _msg = _internal_mutable_method();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationResult.method)
  return _msg;
}
inline void QuantizationResult::set_allocated_method(::stablehlo::quantization::Method* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.method_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.method_ = reinterpret_cast<::stablehlo::quantization::Method*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationResult.method)
}

// -------------------------------------------------------------------

// QuantizationResults

// repeated .stablehlo.quantization.QuantizationResult results = 1;
inline int QuantizationResults::_internal_results_size() const {
  return _internal_results().size();
}
inline int QuantizationResults::results_size() const {
  return _internal_results_size();
}
inline void QuantizationResults::clear_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.results_.Clear();
}
inline ::stablehlo::quantization::QuantizationResult* QuantizationResults::mutable_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationResults.results)
  return _internal_mutable_results()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationResult>* QuantizationResults::mutable_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:stablehlo.quantization.QuantizationResults.results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_results();
}
inline const ::stablehlo::quantization::QuantizationResult& QuantizationResults::results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationResults.results)
  return _internal_results().Get(index);
}
inline ::stablehlo::quantization::QuantizationResult* QuantizationResults::add_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::stablehlo::quantization::QuantizationResult* _add = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add:stablehlo.quantization.QuantizationResults.results)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationResult>& QuantizationResults::results() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:stablehlo.quantization.QuantizationResults.results)
  return _internal_results();
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationResult>&
QuantizationResults::_internal_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationResult>*
QuantizationResults::_internal_mutable_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// QuantizedDimension

// optional int32 dimension = 1;
inline bool QuantizedDimension::has_dimension() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void QuantizedDimension::clear_dimension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimension_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t QuantizedDimension::dimension() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizedDimension.dimension)
  return _internal_dimension();
}
inline void QuantizedDimension::set_dimension(::int32_t value) {
  _internal_set_dimension(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:stablehlo.quantization.QuantizedDimension.dimension)
}
inline ::int32_t QuantizedDimension::_internal_dimension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dimension_;
}
inline void QuantizedDimension::_internal_set_dimension(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimension_ = value;
}

// -------------------------------------------------------------------

// PerTensor

// -------------------------------------------------------------------

// QuantizedType

// .stablehlo.quantization.QuantizedDimension dimension_specs = 1;
inline bool QuantizedType::has_dimension_specs() const {
  return type_case() == kDimensionSpecs;
}
inline bool QuantizedType::_internal_has_dimension_specs() const {
  return type_case() == kDimensionSpecs;
}
inline void QuantizedType::set_has_dimension_specs() {
  _impl_._oneof_case_[0] = kDimensionSpecs;
}
inline void QuantizedType::clear_dimension_specs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kDimensionSpecs) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.dimension_specs_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.dimension_specs_);
    }
    clear_has_type();
  }
}
inline ::stablehlo::quantization::QuantizedDimension* QuantizedType::release_dimension_specs() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizedType.dimension_specs)
  if (type_case() == kDimensionSpecs) {
    clear_has_type();
    auto* temp = _impl_.type_.dimension_specs_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.dimension_specs_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::QuantizedDimension& QuantizedType::_internal_dimension_specs() const {
  return type_case() == kDimensionSpecs ? *_impl_.type_.dimension_specs_ : reinterpret_cast<::stablehlo::quantization::QuantizedDimension&>(::stablehlo::quantization::_QuantizedDimension_default_instance_);
}
inline const ::stablehlo::quantization::QuantizedDimension& QuantizedType::dimension_specs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizedType.dimension_specs)
  return _internal_dimension_specs();
}
inline ::stablehlo::quantization::QuantizedDimension* QuantizedType::unsafe_arena_release_dimension_specs() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.QuantizedType.dimension_specs)
  if (type_case() == kDimensionSpecs) {
    clear_has_type();
    auto* temp = _impl_.type_.dimension_specs_;
    _impl_.type_.dimension_specs_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QuantizedType::unsafe_arena_set_allocated_dimension_specs(::stablehlo::quantization::QuantizedDimension* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_dimension_specs();
    _impl_.type_.dimension_specs_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizedType.dimension_specs)
}
inline ::stablehlo::quantization::QuantizedDimension* QuantizedType::_internal_mutable_dimension_specs() {
  if (type_case() != kDimensionSpecs) {
    clear_type();
    set_has_dimension_specs();
    _impl_.type_.dimension_specs_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::QuantizedDimension>(GetArena());
  }
  return _impl_.type_.dimension_specs_;
}
inline ::stablehlo::quantization::QuantizedDimension* QuantizedType::mutable_dimension_specs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::QuantizedDimension* _msg = _internal_mutable_dimension_specs();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizedType.dimension_specs)
  return _msg;
}

// .stablehlo.quantization.PerTensor per_tensor = 2;
inline bool QuantizedType::has_per_tensor() const {
  return type_case() == kPerTensor;
}
inline bool QuantizedType::_internal_has_per_tensor() const {
  return type_case() == kPerTensor;
}
inline void QuantizedType::set_has_per_tensor() {
  _impl_._oneof_case_[0] = kPerTensor;
}
inline void QuantizedType::clear_per_tensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kPerTensor) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.per_tensor_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.per_tensor_);
    }
    clear_has_type();
  }
}
inline ::stablehlo::quantization::PerTensor* QuantizedType::release_per_tensor() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizedType.per_tensor)
  if (type_case() == kPerTensor) {
    clear_has_type();
    auto* temp = _impl_.type_.per_tensor_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.per_tensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::PerTensor& QuantizedType::_internal_per_tensor() const {
  return type_case() == kPerTensor ? *_impl_.type_.per_tensor_ : reinterpret_cast<::stablehlo::quantization::PerTensor&>(::stablehlo::quantization::_PerTensor_default_instance_);
}
inline const ::stablehlo::quantization::PerTensor& QuantizedType::per_tensor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizedType.per_tensor)
  return _internal_per_tensor();
}
inline ::stablehlo::quantization::PerTensor* QuantizedType::unsafe_arena_release_per_tensor() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.QuantizedType.per_tensor)
  if (type_case() == kPerTensor) {
    clear_has_type();
    auto* temp = _impl_.type_.per_tensor_;
    _impl_.type_.per_tensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QuantizedType::unsafe_arena_set_allocated_per_tensor(::stablehlo::quantization::PerTensor* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_per_tensor();
    _impl_.type_.per_tensor_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizedType.per_tensor)
}
inline ::stablehlo::quantization::PerTensor* QuantizedType::_internal_mutable_per_tensor() {
  if (type_case() != kPerTensor) {
    clear_type();
    set_has_per_tensor();
    _impl_.type_.per_tensor_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::PerTensor>(GetArena());
  }
  return _impl_.type_.per_tensor_;
}
inline ::stablehlo::quantization::PerTensor* QuantizedType::mutable_per_tensor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::PerTensor* _msg = _internal_mutable_per_tensor();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizedType.per_tensor)
  return _msg;
}

inline bool QuantizedType::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void QuantizedType::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline QuantizedType::TypeCase QuantizedType::type_case() const {
  return QuantizedType::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// NoQuantization

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StaticRangePtq

// map<int32, .stablehlo.quantization.QuantizedType> input_quantized_types = 1;
inline int StaticRangePtq::_internal_input_quantized_types_size() const {
  return _internal_input_quantized_types().size();
}
inline int StaticRangePtq::input_quantized_types_size() const {
  return _internal_input_quantized_types_size();
}
inline void StaticRangePtq::clear_input_quantized_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_quantized_types_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>& StaticRangePtq::_internal_input_quantized_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_quantized_types_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>& StaticRangePtq::input_quantized_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:stablehlo.quantization.StaticRangePtq.input_quantized_types)
  return _internal_input_quantized_types();
}
inline ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>* StaticRangePtq::_internal_mutable_input_quantized_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.input_quantized_types_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>* StaticRangePtq::mutable_input_quantized_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:stablehlo.quantization.StaticRangePtq.input_quantized_types)
  return _internal_mutable_input_quantized_types();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WeightOnlyPtq

// map<int32, .stablehlo.quantization.QuantizedType> input_quantized_types = 1;
inline int WeightOnlyPtq::_internal_input_quantized_types_size() const {
  return _internal_input_quantized_types().size();
}
inline int WeightOnlyPtq::input_quantized_types_size() const {
  return _internal_input_quantized_types_size();
}
inline void WeightOnlyPtq::clear_input_quantized_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_quantized_types_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>& WeightOnlyPtq::_internal_input_quantized_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_quantized_types_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>& WeightOnlyPtq::input_quantized_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:stablehlo.quantization.WeightOnlyPtq.input_quantized_types)
  return _internal_input_quantized_types();
}
inline ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>* WeightOnlyPtq::_internal_mutable_input_quantized_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.input_quantized_types_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::stablehlo::quantization::QuantizedType>* WeightOnlyPtq::mutable_input_quantized_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:stablehlo.quantization.WeightOnlyPtq.input_quantized_types)
  return _internal_mutable_input_quantized_types();
}

// -------------------------------------------------------------------

// FunctionNameMatcherSpec

// string regex = 1;
inline void FunctionNameMatcherSpec::clear_regex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.regex_.ClearToEmpty();
}
inline const std::string& FunctionNameMatcherSpec::regex() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.FunctionNameMatcherSpec.regex)
  return _internal_regex();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FunctionNameMatcherSpec::set_regex(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.regex_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stablehlo.quantization.FunctionNameMatcherSpec.regex)
}
inline std::string* FunctionNameMatcherSpec::mutable_regex() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_regex();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.FunctionNameMatcherSpec.regex)
  return _s;
}
inline const std::string& FunctionNameMatcherSpec::_internal_regex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.regex_.Get();
}
inline void FunctionNameMatcherSpec::_internal_set_regex(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.regex_.Set(value, GetArena());
}
inline std::string* FunctionNameMatcherSpec::_internal_mutable_regex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.regex_.Mutable( GetArena());
}
inline std::string* FunctionNameMatcherSpec::release_regex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.FunctionNameMatcherSpec.regex)
  return _impl_.regex_.Release();
}
inline void FunctionNameMatcherSpec::set_allocated_regex(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.regex_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.regex_.IsDefault()) {
          _impl_.regex_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.FunctionNameMatcherSpec.regex)
}

// -------------------------------------------------------------------

// MatcherSpec

// .stablehlo.quantization.FunctionNameMatcherSpec function_name = 1;
inline bool MatcherSpec::has_function_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.function_name_ != nullptr);
  return value;
}
inline void MatcherSpec::clear_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.function_name_ != nullptr) _impl_.function_name_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::stablehlo::quantization::FunctionNameMatcherSpec& MatcherSpec::_internal_function_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::FunctionNameMatcherSpec* p = _impl_.function_name_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::FunctionNameMatcherSpec&>(::stablehlo::quantization::_FunctionNameMatcherSpec_default_instance_);
}
inline const ::stablehlo::quantization::FunctionNameMatcherSpec& MatcherSpec::function_name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.MatcherSpec.function_name)
  return _internal_function_name();
}
inline void MatcherSpec::unsafe_arena_set_allocated_function_name(::stablehlo::quantization::FunctionNameMatcherSpec* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.function_name_);
  }
  _impl_.function_name_ = reinterpret_cast<::stablehlo::quantization::FunctionNameMatcherSpec*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.MatcherSpec.function_name)
}
inline ::stablehlo::quantization::FunctionNameMatcherSpec* MatcherSpec::release_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::FunctionNameMatcherSpec* released = _impl_.function_name_;
  _impl_.function_name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::FunctionNameMatcherSpec* MatcherSpec::unsafe_arena_release_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.MatcherSpec.function_name)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::FunctionNameMatcherSpec* temp = _impl_.function_name_;
  _impl_.function_name_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::FunctionNameMatcherSpec* MatcherSpec::_internal_mutable_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.function_name_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::FunctionNameMatcherSpec>(GetArena());
    _impl_.function_name_ = reinterpret_cast<::stablehlo::quantization::FunctionNameMatcherSpec*>(p);
  }
  return _impl_.function_name_;
}
inline ::stablehlo::quantization::FunctionNameMatcherSpec* MatcherSpec::mutable_function_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::stablehlo::quantization::FunctionNameMatcherSpec* _msg = _internal_mutable_function_name();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.MatcherSpec.function_name)
  return _msg;
}
inline void MatcherSpec::set_allocated_function_name(::stablehlo::quantization::FunctionNameMatcherSpec* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.function_name_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.function_name_ = reinterpret_cast<::stablehlo::quantization::FunctionNameMatcherSpec*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.MatcherSpec.function_name)
}

// -------------------------------------------------------------------

// Method

// .stablehlo.quantization.NoQuantization no_quantization = 1;
inline bool Method::has_no_quantization() const {
  return method_case() == kNoQuantization;
}
inline bool Method::_internal_has_no_quantization() const {
  return method_case() == kNoQuantization;
}
inline void Method::set_has_no_quantization() {
  _impl_._oneof_case_[0] = kNoQuantization;
}
inline void Method::clear_no_quantization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (method_case() == kNoQuantization) {
    if (GetArena() == nullptr) {
      delete _impl_.method_.no_quantization_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.method_.no_quantization_);
    }
    clear_has_method();
  }
}
inline ::stablehlo::quantization::NoQuantization* Method::release_no_quantization() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.Method.no_quantization)
  if (method_case() == kNoQuantization) {
    clear_has_method();
    auto* temp = _impl_.method_.no_quantization_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.method_.no_quantization_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::NoQuantization& Method::_internal_no_quantization() const {
  return method_case() == kNoQuantization ? *_impl_.method_.no_quantization_ : reinterpret_cast<::stablehlo::quantization::NoQuantization&>(::stablehlo::quantization::_NoQuantization_default_instance_);
}
inline const ::stablehlo::quantization::NoQuantization& Method::no_quantization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.Method.no_quantization)
  return _internal_no_quantization();
}
inline ::stablehlo::quantization::NoQuantization* Method::unsafe_arena_release_no_quantization() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.Method.no_quantization)
  if (method_case() == kNoQuantization) {
    clear_has_method();
    auto* temp = _impl_.method_.no_quantization_;
    _impl_.method_.no_quantization_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_no_quantization(::stablehlo::quantization::NoQuantization* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_method();
  if (value) {
    set_has_no_quantization();
    _impl_.method_.no_quantization_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.Method.no_quantization)
}
inline ::stablehlo::quantization::NoQuantization* Method::_internal_mutable_no_quantization() {
  if (method_case() != kNoQuantization) {
    clear_method();
    set_has_no_quantization();
    _impl_.method_.no_quantization_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::NoQuantization>(GetArena());
  }
  return _impl_.method_.no_quantization_;
}
inline ::stablehlo::quantization::NoQuantization* Method::mutable_no_quantization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::NoQuantization* _msg = _internal_mutable_no_quantization();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.Method.no_quantization)
  return _msg;
}

// .stablehlo.quantization.StaticRangePtq static_range_ptq = 2;
inline bool Method::has_static_range_ptq() const {
  return method_case() == kStaticRangePtq;
}
inline bool Method::_internal_has_static_range_ptq() const {
  return method_case() == kStaticRangePtq;
}
inline void Method::set_has_static_range_ptq() {
  _impl_._oneof_case_[0] = kStaticRangePtq;
}
inline void Method::clear_static_range_ptq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (method_case() == kStaticRangePtq) {
    if (GetArena() == nullptr) {
      delete _impl_.method_.static_range_ptq_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.method_.static_range_ptq_);
    }
    clear_has_method();
  }
}
inline ::stablehlo::quantization::StaticRangePtq* Method::release_static_range_ptq() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.Method.static_range_ptq)
  if (method_case() == kStaticRangePtq) {
    clear_has_method();
    auto* temp = _impl_.method_.static_range_ptq_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.method_.static_range_ptq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::StaticRangePtq& Method::_internal_static_range_ptq() const {
  return method_case() == kStaticRangePtq ? *_impl_.method_.static_range_ptq_ : reinterpret_cast<::stablehlo::quantization::StaticRangePtq&>(::stablehlo::quantization::_StaticRangePtq_default_instance_);
}
inline const ::stablehlo::quantization::StaticRangePtq& Method::static_range_ptq() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.Method.static_range_ptq)
  return _internal_static_range_ptq();
}
inline ::stablehlo::quantization::StaticRangePtq* Method::unsafe_arena_release_static_range_ptq() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.Method.static_range_ptq)
  if (method_case() == kStaticRangePtq) {
    clear_has_method();
    auto* temp = _impl_.method_.static_range_ptq_;
    _impl_.method_.static_range_ptq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_static_range_ptq(::stablehlo::quantization::StaticRangePtq* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_method();
  if (value) {
    set_has_static_range_ptq();
    _impl_.method_.static_range_ptq_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.Method.static_range_ptq)
}
inline ::stablehlo::quantization::StaticRangePtq* Method::_internal_mutable_static_range_ptq() {
  if (method_case() != kStaticRangePtq) {
    clear_method();
    set_has_static_range_ptq();
    _impl_.method_.static_range_ptq_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::StaticRangePtq>(GetArena());
  }
  return _impl_.method_.static_range_ptq_;
}
inline ::stablehlo::quantization::StaticRangePtq* Method::mutable_static_range_ptq() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::StaticRangePtq* _msg = _internal_mutable_static_range_ptq();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.Method.static_range_ptq)
  return _msg;
}

// .stablehlo.quantization.WeightOnlyPtq weight_only_ptq = 3;
inline bool Method::has_weight_only_ptq() const {
  return method_case() == kWeightOnlyPtq;
}
inline bool Method::_internal_has_weight_only_ptq() const {
  return method_case() == kWeightOnlyPtq;
}
inline void Method::set_has_weight_only_ptq() {
  _impl_._oneof_case_[0] = kWeightOnlyPtq;
}
inline void Method::clear_weight_only_ptq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (method_case() == kWeightOnlyPtq) {
    if (GetArena() == nullptr) {
      delete _impl_.method_.weight_only_ptq_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.method_.weight_only_ptq_);
    }
    clear_has_method();
  }
}
inline ::stablehlo::quantization::WeightOnlyPtq* Method::release_weight_only_ptq() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.Method.weight_only_ptq)
  if (method_case() == kWeightOnlyPtq) {
    clear_has_method();
    auto* temp = _impl_.method_.weight_only_ptq_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.method_.weight_only_ptq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::WeightOnlyPtq& Method::_internal_weight_only_ptq() const {
  return method_case() == kWeightOnlyPtq ? *_impl_.method_.weight_only_ptq_ : reinterpret_cast<::stablehlo::quantization::WeightOnlyPtq&>(::stablehlo::quantization::_WeightOnlyPtq_default_instance_);
}
inline const ::stablehlo::quantization::WeightOnlyPtq& Method::weight_only_ptq() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.Method.weight_only_ptq)
  return _internal_weight_only_ptq();
}
inline ::stablehlo::quantization::WeightOnlyPtq* Method::unsafe_arena_release_weight_only_ptq() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.Method.weight_only_ptq)
  if (method_case() == kWeightOnlyPtq) {
    clear_has_method();
    auto* temp = _impl_.method_.weight_only_ptq_;
    _impl_.method_.weight_only_ptq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_weight_only_ptq(::stablehlo::quantization::WeightOnlyPtq* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_method();
  if (value) {
    set_has_weight_only_ptq();
    _impl_.method_.weight_only_ptq_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.Method.weight_only_ptq)
}
inline ::stablehlo::quantization::WeightOnlyPtq* Method::_internal_mutable_weight_only_ptq() {
  if (method_case() != kWeightOnlyPtq) {
    clear_method();
    set_has_weight_only_ptq();
    _impl_.method_.weight_only_ptq_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::WeightOnlyPtq>(GetArena());
  }
  return _impl_.method_.weight_only_ptq_;
}
inline ::stablehlo::quantization::WeightOnlyPtq* Method::mutable_weight_only_ptq() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::WeightOnlyPtq* _msg = _internal_mutable_weight_only_ptq();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.Method.weight_only_ptq)
  return _msg;
}

inline bool Method::has_method() const {
  return method_case() != METHOD_NOT_SET;
}
inline void Method::clear_has_method() {
  _impl_._oneof_case_[0] = METHOD_NOT_SET;
}
inline Method::MethodCase Method::method_case() const {
  return Method::MethodCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QuantizationSpec

// .stablehlo.quantization.MatcherSpec matcher = 1;
inline bool QuantizationSpec::has_matcher() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.matcher_ != nullptr);
  return value;
}
inline void QuantizationSpec::clear_matcher() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.matcher_ != nullptr) _impl_.matcher_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::stablehlo::quantization::MatcherSpec& QuantizationSpec::_internal_matcher() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::MatcherSpec* p = _impl_.matcher_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::MatcherSpec&>(::stablehlo::quantization::_MatcherSpec_default_instance_);
}
inline const ::stablehlo::quantization::MatcherSpec& QuantizationSpec::matcher() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationSpec.matcher)
  return _internal_matcher();
}
inline void QuantizationSpec::unsafe_arena_set_allocated_matcher(::stablehlo::quantization::MatcherSpec* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.matcher_);
  }
  _impl_.matcher_ = reinterpret_cast<::stablehlo::quantization::MatcherSpec*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationSpec.matcher)
}
inline ::stablehlo::quantization::MatcherSpec* QuantizationSpec::release_matcher() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::MatcherSpec* released = _impl_.matcher_;
  _impl_.matcher_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::MatcherSpec* QuantizationSpec::unsafe_arena_release_matcher() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationSpec.matcher)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::MatcherSpec* temp = _impl_.matcher_;
  _impl_.matcher_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::MatcherSpec* QuantizationSpec::_internal_mutable_matcher() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.matcher_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::MatcherSpec>(GetArena());
    _impl_.matcher_ = reinterpret_cast<::stablehlo::quantization::MatcherSpec*>(p);
  }
  return _impl_.matcher_;
}
inline ::stablehlo::quantization::MatcherSpec* QuantizationSpec::mutable_matcher() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::stablehlo::quantization::MatcherSpec* _msg = _internal_mutable_matcher();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationSpec.matcher)
  return _msg;
}
inline void QuantizationSpec::set_allocated_matcher(::stablehlo::quantization::MatcherSpec* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.matcher_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.matcher_ = reinterpret_cast<::stablehlo::quantization::MatcherSpec*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationSpec.matcher)
}

// .stablehlo.quantization.Method method = 2;
inline bool QuantizationSpec::has_method() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.method_ != nullptr);
  return value;
}
inline void QuantizationSpec::clear_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.method_ != nullptr) _impl_.method_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::stablehlo::quantization::Method& QuantizationSpec::_internal_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::Method* p = _impl_.method_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::Method&>(::stablehlo::quantization::_Method_default_instance_);
}
inline const ::stablehlo::quantization::Method& QuantizationSpec::method() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationSpec.method)
  return _internal_method();
}
inline void QuantizationSpec::unsafe_arena_set_allocated_method(::stablehlo::quantization::Method* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.method_);
  }
  _impl_.method_ = reinterpret_cast<::stablehlo::quantization::Method*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationSpec.method)
}
inline ::stablehlo::quantization::Method* QuantizationSpec::release_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::stablehlo::quantization::Method* released = _impl_.method_;
  _impl_.method_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::Method* QuantizationSpec::unsafe_arena_release_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationSpec.method)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::stablehlo::quantization::Method* temp = _impl_.method_;
  _impl_.method_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::Method* QuantizationSpec::_internal_mutable_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.method_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::Method>(GetArena());
    _impl_.method_ = reinterpret_cast<::stablehlo::quantization::Method*>(p);
  }
  return _impl_.method_;
}
inline ::stablehlo::quantization::Method* QuantizationSpec::mutable_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::stablehlo::quantization::Method* _msg = _internal_mutable_method();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationSpec.method)
  return _msg;
}
inline void QuantizationSpec::set_allocated_method(::stablehlo::quantization::Method* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.method_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.method_ = reinterpret_cast<::stablehlo::quantization::Method*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationSpec.method)
}

// -------------------------------------------------------------------

// QuantizationSpecs

// repeated .stablehlo.quantization.QuantizationSpec specs = 1;
inline int QuantizationSpecs::_internal_specs_size() const {
  return _internal_specs().size();
}
inline int QuantizationSpecs::specs_size() const {
  return _internal_specs_size();
}
inline void QuantizationSpecs::clear_specs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.specs_.Clear();
}
inline ::stablehlo::quantization::QuantizationSpec* QuantizationSpecs::mutable_specs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationSpecs.specs)
  return _internal_mutable_specs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationSpec>* QuantizationSpecs::mutable_specs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:stablehlo.quantization.QuantizationSpecs.specs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_specs();
}
inline const ::stablehlo::quantization::QuantizationSpec& QuantizationSpecs::specs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationSpecs.specs)
  return _internal_specs().Get(index);
}
inline ::stablehlo::quantization::QuantizationSpec* QuantizationSpecs::add_specs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::stablehlo::quantization::QuantizationSpec* _add = _internal_mutable_specs()->Add();
  // @@protoc_insertion_point(field_add:stablehlo.quantization.QuantizationSpecs.specs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationSpec>& QuantizationSpecs::specs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:stablehlo.quantization.QuantizationSpecs.specs)
  return _internal_specs();
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationSpec>&
QuantizationSpecs::_internal_specs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.specs_;
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationSpec>*
QuantizationSpecs::_internal_mutable_specs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.specs_;
}

// -------------------------------------------------------------------

// DebuggerConfig

// .stablehlo.quantization.DebuggerConfig.DebuggerType debugger_type = 1;
inline void DebuggerConfig::clear_debugger_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.debugger_type_ = 0;
}
inline ::stablehlo::quantization::DebuggerConfig_DebuggerType DebuggerConfig::debugger_type() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.DebuggerConfig.debugger_type)
  return _internal_debugger_type();
}
inline void DebuggerConfig::set_debugger_type(::stablehlo::quantization::DebuggerConfig_DebuggerType value) {
  _internal_set_debugger_type(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.DebuggerConfig.debugger_type)
}
inline ::stablehlo::quantization::DebuggerConfig_DebuggerType DebuggerConfig::_internal_debugger_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stablehlo::quantization::DebuggerConfig_DebuggerType>(_impl_.debugger_type_);
}
inline void DebuggerConfig::_internal_set_debugger_type(::stablehlo::quantization::DebuggerConfig_DebuggerType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.debugger_type_ = value;
}

// string unquantized_dump_model_path = 2;
inline void DebuggerConfig::clear_unquantized_dump_model_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unquantized_dump_model_path_.ClearToEmpty();
}
inline const std::string& DebuggerConfig::unquantized_dump_model_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.DebuggerConfig.unquantized_dump_model_path)
  return _internal_unquantized_dump_model_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DebuggerConfig::set_unquantized_dump_model_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unquantized_dump_model_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stablehlo.quantization.DebuggerConfig.unquantized_dump_model_path)
}
inline std::string* DebuggerConfig::mutable_unquantized_dump_model_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_unquantized_dump_model_path();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.DebuggerConfig.unquantized_dump_model_path)
  return _s;
}
inline const std::string& DebuggerConfig::_internal_unquantized_dump_model_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unquantized_dump_model_path_.Get();
}
inline void DebuggerConfig::_internal_set_unquantized_dump_model_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unquantized_dump_model_path_.Set(value, GetArena());
}
inline std::string* DebuggerConfig::_internal_mutable_unquantized_dump_model_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.unquantized_dump_model_path_.Mutable( GetArena());
}
inline std::string* DebuggerConfig::release_unquantized_dump_model_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.DebuggerConfig.unquantized_dump_model_path)
  return _impl_.unquantized_dump_model_path_.Release();
}
inline void DebuggerConfig::set_allocated_unquantized_dump_model_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unquantized_dump_model_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.unquantized_dump_model_path_.IsDefault()) {
          _impl_.unquantized_dump_model_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.DebuggerConfig.unquantized_dump_model_path)
}

// string log_dir_path = 3;
inline void DebuggerConfig::clear_log_dir_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_dir_path_.ClearToEmpty();
}
inline const std::string& DebuggerConfig::log_dir_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.DebuggerConfig.log_dir_path)
  return _internal_log_dir_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DebuggerConfig::set_log_dir_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_dir_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stablehlo.quantization.DebuggerConfig.log_dir_path)
}
inline std::string* DebuggerConfig::mutable_log_dir_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_log_dir_path();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.DebuggerConfig.log_dir_path)
  return _s;
}
inline const std::string& DebuggerConfig::_internal_log_dir_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_dir_path_.Get();
}
inline void DebuggerConfig::_internal_set_log_dir_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_dir_path_.Set(value, GetArena());
}
inline std::string* DebuggerConfig::_internal_mutable_log_dir_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.log_dir_path_.Mutable( GetArena());
}
inline std::string* DebuggerConfig::release_log_dir_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.DebuggerConfig.log_dir_path)
  return _impl_.log_dir_path_.Release();
}
inline void DebuggerConfig::set_allocated_log_dir_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_dir_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.log_dir_path_.IsDefault()) {
          _impl_.log_dir_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.DebuggerConfig.log_dir_path)
}

// -------------------------------------------------------------------

// CalibrationOptions_CalibrationParameters

// int32 num_bins = 1;
inline void CalibrationOptions_CalibrationParameters::clear_num_bins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_bins_ = 0;
}
inline ::int32_t CalibrationOptions_CalibrationParameters::num_bins() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.CalibrationOptions.CalibrationParameters.num_bins)
  return _internal_num_bins();
}
inline void CalibrationOptions_CalibrationParameters::set_num_bins(::int32_t value) {
  _internal_set_num_bins(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.CalibrationOptions.CalibrationParameters.num_bins)
}
inline ::int32_t CalibrationOptions_CalibrationParameters::_internal_num_bins() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_bins_;
}
inline void CalibrationOptions_CalibrationParameters::_internal_set_num_bins(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_bins_ = value;
}

// float min_percentile = 2;
inline void CalibrationOptions_CalibrationParameters::clear_min_percentile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_percentile_ = 0;
}
inline float CalibrationOptions_CalibrationParameters::min_percentile() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.CalibrationOptions.CalibrationParameters.min_percentile)
  return _internal_min_percentile();
}
inline void CalibrationOptions_CalibrationParameters::set_min_percentile(float value) {
  _internal_set_min_percentile(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.CalibrationOptions.CalibrationParameters.min_percentile)
}
inline float CalibrationOptions_CalibrationParameters::_internal_min_percentile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_percentile_;
}
inline void CalibrationOptions_CalibrationParameters::_internal_set_min_percentile(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_percentile_ = value;
}

// float max_percentile = 3;
inline void CalibrationOptions_CalibrationParameters::clear_max_percentile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_percentile_ = 0;
}
inline float CalibrationOptions_CalibrationParameters::max_percentile() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.CalibrationOptions.CalibrationParameters.max_percentile)
  return _internal_max_percentile();
}
inline void CalibrationOptions_CalibrationParameters::set_max_percentile(float value) {
  _internal_set_max_percentile(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.CalibrationOptions.CalibrationParameters.max_percentile)
}
inline float CalibrationOptions_CalibrationParameters::_internal_max_percentile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_percentile_;
}
inline void CalibrationOptions_CalibrationParameters::_internal_set_max_percentile(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_percentile_ = value;
}

// -------------------------------------------------------------------

// CalibrationOptions

// .stablehlo.quantization.CalibrationOptions.CalibrationMethod calibration_method = 1;
inline void CalibrationOptions::clear_calibration_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calibration_method_ = 0;
}
inline ::stablehlo::quantization::CalibrationOptions_CalibrationMethod CalibrationOptions::calibration_method() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.CalibrationOptions.calibration_method)
  return _internal_calibration_method();
}
inline void CalibrationOptions::set_calibration_method(::stablehlo::quantization::CalibrationOptions_CalibrationMethod value) {
  _internal_set_calibration_method(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.CalibrationOptions.calibration_method)
}
inline ::stablehlo::quantization::CalibrationOptions_CalibrationMethod CalibrationOptions::_internal_calibration_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stablehlo::quantization::CalibrationOptions_CalibrationMethod>(_impl_.calibration_method_);
}
inline void CalibrationOptions::_internal_set_calibration_method(::stablehlo::quantization::CalibrationOptions_CalibrationMethod value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calibration_method_ = value;
}

// .stablehlo.quantization.CalibrationOptions.CalibrationParameters calibration_parameters = 2;
inline bool CalibrationOptions::has_calibration_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.calibration_parameters_ != nullptr);
  return value;
}
inline void CalibrationOptions::clear_calibration_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.calibration_parameters_ != nullptr) _impl_.calibration_parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::stablehlo::quantization::CalibrationOptions_CalibrationParameters& CalibrationOptions::_internal_calibration_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* p = _impl_.calibration_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::CalibrationOptions_CalibrationParameters&>(::stablehlo::quantization::_CalibrationOptions_CalibrationParameters_default_instance_);
}
inline const ::stablehlo::quantization::CalibrationOptions_CalibrationParameters& CalibrationOptions::calibration_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.CalibrationOptions.calibration_parameters)
  return _internal_calibration_parameters();
}
inline void CalibrationOptions::unsafe_arena_set_allocated_calibration_parameters(::stablehlo::quantization::CalibrationOptions_CalibrationParameters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.calibration_parameters_);
  }
  _impl_.calibration_parameters_ = reinterpret_cast<::stablehlo::quantization::CalibrationOptions_CalibrationParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.CalibrationOptions.calibration_parameters)
}
inline ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* CalibrationOptions::release_calibration_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* released = _impl_.calibration_parameters_;
  _impl_.calibration_parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* CalibrationOptions::unsafe_arena_release_calibration_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.CalibrationOptions.calibration_parameters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* temp = _impl_.calibration_parameters_;
  _impl_.calibration_parameters_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* CalibrationOptions::_internal_mutable_calibration_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.calibration_parameters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::CalibrationOptions_CalibrationParameters>(GetArena());
    _impl_.calibration_parameters_ = reinterpret_cast<::stablehlo::quantization::CalibrationOptions_CalibrationParameters*>(p);
  }
  return _impl_.calibration_parameters_;
}
inline ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* CalibrationOptions::mutable_calibration_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::stablehlo::quantization::CalibrationOptions_CalibrationParameters* _msg = _internal_mutable_calibration_parameters();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.CalibrationOptions.calibration_parameters)
  return _msg;
}
inline void CalibrationOptions::set_allocated_calibration_parameters(::stablehlo::quantization::CalibrationOptions_CalibrationParameters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.calibration_parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.calibration_parameters_ = reinterpret_cast<::stablehlo::quantization::CalibrationOptions_CalibrationParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.CalibrationOptions.calibration_parameters)
}

// repeated .stablehlo.quantization.RepresentativeDatasetConfig representative_datasets = 3;
inline int CalibrationOptions::_internal_representative_datasets_size() const {
  return _internal_representative_datasets().size();
}
inline int CalibrationOptions::representative_datasets_size() const {
  return _internal_representative_datasets_size();
}
inline void CalibrationOptions::clear_representative_datasets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.representative_datasets_.Clear();
}
inline ::stablehlo::quantization::RepresentativeDatasetConfig* CalibrationOptions::mutable_representative_datasets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.CalibrationOptions.representative_datasets)
  return _internal_mutable_representative_datasets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>* CalibrationOptions::mutable_representative_datasets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:stablehlo.quantization.CalibrationOptions.representative_datasets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_representative_datasets();
}
inline const ::stablehlo::quantization::RepresentativeDatasetConfig& CalibrationOptions::representative_datasets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.CalibrationOptions.representative_datasets)
  return _internal_representative_datasets().Get(index);
}
inline ::stablehlo::quantization::RepresentativeDatasetConfig* CalibrationOptions::add_representative_datasets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::stablehlo::quantization::RepresentativeDatasetConfig* _add = _internal_mutable_representative_datasets()->Add();
  // @@protoc_insertion_point(field_add:stablehlo.quantization.CalibrationOptions.representative_datasets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>& CalibrationOptions::representative_datasets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:stablehlo.quantization.CalibrationOptions.representative_datasets)
  return _internal_representative_datasets();
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>&
CalibrationOptions::_internal_representative_datasets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.representative_datasets_;
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::RepresentativeDatasetConfig>*
CalibrationOptions::_internal_mutable_representative_datasets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.representative_datasets_;
}

// string calibration_data_dir = 4;
inline void CalibrationOptions::clear_calibration_data_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calibration_data_dir_.ClearToEmpty();
}
inline const std::string& CalibrationOptions::calibration_data_dir() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.CalibrationOptions.calibration_data_dir)
  return _internal_calibration_data_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CalibrationOptions::set_calibration_data_dir(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calibration_data_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stablehlo.quantization.CalibrationOptions.calibration_data_dir)
}
inline std::string* CalibrationOptions::mutable_calibration_data_dir() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_calibration_data_dir();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.CalibrationOptions.calibration_data_dir)
  return _s;
}
inline const std::string& CalibrationOptions::_internal_calibration_data_dir() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.calibration_data_dir_.Get();
}
inline void CalibrationOptions::_internal_set_calibration_data_dir(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calibration_data_dir_.Set(value, GetArena());
}
inline std::string* CalibrationOptions::_internal_mutable_calibration_data_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.calibration_data_dir_.Mutable( GetArena());
}
inline std::string* CalibrationOptions::release_calibration_data_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.CalibrationOptions.calibration_data_dir)
  return _impl_.calibration_data_dir_.Release();
}
inline void CalibrationOptions::set_allocated_calibration_data_dir(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calibration_data_dir_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.calibration_data_dir_.IsDefault()) {
          _impl_.calibration_data_dir_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.CalibrationOptions.calibration_data_dir)
}

// bool force_regenerate_calibration_data = 5;
inline void CalibrationOptions::clear_force_regenerate_calibration_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_regenerate_calibration_data_ = false;
}
inline bool CalibrationOptions::force_regenerate_calibration_data() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.CalibrationOptions.force_regenerate_calibration_data)
  return _internal_force_regenerate_calibration_data();
}
inline void CalibrationOptions::set_force_regenerate_calibration_data(bool value) {
  _internal_set_force_regenerate_calibration_data(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.CalibrationOptions.force_regenerate_calibration_data)
}
inline bool CalibrationOptions::_internal_force_regenerate_calibration_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.force_regenerate_calibration_data_;
}
inline void CalibrationOptions::_internal_set_force_regenerate_calibration_data(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_regenerate_calibration_data_ = value;
}

// -------------------------------------------------------------------

// QuantizationConfig

// .stablehlo.quantization.StaticRangePtqPreset static_range_ptq_preset = 1;
inline bool QuantizationConfig::has_static_range_ptq_preset() const {
  return preset_case() == kStaticRangePtqPreset;
}
inline bool QuantizationConfig::_internal_has_static_range_ptq_preset() const {
  return preset_case() == kStaticRangePtqPreset;
}
inline void QuantizationConfig::set_has_static_range_ptq_preset() {
  _impl_._oneof_case_[0] = kStaticRangePtqPreset;
}
inline void QuantizationConfig::clear_static_range_ptq_preset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (preset_case() == kStaticRangePtqPreset) {
    if (GetArena() == nullptr) {
      delete _impl_.preset_.static_range_ptq_preset_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.preset_.static_range_ptq_preset_);
    }
    clear_has_preset();
  }
}
inline ::stablehlo::quantization::StaticRangePtqPreset* QuantizationConfig::release_static_range_ptq_preset() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationConfig.static_range_ptq_preset)
  if (preset_case() == kStaticRangePtqPreset) {
    clear_has_preset();
    auto* temp = _impl_.preset_.static_range_ptq_preset_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.preset_.static_range_ptq_preset_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::StaticRangePtqPreset& QuantizationConfig::_internal_static_range_ptq_preset() const {
  return preset_case() == kStaticRangePtqPreset ? *_impl_.preset_.static_range_ptq_preset_ : reinterpret_cast<::stablehlo::quantization::StaticRangePtqPreset&>(::stablehlo::quantization::_StaticRangePtqPreset_default_instance_);
}
inline const ::stablehlo::quantization::StaticRangePtqPreset& QuantizationConfig::static_range_ptq_preset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationConfig.static_range_ptq_preset)
  return _internal_static_range_ptq_preset();
}
inline ::stablehlo::quantization::StaticRangePtqPreset* QuantizationConfig::unsafe_arena_release_static_range_ptq_preset() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.QuantizationConfig.static_range_ptq_preset)
  if (preset_case() == kStaticRangePtqPreset) {
    clear_has_preset();
    auto* temp = _impl_.preset_.static_range_ptq_preset_;
    _impl_.preset_.static_range_ptq_preset_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QuantizationConfig::unsafe_arena_set_allocated_static_range_ptq_preset(::stablehlo::quantization::StaticRangePtqPreset* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_preset();
  if (value) {
    set_has_static_range_ptq_preset();
    _impl_.preset_.static_range_ptq_preset_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationConfig.static_range_ptq_preset)
}
inline ::stablehlo::quantization::StaticRangePtqPreset* QuantizationConfig::_internal_mutable_static_range_ptq_preset() {
  if (preset_case() != kStaticRangePtqPreset) {
    clear_preset();
    set_has_static_range_ptq_preset();
    _impl_.preset_.static_range_ptq_preset_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::StaticRangePtqPreset>(GetArena());
  }
  return _impl_.preset_.static_range_ptq_preset_;
}
inline ::stablehlo::quantization::StaticRangePtqPreset* QuantizationConfig::mutable_static_range_ptq_preset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::StaticRangePtqPreset* _msg = _internal_mutable_static_range_ptq_preset();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationConfig.static_range_ptq_preset)
  return _msg;
}

// .stablehlo.quantization.WeightOnlyPtqPreset weight_only_ptq_preset = 7;
inline bool QuantizationConfig::has_weight_only_ptq_preset() const {
  return preset_case() == kWeightOnlyPtqPreset;
}
inline bool QuantizationConfig::_internal_has_weight_only_ptq_preset() const {
  return preset_case() == kWeightOnlyPtqPreset;
}
inline void QuantizationConfig::set_has_weight_only_ptq_preset() {
  _impl_._oneof_case_[0] = kWeightOnlyPtqPreset;
}
inline void QuantizationConfig::clear_weight_only_ptq_preset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (preset_case() == kWeightOnlyPtqPreset) {
    if (GetArena() == nullptr) {
      delete _impl_.preset_.weight_only_ptq_preset_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.preset_.weight_only_ptq_preset_);
    }
    clear_has_preset();
  }
}
inline ::stablehlo::quantization::WeightOnlyPtqPreset* QuantizationConfig::release_weight_only_ptq_preset() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationConfig.weight_only_ptq_preset)
  if (preset_case() == kWeightOnlyPtqPreset) {
    clear_has_preset();
    auto* temp = _impl_.preset_.weight_only_ptq_preset_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.preset_.weight_only_ptq_preset_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::WeightOnlyPtqPreset& QuantizationConfig::_internal_weight_only_ptq_preset() const {
  return preset_case() == kWeightOnlyPtqPreset ? *_impl_.preset_.weight_only_ptq_preset_ : reinterpret_cast<::stablehlo::quantization::WeightOnlyPtqPreset&>(::stablehlo::quantization::_WeightOnlyPtqPreset_default_instance_);
}
inline const ::stablehlo::quantization::WeightOnlyPtqPreset& QuantizationConfig::weight_only_ptq_preset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationConfig.weight_only_ptq_preset)
  return _internal_weight_only_ptq_preset();
}
inline ::stablehlo::quantization::WeightOnlyPtqPreset* QuantizationConfig::unsafe_arena_release_weight_only_ptq_preset() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.QuantizationConfig.weight_only_ptq_preset)
  if (preset_case() == kWeightOnlyPtqPreset) {
    clear_has_preset();
    auto* temp = _impl_.preset_.weight_only_ptq_preset_;
    _impl_.preset_.weight_only_ptq_preset_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QuantizationConfig::unsafe_arena_set_allocated_weight_only_ptq_preset(::stablehlo::quantization::WeightOnlyPtqPreset* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_preset();
  if (value) {
    set_has_weight_only_ptq_preset();
    _impl_.preset_.weight_only_ptq_preset_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationConfig.weight_only_ptq_preset)
}
inline ::stablehlo::quantization::WeightOnlyPtqPreset* QuantizationConfig::_internal_mutable_weight_only_ptq_preset() {
  if (preset_case() != kWeightOnlyPtqPreset) {
    clear_preset();
    set_has_weight_only_ptq_preset();
    _impl_.preset_.weight_only_ptq_preset_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::WeightOnlyPtqPreset>(GetArena());
  }
  return _impl_.preset_.weight_only_ptq_preset_;
}
inline ::stablehlo::quantization::WeightOnlyPtqPreset* QuantizationConfig::mutable_weight_only_ptq_preset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::WeightOnlyPtqPreset* _msg = _internal_mutable_weight_only_ptq_preset();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationConfig.weight_only_ptq_preset)
  return _msg;
}

// .stablehlo.quantization.TfSavedModelConfig tf_saved_model = 2;
inline bool QuantizationConfig::has_tf_saved_model() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tf_saved_model_ != nullptr);
  return value;
}
inline void QuantizationConfig::clear_tf_saved_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tf_saved_model_ != nullptr) _impl_.tf_saved_model_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::stablehlo::quantization::TfSavedModelConfig& QuantizationConfig::_internal_tf_saved_model() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::TfSavedModelConfig* p = _impl_.tf_saved_model_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::TfSavedModelConfig&>(::stablehlo::quantization::_TfSavedModelConfig_default_instance_);
}
inline const ::stablehlo::quantization::TfSavedModelConfig& QuantizationConfig::tf_saved_model() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationConfig.tf_saved_model)
  return _internal_tf_saved_model();
}
inline void QuantizationConfig::unsafe_arena_set_allocated_tf_saved_model(::stablehlo::quantization::TfSavedModelConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tf_saved_model_);
  }
  _impl_.tf_saved_model_ = reinterpret_cast<::stablehlo::quantization::TfSavedModelConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationConfig.tf_saved_model)
}
inline ::stablehlo::quantization::TfSavedModelConfig* QuantizationConfig::release_tf_saved_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::stablehlo::quantization::TfSavedModelConfig* released = _impl_.tf_saved_model_;
  _impl_.tf_saved_model_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::TfSavedModelConfig* QuantizationConfig::unsafe_arena_release_tf_saved_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationConfig.tf_saved_model)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::stablehlo::quantization::TfSavedModelConfig* temp = _impl_.tf_saved_model_;
  _impl_.tf_saved_model_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::TfSavedModelConfig* QuantizationConfig::_internal_mutable_tf_saved_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tf_saved_model_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::TfSavedModelConfig>(GetArena());
    _impl_.tf_saved_model_ = reinterpret_cast<::stablehlo::quantization::TfSavedModelConfig*>(p);
  }
  return _impl_.tf_saved_model_;
}
inline ::stablehlo::quantization::TfSavedModelConfig* QuantizationConfig::mutable_tf_saved_model() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::stablehlo::quantization::TfSavedModelConfig* _msg = _internal_mutable_tf_saved_model();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationConfig.tf_saved_model)
  return _msg;
}
inline void QuantizationConfig::set_allocated_tf_saved_model(::stablehlo::quantization::TfSavedModelConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.tf_saved_model_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.tf_saved_model_ = reinterpret_cast<::stablehlo::quantization::TfSavedModelConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationConfig.tf_saved_model)
}

// .stablehlo.quantization.PipelineConfig pipeline_config = 3;
inline bool QuantizationConfig::has_pipeline_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pipeline_config_ != nullptr);
  return value;
}
inline void QuantizationConfig::clear_pipeline_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pipeline_config_ != nullptr) _impl_.pipeline_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::stablehlo::quantization::PipelineConfig& QuantizationConfig::_internal_pipeline_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::PipelineConfig* p = _impl_.pipeline_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::PipelineConfig&>(::stablehlo::quantization::_PipelineConfig_default_instance_);
}
inline const ::stablehlo::quantization::PipelineConfig& QuantizationConfig::pipeline_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationConfig.pipeline_config)
  return _internal_pipeline_config();
}
inline void QuantizationConfig::unsafe_arena_set_allocated_pipeline_config(::stablehlo::quantization::PipelineConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pipeline_config_);
  }
  _impl_.pipeline_config_ = reinterpret_cast<::stablehlo::quantization::PipelineConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationConfig.pipeline_config)
}
inline ::stablehlo::quantization::PipelineConfig* QuantizationConfig::release_pipeline_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::stablehlo::quantization::PipelineConfig* released = _impl_.pipeline_config_;
  _impl_.pipeline_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::PipelineConfig* QuantizationConfig::unsafe_arena_release_pipeline_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationConfig.pipeline_config)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::stablehlo::quantization::PipelineConfig* temp = _impl_.pipeline_config_;
  _impl_.pipeline_config_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::PipelineConfig* QuantizationConfig::_internal_mutable_pipeline_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pipeline_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::PipelineConfig>(GetArena());
    _impl_.pipeline_config_ = reinterpret_cast<::stablehlo::quantization::PipelineConfig*>(p);
  }
  return _impl_.pipeline_config_;
}
inline ::stablehlo::quantization::PipelineConfig* QuantizationConfig::mutable_pipeline_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::stablehlo::quantization::PipelineConfig* _msg = _internal_mutable_pipeline_config();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationConfig.pipeline_config)
  return _msg;
}
inline void QuantizationConfig::set_allocated_pipeline_config(::stablehlo::quantization::PipelineConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pipeline_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pipeline_config_ = reinterpret_cast<::stablehlo::quantization::PipelineConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationConfig.pipeline_config)
}

// .stablehlo.quantization.QuantizationSpecs specs = 4;
inline bool QuantizationConfig::has_specs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.specs_ != nullptr);
  return value;
}
inline void QuantizationConfig::clear_specs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.specs_ != nullptr) _impl_.specs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::stablehlo::quantization::QuantizationSpecs& QuantizationConfig::_internal_specs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::QuantizationSpecs* p = _impl_.specs_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::QuantizationSpecs&>(::stablehlo::quantization::_QuantizationSpecs_default_instance_);
}
inline const ::stablehlo::quantization::QuantizationSpecs& QuantizationConfig::specs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationConfig.specs)
  return _internal_specs();
}
inline void QuantizationConfig::unsafe_arena_set_allocated_specs(::stablehlo::quantization::QuantizationSpecs* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.specs_);
  }
  _impl_.specs_ = reinterpret_cast<::stablehlo::quantization::QuantizationSpecs*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationConfig.specs)
}
inline ::stablehlo::quantization::QuantizationSpecs* QuantizationConfig::release_specs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::stablehlo::quantization::QuantizationSpecs* released = _impl_.specs_;
  _impl_.specs_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::QuantizationSpecs* QuantizationConfig::unsafe_arena_release_specs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationConfig.specs)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::stablehlo::quantization::QuantizationSpecs* temp = _impl_.specs_;
  _impl_.specs_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::QuantizationSpecs* QuantizationConfig::_internal_mutable_specs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.specs_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::QuantizationSpecs>(GetArena());
    _impl_.specs_ = reinterpret_cast<::stablehlo::quantization::QuantizationSpecs*>(p);
  }
  return _impl_.specs_;
}
inline ::stablehlo::quantization::QuantizationSpecs* QuantizationConfig::mutable_specs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::stablehlo::quantization::QuantizationSpecs* _msg = _internal_mutable_specs();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationConfig.specs)
  return _msg;
}
inline void QuantizationConfig::set_allocated_specs(::stablehlo::quantization::QuantizationSpecs* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.specs_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.specs_ = reinterpret_cast<::stablehlo::quantization::QuantizationSpecs*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationConfig.specs)
}

// .stablehlo.quantization.DebuggerConfig debugger_config = 5;
inline bool QuantizationConfig::has_debugger_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.debugger_config_ != nullptr);
  return value;
}
inline void QuantizationConfig::clear_debugger_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.debugger_config_ != nullptr) _impl_.debugger_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::stablehlo::quantization::DebuggerConfig& QuantizationConfig::_internal_debugger_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::DebuggerConfig* p = _impl_.debugger_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::DebuggerConfig&>(::stablehlo::quantization::_DebuggerConfig_default_instance_);
}
inline const ::stablehlo::quantization::DebuggerConfig& QuantizationConfig::debugger_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationConfig.debugger_config)
  return _internal_debugger_config();
}
inline void QuantizationConfig::unsafe_arena_set_allocated_debugger_config(::stablehlo::quantization::DebuggerConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.debugger_config_);
  }
  _impl_.debugger_config_ = reinterpret_cast<::stablehlo::quantization::DebuggerConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationConfig.debugger_config)
}
inline ::stablehlo::quantization::DebuggerConfig* QuantizationConfig::release_debugger_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::stablehlo::quantization::DebuggerConfig* released = _impl_.debugger_config_;
  _impl_.debugger_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::DebuggerConfig* QuantizationConfig::unsafe_arena_release_debugger_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationConfig.debugger_config)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::stablehlo::quantization::DebuggerConfig* temp = _impl_.debugger_config_;
  _impl_.debugger_config_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::DebuggerConfig* QuantizationConfig::_internal_mutable_debugger_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.debugger_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::DebuggerConfig>(GetArena());
    _impl_.debugger_config_ = reinterpret_cast<::stablehlo::quantization::DebuggerConfig*>(p);
  }
  return _impl_.debugger_config_;
}
inline ::stablehlo::quantization::DebuggerConfig* QuantizationConfig::mutable_debugger_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::stablehlo::quantization::DebuggerConfig* _msg = _internal_mutable_debugger_config();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationConfig.debugger_config)
  return _msg;
}
inline void QuantizationConfig::set_allocated_debugger_config(::stablehlo::quantization::DebuggerConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.debugger_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.debugger_config_ = reinterpret_cast<::stablehlo::quantization::DebuggerConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationConfig.debugger_config)
}

// .stablehlo.quantization.CalibrationOptions calibration_options = 6;
inline bool QuantizationConfig::has_calibration_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.calibration_options_ != nullptr);
  return value;
}
inline void QuantizationConfig::clear_calibration_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.calibration_options_ != nullptr) _impl_.calibration_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::stablehlo::quantization::CalibrationOptions& QuantizationConfig::_internal_calibration_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::CalibrationOptions* p = _impl_.calibration_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::CalibrationOptions&>(::stablehlo::quantization::_CalibrationOptions_default_instance_);
}
inline const ::stablehlo::quantization::CalibrationOptions& QuantizationConfig::calibration_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationConfig.calibration_options)
  return _internal_calibration_options();
}
inline void QuantizationConfig::unsafe_arena_set_allocated_calibration_options(::stablehlo::quantization::CalibrationOptions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.calibration_options_);
  }
  _impl_.calibration_options_ = reinterpret_cast<::stablehlo::quantization::CalibrationOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationConfig.calibration_options)
}
inline ::stablehlo::quantization::CalibrationOptions* QuantizationConfig::release_calibration_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::stablehlo::quantization::CalibrationOptions* released = _impl_.calibration_options_;
  _impl_.calibration_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::CalibrationOptions* QuantizationConfig::unsafe_arena_release_calibration_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationConfig.calibration_options)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::stablehlo::quantization::CalibrationOptions* temp = _impl_.calibration_options_;
  _impl_.calibration_options_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::CalibrationOptions* QuantizationConfig::_internal_mutable_calibration_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.calibration_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::CalibrationOptions>(GetArena());
    _impl_.calibration_options_ = reinterpret_cast<::stablehlo::quantization::CalibrationOptions*>(p);
  }
  return _impl_.calibration_options_;
}
inline ::stablehlo::quantization::CalibrationOptions* QuantizationConfig::mutable_calibration_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::stablehlo::quantization::CalibrationOptions* _msg = _internal_mutable_calibration_options();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationConfig.calibration_options)
  return _msg;
}
inline void QuantizationConfig::set_allocated_calibration_options(::stablehlo::quantization::CalibrationOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.calibration_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.calibration_options_ = reinterpret_cast<::stablehlo::quantization::CalibrationOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationConfig.calibration_options)
}

// optional string report_file_path = 8;
inline bool QuantizationConfig::has_report_file_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void QuantizationConfig::clear_report_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_file_path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& QuantizationConfig::report_file_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationConfig.report_file_path)
  return _internal_report_file_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QuantizationConfig::set_report_file_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.report_file_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stablehlo.quantization.QuantizationConfig.report_file_path)
}
inline std::string* QuantizationConfig::mutable_report_file_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_report_file_path();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationConfig.report_file_path)
  return _s;
}
inline const std::string& QuantizationConfig::_internal_report_file_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.report_file_path_.Get();
}
inline void QuantizationConfig::_internal_set_report_file_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.report_file_path_.Set(value, GetArena());
}
inline std::string* QuantizationConfig::_internal_mutable_report_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.report_file_path_.Mutable( GetArena());
}
inline std::string* QuantizationConfig::release_report_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationConfig.report_file_path)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.report_file_path_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.report_file_path_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void QuantizationConfig::set_allocated_report_file_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.report_file_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.report_file_path_.IsDefault()) {
          _impl_.report_file_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationConfig.report_file_path)
}

inline bool QuantizationConfig::has_preset() const {
  return preset_case() != PRESET_NOT_SET;
}
inline void QuantizationConfig::clear_has_preset() {
  _impl_._oneof_case_[0] = PRESET_NOT_SET;
}
inline QuantizationConfig::PresetCase QuantizationConfig::preset_case() const {
  return QuantizationConfig::PresetCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace quantization
}  // namespace stablehlo


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::stablehlo::quantization::DebuggerConfig_DebuggerType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::stablehlo::quantization::DebuggerConfig_DebuggerType>() {
  return ::stablehlo::quantization::DebuggerConfig_DebuggerType_descriptor();
}
template <>
struct is_proto_enum<::stablehlo::quantization::CalibrationOptions_CalibrationMethod> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::stablehlo::quantization::CalibrationOptions_CalibrationMethod>() {
  return ::stablehlo::quantization::CalibrationOptions_CalibrationMethod_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5fconfig_2eproto_2epb_2eh
