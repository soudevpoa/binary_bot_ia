// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/compiler/mlir/quantization/stablehlo/quantization_options.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto;
namespace stablehlo {
namespace quantization {
class CustomQuantizationMethod;
struct CustomQuantizationMethodDefaultTypeInternal;
PROTOBUF_EXPORT extern CustomQuantizationMethodDefaultTypeInternal _CustomQuantizationMethod_default_instance_;
class PresetQuantizationMethod;
struct PresetQuantizationMethodDefaultTypeInternal;
PROTOBUF_EXPORT extern PresetQuantizationMethodDefaultTypeInternal _PresetQuantizationMethod_default_instance_;
class QuantizationComponentSpec;
struct QuantizationComponentSpecDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizationComponentSpecDefaultTypeInternal _QuantizationComponentSpec_default_instance_;
class QuantizationMethod;
struct QuantizationMethodDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizationMethodDefaultTypeInternal _QuantizationMethod_default_instance_;
class QuantizationOptions;
struct QuantizationOptionsDefaultTypeInternal;
PROTOBUF_EXPORT extern QuantizationOptionsDefaultTypeInternal _QuantizationOptions_default_instance_;
}  // namespace quantization
}  // namespace stablehlo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace stablehlo {
namespace quantization {
enum PresetQuantizationMethod_PresetMethod : int {
  PresetQuantizationMethod_PresetMethod_METHOD_UNSPECIFIED = 0,
  PresetQuantizationMethod_PresetMethod_WEIGHT_ONLY = 1,
  PresetQuantizationMethod_PresetMethod_POST_TRAINING_QUANTIZATION_DYNAMIC_RANGE = 2,
  PresetQuantizationMethod_PresetMethod_FLOAT16 = 3,
  PresetQuantizationMethod_PresetMethod_POST_TRAINING_QUANTIZATION_STATIC_RANGE = 4,
  PresetQuantizationMethod_PresetMethod_PresetQuantizationMethod_PresetMethod_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PresetQuantizationMethod_PresetMethod_PresetQuantizationMethod_PresetMethod_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool PresetQuantizationMethod_PresetMethod_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t PresetQuantizationMethod_PresetMethod_internal_data_[];
constexpr PresetQuantizationMethod_PresetMethod PresetQuantizationMethod_PresetMethod_PresetMethod_MIN = static_cast<PresetQuantizationMethod_PresetMethod>(0);
constexpr PresetQuantizationMethod_PresetMethod PresetQuantizationMethod_PresetMethod_PresetMethod_MAX = static_cast<PresetQuantizationMethod_PresetMethod>(4);
constexpr int PresetQuantizationMethod_PresetMethod_PresetMethod_ARRAYSIZE = 4 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
PresetQuantizationMethod_PresetMethod_descriptor();
template <typename T>
const std::string& PresetQuantizationMethod_PresetMethod_Name(T value) {
  static_assert(std::is_same<T, PresetQuantizationMethod_PresetMethod>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PresetMethod_Name().");
  return PresetQuantizationMethod_PresetMethod_Name(static_cast<PresetQuantizationMethod_PresetMethod>(value));
}
template <>
inline const std::string& PresetQuantizationMethod_PresetMethod_Name(PresetQuantizationMethod_PresetMethod value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PresetQuantizationMethod_PresetMethod_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool PresetQuantizationMethod_PresetMethod_Parse(absl::string_view name, PresetQuantizationMethod_PresetMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PresetQuantizationMethod_PresetMethod>(
      PresetQuantizationMethod_PresetMethod_descriptor(), name, value);
}
enum QuantizationComponentSpec_QuantizationComponent : int {
  QuantizationComponentSpec_QuantizationComponent_COMPONENT_UNSPECIFIED = 0,
  QuantizationComponentSpec_QuantizationComponent_COMPONENT_ACTIVATION = 1,
  QuantizationComponentSpec_QuantizationComponent_COMPONENT_WEIGHT = 2,
  QuantizationComponentSpec_QuantizationComponent_COMPONENT_BIAS = 3,
  QuantizationComponentSpec_QuantizationComponent_QuantizationComponentSpec_QuantizationComponent_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  QuantizationComponentSpec_QuantizationComponent_QuantizationComponentSpec_QuantizationComponent_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool QuantizationComponentSpec_QuantizationComponent_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t QuantizationComponentSpec_QuantizationComponent_internal_data_[];
constexpr QuantizationComponentSpec_QuantizationComponent QuantizationComponentSpec_QuantizationComponent_QuantizationComponent_MIN = static_cast<QuantizationComponentSpec_QuantizationComponent>(0);
constexpr QuantizationComponentSpec_QuantizationComponent QuantizationComponentSpec_QuantizationComponent_QuantizationComponent_MAX = static_cast<QuantizationComponentSpec_QuantizationComponent>(3);
constexpr int QuantizationComponentSpec_QuantizationComponent_QuantizationComponent_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
QuantizationComponentSpec_QuantizationComponent_descriptor();
template <typename T>
const std::string& QuantizationComponentSpec_QuantizationComponent_Name(T value) {
  static_assert(std::is_same<T, QuantizationComponentSpec_QuantizationComponent>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to QuantizationComponent_Name().");
  return QuantizationComponentSpec_QuantizationComponent_Name(static_cast<QuantizationComponentSpec_QuantizationComponent>(value));
}
template <>
inline const std::string& QuantizationComponentSpec_QuantizationComponent_Name(QuantizationComponentSpec_QuantizationComponent value) {
  return ::google::protobuf::internal::NameOfDenseEnum<QuantizationComponentSpec_QuantizationComponent_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool QuantizationComponentSpec_QuantizationComponent_Parse(absl::string_view name, QuantizationComponentSpec_QuantizationComponent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuantizationComponentSpec_QuantizationComponent>(
      QuantizationComponentSpec_QuantizationComponent_descriptor(), name, value);
}
enum QuantizationComponentSpec_BitWidth : int {
  QuantizationComponentSpec_BitWidth_BIT_WIDTH_UNSPECIFIED = 0,
  QuantizationComponentSpec_BitWidth_BIT_WIDTH_4 = 1,
  QuantizationComponentSpec_BitWidth_BIT_WIDTH_8 = 2,
  QuantizationComponentSpec_BitWidth_BIT_WIDTH_16 = 3,
  QuantizationComponentSpec_BitWidth_BIT_WIDTH_32 = 4,
  QuantizationComponentSpec_BitWidth_QuantizationComponentSpec_BitWidth_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  QuantizationComponentSpec_BitWidth_QuantizationComponentSpec_BitWidth_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool QuantizationComponentSpec_BitWidth_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t QuantizationComponentSpec_BitWidth_internal_data_[];
constexpr QuantizationComponentSpec_BitWidth QuantizationComponentSpec_BitWidth_BitWidth_MIN = static_cast<QuantizationComponentSpec_BitWidth>(0);
constexpr QuantizationComponentSpec_BitWidth QuantizationComponentSpec_BitWidth_BitWidth_MAX = static_cast<QuantizationComponentSpec_BitWidth>(4);
constexpr int QuantizationComponentSpec_BitWidth_BitWidth_ARRAYSIZE = 4 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
QuantizationComponentSpec_BitWidth_descriptor();
template <typename T>
const std::string& QuantizationComponentSpec_BitWidth_Name(T value) {
  static_assert(std::is_same<T, QuantizationComponentSpec_BitWidth>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BitWidth_Name().");
  return QuantizationComponentSpec_BitWidth_Name(static_cast<QuantizationComponentSpec_BitWidth>(value));
}
template <>
inline const std::string& QuantizationComponentSpec_BitWidth_Name(QuantizationComponentSpec_BitWidth value) {
  return ::google::protobuf::internal::NameOfDenseEnum<QuantizationComponentSpec_BitWidth_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool QuantizationComponentSpec_BitWidth_Parse(absl::string_view name, QuantizationComponentSpec_BitWidth* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuantizationComponentSpec_BitWidth>(
      QuantizationComponentSpec_BitWidth_descriptor(), name, value);
}
enum QuantizationComponentSpec_BitType : int {
  QuantizationComponentSpec_BitType_BIT_TYPE_UNSPECIFIED = 0,
  QuantizationComponentSpec_BitType_BIT_TYPE_INT = 1,
  QuantizationComponentSpec_BitType_BIT_TYPE_FLOAT = 2,
  QuantizationComponentSpec_BitType_BIT_TYPE_BFLOAT = 3,
  QuantizationComponentSpec_BitType_QuantizationComponentSpec_BitType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  QuantizationComponentSpec_BitType_QuantizationComponentSpec_BitType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool QuantizationComponentSpec_BitType_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t QuantizationComponentSpec_BitType_internal_data_[];
constexpr QuantizationComponentSpec_BitType QuantizationComponentSpec_BitType_BitType_MIN = static_cast<QuantizationComponentSpec_BitType>(0);
constexpr QuantizationComponentSpec_BitType QuantizationComponentSpec_BitType_BitType_MAX = static_cast<QuantizationComponentSpec_BitType>(3);
constexpr int QuantizationComponentSpec_BitType_BitType_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
QuantizationComponentSpec_BitType_descriptor();
template <typename T>
const std::string& QuantizationComponentSpec_BitType_Name(T value) {
  static_assert(std::is_same<T, QuantizationComponentSpec_BitType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BitType_Name().");
  return QuantizationComponentSpec_BitType_Name(static_cast<QuantizationComponentSpec_BitType>(value));
}
template <>
inline const std::string& QuantizationComponentSpec_BitType_Name(QuantizationComponentSpec_BitType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<QuantizationComponentSpec_BitType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool QuantizationComponentSpec_BitType_Parse(absl::string_view name, QuantizationComponentSpec_BitType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuantizationComponentSpec_BitType>(
      QuantizationComponentSpec_BitType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizationComponentSpec final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizationComponentSpec) */ {
 public:
  inline QuantizationComponentSpec() : QuantizationComponentSpec(nullptr) {}
  ~QuantizationComponentSpec() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizationComponentSpec(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizationComponentSpec(const QuantizationComponentSpec& from) : QuantizationComponentSpec(nullptr, from) {}
  inline QuantizationComponentSpec(QuantizationComponentSpec&& from) noexcept
      : QuantizationComponentSpec(nullptr, std::move(from)) {}
  inline QuantizationComponentSpec& operator=(const QuantizationComponentSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizationComponentSpec& operator=(QuantizationComponentSpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizationComponentSpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuantizationComponentSpec* internal_default_instance() {
    return reinterpret_cast<const QuantizationComponentSpec*>(
        &_QuantizationComponentSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QuantizationComponentSpec& a, QuantizationComponentSpec& b) { a.Swap(&b); }
  inline void Swap(QuantizationComponentSpec* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizationComponentSpec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizationComponentSpec* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizationComponentSpec>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizationComponentSpec& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizationComponentSpec& from) { QuantizationComponentSpec::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizationComponentSpec* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizationComponentSpec"; }

 protected:
  explicit QuantizationComponentSpec(::google::protobuf::Arena* arena);
  QuantizationComponentSpec(::google::protobuf::Arena* arena, const QuantizationComponentSpec& from);
  QuantizationComponentSpec(::google::protobuf::Arena* arena, QuantizationComponentSpec&& from) noexcept
      : QuantizationComponentSpec(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using QuantizationComponent = QuantizationComponentSpec_QuantizationComponent;
  static constexpr QuantizationComponent COMPONENT_UNSPECIFIED = QuantizationComponentSpec_QuantizationComponent_COMPONENT_UNSPECIFIED;
  static constexpr QuantizationComponent COMPONENT_ACTIVATION = QuantizationComponentSpec_QuantizationComponent_COMPONENT_ACTIVATION;
  static constexpr QuantizationComponent COMPONENT_WEIGHT = QuantizationComponentSpec_QuantizationComponent_COMPONENT_WEIGHT;
  static constexpr QuantizationComponent COMPONENT_BIAS = QuantizationComponentSpec_QuantizationComponent_COMPONENT_BIAS;
  static inline bool QuantizationComponent_IsValid(int value) {
    return QuantizationComponentSpec_QuantizationComponent_IsValid(value);
  }
  static constexpr QuantizationComponent QuantizationComponent_MIN = QuantizationComponentSpec_QuantizationComponent_QuantizationComponent_MIN;
  static constexpr QuantizationComponent QuantizationComponent_MAX = QuantizationComponentSpec_QuantizationComponent_QuantizationComponent_MAX;
  static constexpr int QuantizationComponent_ARRAYSIZE = QuantizationComponentSpec_QuantizationComponent_QuantizationComponent_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* QuantizationComponent_descriptor() {
    return QuantizationComponentSpec_QuantizationComponent_descriptor();
  }
  template <typename T>
  static inline const std::string& QuantizationComponent_Name(T value) {
    return QuantizationComponentSpec_QuantizationComponent_Name(value);
  }
  static inline bool QuantizationComponent_Parse(absl::string_view name, QuantizationComponent* value) {
    return QuantizationComponentSpec_QuantizationComponent_Parse(name, value);
  }
  using BitWidth = QuantizationComponentSpec_BitWidth;
  static constexpr BitWidth BIT_WIDTH_UNSPECIFIED = QuantizationComponentSpec_BitWidth_BIT_WIDTH_UNSPECIFIED;
  static constexpr BitWidth BIT_WIDTH_4 = QuantizationComponentSpec_BitWidth_BIT_WIDTH_4;
  static constexpr BitWidth BIT_WIDTH_8 = QuantizationComponentSpec_BitWidth_BIT_WIDTH_8;
  static constexpr BitWidth BIT_WIDTH_16 = QuantizationComponentSpec_BitWidth_BIT_WIDTH_16;
  static constexpr BitWidth BIT_WIDTH_32 = QuantizationComponentSpec_BitWidth_BIT_WIDTH_32;
  static inline bool BitWidth_IsValid(int value) {
    return QuantizationComponentSpec_BitWidth_IsValid(value);
  }
  static constexpr BitWidth BitWidth_MIN = QuantizationComponentSpec_BitWidth_BitWidth_MIN;
  static constexpr BitWidth BitWidth_MAX = QuantizationComponentSpec_BitWidth_BitWidth_MAX;
  static constexpr int BitWidth_ARRAYSIZE = QuantizationComponentSpec_BitWidth_BitWidth_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* BitWidth_descriptor() {
    return QuantizationComponentSpec_BitWidth_descriptor();
  }
  template <typename T>
  static inline const std::string& BitWidth_Name(T value) {
    return QuantizationComponentSpec_BitWidth_Name(value);
  }
  static inline bool BitWidth_Parse(absl::string_view name, BitWidth* value) {
    return QuantizationComponentSpec_BitWidth_Parse(name, value);
  }
  using BitType = QuantizationComponentSpec_BitType;
  static constexpr BitType BIT_TYPE_UNSPECIFIED = QuantizationComponentSpec_BitType_BIT_TYPE_UNSPECIFIED;
  static constexpr BitType BIT_TYPE_INT = QuantizationComponentSpec_BitType_BIT_TYPE_INT;
  static constexpr BitType BIT_TYPE_FLOAT = QuantizationComponentSpec_BitType_BIT_TYPE_FLOAT;
  static constexpr BitType BIT_TYPE_BFLOAT = QuantizationComponentSpec_BitType_BIT_TYPE_BFLOAT;
  static inline bool BitType_IsValid(int value) {
    return QuantizationComponentSpec_BitType_IsValid(value);
  }
  static constexpr BitType BitType_MIN = QuantizationComponentSpec_BitType_BitType_MIN;
  static constexpr BitType BitType_MAX = QuantizationComponentSpec_BitType_BitType_MAX;
  static constexpr int BitType_ARRAYSIZE = QuantizationComponentSpec_BitType_BitType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* BitType_descriptor() {
    return QuantizationComponentSpec_BitType_descriptor();
  }
  template <typename T>
  static inline const std::string& BitType_Name(T value) {
    return QuantizationComponentSpec_BitType_Name(value);
  }
  static inline bool BitType_Parse(absl::string_view name, BitType* value) {
    return QuantizationComponentSpec_BitType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kQuantizationComponentFieldNumber = 1,
    kBitWidthFieldNumber = 2,
    kBitTypeFieldNumber = 3,
    kEnableNarrowRangeFieldNumber = 4,
    kEnablePerChannelQuantizationFieldNumber = 5,
    kEnableSymmetricFieldNumber = 6,
  };
  // .stablehlo.quantization.QuantizationComponentSpec.QuantizationComponent quantization_component = 1;
  void clear_quantization_component() ;
  ::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent quantization_component() const;
  void set_quantization_component(::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent value);

  private:
  ::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent _internal_quantization_component() const;
  void _internal_set_quantization_component(::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent value);

  public:
  // .stablehlo.quantization.QuantizationComponentSpec.BitWidth bit_width = 2;
  void clear_bit_width() ;
  ::stablehlo::quantization::QuantizationComponentSpec_BitWidth bit_width() const;
  void set_bit_width(::stablehlo::quantization::QuantizationComponentSpec_BitWidth value);

  private:
  ::stablehlo::quantization::QuantizationComponentSpec_BitWidth _internal_bit_width() const;
  void _internal_set_bit_width(::stablehlo::quantization::QuantizationComponentSpec_BitWidth value);

  public:
  // .stablehlo.quantization.QuantizationComponentSpec.BitType bit_type = 3;
  void clear_bit_type() ;
  ::stablehlo::quantization::QuantizationComponentSpec_BitType bit_type() const;
  void set_bit_type(::stablehlo::quantization::QuantizationComponentSpec_BitType value);

  private:
  ::stablehlo::quantization::QuantizationComponentSpec_BitType _internal_bit_type() const;
  void _internal_set_bit_type(::stablehlo::quantization::QuantizationComponentSpec_BitType value);

  public:
  // bool enable_narrow_range = 4;
  void clear_enable_narrow_range() ;
  bool enable_narrow_range() const;
  void set_enable_narrow_range(bool value);

  private:
  bool _internal_enable_narrow_range() const;
  void _internal_set_enable_narrow_range(bool value);

  public:
  // bool enable_per_channel_quantization = 5;
  void clear_enable_per_channel_quantization() ;
  bool enable_per_channel_quantization() const;
  void set_enable_per_channel_quantization(bool value);

  private:
  bool _internal_enable_per_channel_quantization() const;
  void _internal_set_enable_per_channel_quantization(bool value);

  public:
  // bool enable_symmetric = 6;
  void clear_enable_symmetric() ;
  bool enable_symmetric() const;
  void set_enable_symmetric(bool value);

  private:
  bool _internal_enable_symmetric() const;
  void _internal_set_enable_symmetric(bool value);

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizationComponentSpec)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizationComponentSpec& from_msg);
    int quantization_component_;
    int bit_width_;
    int bit_type_;
    bool enable_narrow_range_;
    bool enable_per_channel_quantization_;
    bool enable_symmetric_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT PresetQuantizationMethod final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.PresetQuantizationMethod) */ {
 public:
  inline PresetQuantizationMethod() : PresetQuantizationMethod(nullptr) {}
  ~PresetQuantizationMethod() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PresetQuantizationMethod(
      ::google::protobuf::internal::ConstantInitialized);

  inline PresetQuantizationMethod(const PresetQuantizationMethod& from) : PresetQuantizationMethod(nullptr, from) {}
  inline PresetQuantizationMethod(PresetQuantizationMethod&& from) noexcept
      : PresetQuantizationMethod(nullptr, std::move(from)) {}
  inline PresetQuantizationMethod& operator=(const PresetQuantizationMethod& from) {
    CopyFrom(from);
    return *this;
  }
  inline PresetQuantizationMethod& operator=(PresetQuantizationMethod&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PresetQuantizationMethod& default_instance() {
    return *internal_default_instance();
  }
  static inline const PresetQuantizationMethod* internal_default_instance() {
    return reinterpret_cast<const PresetQuantizationMethod*>(
        &_PresetQuantizationMethod_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PresetQuantizationMethod& a, PresetQuantizationMethod& b) { a.Swap(&b); }
  inline void Swap(PresetQuantizationMethod* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PresetQuantizationMethod* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PresetQuantizationMethod* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PresetQuantizationMethod>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PresetQuantizationMethod& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PresetQuantizationMethod& from) { PresetQuantizationMethod::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PresetQuantizationMethod* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.PresetQuantizationMethod"; }

 protected:
  explicit PresetQuantizationMethod(::google::protobuf::Arena* arena);
  PresetQuantizationMethod(::google::protobuf::Arena* arena, const PresetQuantizationMethod& from);
  PresetQuantizationMethod(::google::protobuf::Arena* arena, PresetQuantizationMethod&& from) noexcept
      : PresetQuantizationMethod(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PresetMethod = PresetQuantizationMethod_PresetMethod;
  static constexpr PresetMethod METHOD_UNSPECIFIED = PresetQuantizationMethod_PresetMethod_METHOD_UNSPECIFIED;
  static constexpr PresetMethod WEIGHT_ONLY = PresetQuantizationMethod_PresetMethod_WEIGHT_ONLY;
  static constexpr PresetMethod POST_TRAINING_QUANTIZATION_DYNAMIC_RANGE = PresetQuantizationMethod_PresetMethod_POST_TRAINING_QUANTIZATION_DYNAMIC_RANGE;
  static constexpr PresetMethod FLOAT16 = PresetQuantizationMethod_PresetMethod_FLOAT16;
  static constexpr PresetMethod POST_TRAINING_QUANTIZATION_STATIC_RANGE = PresetQuantizationMethod_PresetMethod_POST_TRAINING_QUANTIZATION_STATIC_RANGE;
  static inline bool PresetMethod_IsValid(int value) {
    return PresetQuantizationMethod_PresetMethod_IsValid(value);
  }
  static constexpr PresetMethod PresetMethod_MIN = PresetQuantizationMethod_PresetMethod_PresetMethod_MIN;
  static constexpr PresetMethod PresetMethod_MAX = PresetQuantizationMethod_PresetMethod_PresetMethod_MAX;
  static constexpr int PresetMethod_ARRAYSIZE = PresetQuantizationMethod_PresetMethod_PresetMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PresetMethod_descriptor() {
    return PresetQuantizationMethod_PresetMethod_descriptor();
  }
  template <typename T>
  static inline const std::string& PresetMethod_Name(T value) {
    return PresetQuantizationMethod_PresetMethod_Name(value);
  }
  static inline bool PresetMethod_Parse(absl::string_view name, PresetMethod* value) {
    return PresetQuantizationMethod_PresetMethod_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPresetMethodFieldNumber = 1,
  };
  // .stablehlo.quantization.PresetQuantizationMethod.PresetMethod preset_method = 1;
  void clear_preset_method() ;
  ::stablehlo::quantization::PresetQuantizationMethod_PresetMethod preset_method() const;
  void set_preset_method(::stablehlo::quantization::PresetQuantizationMethod_PresetMethod value);

  private:
  ::stablehlo::quantization::PresetQuantizationMethod_PresetMethod _internal_preset_method() const;
  void _internal_set_preset_method(::stablehlo::quantization::PresetQuantizationMethod_PresetMethod value);

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.PresetQuantizationMethod)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PresetQuantizationMethod& from_msg);
    int preset_method_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CustomQuantizationMethod final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.CustomQuantizationMethod) */ {
 public:
  inline CustomQuantizationMethod() : CustomQuantizationMethod(nullptr) {}
  ~CustomQuantizationMethod() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomQuantizationMethod(
      ::google::protobuf::internal::ConstantInitialized);

  inline CustomQuantizationMethod(const CustomQuantizationMethod& from) : CustomQuantizationMethod(nullptr, from) {}
  inline CustomQuantizationMethod(CustomQuantizationMethod&& from) noexcept
      : CustomQuantizationMethod(nullptr, std::move(from)) {}
  inline CustomQuantizationMethod& operator=(const CustomQuantizationMethod& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomQuantizationMethod& operator=(CustomQuantizationMethod&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomQuantizationMethod& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomQuantizationMethod* internal_default_instance() {
    return reinterpret_cast<const CustomQuantizationMethod*>(
        &_CustomQuantizationMethod_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CustomQuantizationMethod& a, CustomQuantizationMethod& b) { a.Swap(&b); }
  inline void Swap(CustomQuantizationMethod* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomQuantizationMethod* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomQuantizationMethod* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CustomQuantizationMethod>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomQuantizationMethod& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomQuantizationMethod& from) { CustomQuantizationMethod::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CustomQuantizationMethod* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.CustomQuantizationMethod"; }

 protected:
  explicit CustomQuantizationMethod(::google::protobuf::Arena* arena);
  CustomQuantizationMethod(::google::protobuf::Arena* arena, const CustomQuantizationMethod& from);
  CustomQuantizationMethod(::google::protobuf::Arena* arena, CustomQuantizationMethod&& from) noexcept
      : CustomQuantizationMethod(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQuantizationComponentSpecFieldNumber = 1,
  };
  // repeated .stablehlo.quantization.QuantizationComponentSpec quantization_component_spec = 1;
  int quantization_component_spec_size() const;
  private:
  int _internal_quantization_component_spec_size() const;

  public:
  void clear_quantization_component_spec() ;
  ::stablehlo::quantization::QuantizationComponentSpec* mutable_quantization_component_spec(int index);
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationComponentSpec>* mutable_quantization_component_spec();

  private:
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationComponentSpec>& _internal_quantization_component_spec() const;
  ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationComponentSpec>* _internal_mutable_quantization_component_spec();
  public:
  const ::stablehlo::quantization::QuantizationComponentSpec& quantization_component_spec(int index) const;
  ::stablehlo::quantization::QuantizationComponentSpec* add_quantization_component_spec();
  const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationComponentSpec>& quantization_component_spec() const;
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.CustomQuantizationMethod)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CustomQuantizationMethod& from_msg);
    ::google::protobuf::RepeatedPtrField< ::stablehlo::quantization::QuantizationComponentSpec > quantization_component_spec_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizationMethod final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizationMethod) */ {
 public:
  inline QuantizationMethod() : QuantizationMethod(nullptr) {}
  ~QuantizationMethod() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizationMethod(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizationMethod(const QuantizationMethod& from) : QuantizationMethod(nullptr, from) {}
  inline QuantizationMethod(QuantizationMethod&& from) noexcept
      : QuantizationMethod(nullptr, std::move(from)) {}
  inline QuantizationMethod& operator=(const QuantizationMethod& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizationMethod& operator=(QuantizationMethod&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizationMethod& default_instance() {
    return *internal_default_instance();
  }
  enum QuantizationMethodCase {
    kPresetQuantizationMethod = 1,
    kCustomQuantizationMethod = 2,
    QUANTIZATION_METHOD_NOT_SET = 0,
  };
  static inline const QuantizationMethod* internal_default_instance() {
    return reinterpret_cast<const QuantizationMethod*>(
        &_QuantizationMethod_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QuantizationMethod& a, QuantizationMethod& b) { a.Swap(&b); }
  inline void Swap(QuantizationMethod* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizationMethod* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizationMethod* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizationMethod>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizationMethod& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizationMethod& from) { QuantizationMethod::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizationMethod* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizationMethod"; }

 protected:
  explicit QuantizationMethod(::google::protobuf::Arena* arena);
  QuantizationMethod(::google::protobuf::Arena* arena, const QuantizationMethod& from);
  QuantizationMethod(::google::protobuf::Arena* arena, QuantizationMethod&& from) noexcept
      : QuantizationMethod(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPresetQuantizationMethodFieldNumber = 1,
    kCustomQuantizationMethodFieldNumber = 2,
  };
  // .stablehlo.quantization.PresetQuantizationMethod preset_quantization_method = 1;
  bool has_preset_quantization_method() const;
  private:
  bool _internal_has_preset_quantization_method() const;

  public:
  void clear_preset_quantization_method() ;
  const ::stablehlo::quantization::PresetQuantizationMethod& preset_quantization_method() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::PresetQuantizationMethod* release_preset_quantization_method();
  ::stablehlo::quantization::PresetQuantizationMethod* mutable_preset_quantization_method();
  void set_allocated_preset_quantization_method(::stablehlo::quantization::PresetQuantizationMethod* value);
  void unsafe_arena_set_allocated_preset_quantization_method(::stablehlo::quantization::PresetQuantizationMethod* value);
  ::stablehlo::quantization::PresetQuantizationMethod* unsafe_arena_release_preset_quantization_method();

  private:
  const ::stablehlo::quantization::PresetQuantizationMethod& _internal_preset_quantization_method() const;
  ::stablehlo::quantization::PresetQuantizationMethod* _internal_mutable_preset_quantization_method();

  public:
  // .stablehlo.quantization.CustomQuantizationMethod custom_quantization_method = 2;
  bool has_custom_quantization_method() const;
  private:
  bool _internal_has_custom_quantization_method() const;

  public:
  void clear_custom_quantization_method() ;
  const ::stablehlo::quantization::CustomQuantizationMethod& custom_quantization_method() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::CustomQuantizationMethod* release_custom_quantization_method();
  ::stablehlo::quantization::CustomQuantizationMethod* mutable_custom_quantization_method();
  void set_allocated_custom_quantization_method(::stablehlo::quantization::CustomQuantizationMethod* value);
  void unsafe_arena_set_allocated_custom_quantization_method(::stablehlo::quantization::CustomQuantizationMethod* value);
  ::stablehlo::quantization::CustomQuantizationMethod* unsafe_arena_release_custom_quantization_method();

  private:
  const ::stablehlo::quantization::CustomQuantizationMethod& _internal_custom_quantization_method() const;
  ::stablehlo::quantization::CustomQuantizationMethod* _internal_mutable_custom_quantization_method();

  public:
  void clear_quantization_method();
  QuantizationMethodCase quantization_method_case() const;
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizationMethod)
 private:
  class _Internal;
  void set_has_preset_quantization_method();
  void set_has_custom_quantization_method();
  inline bool has_quantization_method() const;
  inline void clear_has_quantization_method();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizationMethod& from_msg);
    union QuantizationMethodUnion {
      constexpr QuantizationMethodUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::stablehlo::quantization::PresetQuantizationMethod* preset_quantization_method_;
      ::stablehlo::quantization::CustomQuantizationMethod* custom_quantization_method_;
    } quantization_method_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QuantizationOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stablehlo.quantization.QuantizationOptions) */ {
 public:
  inline QuantizationOptions() : QuantizationOptions(nullptr) {}
  ~QuantizationOptions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuantizationOptions(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuantizationOptions(const QuantizationOptions& from) : QuantizationOptions(nullptr, from) {}
  inline QuantizationOptions(QuantizationOptions&& from) noexcept
      : QuantizationOptions(nullptr, std::move(from)) {}
  inline QuantizationOptions& operator=(const QuantizationOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuantizationOptions& operator=(QuantizationOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuantizationOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuantizationOptions* internal_default_instance() {
    return reinterpret_cast<const QuantizationOptions*>(
        &_QuantizationOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QuantizationOptions& a, QuantizationOptions& b) { a.Swap(&b); }
  inline void Swap(QuantizationOptions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuantizationOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuantizationOptions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QuantizationOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuantizationOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuantizationOptions& from) { QuantizationOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuantizationOptions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stablehlo.quantization.QuantizationOptions"; }

 protected:
  explicit QuantizationOptions(::google::protobuf::Arena* arena);
  QuantizationOptions(::google::protobuf::Arena* arena, const QuantizationOptions& from);
  QuantizationOptions(::google::protobuf::Arena* arena, QuantizationOptions&& from) noexcept
      : QuantizationOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQuantizationMethodFieldNumber = 1,
  };
  // .stablehlo.quantization.QuantizationMethod quantization_method = 1;
  bool has_quantization_method() const;
  void clear_quantization_method() ;
  const ::stablehlo::quantization::QuantizationMethod& quantization_method() const;
  PROTOBUF_NODISCARD ::stablehlo::quantization::QuantizationMethod* release_quantization_method();
  ::stablehlo::quantization::QuantizationMethod* mutable_quantization_method();
  void set_allocated_quantization_method(::stablehlo::quantization::QuantizationMethod* value);
  void unsafe_arena_set_allocated_quantization_method(::stablehlo::quantization::QuantizationMethod* value);
  ::stablehlo::quantization::QuantizationMethod* unsafe_arena_release_quantization_method();

  private:
  const ::stablehlo::quantization::QuantizationMethod& _internal_quantization_method() const;
  ::stablehlo::quantization::QuantizationMethod* _internal_mutable_quantization_method();

  public:
  // @@protoc_insertion_point(class_scope:stablehlo.quantization.QuantizationOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuantizationOptions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::stablehlo::quantization::QuantizationMethod* quantization_method_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QuantizationOptions

// .stablehlo.quantization.QuantizationMethod quantization_method = 1;
inline bool QuantizationOptions::has_quantization_method() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quantization_method_ != nullptr);
  return value;
}
inline void QuantizationOptions::clear_quantization_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantization_method_ != nullptr) _impl_.quantization_method_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::stablehlo::quantization::QuantizationMethod& QuantizationOptions::_internal_quantization_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stablehlo::quantization::QuantizationMethod* p = _impl_.quantization_method_;
  return p != nullptr ? *p : reinterpret_cast<const ::stablehlo::quantization::QuantizationMethod&>(::stablehlo::quantization::_QuantizationMethod_default_instance_);
}
inline const ::stablehlo::quantization::QuantizationMethod& QuantizationOptions::quantization_method() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationOptions.quantization_method)
  return _internal_quantization_method();
}
inline void QuantizationOptions::unsafe_arena_set_allocated_quantization_method(::stablehlo::quantization::QuantizationMethod* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quantization_method_);
  }
  _impl_.quantization_method_ = reinterpret_cast<::stablehlo::quantization::QuantizationMethod*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationOptions.quantization_method)
}
inline ::stablehlo::quantization::QuantizationMethod* QuantizationOptions::release_quantization_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::QuantizationMethod* released = _impl_.quantization_method_;
  _impl_.quantization_method_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stablehlo::quantization::QuantizationMethod* QuantizationOptions::unsafe_arena_release_quantization_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationOptions.quantization_method)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stablehlo::quantization::QuantizationMethod* temp = _impl_.quantization_method_;
  _impl_.quantization_method_ = nullptr;
  return temp;
}
inline ::stablehlo::quantization::QuantizationMethod* QuantizationOptions::_internal_mutable_quantization_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantization_method_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::QuantizationMethod>(GetArena());
    _impl_.quantization_method_ = reinterpret_cast<::stablehlo::quantization::QuantizationMethod*>(p);
  }
  return _impl_.quantization_method_;
}
inline ::stablehlo::quantization::QuantizationMethod* QuantizationOptions::mutable_quantization_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::stablehlo::quantization::QuantizationMethod* _msg = _internal_mutable_quantization_method();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationOptions.quantization_method)
  return _msg;
}
inline void QuantizationOptions::set_allocated_quantization_method(::stablehlo::quantization::QuantizationMethod* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.quantization_method_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.quantization_method_ = reinterpret_cast<::stablehlo::quantization::QuantizationMethod*>(value);
  // @@protoc_insertion_point(field_set_allocated:stablehlo.quantization.QuantizationOptions.quantization_method)
}

// -------------------------------------------------------------------

// QuantizationMethod

// .stablehlo.quantization.PresetQuantizationMethod preset_quantization_method = 1;
inline bool QuantizationMethod::has_preset_quantization_method() const {
  return quantization_method_case() == kPresetQuantizationMethod;
}
inline bool QuantizationMethod::_internal_has_preset_quantization_method() const {
  return quantization_method_case() == kPresetQuantizationMethod;
}
inline void QuantizationMethod::set_has_preset_quantization_method() {
  _impl_._oneof_case_[0] = kPresetQuantizationMethod;
}
inline void QuantizationMethod::clear_preset_quantization_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (quantization_method_case() == kPresetQuantizationMethod) {
    if (GetArena() == nullptr) {
      delete _impl_.quantization_method_.preset_quantization_method_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.quantization_method_.preset_quantization_method_);
    }
    clear_has_quantization_method();
  }
}
inline ::stablehlo::quantization::PresetQuantizationMethod* QuantizationMethod::release_preset_quantization_method() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationMethod.preset_quantization_method)
  if (quantization_method_case() == kPresetQuantizationMethod) {
    clear_has_quantization_method();
    auto* temp = _impl_.quantization_method_.preset_quantization_method_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.quantization_method_.preset_quantization_method_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::PresetQuantizationMethod& QuantizationMethod::_internal_preset_quantization_method() const {
  return quantization_method_case() == kPresetQuantizationMethod ? *_impl_.quantization_method_.preset_quantization_method_ : reinterpret_cast<::stablehlo::quantization::PresetQuantizationMethod&>(::stablehlo::quantization::_PresetQuantizationMethod_default_instance_);
}
inline const ::stablehlo::quantization::PresetQuantizationMethod& QuantizationMethod::preset_quantization_method() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationMethod.preset_quantization_method)
  return _internal_preset_quantization_method();
}
inline ::stablehlo::quantization::PresetQuantizationMethod* QuantizationMethod::unsafe_arena_release_preset_quantization_method() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.QuantizationMethod.preset_quantization_method)
  if (quantization_method_case() == kPresetQuantizationMethod) {
    clear_has_quantization_method();
    auto* temp = _impl_.quantization_method_.preset_quantization_method_;
    _impl_.quantization_method_.preset_quantization_method_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QuantizationMethod::unsafe_arena_set_allocated_preset_quantization_method(::stablehlo::quantization::PresetQuantizationMethod* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_quantization_method();
  if (value) {
    set_has_preset_quantization_method();
    _impl_.quantization_method_.preset_quantization_method_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationMethod.preset_quantization_method)
}
inline ::stablehlo::quantization::PresetQuantizationMethod* QuantizationMethod::_internal_mutable_preset_quantization_method() {
  if (quantization_method_case() != kPresetQuantizationMethod) {
    clear_quantization_method();
    set_has_preset_quantization_method();
    _impl_.quantization_method_.preset_quantization_method_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::PresetQuantizationMethod>(GetArena());
  }
  return _impl_.quantization_method_.preset_quantization_method_;
}
inline ::stablehlo::quantization::PresetQuantizationMethod* QuantizationMethod::mutable_preset_quantization_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::PresetQuantizationMethod* _msg = _internal_mutable_preset_quantization_method();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationMethod.preset_quantization_method)
  return _msg;
}

// .stablehlo.quantization.CustomQuantizationMethod custom_quantization_method = 2;
inline bool QuantizationMethod::has_custom_quantization_method() const {
  return quantization_method_case() == kCustomQuantizationMethod;
}
inline bool QuantizationMethod::_internal_has_custom_quantization_method() const {
  return quantization_method_case() == kCustomQuantizationMethod;
}
inline void QuantizationMethod::set_has_custom_quantization_method() {
  _impl_._oneof_case_[0] = kCustomQuantizationMethod;
}
inline void QuantizationMethod::clear_custom_quantization_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (quantization_method_case() == kCustomQuantizationMethod) {
    if (GetArena() == nullptr) {
      delete _impl_.quantization_method_.custom_quantization_method_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.quantization_method_.custom_quantization_method_);
    }
    clear_has_quantization_method();
  }
}
inline ::stablehlo::quantization::CustomQuantizationMethod* QuantizationMethod::release_custom_quantization_method() {
  // @@protoc_insertion_point(field_release:stablehlo.quantization.QuantizationMethod.custom_quantization_method)
  if (quantization_method_case() == kCustomQuantizationMethod) {
    clear_has_quantization_method();
    auto* temp = _impl_.quantization_method_.custom_quantization_method_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.quantization_method_.custom_quantization_method_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stablehlo::quantization::CustomQuantizationMethod& QuantizationMethod::_internal_custom_quantization_method() const {
  return quantization_method_case() == kCustomQuantizationMethod ? *_impl_.quantization_method_.custom_quantization_method_ : reinterpret_cast<::stablehlo::quantization::CustomQuantizationMethod&>(::stablehlo::quantization::_CustomQuantizationMethod_default_instance_);
}
inline const ::stablehlo::quantization::CustomQuantizationMethod& QuantizationMethod::custom_quantization_method() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationMethod.custom_quantization_method)
  return _internal_custom_quantization_method();
}
inline ::stablehlo::quantization::CustomQuantizationMethod* QuantizationMethod::unsafe_arena_release_custom_quantization_method() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stablehlo.quantization.QuantizationMethod.custom_quantization_method)
  if (quantization_method_case() == kCustomQuantizationMethod) {
    clear_has_quantization_method();
    auto* temp = _impl_.quantization_method_.custom_quantization_method_;
    _impl_.quantization_method_.custom_quantization_method_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QuantizationMethod::unsafe_arena_set_allocated_custom_quantization_method(::stablehlo::quantization::CustomQuantizationMethod* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_quantization_method();
  if (value) {
    set_has_custom_quantization_method();
    _impl_.quantization_method_.custom_quantization_method_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stablehlo.quantization.QuantizationMethod.custom_quantization_method)
}
inline ::stablehlo::quantization::CustomQuantizationMethod* QuantizationMethod::_internal_mutable_custom_quantization_method() {
  if (quantization_method_case() != kCustomQuantizationMethod) {
    clear_quantization_method();
    set_has_custom_quantization_method();
    _impl_.quantization_method_.custom_quantization_method_ =
        ::google::protobuf::Message::DefaultConstruct<::stablehlo::quantization::CustomQuantizationMethod>(GetArena());
  }
  return _impl_.quantization_method_.custom_quantization_method_;
}
inline ::stablehlo::quantization::CustomQuantizationMethod* QuantizationMethod::mutable_custom_quantization_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stablehlo::quantization::CustomQuantizationMethod* _msg = _internal_mutable_custom_quantization_method();
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.QuantizationMethod.custom_quantization_method)
  return _msg;
}

inline bool QuantizationMethod::has_quantization_method() const {
  return quantization_method_case() != QUANTIZATION_METHOD_NOT_SET;
}
inline void QuantizationMethod::clear_has_quantization_method() {
  _impl_._oneof_case_[0] = QUANTIZATION_METHOD_NOT_SET;
}
inline QuantizationMethod::QuantizationMethodCase QuantizationMethod::quantization_method_case() const {
  return QuantizationMethod::QuantizationMethodCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// PresetQuantizationMethod

// .stablehlo.quantization.PresetQuantizationMethod.PresetMethod preset_method = 1;
inline void PresetQuantizationMethod::clear_preset_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preset_method_ = 0;
}
inline ::stablehlo::quantization::PresetQuantizationMethod_PresetMethod PresetQuantizationMethod::preset_method() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.PresetQuantizationMethod.preset_method)
  return _internal_preset_method();
}
inline void PresetQuantizationMethod::set_preset_method(::stablehlo::quantization::PresetQuantizationMethod_PresetMethod value) {
  _internal_set_preset_method(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.PresetQuantizationMethod.preset_method)
}
inline ::stablehlo::quantization::PresetQuantizationMethod_PresetMethod PresetQuantizationMethod::_internal_preset_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stablehlo::quantization::PresetQuantizationMethod_PresetMethod>(_impl_.preset_method_);
}
inline void PresetQuantizationMethod::_internal_set_preset_method(::stablehlo::quantization::PresetQuantizationMethod_PresetMethod value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preset_method_ = value;
}

// -------------------------------------------------------------------

// CustomQuantizationMethod

// repeated .stablehlo.quantization.QuantizationComponentSpec quantization_component_spec = 1;
inline int CustomQuantizationMethod::_internal_quantization_component_spec_size() const {
  return _internal_quantization_component_spec().size();
}
inline int CustomQuantizationMethod::quantization_component_spec_size() const {
  return _internal_quantization_component_spec_size();
}
inline void CustomQuantizationMethod::clear_quantization_component_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantization_component_spec_.Clear();
}
inline ::stablehlo::quantization::QuantizationComponentSpec* CustomQuantizationMethod::mutable_quantization_component_spec(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:stablehlo.quantization.CustomQuantizationMethod.quantization_component_spec)
  return _internal_mutable_quantization_component_spec()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationComponentSpec>* CustomQuantizationMethod::mutable_quantization_component_spec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:stablehlo.quantization.CustomQuantizationMethod.quantization_component_spec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_quantization_component_spec();
}
inline const ::stablehlo::quantization::QuantizationComponentSpec& CustomQuantizationMethod::quantization_component_spec(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.CustomQuantizationMethod.quantization_component_spec)
  return _internal_quantization_component_spec().Get(index);
}
inline ::stablehlo::quantization::QuantizationComponentSpec* CustomQuantizationMethod::add_quantization_component_spec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::stablehlo::quantization::QuantizationComponentSpec* _add = _internal_mutable_quantization_component_spec()->Add();
  // @@protoc_insertion_point(field_add:stablehlo.quantization.CustomQuantizationMethod.quantization_component_spec)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationComponentSpec>& CustomQuantizationMethod::quantization_component_spec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:stablehlo.quantization.CustomQuantizationMethod.quantization_component_spec)
  return _internal_quantization_component_spec();
}
inline const ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationComponentSpec>&
CustomQuantizationMethod::_internal_quantization_component_spec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantization_component_spec_;
}
inline ::google::protobuf::RepeatedPtrField<::stablehlo::quantization::QuantizationComponentSpec>*
CustomQuantizationMethod::_internal_mutable_quantization_component_spec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.quantization_component_spec_;
}

// -------------------------------------------------------------------

// QuantizationComponentSpec

// .stablehlo.quantization.QuantizationComponentSpec.QuantizationComponent quantization_component = 1;
inline void QuantizationComponentSpec::clear_quantization_component() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantization_component_ = 0;
}
inline ::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent QuantizationComponentSpec::quantization_component() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationComponentSpec.quantization_component)
  return _internal_quantization_component();
}
inline void QuantizationComponentSpec::set_quantization_component(::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent value) {
  _internal_set_quantization_component(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.QuantizationComponentSpec.quantization_component)
}
inline ::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent QuantizationComponentSpec::_internal_quantization_component() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent>(_impl_.quantization_component_);
}
inline void QuantizationComponentSpec::_internal_set_quantization_component(::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantization_component_ = value;
}

// .stablehlo.quantization.QuantizationComponentSpec.BitWidth bit_width = 2;
inline void QuantizationComponentSpec::clear_bit_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_width_ = 0;
}
inline ::stablehlo::quantization::QuantizationComponentSpec_BitWidth QuantizationComponentSpec::bit_width() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationComponentSpec.bit_width)
  return _internal_bit_width();
}
inline void QuantizationComponentSpec::set_bit_width(::stablehlo::quantization::QuantizationComponentSpec_BitWidth value) {
  _internal_set_bit_width(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.QuantizationComponentSpec.bit_width)
}
inline ::stablehlo::quantization::QuantizationComponentSpec_BitWidth QuantizationComponentSpec::_internal_bit_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stablehlo::quantization::QuantizationComponentSpec_BitWidth>(_impl_.bit_width_);
}
inline void QuantizationComponentSpec::_internal_set_bit_width(::stablehlo::quantization::QuantizationComponentSpec_BitWidth value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_width_ = value;
}

// .stablehlo.quantization.QuantizationComponentSpec.BitType bit_type = 3;
inline void QuantizationComponentSpec::clear_bit_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_type_ = 0;
}
inline ::stablehlo::quantization::QuantizationComponentSpec_BitType QuantizationComponentSpec::bit_type() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationComponentSpec.bit_type)
  return _internal_bit_type();
}
inline void QuantizationComponentSpec::set_bit_type(::stablehlo::quantization::QuantizationComponentSpec_BitType value) {
  _internal_set_bit_type(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.QuantizationComponentSpec.bit_type)
}
inline ::stablehlo::quantization::QuantizationComponentSpec_BitType QuantizationComponentSpec::_internal_bit_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stablehlo::quantization::QuantizationComponentSpec_BitType>(_impl_.bit_type_);
}
inline void QuantizationComponentSpec::_internal_set_bit_type(::stablehlo::quantization::QuantizationComponentSpec_BitType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_type_ = value;
}

// bool enable_narrow_range = 4;
inline void QuantizationComponentSpec::clear_enable_narrow_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_narrow_range_ = false;
}
inline bool QuantizationComponentSpec::enable_narrow_range() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationComponentSpec.enable_narrow_range)
  return _internal_enable_narrow_range();
}
inline void QuantizationComponentSpec::set_enable_narrow_range(bool value) {
  _internal_set_enable_narrow_range(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.QuantizationComponentSpec.enable_narrow_range)
}
inline bool QuantizationComponentSpec::_internal_enable_narrow_range() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_narrow_range_;
}
inline void QuantizationComponentSpec::_internal_set_enable_narrow_range(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_narrow_range_ = value;
}

// bool enable_per_channel_quantization = 5;
inline void QuantizationComponentSpec::clear_enable_per_channel_quantization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_per_channel_quantization_ = false;
}
inline bool QuantizationComponentSpec::enable_per_channel_quantization() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationComponentSpec.enable_per_channel_quantization)
  return _internal_enable_per_channel_quantization();
}
inline void QuantizationComponentSpec::set_enable_per_channel_quantization(bool value) {
  _internal_set_enable_per_channel_quantization(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.QuantizationComponentSpec.enable_per_channel_quantization)
}
inline bool QuantizationComponentSpec::_internal_enable_per_channel_quantization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_per_channel_quantization_;
}
inline void QuantizationComponentSpec::_internal_set_enable_per_channel_quantization(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_per_channel_quantization_ = value;
}

// bool enable_symmetric = 6;
inline void QuantizationComponentSpec::clear_enable_symmetric() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_symmetric_ = false;
}
inline bool QuantizationComponentSpec::enable_symmetric() const {
  // @@protoc_insertion_point(field_get:stablehlo.quantization.QuantizationComponentSpec.enable_symmetric)
  return _internal_enable_symmetric();
}
inline void QuantizationComponentSpec::set_enable_symmetric(bool value) {
  _internal_set_enable_symmetric(value);
  // @@protoc_insertion_point(field_set:stablehlo.quantization.QuantizationComponentSpec.enable_symmetric)
}
inline bool QuantizationComponentSpec::_internal_enable_symmetric() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_symmetric_;
}
inline void QuantizationComponentSpec::_internal_set_enable_symmetric(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_symmetric_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace quantization
}  // namespace stablehlo


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::stablehlo::quantization::PresetQuantizationMethod_PresetMethod> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::stablehlo::quantization::PresetQuantizationMethod_PresetMethod>() {
  return ::stablehlo::quantization::PresetQuantizationMethod_PresetMethod_descriptor();
}
template <>
struct is_proto_enum<::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent>() {
  return ::stablehlo::quantization::QuantizationComponentSpec_QuantizationComponent_descriptor();
}
template <>
struct is_proto_enum<::stablehlo::quantization::QuantizationComponentSpec_BitWidth> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::stablehlo::quantization::QuantizationComponentSpec_BitWidth>() {
  return ::stablehlo::quantization::QuantizationComponentSpec_BitWidth_descriptor();
}
template <>
struct is_proto_enum<::stablehlo::quantization::QuantizationComponentSpec_BitType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::stablehlo::quantization::QuantizationComponentSpec_BitType>() {
  return ::stablehlo::quantization::QuantizationComponentSpec_BitType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fmlir_2fquantization_2fstablehlo_2fquantization_5foptions_2eproto_2epb_2eh
