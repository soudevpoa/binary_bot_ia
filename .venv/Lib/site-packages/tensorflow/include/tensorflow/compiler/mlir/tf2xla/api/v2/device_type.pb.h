// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/compiler/mlir/tf2xla/api/v2/device_type.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fmlir_2ftf2xla_2fapi_2fv2_2fdevice_5ftype_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fmlir_2ftf2xla_2fapi_2fv2_2fdevice_5ftype_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcompiler_2fmlir_2ftf2xla_2fapi_2fv2_2fdevice_5ftype_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcompiler_2fmlir_2ftf2xla_2fapi_2fv2_2fdevice_5ftype_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcompiler_2fmlir_2ftf2xla_2fapi_2fv2_2fdevice_5ftype_2eproto;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace tf2xla {
namespace v2 {
enum DeviceType : int {
  DEVICE_TYPE_UNSPECIFIED = 0,
  XLA_TPU_JIT = 1,
  XLA_CPU_JIT = 2,
  XLA_GPU_JIT = 3,
};

PROTOBUF_EXPORT bool DeviceType_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t DeviceType_internal_data_[];
constexpr DeviceType DeviceType_MIN = static_cast<DeviceType>(0);
constexpr DeviceType DeviceType_MAX = static_cast<DeviceType>(3);
constexpr int DeviceType_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
DeviceType_descriptor();
template <typename T>
const std::string& DeviceType_Name(T value) {
  static_assert(std::is_same<T, DeviceType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DeviceType_Name().");
  return DeviceType_Name(static_cast<DeviceType>(value));
}
template <>
inline const std::string& DeviceType_Name(DeviceType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DeviceType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool DeviceType_Parse(absl::string_view name, DeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceType>(
      DeviceType_descriptor(), name, value);
}

// ===================================================================



// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace tf2xla
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::tf2xla::v2::DeviceType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::tf2xla::v2::DeviceType>() {
  return ::tensorflow::tf2xla::v2::DeviceType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fmlir_2ftf2xla_2fapi_2fv2_2fdevice_5ftype_2eproto_2epb_2eh
