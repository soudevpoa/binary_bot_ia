// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/autotune_results.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_xla_2fautotune_5fresults_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_xla_2fautotune_5fresults_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "xla/autotuning.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fautotune_5fresults_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fautotune_5fresults_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xla_2fautotune_5fresults_2eproto;
namespace xla {
class AutotuneResults;
struct AutotuneResultsDefaultTypeInternal;
PROTOBUF_EXPORT extern AutotuneResultsDefaultTypeInternal _AutotuneResults_default_instance_;
class AutotuneResults_Entry;
struct AutotuneResults_EntryDefaultTypeInternal;
PROTOBUF_EXPORT extern AutotuneResults_EntryDefaultTypeInternal _AutotuneResults_Entry_default_instance_;
class AutotuningLogs;
struct AutotuningLogsDefaultTypeInternal;
PROTOBUF_EXPORT extern AutotuningLogsDefaultTypeInternal _AutotuningLogs_default_instance_;
}  // namespace xla
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xla {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT AutotuneResults_Entry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.AutotuneResults.Entry) */ {
 public:
  inline AutotuneResults_Entry() : AutotuneResults_Entry(nullptr) {}
  ~AutotuneResults_Entry() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutotuneResults_Entry(
      ::google::protobuf::internal::ConstantInitialized);

  inline AutotuneResults_Entry(const AutotuneResults_Entry& from) : AutotuneResults_Entry(nullptr, from) {}
  inline AutotuneResults_Entry(AutotuneResults_Entry&& from) noexcept
      : AutotuneResults_Entry(nullptr, std::move(from)) {}
  inline AutotuneResults_Entry& operator=(const AutotuneResults_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutotuneResults_Entry& operator=(AutotuneResults_Entry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutotuneResults_Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutotuneResults_Entry* internal_default_instance() {
    return reinterpret_cast<const AutotuneResults_Entry*>(
        &_AutotuneResults_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AutotuneResults_Entry& a, AutotuneResults_Entry& b) { a.Swap(&b); }
  inline void Swap(AutotuneResults_Entry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutotuneResults_Entry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutotuneResults_Entry* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AutotuneResults_Entry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutotuneResults_Entry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutotuneResults_Entry& from) { AutotuneResults_Entry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AutotuneResults_Entry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.AutotuneResults.Entry"; }

 protected:
  explicit AutotuneResults_Entry(::google::protobuf::Arena* arena);
  AutotuneResults_Entry(::google::protobuf::Arena* arena, const AutotuneResults_Entry& from);
  AutotuneResults_Entry(::google::protobuf::Arena* arena, AutotuneResults_Entry&& from) noexcept
      : AutotuneResults_Entry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceFieldNumber = 1,
    kHloFieldNumber = 2,
    kResultFieldNumber = 3,
    kVersionFieldNumber = 4,
  };
  // string device = 1;
  void clear_device() ;
  const std::string& device() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device(Arg_&& arg, Args_... args);
  std::string* mutable_device();
  PROTOBUF_NODISCARD std::string* release_device();
  void set_allocated_device(std::string* value);

  private:
  const std::string& _internal_device() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device(
      const std::string& value);
  std::string* _internal_mutable_device();

  public:
  // string hlo = 2;
  void clear_hlo() ;
  const std::string& hlo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hlo(Arg_&& arg, Args_... args);
  std::string* mutable_hlo();
  PROTOBUF_NODISCARD std::string* release_hlo();
  void set_allocated_hlo(std::string* value);

  private:
  const std::string& _internal_hlo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hlo(
      const std::string& value);
  std::string* _internal_mutable_hlo();

  public:
  // .xla.AutotuneResult result = 3;
  bool has_result() const;
  void clear_result() ;
  const ::xla::AutotuneResult& result() const;
  PROTOBUF_NODISCARD ::xla::AutotuneResult* release_result();
  ::xla::AutotuneResult* mutable_result();
  void set_allocated_result(::xla::AutotuneResult* value);
  void unsafe_arena_set_allocated_result(::xla::AutotuneResult* value);
  ::xla::AutotuneResult* unsafe_arena_release_result();

  private:
  const ::xla::AutotuneResult& _internal_result() const;
  ::xla::AutotuneResult* _internal_mutable_result();

  public:
  // int32 version = 4;
  void clear_version() ;
  ::int32_t version() const;
  void set_version(::int32_t value);

  private:
  ::int32_t _internal_version() const;
  void _internal_set_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xla.AutotuneResults.Entry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      43, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AutotuneResults_Entry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr device_;
    ::google::protobuf::internal::ArenaStringPtr hlo_;
    ::xla::AutotuneResult* result_;
    ::int32_t version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fautotune_5fresults_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AutotuningLogs final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.AutotuningLogs) */ {
 public:
  inline AutotuningLogs() : AutotuningLogs(nullptr) {}
  ~AutotuningLogs() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutotuningLogs(
      ::google::protobuf::internal::ConstantInitialized);

  inline AutotuningLogs(const AutotuningLogs& from) : AutotuningLogs(nullptr, from) {}
  inline AutotuningLogs(AutotuningLogs&& from) noexcept
      : AutotuningLogs(nullptr, std::move(from)) {}
  inline AutotuningLogs& operator=(const AutotuningLogs& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutotuningLogs& operator=(AutotuningLogs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutotuningLogs& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutotuningLogs* internal_default_instance() {
    return reinterpret_cast<const AutotuningLogs*>(
        &_AutotuningLogs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AutotuningLogs& a, AutotuningLogs& b) { a.Swap(&b); }
  inline void Swap(AutotuningLogs* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutotuningLogs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutotuningLogs* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AutotuningLogs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutotuningLogs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutotuningLogs& from) { AutotuningLogs::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AutotuningLogs* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.AutotuningLogs"; }

 protected:
  explicit AutotuningLogs(::google::protobuf::Arena* arena);
  AutotuningLogs(::google::protobuf::Arena* arena, const AutotuningLogs& from);
  AutotuningLogs(::google::protobuf::Arena* arena, AutotuningLogs&& from) noexcept
      : AutotuningLogs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogsFieldNumber = 1,
  };
  // repeated .xla.AutotuningLog logs = 1;
  int logs_size() const;
  private:
  int _internal_logs_size() const;

  public:
  void clear_logs() ;
  ::xla::AutotuningLog* mutable_logs(int index);
  ::google::protobuf::RepeatedPtrField<::xla::AutotuningLog>* mutable_logs();

  private:
  const ::google::protobuf::RepeatedPtrField<::xla::AutotuningLog>& _internal_logs() const;
  ::google::protobuf::RepeatedPtrField<::xla::AutotuningLog>* _internal_mutable_logs();
  public:
  const ::xla::AutotuningLog& logs(int index) const;
  ::xla::AutotuningLog* add_logs();
  const ::google::protobuf::RepeatedPtrField<::xla::AutotuningLog>& logs() const;
  // @@protoc_insertion_point(class_scope:xla.AutotuningLogs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AutotuningLogs& from_msg);
    ::google::protobuf::RepeatedPtrField< ::xla::AutotuningLog > logs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fautotune_5fresults_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AutotuneResults final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.AutotuneResults) */ {
 public:
  inline AutotuneResults() : AutotuneResults(nullptr) {}
  ~AutotuneResults() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutotuneResults(
      ::google::protobuf::internal::ConstantInitialized);

  inline AutotuneResults(const AutotuneResults& from) : AutotuneResults(nullptr, from) {}
  inline AutotuneResults(AutotuneResults&& from) noexcept
      : AutotuneResults(nullptr, std::move(from)) {}
  inline AutotuneResults& operator=(const AutotuneResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutotuneResults& operator=(AutotuneResults&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutotuneResults& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutotuneResults* internal_default_instance() {
    return reinterpret_cast<const AutotuneResults*>(
        &_AutotuneResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AutotuneResults& a, AutotuneResults& b) { a.Swap(&b); }
  inline void Swap(AutotuneResults* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutotuneResults* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutotuneResults* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AutotuneResults>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutotuneResults& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutotuneResults& from) { AutotuneResults::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AutotuneResults* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.AutotuneResults"; }

 protected:
  explicit AutotuneResults(::google::protobuf::Arena* arena);
  AutotuneResults(::google::protobuf::Arena* arena, const AutotuneResults& from);
  AutotuneResults(::google::protobuf::Arena* arena, AutotuneResults&& from) noexcept
      : AutotuneResults(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Entry = AutotuneResults_Entry;

  // accessors -------------------------------------------------------
  enum : int {
    kResultsFieldNumber = 4,
    kVersionFieldNumber = 1,
  };
  // repeated .xla.AutotuneResults.Entry results = 4;
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  ::xla::AutotuneResults_Entry* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField<::xla::AutotuneResults_Entry>* mutable_results();

  private:
  const ::google::protobuf::RepeatedPtrField<::xla::AutotuneResults_Entry>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<::xla::AutotuneResults_Entry>* _internal_mutable_results();
  public:
  const ::xla::AutotuneResults_Entry& results(int index) const;
  ::xla::AutotuneResults_Entry* add_results();
  const ::google::protobuf::RepeatedPtrField<::xla::AutotuneResults_Entry>& results() const;
  // int32 version = 1;
  void clear_version() ;
  ::int32_t version() const;
  void set_version(::int32_t value);

  private:
  ::int32_t _internal_version() const;
  void _internal_set_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xla.AutotuneResults)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AutotuneResults& from_msg);
    ::google::protobuf::RepeatedPtrField< ::xla::AutotuneResults_Entry > results_;
    ::int32_t version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fautotune_5fresults_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AutotuneResults_Entry

// string device = 1;
inline void AutotuneResults_Entry::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.ClearToEmpty();
}
inline const std::string& AutotuneResults_Entry::device() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotuneResults.Entry.device)
  return _internal_device();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AutotuneResults_Entry::set_device(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.AutotuneResults.Entry.device)
}
inline std::string* AutotuneResults_Entry::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:xla.AutotuneResults.Entry.device)
  return _s;
}
inline const std::string& AutotuneResults_Entry::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_.Get();
}
inline void AutotuneResults_Entry::_internal_set_device(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(value, GetArena());
}
inline std::string* AutotuneResults_Entry::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_.Mutable( GetArena());
}
inline std::string* AutotuneResults_Entry::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.AutotuneResults.Entry.device)
  return _impl_.device_.Release();
}
inline void AutotuneResults_Entry::set_allocated_device(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_.IsDefault()) {
          _impl_.device_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.AutotuneResults.Entry.device)
}

// string hlo = 2;
inline void AutotuneResults_Entry::clear_hlo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hlo_.ClearToEmpty();
}
inline const std::string& AutotuneResults_Entry::hlo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotuneResults.Entry.hlo)
  return _internal_hlo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AutotuneResults_Entry::set_hlo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hlo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.AutotuneResults.Entry.hlo)
}
inline std::string* AutotuneResults_Entry::mutable_hlo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hlo();
  // @@protoc_insertion_point(field_mutable:xla.AutotuneResults.Entry.hlo)
  return _s;
}
inline const std::string& AutotuneResults_Entry::_internal_hlo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hlo_.Get();
}
inline void AutotuneResults_Entry::_internal_set_hlo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hlo_.Set(value, GetArena());
}
inline std::string* AutotuneResults_Entry::_internal_mutable_hlo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hlo_.Mutable( GetArena());
}
inline std::string* AutotuneResults_Entry::release_hlo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.AutotuneResults.Entry.hlo)
  return _impl_.hlo_.Release();
}
inline void AutotuneResults_Entry::set_allocated_hlo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hlo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hlo_.IsDefault()) {
          _impl_.hlo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.AutotuneResults.Entry.hlo)
}

// .xla.AutotuneResult result = 3;
inline bool AutotuneResults_Entry::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.result_ != nullptr);
  return value;
}
inline const ::xla::AutotuneResult& AutotuneResults_Entry::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::AutotuneResult* p = _impl_.result_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::AutotuneResult&>(::xla::_AutotuneResult_default_instance_);
}
inline const ::xla::AutotuneResult& AutotuneResults_Entry::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotuneResults.Entry.result)
  return _internal_result();
}
inline void AutotuneResults_Entry::unsafe_arena_set_allocated_result(::xla::AutotuneResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }
  _impl_.result_ = reinterpret_cast<::xla::AutotuneResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.AutotuneResults.Entry.result)
}
inline ::xla::AutotuneResult* AutotuneResults_Entry::release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::AutotuneResult* released = _impl_.result_;
  _impl_.result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xla::AutotuneResult* AutotuneResults_Entry::unsafe_arena_release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.AutotuneResults.Entry.result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::AutotuneResult* temp = _impl_.result_;
  _impl_.result_ = nullptr;
  return temp;
}
inline ::xla::AutotuneResult* AutotuneResults_Entry::_internal_mutable_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::AutotuneResult>(GetArena());
    _impl_.result_ = reinterpret_cast<::xla::AutotuneResult*>(p);
  }
  return _impl_.result_;
}
inline ::xla::AutotuneResult* AutotuneResults_Entry::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xla::AutotuneResult* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:xla.AutotuneResults.Entry.result)
  return _msg;
}
inline void AutotuneResults_Entry::set_allocated_result(::xla::AutotuneResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.result_ = reinterpret_cast<::xla::AutotuneResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.AutotuneResults.Entry.result)
}

// int32 version = 4;
inline void AutotuneResults_Entry::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0;
}
inline ::int32_t AutotuneResults_Entry::version() const {
  // @@protoc_insertion_point(field_get:xla.AutotuneResults.Entry.version)
  return _internal_version();
}
inline void AutotuneResults_Entry::set_version(::int32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:xla.AutotuneResults.Entry.version)
}
inline ::int32_t AutotuneResults_Entry::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void AutotuneResults_Entry::_internal_set_version(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// -------------------------------------------------------------------

// AutotuneResults

// int32 version = 1;
inline void AutotuneResults::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0;
}
inline ::int32_t AutotuneResults::version() const {
  // @@protoc_insertion_point(field_get:xla.AutotuneResults.version)
  return _internal_version();
}
inline void AutotuneResults::set_version(::int32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:xla.AutotuneResults.version)
}
inline ::int32_t AutotuneResults::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void AutotuneResults::_internal_set_version(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// repeated .xla.AutotuneResults.Entry results = 4;
inline int AutotuneResults::_internal_results_size() const {
  return _internal_results().size();
}
inline int AutotuneResults::results_size() const {
  return _internal_results_size();
}
inline void AutotuneResults::clear_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.results_.Clear();
}
inline ::xla::AutotuneResults_Entry* AutotuneResults::mutable_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xla.AutotuneResults.results)
  return _internal_mutable_results()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xla::AutotuneResults_Entry>* AutotuneResults::mutable_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.AutotuneResults.results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_results();
}
inline const ::xla::AutotuneResults_Entry& AutotuneResults::results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotuneResults.results)
  return _internal_results().Get(index);
}
inline ::xla::AutotuneResults_Entry* AutotuneResults::add_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xla::AutotuneResults_Entry* _add = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add:xla.AutotuneResults.results)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xla::AutotuneResults_Entry>& AutotuneResults::results() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.AutotuneResults.results)
  return _internal_results();
}
inline const ::google::protobuf::RepeatedPtrField<::xla::AutotuneResults_Entry>&
AutotuneResults::_internal_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<::xla::AutotuneResults_Entry>*
AutotuneResults::_internal_mutable_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// AutotuningLogs

// repeated .xla.AutotuningLog logs = 1;
inline int AutotuningLogs::_internal_logs_size() const {
  return _internal_logs().size();
}
inline int AutotuningLogs::logs_size() const {
  return _internal_logs_size();
}
inline ::xla::AutotuningLog* AutotuningLogs::mutable_logs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xla.AutotuningLogs.logs)
  return _internal_mutable_logs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xla::AutotuningLog>* AutotuningLogs::mutable_logs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.AutotuningLogs.logs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_logs();
}
inline const ::xla::AutotuningLog& AutotuningLogs::logs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotuningLogs.logs)
  return _internal_logs().Get(index);
}
inline ::xla::AutotuningLog* AutotuningLogs::add_logs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xla::AutotuningLog* _add = _internal_mutable_logs()->Add();
  // @@protoc_insertion_point(field_add:xla.AutotuningLogs.logs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xla::AutotuningLog>& AutotuningLogs::logs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.AutotuningLogs.logs)
  return _internal_logs();
}
inline const ::google::protobuf::RepeatedPtrField<::xla::AutotuningLog>&
AutotuningLogs::_internal_logs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logs_;
}
inline ::google::protobuf::RepeatedPtrField<::xla::AutotuningLog>*
AutotuningLogs::_internal_mutable_logs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.logs_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace xla


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_xla_2fautotune_5fresults_2eproto_2epb_2eh
