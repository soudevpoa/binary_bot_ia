// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/example/feature.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fexample_2ffeature_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fexample_2ffeature_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fexample_2ffeature_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fexample_2ffeature_2eproto;
namespace tensorflow {
class BytesList;
struct BytesListDefaultTypeInternal;
PROTOBUF_EXPORT extern BytesListDefaultTypeInternal _BytesList_default_instance_;
class Feature;
struct FeatureDefaultTypeInternal;
PROTOBUF_EXPORT extern FeatureDefaultTypeInternal _Feature_default_instance_;
class FeatureList;
struct FeatureListDefaultTypeInternal;
PROTOBUF_EXPORT extern FeatureListDefaultTypeInternal _FeatureList_default_instance_;
class FeatureLists;
struct FeatureListsDefaultTypeInternal;
PROTOBUF_EXPORT extern FeatureListsDefaultTypeInternal _FeatureLists_default_instance_;
class FeatureLists_FeatureListEntry_DoNotUse;
struct FeatureLists_FeatureListEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern FeatureLists_FeatureListEntry_DoNotUseDefaultTypeInternal _FeatureLists_FeatureListEntry_DoNotUse_default_instance_;
class Features;
struct FeaturesDefaultTypeInternal;
PROTOBUF_EXPORT extern FeaturesDefaultTypeInternal _Features_default_instance_;
class Features_FeatureEntry_DoNotUse;
struct Features_FeatureEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern Features_FeatureEntry_DoNotUseDefaultTypeInternal _Features_FeatureEntry_DoNotUse_default_instance_;
class FloatList;
struct FloatListDefaultTypeInternal;
PROTOBUF_EXPORT extern FloatListDefaultTypeInternal _FloatList_default_instance_;
class Int64List;
struct Int64ListDefaultTypeInternal;
PROTOBUF_EXPORT extern Int64ListDefaultTypeInternal _Int64List_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT Int64List final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.Int64List) */ {
 public:
  inline Int64List() : Int64List(nullptr) {}
  ~Int64List() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Int64List(
      ::google::protobuf::internal::ConstantInitialized);

  inline Int64List(const Int64List& from) : Int64List(nullptr, from) {}
  inline Int64List(Int64List&& from) noexcept
      : Int64List(nullptr, std::move(from)) {}
  inline Int64List& operator=(const Int64List& from) {
    CopyFrom(from);
    return *this;
  }
  inline Int64List& operator=(Int64List&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Int64List& default_instance() {
    return *internal_default_instance();
  }
  static inline const Int64List* internal_default_instance() {
    return reinterpret_cast<const Int64List*>(
        &_Int64List_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Int64List& a, Int64List& b) { a.Swap(&b); }
  inline void Swap(Int64List* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Int64List* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Int64List* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Int64List>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Int64List& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Int64List& from) { Int64List::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Int64List* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.Int64List"; }

 protected:
  explicit Int64List(::google::protobuf::Arena* arena);
  Int64List(::google::protobuf::Arena* arena, const Int64List& from);
  Int64List(::google::protobuf::Arena* arena, Int64List&& from) noexcept
      : Int64List(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // repeated int64 value = 1 [packed = true, jstype = JS_STRING];
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  ::int64_t value(int index) const;
  void set_value(int index, ::int64_t value);
  void add_value(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& value() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_value();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_value() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.Int64List)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Int64List& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> value_;
    mutable ::google::protobuf::internal::CachedSize _value_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT FloatList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.FloatList) */ {
 public:
  inline FloatList() : FloatList(nullptr) {}
  ~FloatList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FloatList(
      ::google::protobuf::internal::ConstantInitialized);

  inline FloatList(const FloatList& from) : FloatList(nullptr, from) {}
  inline FloatList(FloatList&& from) noexcept
      : FloatList(nullptr, std::move(from)) {}
  inline FloatList& operator=(const FloatList& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatList& operator=(FloatList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FloatList& default_instance() {
    return *internal_default_instance();
  }
  static inline const FloatList* internal_default_instance() {
    return reinterpret_cast<const FloatList*>(
        &_FloatList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(FloatList& a, FloatList& b) { a.Swap(&b); }
  inline void Swap(FloatList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloatList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FloatList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FloatList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FloatList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FloatList& from) { FloatList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FloatList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.FloatList"; }

 protected:
  explicit FloatList(::google::protobuf::Arena* arena);
  FloatList(::google::protobuf::Arena* arena, const FloatList& from);
  FloatList(::google::protobuf::Arena* arena, FloatList&& from) noexcept
      : FloatList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // repeated float value = 1 [packed = true];
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  float value(int index) const;
  void set_value(int index, float value);
  void add_value(float value);
  const ::google::protobuf::RepeatedField<float>& value() const;
  ::google::protobuf::RepeatedField<float>* mutable_value();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_value() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.FloatList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FloatList& from_msg);
    ::google::protobuf::RepeatedField<float> value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT BytesList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.BytesList) */ {
 public:
  inline BytesList() : BytesList(nullptr) {}
  ~BytesList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BytesList(
      ::google::protobuf::internal::ConstantInitialized);

  inline BytesList(const BytesList& from) : BytesList(nullptr, from) {}
  inline BytesList(BytesList&& from) noexcept
      : BytesList(nullptr, std::move(from)) {}
  inline BytesList& operator=(const BytesList& from) {
    CopyFrom(from);
    return *this;
  }
  inline BytesList& operator=(BytesList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BytesList& default_instance() {
    return *internal_default_instance();
  }
  static inline const BytesList* internal_default_instance() {
    return reinterpret_cast<const BytesList*>(
        &_BytesList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BytesList& a, BytesList& b) { a.Swap(&b); }
  inline void Swap(BytesList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BytesList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BytesList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BytesList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BytesList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BytesList& from) { BytesList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BytesList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.BytesList"; }

 protected:
  explicit BytesList(::google::protobuf::Arena* arena);
  BytesList(::google::protobuf::Arena* arena, const BytesList& from);
  BytesList(::google::protobuf::Arena* arena, BytesList&& from) noexcept
      : BytesList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // repeated bytes value = 1;
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  const std::string& value(int index) const;
  std::string* mutable_value(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(int index, Arg_&& value, Args_... args);
  std::string* add_value();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_value(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& value() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_value();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_value() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.BytesList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BytesList& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT Feature final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.Feature) */ {
 public:
  inline Feature() : Feature(nullptr) {}
  ~Feature() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Feature(
      ::google::protobuf::internal::ConstantInitialized);

  inline Feature(const Feature& from) : Feature(nullptr, from) {}
  inline Feature(Feature&& from) noexcept
      : Feature(nullptr, std::move(from)) {}
  inline Feature& operator=(const Feature& from) {
    CopyFrom(from);
    return *this;
  }
  inline Feature& operator=(Feature&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Feature& default_instance() {
    return *internal_default_instance();
  }
  enum KindCase {
    kBytesList = 1,
    kFloatList = 2,
    kInt64List = 3,
    KIND_NOT_SET = 0,
  };
  static inline const Feature* internal_default_instance() {
    return reinterpret_cast<const Feature*>(
        &_Feature_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Feature& a, Feature& b) { a.Swap(&b); }
  inline void Swap(Feature* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Feature* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Feature* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Feature>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Feature& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Feature& from) { Feature::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Feature* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.Feature"; }

 protected:
  explicit Feature(::google::protobuf::Arena* arena);
  Feature(::google::protobuf::Arena* arena, const Feature& from);
  Feature(::google::protobuf::Arena* arena, Feature&& from) noexcept
      : Feature(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBytesListFieldNumber = 1,
    kFloatListFieldNumber = 2,
    kInt64ListFieldNumber = 3,
  };
  // .tensorflow.BytesList bytes_list = 1;
  bool has_bytes_list() const;
  private:
  bool _internal_has_bytes_list() const;

  public:
  void clear_bytes_list() ;
  const ::tensorflow::BytesList& bytes_list() const;
  PROTOBUF_NODISCARD ::tensorflow::BytesList* release_bytes_list();
  ::tensorflow::BytesList* mutable_bytes_list();
  void set_allocated_bytes_list(::tensorflow::BytesList* value);
  void unsafe_arena_set_allocated_bytes_list(::tensorflow::BytesList* value);
  ::tensorflow::BytesList* unsafe_arena_release_bytes_list();

  private:
  const ::tensorflow::BytesList& _internal_bytes_list() const;
  ::tensorflow::BytesList* _internal_mutable_bytes_list();

  public:
  // .tensorflow.FloatList float_list = 2;
  bool has_float_list() const;
  private:
  bool _internal_has_float_list() const;

  public:
  void clear_float_list() ;
  const ::tensorflow::FloatList& float_list() const;
  PROTOBUF_NODISCARD ::tensorflow::FloatList* release_float_list();
  ::tensorflow::FloatList* mutable_float_list();
  void set_allocated_float_list(::tensorflow::FloatList* value);
  void unsafe_arena_set_allocated_float_list(::tensorflow::FloatList* value);
  ::tensorflow::FloatList* unsafe_arena_release_float_list();

  private:
  const ::tensorflow::FloatList& _internal_float_list() const;
  ::tensorflow::FloatList* _internal_mutable_float_list();

  public:
  // .tensorflow.Int64List int64_list = 3;
  bool has_int64_list() const;
  private:
  bool _internal_has_int64_list() const;

  public:
  void clear_int64_list() ;
  const ::tensorflow::Int64List& int64_list() const;
  PROTOBUF_NODISCARD ::tensorflow::Int64List* release_int64_list();
  ::tensorflow::Int64List* mutable_int64_list();
  void set_allocated_int64_list(::tensorflow::Int64List* value);
  void unsafe_arena_set_allocated_int64_list(::tensorflow::Int64List* value);
  ::tensorflow::Int64List* unsafe_arena_release_int64_list();

  private:
  const ::tensorflow::Int64List& _internal_int64_list() const;
  ::tensorflow::Int64List* _internal_mutable_int64_list();

  public:
  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.Feature)
 private:
  class _Internal;
  void set_has_bytes_list();
  void set_has_float_list();
  void set_has_int64_list();
  inline bool has_kind() const;
  inline void clear_has_kind();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Feature& from_msg);
    union KindUnion {
      constexpr KindUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tensorflow::BytesList* bytes_list_;
      ::tensorflow::FloatList* float_list_;
      ::tensorflow::Int64List* int64_list_;
    } kind_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto;
};
// -------------------------------------------------------------------

class Features_FeatureEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Features_FeatureEntry_DoNotUse, std::string, ::tensorflow::Feature,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Features_FeatureEntry_DoNotUse, std::string, ::tensorflow::Feature,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Features_FeatureEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Features_FeatureEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Features_FeatureEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Features_FeatureEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Features_FeatureEntry_DoNotUse*>(
        &_Features_FeatureEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      44, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT FeatureList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.FeatureList) */ {
 public:
  inline FeatureList() : FeatureList(nullptr) {}
  ~FeatureList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FeatureList(
      ::google::protobuf::internal::ConstantInitialized);

  inline FeatureList(const FeatureList& from) : FeatureList(nullptr, from) {}
  inline FeatureList(FeatureList&& from) noexcept
      : FeatureList(nullptr, std::move(from)) {}
  inline FeatureList& operator=(const FeatureList& from) {
    CopyFrom(from);
    return *this;
  }
  inline FeatureList& operator=(FeatureList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FeatureList& default_instance() {
    return *internal_default_instance();
  }
  static inline const FeatureList* internal_default_instance() {
    return reinterpret_cast<const FeatureList*>(
        &_FeatureList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(FeatureList& a, FeatureList& b) { a.Swap(&b); }
  inline void Swap(FeatureList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FeatureList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FeatureList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FeatureList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FeatureList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FeatureList& from) { FeatureList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FeatureList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.FeatureList"; }

 protected:
  explicit FeatureList(::google::protobuf::Arena* arena);
  FeatureList(::google::protobuf::Arena* arena, const FeatureList& from);
  FeatureList(::google::protobuf::Arena* arena, FeatureList&& from) noexcept
      : FeatureList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFeatureFieldNumber = 1,
  };
  // repeated .tensorflow.Feature feature = 1;
  int feature_size() const;
  private:
  int _internal_feature_size() const;

  public:
  void clear_feature() ;
  ::tensorflow::Feature* mutable_feature(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::Feature>* mutable_feature();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::Feature>& _internal_feature() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::Feature>* _internal_mutable_feature();
  public:
  const ::tensorflow::Feature& feature(int index) const;
  ::tensorflow::Feature* add_feature();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::Feature>& feature() const;
  // @@protoc_insertion_point(class_scope:tensorflow.FeatureList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FeatureList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::Feature > feature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT Features final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.Features) */ {
 public:
  inline Features() : Features(nullptr) {}
  ~Features() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Features(
      ::google::protobuf::internal::ConstantInitialized);

  inline Features(const Features& from) : Features(nullptr, from) {}
  inline Features(Features&& from) noexcept
      : Features(nullptr, std::move(from)) {}
  inline Features& operator=(const Features& from) {
    CopyFrom(from);
    return *this;
  }
  inline Features& operator=(Features&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Features& default_instance() {
    return *internal_default_instance();
  }
  static inline const Features* internal_default_instance() {
    return reinterpret_cast<const Features*>(
        &_Features_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Features& a, Features& b) { a.Swap(&b); }
  inline void Swap(Features* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Features* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Features* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Features>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Features& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Features& from) { Features::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Features* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.Features"; }

 protected:
  explicit Features(::google::protobuf::Arena* arena);
  Features(::google::protobuf::Arena* arena, const Features& from);
  Features(::google::protobuf::Arena* arena, Features&& from) noexcept
      : Features(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFeatureFieldNumber = 1,
  };
  // map<string, .tensorflow.Feature> feature = 1;
  int feature_size() const;
  private:
  int _internal_feature_size() const;

  public:
  void clear_feature() ;
  const ::google::protobuf::Map<std::string, ::tensorflow::Feature>& feature() const;
  ::google::protobuf::Map<std::string, ::tensorflow::Feature>* mutable_feature();

  private:
  const ::google::protobuf::Map<std::string, ::tensorflow::Feature>& _internal_feature() const;
  ::google::protobuf::Map<std::string, ::tensorflow::Feature>* _internal_mutable_feature();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.Features)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      35, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Features& from_msg);
    ::google::protobuf::internal::MapField<Features_FeatureEntry_DoNotUse, std::string, ::tensorflow::Feature,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        feature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto;
};
// -------------------------------------------------------------------

class FeatureLists_FeatureListEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          FeatureLists_FeatureListEntry_DoNotUse, std::string, ::tensorflow::FeatureList,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      FeatureLists_FeatureListEntry_DoNotUse, std::string, ::tensorflow::FeatureList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  FeatureLists_FeatureListEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FeatureLists_FeatureListEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit FeatureLists_FeatureListEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const FeatureLists_FeatureListEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const FeatureLists_FeatureListEntry_DoNotUse*>(
        &_FeatureLists_FeatureListEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      52, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT FeatureLists final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.FeatureLists) */ {
 public:
  inline FeatureLists() : FeatureLists(nullptr) {}
  ~FeatureLists() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FeatureLists(
      ::google::protobuf::internal::ConstantInitialized);

  inline FeatureLists(const FeatureLists& from) : FeatureLists(nullptr, from) {}
  inline FeatureLists(FeatureLists&& from) noexcept
      : FeatureLists(nullptr, std::move(from)) {}
  inline FeatureLists& operator=(const FeatureLists& from) {
    CopyFrom(from);
    return *this;
  }
  inline FeatureLists& operator=(FeatureLists&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FeatureLists& default_instance() {
    return *internal_default_instance();
  }
  static inline const FeatureLists* internal_default_instance() {
    return reinterpret_cast<const FeatureLists*>(
        &_FeatureLists_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(FeatureLists& a, FeatureLists& b) { a.Swap(&b); }
  inline void Swap(FeatureLists* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FeatureLists* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FeatureLists* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FeatureLists>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FeatureLists& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FeatureLists& from) { FeatureLists::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FeatureLists* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.FeatureLists"; }

 protected:
  explicit FeatureLists(::google::protobuf::Arena* arena);
  FeatureLists(::google::protobuf::Arena* arena, const FeatureLists& from);
  FeatureLists(::google::protobuf::Arena* arena, FeatureLists&& from) noexcept
      : FeatureLists(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFeatureListFieldNumber = 1,
  };
  // map<string, .tensorflow.FeatureList> feature_list = 1;
  int feature_list_size() const;
  private:
  int _internal_feature_list_size() const;

  public:
  void clear_feature_list() ;
  const ::google::protobuf::Map<std::string, ::tensorflow::FeatureList>& feature_list() const;
  ::google::protobuf::Map<std::string, ::tensorflow::FeatureList>* mutable_feature_list();

  private:
  const ::google::protobuf::Map<std::string, ::tensorflow::FeatureList>& _internal_feature_list() const;
  ::google::protobuf::Map<std::string, ::tensorflow::FeatureList>* _internal_mutable_feature_list();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.FeatureLists)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      44, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FeatureLists& from_msg);
    ::google::protobuf::internal::MapField<FeatureLists_FeatureListEntry_DoNotUse, std::string, ::tensorflow::FeatureList,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        feature_list_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2ffeature_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BytesList

// repeated bytes value = 1;
inline int BytesList::_internal_value_size() const {
  return _internal_value().size();
}
inline int BytesList::value_size() const {
  return _internal_value_size();
}
inline void BytesList::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Clear();
}
inline std::string* BytesList::add_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_value()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.BytesList.value)
  return _s;
}
inline const std::string& BytesList::value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.BytesList.value)
  return _internal_value().Get(index);
}
inline std::string* BytesList::mutable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.BytesList.value)
  return _internal_mutable_value()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void BytesList::set_value(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_value()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:tensorflow.BytesList.value)
}
template <typename Arg_, typename... Args_>
inline void BytesList::add_value(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_value(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:tensorflow.BytesList.value)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BytesList::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.BytesList.value)
  return _internal_value();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BytesList::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.BytesList.value)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_value();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BytesList::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BytesList::_internal_mutable_value() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.value_;
}

// -------------------------------------------------------------------

// FloatList

// repeated float value = 1 [packed = true];
inline int FloatList::_internal_value_size() const {
  return _internal_value().size();
}
inline int FloatList::value_size() const {
  return _internal_value_size();
}
inline void FloatList::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Clear();
}
inline float FloatList::value(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.FloatList.value)
  return _internal_value().Get(index);
}
inline void FloatList::set_value(int index, float value) {
  _internal_mutable_value()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.FloatList.value)
}
inline void FloatList::add_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_value()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.FloatList.value)
}
inline const ::google::protobuf::RepeatedField<float>& FloatList::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.FloatList.value)
  return _internal_value();
}
inline ::google::protobuf::RepeatedField<float>* FloatList::mutable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.FloatList.value)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_value();
}
inline const ::google::protobuf::RepeatedField<float>&
FloatList::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline ::google::protobuf::RepeatedField<float>* FloatList::_internal_mutable_value() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.value_;
}

// -------------------------------------------------------------------

// Int64List

// repeated int64 value = 1 [packed = true, jstype = JS_STRING];
inline int Int64List::_internal_value_size() const {
  return _internal_value().size();
}
inline int Int64List::value_size() const {
  return _internal_value_size();
}
inline void Int64List::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Clear();
}
inline ::int64_t Int64List::value(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.Int64List.value)
  return _internal_value().Get(index);
}
inline void Int64List::set_value(int index, ::int64_t value) {
  _internal_mutable_value()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.Int64List.value)
}
inline void Int64List::add_value(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_value()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.Int64List.value)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Int64List::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.Int64List.value)
  return _internal_value();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64List::mutable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.Int64List.value)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_value();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Int64List::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Int64List::_internal_mutable_value() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.value_;
}

// -------------------------------------------------------------------

// Feature

// .tensorflow.BytesList bytes_list = 1;
inline bool Feature::has_bytes_list() const {
  return kind_case() == kBytesList;
}
inline bool Feature::_internal_has_bytes_list() const {
  return kind_case() == kBytesList;
}
inline void Feature::set_has_bytes_list() {
  _impl_._oneof_case_[0] = kBytesList;
}
inline void Feature::clear_bytes_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kBytesList) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.bytes_list_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.bytes_list_);
    }
    clear_has_kind();
  }
}
inline ::tensorflow::BytesList* Feature::release_bytes_list() {
  // @@protoc_insertion_point(field_release:tensorflow.Feature.bytes_list)
  if (kind_case() == kBytesList) {
    clear_has_kind();
    auto* temp = _impl_.kind_.bytes_list_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.kind_.bytes_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::BytesList& Feature::_internal_bytes_list() const {
  return kind_case() == kBytesList ? *_impl_.kind_.bytes_list_ : reinterpret_cast<::tensorflow::BytesList&>(::tensorflow::_BytesList_default_instance_);
}
inline const ::tensorflow::BytesList& Feature::bytes_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Feature.bytes_list)
  return _internal_bytes_list();
}
inline ::tensorflow::BytesList* Feature::unsafe_arena_release_bytes_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.Feature.bytes_list)
  if (kind_case() == kBytesList) {
    clear_has_kind();
    auto* temp = _impl_.kind_.bytes_list_;
    _impl_.kind_.bytes_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Feature::unsafe_arena_set_allocated_bytes_list(::tensorflow::BytesList* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_kind();
  if (value) {
    set_has_bytes_list();
    _impl_.kind_.bytes_list_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.Feature.bytes_list)
}
inline ::tensorflow::BytesList* Feature::_internal_mutable_bytes_list() {
  if (kind_case() != kBytesList) {
    clear_kind();
    set_has_bytes_list();
    _impl_.kind_.bytes_list_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::BytesList>(GetArena());
  }
  return _impl_.kind_.bytes_list_;
}
inline ::tensorflow::BytesList* Feature::mutable_bytes_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::BytesList* _msg = _internal_mutable_bytes_list();
  // @@protoc_insertion_point(field_mutable:tensorflow.Feature.bytes_list)
  return _msg;
}

// .tensorflow.FloatList float_list = 2;
inline bool Feature::has_float_list() const {
  return kind_case() == kFloatList;
}
inline bool Feature::_internal_has_float_list() const {
  return kind_case() == kFloatList;
}
inline void Feature::set_has_float_list() {
  _impl_._oneof_case_[0] = kFloatList;
}
inline void Feature::clear_float_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kFloatList) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.float_list_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.float_list_);
    }
    clear_has_kind();
  }
}
inline ::tensorflow::FloatList* Feature::release_float_list() {
  // @@protoc_insertion_point(field_release:tensorflow.Feature.float_list)
  if (kind_case() == kFloatList) {
    clear_has_kind();
    auto* temp = _impl_.kind_.float_list_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.kind_.float_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::FloatList& Feature::_internal_float_list() const {
  return kind_case() == kFloatList ? *_impl_.kind_.float_list_ : reinterpret_cast<::tensorflow::FloatList&>(::tensorflow::_FloatList_default_instance_);
}
inline const ::tensorflow::FloatList& Feature::float_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Feature.float_list)
  return _internal_float_list();
}
inline ::tensorflow::FloatList* Feature::unsafe_arena_release_float_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.Feature.float_list)
  if (kind_case() == kFloatList) {
    clear_has_kind();
    auto* temp = _impl_.kind_.float_list_;
    _impl_.kind_.float_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Feature::unsafe_arena_set_allocated_float_list(::tensorflow::FloatList* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_kind();
  if (value) {
    set_has_float_list();
    _impl_.kind_.float_list_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.Feature.float_list)
}
inline ::tensorflow::FloatList* Feature::_internal_mutable_float_list() {
  if (kind_case() != kFloatList) {
    clear_kind();
    set_has_float_list();
    _impl_.kind_.float_list_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::FloatList>(GetArena());
  }
  return _impl_.kind_.float_list_;
}
inline ::tensorflow::FloatList* Feature::mutable_float_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::FloatList* _msg = _internal_mutable_float_list();
  // @@protoc_insertion_point(field_mutable:tensorflow.Feature.float_list)
  return _msg;
}

// .tensorflow.Int64List int64_list = 3;
inline bool Feature::has_int64_list() const {
  return kind_case() == kInt64List;
}
inline bool Feature::_internal_has_int64_list() const {
  return kind_case() == kInt64List;
}
inline void Feature::set_has_int64_list() {
  _impl_._oneof_case_[0] = kInt64List;
}
inline void Feature::clear_int64_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kInt64List) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.int64_list_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.int64_list_);
    }
    clear_has_kind();
  }
}
inline ::tensorflow::Int64List* Feature::release_int64_list() {
  // @@protoc_insertion_point(field_release:tensorflow.Feature.int64_list)
  if (kind_case() == kInt64List) {
    clear_has_kind();
    auto* temp = _impl_.kind_.int64_list_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.kind_.int64_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::Int64List& Feature::_internal_int64_list() const {
  return kind_case() == kInt64List ? *_impl_.kind_.int64_list_ : reinterpret_cast<::tensorflow::Int64List&>(::tensorflow::_Int64List_default_instance_);
}
inline const ::tensorflow::Int64List& Feature::int64_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Feature.int64_list)
  return _internal_int64_list();
}
inline ::tensorflow::Int64List* Feature::unsafe_arena_release_int64_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.Feature.int64_list)
  if (kind_case() == kInt64List) {
    clear_has_kind();
    auto* temp = _impl_.kind_.int64_list_;
    _impl_.kind_.int64_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Feature::unsafe_arena_set_allocated_int64_list(::tensorflow::Int64List* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_kind();
  if (value) {
    set_has_int64_list();
    _impl_.kind_.int64_list_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.Feature.int64_list)
}
inline ::tensorflow::Int64List* Feature::_internal_mutable_int64_list() {
  if (kind_case() != kInt64List) {
    clear_kind();
    set_has_int64_list();
    _impl_.kind_.int64_list_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::Int64List>(GetArena());
  }
  return _impl_.kind_.int64_list_;
}
inline ::tensorflow::Int64List* Feature::mutable_int64_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::Int64List* _msg = _internal_mutable_int64_list();
  // @@protoc_insertion_point(field_mutable:tensorflow.Feature.int64_list)
  return _msg;
}

inline bool Feature::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void Feature::clear_has_kind() {
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}
inline Feature::KindCase Feature::kind_case() const {
  return Feature::KindCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Features

// map<string, .tensorflow.Feature> feature = 1;
inline int Features::_internal_feature_size() const {
  return _internal_feature().size();
}
inline int Features::feature_size() const {
  return _internal_feature_size();
}
inline void Features::clear_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feature_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::Feature>& Features::_internal_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.feature_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::Feature>& Features::feature() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.Features.feature)
  return _internal_feature();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::Feature>* Features::_internal_mutable_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.feature_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::Feature>* Features::mutable_feature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.Features.feature)
  return _internal_mutable_feature();
}

// -------------------------------------------------------------------

// FeatureList

// repeated .tensorflow.Feature feature = 1;
inline int FeatureList::_internal_feature_size() const {
  return _internal_feature().size();
}
inline int FeatureList::feature_size() const {
  return _internal_feature_size();
}
inline void FeatureList::clear_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feature_.Clear();
}
inline ::tensorflow::Feature* FeatureList::mutable_feature(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.FeatureList.feature)
  return _internal_mutable_feature()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::Feature>* FeatureList::mutable_feature()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.FeatureList.feature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_feature();
}
inline const ::tensorflow::Feature& FeatureList::feature(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.FeatureList.feature)
  return _internal_feature().Get(index);
}
inline ::tensorflow::Feature* FeatureList::add_feature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::Feature* _add = _internal_mutable_feature()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.FeatureList.feature)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::Feature>& FeatureList::feature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.FeatureList.feature)
  return _internal_feature();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::Feature>&
FeatureList::_internal_feature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.feature_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::Feature>*
FeatureList::_internal_mutable_feature() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.feature_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FeatureLists

// map<string, .tensorflow.FeatureList> feature_list = 1;
inline int FeatureLists::_internal_feature_list_size() const {
  return _internal_feature_list().size();
}
inline int FeatureLists::feature_list_size() const {
  return _internal_feature_list_size();
}
inline void FeatureLists::clear_feature_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feature_list_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::FeatureList>& FeatureLists::_internal_feature_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.feature_list_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::FeatureList>& FeatureLists::feature_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.FeatureLists.feature_list)
  return _internal_feature_list();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::FeatureList>* FeatureLists::_internal_mutable_feature_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.feature_list_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::FeatureList>* FeatureLists::mutable_feature_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.FeatureLists.feature_list)
  return _internal_mutable_feature_list();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fexample_2ffeature_2eproto_2epb_2eh
