// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/cost_graph.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto;
namespace tensorflow {
class CostGraphDef;
struct CostGraphDefDefaultTypeInternal;
PROTOBUF_EXPORT extern CostGraphDefDefaultTypeInternal _CostGraphDef_default_instance_;
class CostGraphDef_AggregatedCost;
struct CostGraphDef_AggregatedCostDefaultTypeInternal;
PROTOBUF_EXPORT extern CostGraphDef_AggregatedCostDefaultTypeInternal _CostGraphDef_AggregatedCost_default_instance_;
class CostGraphDef_Node;
struct CostGraphDef_NodeDefaultTypeInternal;
PROTOBUF_EXPORT extern CostGraphDef_NodeDefaultTypeInternal _CostGraphDef_Node_default_instance_;
class CostGraphDef_Node_InputInfo;
struct CostGraphDef_Node_InputInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern CostGraphDef_Node_InputInfoDefaultTypeInternal _CostGraphDef_Node_InputInfo_default_instance_;
class CostGraphDef_Node_OutputInfo;
struct CostGraphDef_Node_OutputInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern CostGraphDef_Node_OutputInfoDefaultTypeInternal _CostGraphDef_Node_OutputInfo_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT CostGraphDef_Node_InputInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CostGraphDef.Node.InputInfo) */ {
 public:
  inline CostGraphDef_Node_InputInfo() : CostGraphDef_Node_InputInfo(nullptr) {}
  ~CostGraphDef_Node_InputInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CostGraphDef_Node_InputInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline CostGraphDef_Node_InputInfo(const CostGraphDef_Node_InputInfo& from) : CostGraphDef_Node_InputInfo(nullptr, from) {}
  inline CostGraphDef_Node_InputInfo(CostGraphDef_Node_InputInfo&& from) noexcept
      : CostGraphDef_Node_InputInfo(nullptr, std::move(from)) {}
  inline CostGraphDef_Node_InputInfo& operator=(const CostGraphDef_Node_InputInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CostGraphDef_Node_InputInfo& operator=(CostGraphDef_Node_InputInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CostGraphDef_Node_InputInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CostGraphDef_Node_InputInfo* internal_default_instance() {
    return reinterpret_cast<const CostGraphDef_Node_InputInfo*>(
        &_CostGraphDef_Node_InputInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CostGraphDef_Node_InputInfo& a, CostGraphDef_Node_InputInfo& b) { a.Swap(&b); }
  inline void Swap(CostGraphDef_Node_InputInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CostGraphDef_Node_InputInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CostGraphDef_Node_InputInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CostGraphDef_Node_InputInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CostGraphDef_Node_InputInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CostGraphDef_Node_InputInfo& from) { CostGraphDef_Node_InputInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CostGraphDef_Node_InputInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CostGraphDef.Node.InputInfo"; }

 protected:
  explicit CostGraphDef_Node_InputInfo(::google::protobuf::Arena* arena);
  CostGraphDef_Node_InputInfo(::google::protobuf::Arena* arena, const CostGraphDef_Node_InputInfo& from);
  CostGraphDef_Node_InputInfo(::google::protobuf::Arena* arena, CostGraphDef_Node_InputInfo&& from) noexcept
      : CostGraphDef_Node_InputInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPrecedingNodeFieldNumber = 1,
    kPrecedingPortFieldNumber = 2,
  };
  // int32 preceding_node = 1;
  void clear_preceding_node() ;
  ::int32_t preceding_node() const;
  void set_preceding_node(::int32_t value);

  private:
  ::int32_t _internal_preceding_node() const;
  void _internal_set_preceding_node(::int32_t value);

  public:
  // int32 preceding_port = 2;
  void clear_preceding_port() ;
  ::int32_t preceding_port() const;
  void set_preceding_port(::int32_t value);

  private:
  ::int32_t _internal_preceding_port() const;
  void _internal_set_preceding_port(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CostGraphDef.Node.InputInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CostGraphDef_Node_InputInfo& from_msg);
    ::int32_t preceding_node_;
    ::int32_t preceding_port_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CostGraphDef_AggregatedCost final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CostGraphDef.AggregatedCost) */ {
 public:
  inline CostGraphDef_AggregatedCost() : CostGraphDef_AggregatedCost(nullptr) {}
  ~CostGraphDef_AggregatedCost() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CostGraphDef_AggregatedCost(
      ::google::protobuf::internal::ConstantInitialized);

  inline CostGraphDef_AggregatedCost(const CostGraphDef_AggregatedCost& from) : CostGraphDef_AggregatedCost(nullptr, from) {}
  inline CostGraphDef_AggregatedCost(CostGraphDef_AggregatedCost&& from) noexcept
      : CostGraphDef_AggregatedCost(nullptr, std::move(from)) {}
  inline CostGraphDef_AggregatedCost& operator=(const CostGraphDef_AggregatedCost& from) {
    CopyFrom(from);
    return *this;
  }
  inline CostGraphDef_AggregatedCost& operator=(CostGraphDef_AggregatedCost&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CostGraphDef_AggregatedCost& default_instance() {
    return *internal_default_instance();
  }
  static inline const CostGraphDef_AggregatedCost* internal_default_instance() {
    return reinterpret_cast<const CostGraphDef_AggregatedCost*>(
        &_CostGraphDef_AggregatedCost_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CostGraphDef_AggregatedCost& a, CostGraphDef_AggregatedCost& b) { a.Swap(&b); }
  inline void Swap(CostGraphDef_AggregatedCost* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CostGraphDef_AggregatedCost* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CostGraphDef_AggregatedCost* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CostGraphDef_AggregatedCost>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CostGraphDef_AggregatedCost& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CostGraphDef_AggregatedCost& from) { CostGraphDef_AggregatedCost::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CostGraphDef_AggregatedCost* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CostGraphDef.AggregatedCost"; }

 protected:
  explicit CostGraphDef_AggregatedCost(::google::protobuf::Arena* arena);
  CostGraphDef_AggregatedCost(::google::protobuf::Arena* arena, const CostGraphDef_AggregatedCost& from);
  CostGraphDef_AggregatedCost(::google::protobuf::Arena* arena, CostGraphDef_AggregatedCost&& from) noexcept
      : CostGraphDef_AggregatedCost(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDimensionFieldNumber = 2,
    kCostFieldNumber = 1,
  };
  // string dimension = 2;
  void clear_dimension() ;
  const std::string& dimension() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dimension(Arg_&& arg, Args_... args);
  std::string* mutable_dimension();
  PROTOBUF_NODISCARD std::string* release_dimension();
  void set_allocated_dimension(std::string* value);

  private:
  const std::string& _internal_dimension() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dimension(
      const std::string& value);
  std::string* _internal_mutable_dimension();

  public:
  // float cost = 1;
  void clear_cost() ;
  float cost() const;
  void set_cost(float value);

  private:
  float _internal_cost() const;
  void _internal_set_cost(float value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CostGraphDef.AggregatedCost)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CostGraphDef_AggregatedCost& from_msg);
    ::google::protobuf::internal::ArenaStringPtr dimension_;
    float cost_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CostGraphDef_Node_OutputInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CostGraphDef.Node.OutputInfo) */ {
 public:
  inline CostGraphDef_Node_OutputInfo() : CostGraphDef_Node_OutputInfo(nullptr) {}
  ~CostGraphDef_Node_OutputInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CostGraphDef_Node_OutputInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline CostGraphDef_Node_OutputInfo(const CostGraphDef_Node_OutputInfo& from) : CostGraphDef_Node_OutputInfo(nullptr, from) {}
  inline CostGraphDef_Node_OutputInfo(CostGraphDef_Node_OutputInfo&& from) noexcept
      : CostGraphDef_Node_OutputInfo(nullptr, std::move(from)) {}
  inline CostGraphDef_Node_OutputInfo& operator=(const CostGraphDef_Node_OutputInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CostGraphDef_Node_OutputInfo& operator=(CostGraphDef_Node_OutputInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CostGraphDef_Node_OutputInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CostGraphDef_Node_OutputInfo* internal_default_instance() {
    return reinterpret_cast<const CostGraphDef_Node_OutputInfo*>(
        &_CostGraphDef_Node_OutputInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CostGraphDef_Node_OutputInfo& a, CostGraphDef_Node_OutputInfo& b) { a.Swap(&b); }
  inline void Swap(CostGraphDef_Node_OutputInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CostGraphDef_Node_OutputInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CostGraphDef_Node_OutputInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CostGraphDef_Node_OutputInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CostGraphDef_Node_OutputInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CostGraphDef_Node_OutputInfo& from) { CostGraphDef_Node_OutputInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CostGraphDef_Node_OutputInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CostGraphDef.Node.OutputInfo"; }

 protected:
  explicit CostGraphDef_Node_OutputInfo(::google::protobuf::Arena* arena);
  CostGraphDef_Node_OutputInfo(::google::protobuf::Arena* arena, const CostGraphDef_Node_OutputInfo& from);
  CostGraphDef_Node_OutputInfo(::google::protobuf::Arena* arena, CostGraphDef_Node_OutputInfo&& from) noexcept
      : CostGraphDef_Node_OutputInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShapeFieldNumber = 3,
    kSizeFieldNumber = 1,
    kAliasInputPortFieldNumber = 2,
    kDtypeFieldNumber = 4,
  };
  // .tensorflow.TensorShapeProto shape = 3;
  bool has_shape() const;
  void clear_shape() ;
  const ::tensorflow::TensorShapeProto& shape() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorShapeProto* release_shape();
  ::tensorflow::TensorShapeProto* mutable_shape();
  void set_allocated_shape(::tensorflow::TensorShapeProto* value);
  void unsafe_arena_set_allocated_shape(::tensorflow::TensorShapeProto* value);
  ::tensorflow::TensorShapeProto* unsafe_arena_release_shape();

  private:
  const ::tensorflow::TensorShapeProto& _internal_shape() const;
  ::tensorflow::TensorShapeProto* _internal_mutable_shape();

  public:
  // int64 size = 1;
  void clear_size() ;
  ::int64_t size() const;
  void set_size(::int64_t value);

  private:
  ::int64_t _internal_size() const;
  void _internal_set_size(::int64_t value);

  public:
  // int64 alias_input_port = 2;
  void clear_alias_input_port() ;
  ::int64_t alias_input_port() const;
  void set_alias_input_port(::int64_t value);

  private:
  ::int64_t _internal_alias_input_port() const;
  void _internal_set_alias_input_port(::int64_t value);

  public:
  // .tensorflow.DataType dtype = 4;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CostGraphDef.Node.OutputInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CostGraphDef_Node_OutputInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::TensorShapeProto* shape_;
    ::int64_t size_;
    ::int64_t alias_input_port_;
    int dtype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CostGraphDef_Node final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CostGraphDef.Node) */ {
 public:
  inline CostGraphDef_Node() : CostGraphDef_Node(nullptr) {}
  ~CostGraphDef_Node() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CostGraphDef_Node(
      ::google::protobuf::internal::ConstantInitialized);

  inline CostGraphDef_Node(const CostGraphDef_Node& from) : CostGraphDef_Node(nullptr, from) {}
  inline CostGraphDef_Node(CostGraphDef_Node&& from) noexcept
      : CostGraphDef_Node(nullptr, std::move(from)) {}
  inline CostGraphDef_Node& operator=(const CostGraphDef_Node& from) {
    CopyFrom(from);
    return *this;
  }
  inline CostGraphDef_Node& operator=(CostGraphDef_Node&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CostGraphDef_Node& default_instance() {
    return *internal_default_instance();
  }
  static inline const CostGraphDef_Node* internal_default_instance() {
    return reinterpret_cast<const CostGraphDef_Node*>(
        &_CostGraphDef_Node_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CostGraphDef_Node& a, CostGraphDef_Node& b) { a.Swap(&b); }
  inline void Swap(CostGraphDef_Node* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CostGraphDef_Node* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CostGraphDef_Node* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CostGraphDef_Node>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CostGraphDef_Node& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CostGraphDef_Node& from) { CostGraphDef_Node::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CostGraphDef_Node* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CostGraphDef.Node"; }

 protected:
  explicit CostGraphDef_Node(::google::protobuf::Arena* arena);
  CostGraphDef_Node(::google::protobuf::Arena* arena, const CostGraphDef_Node& from);
  CostGraphDef_Node(::google::protobuf::Arena* arena, CostGraphDef_Node&& from) noexcept
      : CostGraphDef_Node(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using InputInfo = CostGraphDef_Node_InputInfo;
  using OutputInfo = CostGraphDef_Node_OutputInfo;

  // accessors -------------------------------------------------------
  enum : int {
    kInputInfoFieldNumber = 4,
    kOutputInfoFieldNumber = 5,
    kControlInputFieldNumber = 8,
    kNameFieldNumber = 1,
    kDeviceFieldNumber = 2,
    kTemporaryMemorySizeFieldNumber = 6,
    kComputeCostFieldNumber = 9,
    kIdFieldNumber = 3,
    kIsFinalFieldNumber = 7,
    kInaccurateFieldNumber = 17,
    kHostTempMemorySizeFieldNumber = 10,
    kDeviceTempMemorySizeFieldNumber = 11,
    kPersistentMemorySizeFieldNumber = 12,
    kComputeTimeFieldNumber = 14,
    kMemoryTimeFieldNumber = 15,
    kDevicePersistentMemorySizeFieldNumber = 16,
  };
  // repeated .tensorflow.CostGraphDef.Node.InputInfo input_info = 4;
  int input_info_size() const;
  private:
  int _internal_input_info_size() const;

  public:
  void clear_input_info() ;
  ::tensorflow::CostGraphDef_Node_InputInfo* mutable_input_info(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_InputInfo>* mutable_input_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_InputInfo>& _internal_input_info() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_InputInfo>* _internal_mutable_input_info();
  public:
  const ::tensorflow::CostGraphDef_Node_InputInfo& input_info(int index) const;
  ::tensorflow::CostGraphDef_Node_InputInfo* add_input_info();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_InputInfo>& input_info() const;
  // repeated .tensorflow.CostGraphDef.Node.OutputInfo output_info = 5;
  int output_info_size() const;
  private:
  int _internal_output_info_size() const;

  public:
  void clear_output_info() ;
  ::tensorflow::CostGraphDef_Node_OutputInfo* mutable_output_info(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_OutputInfo>* mutable_output_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_OutputInfo>& _internal_output_info() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_OutputInfo>* _internal_mutable_output_info();
  public:
  const ::tensorflow::CostGraphDef_Node_OutputInfo& output_info(int index) const;
  ::tensorflow::CostGraphDef_Node_OutputInfo* add_output_info();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_OutputInfo>& output_info() const;
  // repeated int32 control_input = 8;
  int control_input_size() const;
  private:
  int _internal_control_input_size() const;

  public:
  void clear_control_input() ;
  ::int32_t control_input(int index) const;
  void set_control_input(int index, ::int32_t value);
  void add_control_input(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& control_input() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_control_input();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_control_input() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_control_input();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string device = 2;
  void clear_device() ;
  const std::string& device() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device(Arg_&& arg, Args_... args);
  std::string* mutable_device();
  PROTOBUF_NODISCARD std::string* release_device();
  void set_allocated_device(std::string* value);

  private:
  const std::string& _internal_device() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device(
      const std::string& value);
  std::string* _internal_mutable_device();

  public:
  // int64 temporary_memory_size = 6;
  void clear_temporary_memory_size() ;
  ::int64_t temporary_memory_size() const;
  void set_temporary_memory_size(::int64_t value);

  private:
  ::int64_t _internal_temporary_memory_size() const;
  void _internal_set_temporary_memory_size(::int64_t value);

  public:
  // int64 compute_cost = 9;
  void clear_compute_cost() ;
  ::int64_t compute_cost() const;
  void set_compute_cost(::int64_t value);

  private:
  ::int64_t _internal_compute_cost() const;
  void _internal_set_compute_cost(::int64_t value);

  public:
  // int32 id = 3;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // bool is_final = 7;
  void clear_is_final() ;
  bool is_final() const;
  void set_is_final(bool value);

  private:
  bool _internal_is_final() const;
  void _internal_set_is_final(bool value);

  public:
  // bool inaccurate = 17;
  void clear_inaccurate() ;
  bool inaccurate() const;
  void set_inaccurate(bool value);

  private:
  bool _internal_inaccurate() const;
  void _internal_set_inaccurate(bool value);

  public:
  // int64 host_temp_memory_size = 10 [deprecated = true];
  [[deprecated]]  void clear_host_temp_memory_size() ;
  [[deprecated]] ::int64_t host_temp_memory_size() const;
  [[deprecated]] void set_host_temp_memory_size(::int64_t value);

  private:
  ::int64_t _internal_host_temp_memory_size() const;
  void _internal_set_host_temp_memory_size(::int64_t value);

  public:
  // int64 device_temp_memory_size = 11 [deprecated = true];
  [[deprecated]]  void clear_device_temp_memory_size() ;
  [[deprecated]] ::int64_t device_temp_memory_size() const;
  [[deprecated]] void set_device_temp_memory_size(::int64_t value);

  private:
  ::int64_t _internal_device_temp_memory_size() const;
  void _internal_set_device_temp_memory_size(::int64_t value);

  public:
  // int64 persistent_memory_size = 12;
  void clear_persistent_memory_size() ;
  ::int64_t persistent_memory_size() const;
  void set_persistent_memory_size(::int64_t value);

  private:
  ::int64_t _internal_persistent_memory_size() const;
  void _internal_set_persistent_memory_size(::int64_t value);

  public:
  // int64 compute_time = 14;
  void clear_compute_time() ;
  ::int64_t compute_time() const;
  void set_compute_time(::int64_t value);

  private:
  ::int64_t _internal_compute_time() const;
  void _internal_set_compute_time(::int64_t value);

  public:
  // int64 memory_time = 15;
  void clear_memory_time() ;
  ::int64_t memory_time() const;
  void set_memory_time(::int64_t value);

  private:
  ::int64_t _internal_memory_time() const;
  void _internal_set_memory_time(::int64_t value);

  public:
  // int64 device_persistent_memory_size = 16 [deprecated = true];
  [[deprecated]]  void clear_device_persistent_memory_size() ;
  [[deprecated]] ::int64_t device_persistent_memory_size() const;
  [[deprecated]] void set_device_persistent_memory_size(::int64_t value);

  private:
  ::int64_t _internal_device_persistent_memory_size() const;
  void _internal_set_device_persistent_memory_size(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CostGraphDef.Node)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 16, 2,
      63, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CostGraphDef_Node& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_Node_InputInfo > input_info_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_Node_OutputInfo > output_info_;
    ::google::protobuf::RepeatedField<::int32_t> control_input_;
    mutable ::google::protobuf::internal::CachedSize _control_input_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr device_;
    ::int64_t temporary_memory_size_;
    ::int64_t compute_cost_;
    ::int32_t id_;
    bool is_final_;
    bool inaccurate_;
    ::int64_t host_temp_memory_size_;
    ::int64_t device_temp_memory_size_;
    ::int64_t persistent_memory_size_;
    ::int64_t compute_time_;
    ::int64_t memory_time_;
    ::int64_t device_persistent_memory_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CostGraphDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CostGraphDef) */ {
 public:
  inline CostGraphDef() : CostGraphDef(nullptr) {}
  ~CostGraphDef() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CostGraphDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline CostGraphDef(const CostGraphDef& from) : CostGraphDef(nullptr, from) {}
  inline CostGraphDef(CostGraphDef&& from) noexcept
      : CostGraphDef(nullptr, std::move(from)) {}
  inline CostGraphDef& operator=(const CostGraphDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline CostGraphDef& operator=(CostGraphDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CostGraphDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const CostGraphDef* internal_default_instance() {
    return reinterpret_cast<const CostGraphDef*>(
        &_CostGraphDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CostGraphDef& a, CostGraphDef& b) { a.Swap(&b); }
  inline void Swap(CostGraphDef* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CostGraphDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CostGraphDef* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CostGraphDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CostGraphDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CostGraphDef& from) { CostGraphDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CostGraphDef* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CostGraphDef"; }

 protected:
  explicit CostGraphDef(::google::protobuf::Arena* arena);
  CostGraphDef(::google::protobuf::Arena* arena, const CostGraphDef& from);
  CostGraphDef(::google::protobuf::Arena* arena, CostGraphDef&& from) noexcept
      : CostGraphDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Node = CostGraphDef_Node;
  using AggregatedCost = CostGraphDef_AggregatedCost;

  // accessors -------------------------------------------------------
  enum : int {
    kNodeFieldNumber = 1,
    kCostFieldNumber = 2,
  };
  // repeated .tensorflow.CostGraphDef.Node node = 1;
  int node_size() const;
  private:
  int _internal_node_size() const;

  public:
  void clear_node() ;
  ::tensorflow::CostGraphDef_Node* mutable_node(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node>* mutable_node();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node>& _internal_node() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node>* _internal_mutable_node();
  public:
  const ::tensorflow::CostGraphDef_Node& node(int index) const;
  ::tensorflow::CostGraphDef_Node* add_node();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node>& node() const;
  // repeated .tensorflow.CostGraphDef.AggregatedCost cost = 2;
  int cost_size() const;
  private:
  int _internal_cost_size() const;

  public:
  void clear_cost() ;
  ::tensorflow::CostGraphDef_AggregatedCost* mutable_cost(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_AggregatedCost>* mutable_cost();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_AggregatedCost>& _internal_cost() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_AggregatedCost>* _internal_mutable_cost();
  public:
  const ::tensorflow::CostGraphDef_AggregatedCost& cost(int index) const;
  ::tensorflow::CostGraphDef_AggregatedCost* add_cost();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_AggregatedCost>& cost() const;
  // @@protoc_insertion_point(class_scope:tensorflow.CostGraphDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CostGraphDef& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_Node > node_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_AggregatedCost > cost_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CostGraphDef_Node_InputInfo

// int32 preceding_node = 1;
inline void CostGraphDef_Node_InputInfo::clear_preceding_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preceding_node_ = 0;
}
inline ::int32_t CostGraphDef_Node_InputInfo::preceding_node() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.InputInfo.preceding_node)
  return _internal_preceding_node();
}
inline void CostGraphDef_Node_InputInfo::set_preceding_node(::int32_t value) {
  _internal_set_preceding_node(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.InputInfo.preceding_node)
}
inline ::int32_t CostGraphDef_Node_InputInfo::_internal_preceding_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preceding_node_;
}
inline void CostGraphDef_Node_InputInfo::_internal_set_preceding_node(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preceding_node_ = value;
}

// int32 preceding_port = 2;
inline void CostGraphDef_Node_InputInfo::clear_preceding_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preceding_port_ = 0;
}
inline ::int32_t CostGraphDef_Node_InputInfo::preceding_port() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.InputInfo.preceding_port)
  return _internal_preceding_port();
}
inline void CostGraphDef_Node_InputInfo::set_preceding_port(::int32_t value) {
  _internal_set_preceding_port(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.InputInfo.preceding_port)
}
inline ::int32_t CostGraphDef_Node_InputInfo::_internal_preceding_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preceding_port_;
}
inline void CostGraphDef_Node_InputInfo::_internal_set_preceding_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preceding_port_ = value;
}

// -------------------------------------------------------------------

// CostGraphDef_Node_OutputInfo

// int64 size = 1;
inline void CostGraphDef_Node_OutputInfo::clear_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node_OutputInfo::size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.OutputInfo.size)
  return _internal_size();
}
inline void CostGraphDef_Node_OutputInfo::set_size(::int64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.OutputInfo.size)
}
inline ::int64_t CostGraphDef_Node_OutputInfo::_internal_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_;
}
inline void CostGraphDef_Node_OutputInfo::_internal_set_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = value;
}

// int64 alias_input_port = 2;
inline void CostGraphDef_Node_OutputInfo::clear_alias_input_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_input_port_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node_OutputInfo::alias_input_port() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.OutputInfo.alias_input_port)
  return _internal_alias_input_port();
}
inline void CostGraphDef_Node_OutputInfo::set_alias_input_port(::int64_t value) {
  _internal_set_alias_input_port(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.OutputInfo.alias_input_port)
}
inline ::int64_t CostGraphDef_Node_OutputInfo::_internal_alias_input_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_input_port_;
}
inline void CostGraphDef_Node_OutputInfo::_internal_set_alias_input_port(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_input_port_ = value;
}

// .tensorflow.TensorShapeProto shape = 3;
inline bool CostGraphDef_Node_OutputInfo::has_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shape_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorShapeProto& CostGraphDef_Node_OutputInfo::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorShapeProto* p = _impl_.shape_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorShapeProto&>(::tensorflow::_TensorShapeProto_default_instance_);
}
inline const ::tensorflow::TensorShapeProto& CostGraphDef_Node_OutputInfo::shape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.OutputInfo.shape)
  return _internal_shape();
}
inline void CostGraphDef_Node_OutputInfo::unsafe_arena_set_allocated_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }
  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CostGraphDef.Node.OutputInfo.shape)
}
inline ::tensorflow::TensorShapeProto* CostGraphDef_Node_OutputInfo::release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* released = _impl_.shape_;
  _impl_.shape_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TensorShapeProto* CostGraphDef_Node_OutputInfo::unsafe_arena_release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CostGraphDef.Node.OutputInfo.shape)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* temp = _impl_.shape_;
  _impl_.shape_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorShapeProto* CostGraphDef_Node_OutputInfo::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorShapeProto>(GetArena());
    _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(p);
  }
  return _impl_.shape_;
}
inline ::tensorflow::TensorShapeProto* CostGraphDef_Node_OutputInfo::mutable_shape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TensorShapeProto* _msg = _internal_mutable_shape();
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.OutputInfo.shape)
  return _msg;
}
inline void CostGraphDef_Node_OutputInfo::set_allocated_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CostGraphDef.Node.OutputInfo.shape)
}

// .tensorflow.DataType dtype = 4;
inline void CostGraphDef_Node_OutputInfo::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
}
inline ::tensorflow::DataType CostGraphDef_Node_OutputInfo::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.OutputInfo.dtype)
  return _internal_dtype();
}
inline void CostGraphDef_Node_OutputInfo::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.OutputInfo.dtype)
}
inline ::tensorflow::DataType CostGraphDef_Node_OutputInfo::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void CostGraphDef_Node_OutputInfo::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// -------------------------------------------------------------------

// CostGraphDef_Node

// string name = 1;
inline void CostGraphDef_Node::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CostGraphDef_Node::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CostGraphDef_Node::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.name)
}
inline std::string* CostGraphDef_Node::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.name)
  return _s;
}
inline const std::string& CostGraphDef_Node::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CostGraphDef_Node::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CostGraphDef_Node::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CostGraphDef_Node::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CostGraphDef.Node.name)
  return _impl_.name_.Release();
}
inline void CostGraphDef_Node::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CostGraphDef.Node.name)
}

// string device = 2;
inline void CostGraphDef_Node::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.ClearToEmpty();
}
inline const std::string& CostGraphDef_Node::device() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.device)
  return _internal_device();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CostGraphDef_Node::set_device(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.device)
}
inline std::string* CostGraphDef_Node::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.device)
  return _s;
}
inline const std::string& CostGraphDef_Node::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_.Get();
}
inline void CostGraphDef_Node::_internal_set_device(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(value, GetArena());
}
inline std::string* CostGraphDef_Node::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_.Mutable( GetArena());
}
inline std::string* CostGraphDef_Node::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CostGraphDef.Node.device)
  return _impl_.device_.Release();
}
inline void CostGraphDef_Node::set_allocated_device(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_.IsDefault()) {
          _impl_.device_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CostGraphDef.Node.device)
}

// int32 id = 3;
inline void CostGraphDef_Node::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t CostGraphDef_Node::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.id)
  return _internal_id();
}
inline void CostGraphDef_Node::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.id)
}
inline ::int32_t CostGraphDef_Node::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void CostGraphDef_Node::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// repeated .tensorflow.CostGraphDef.Node.InputInfo input_info = 4;
inline int CostGraphDef_Node::_internal_input_info_size() const {
  return _internal_input_info().size();
}
inline int CostGraphDef_Node::input_info_size() const {
  return _internal_input_info_size();
}
inline void CostGraphDef_Node::clear_input_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_info_.Clear();
}
inline ::tensorflow::CostGraphDef_Node_InputInfo* CostGraphDef_Node::mutable_input_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.input_info)
  return _internal_mutable_input_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_InputInfo>* CostGraphDef_Node::mutable_input_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CostGraphDef.Node.input_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_input_info();
}
inline const ::tensorflow::CostGraphDef_Node_InputInfo& CostGraphDef_Node::input_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.input_info)
  return _internal_input_info().Get(index);
}
inline ::tensorflow::CostGraphDef_Node_InputInfo* CostGraphDef_Node::add_input_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::CostGraphDef_Node_InputInfo* _add = _internal_mutable_input_info()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.CostGraphDef.Node.input_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_InputInfo>& CostGraphDef_Node::input_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CostGraphDef.Node.input_info)
  return _internal_input_info();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_InputInfo>&
CostGraphDef_Node::_internal_input_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_info_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_InputInfo>*
CostGraphDef_Node::_internal_mutable_input_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.input_info_;
}

// repeated .tensorflow.CostGraphDef.Node.OutputInfo output_info = 5;
inline int CostGraphDef_Node::_internal_output_info_size() const {
  return _internal_output_info().size();
}
inline int CostGraphDef_Node::output_info_size() const {
  return _internal_output_info_size();
}
inline void CostGraphDef_Node::clear_output_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_info_.Clear();
}
inline ::tensorflow::CostGraphDef_Node_OutputInfo* CostGraphDef_Node::mutable_output_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.output_info)
  return _internal_mutable_output_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_OutputInfo>* CostGraphDef_Node::mutable_output_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CostGraphDef.Node.output_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_output_info();
}
inline const ::tensorflow::CostGraphDef_Node_OutputInfo& CostGraphDef_Node::output_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.output_info)
  return _internal_output_info().Get(index);
}
inline ::tensorflow::CostGraphDef_Node_OutputInfo* CostGraphDef_Node::add_output_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::CostGraphDef_Node_OutputInfo* _add = _internal_mutable_output_info()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.CostGraphDef.Node.output_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_OutputInfo>& CostGraphDef_Node::output_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CostGraphDef.Node.output_info)
  return _internal_output_info();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_OutputInfo>&
CostGraphDef_Node::_internal_output_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_info_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node_OutputInfo>*
CostGraphDef_Node::_internal_mutable_output_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.output_info_;
}

// int64 temporary_memory_size = 6;
inline void CostGraphDef_Node::clear_temporary_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temporary_memory_size_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node::temporary_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.temporary_memory_size)
  return _internal_temporary_memory_size();
}
inline void CostGraphDef_Node::set_temporary_memory_size(::int64_t value) {
  _internal_set_temporary_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.temporary_memory_size)
}
inline ::int64_t CostGraphDef_Node::_internal_temporary_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.temporary_memory_size_;
}
inline void CostGraphDef_Node::_internal_set_temporary_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temporary_memory_size_ = value;
}

// int64 persistent_memory_size = 12;
inline void CostGraphDef_Node::clear_persistent_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persistent_memory_size_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node::persistent_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.persistent_memory_size)
  return _internal_persistent_memory_size();
}
inline void CostGraphDef_Node::set_persistent_memory_size(::int64_t value) {
  _internal_set_persistent_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.persistent_memory_size)
}
inline ::int64_t CostGraphDef_Node::_internal_persistent_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.persistent_memory_size_;
}
inline void CostGraphDef_Node::_internal_set_persistent_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persistent_memory_size_ = value;
}

// int64 host_temp_memory_size = 10 [deprecated = true];
inline void CostGraphDef_Node::clear_host_temp_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_temp_memory_size_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node::host_temp_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.host_temp_memory_size)
  return _internal_host_temp_memory_size();
}
inline void CostGraphDef_Node::set_host_temp_memory_size(::int64_t value) {
  _internal_set_host_temp_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.host_temp_memory_size)
}
inline ::int64_t CostGraphDef_Node::_internal_host_temp_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_temp_memory_size_;
}
inline void CostGraphDef_Node::_internal_set_host_temp_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_temp_memory_size_ = value;
}

// int64 device_temp_memory_size = 11 [deprecated = true];
inline void CostGraphDef_Node::clear_device_temp_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_temp_memory_size_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node::device_temp_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.device_temp_memory_size)
  return _internal_device_temp_memory_size();
}
inline void CostGraphDef_Node::set_device_temp_memory_size(::int64_t value) {
  _internal_set_device_temp_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.device_temp_memory_size)
}
inline ::int64_t CostGraphDef_Node::_internal_device_temp_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_temp_memory_size_;
}
inline void CostGraphDef_Node::_internal_set_device_temp_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_temp_memory_size_ = value;
}

// int64 device_persistent_memory_size = 16 [deprecated = true];
inline void CostGraphDef_Node::clear_device_persistent_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_persistent_memory_size_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node::device_persistent_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.device_persistent_memory_size)
  return _internal_device_persistent_memory_size();
}
inline void CostGraphDef_Node::set_device_persistent_memory_size(::int64_t value) {
  _internal_set_device_persistent_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.device_persistent_memory_size)
}
inline ::int64_t CostGraphDef_Node::_internal_device_persistent_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_persistent_memory_size_;
}
inline void CostGraphDef_Node::_internal_set_device_persistent_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_persistent_memory_size_ = value;
}

// int64 compute_cost = 9;
inline void CostGraphDef_Node::clear_compute_cost() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_cost_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node::compute_cost() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.compute_cost)
  return _internal_compute_cost();
}
inline void CostGraphDef_Node::set_compute_cost(::int64_t value) {
  _internal_set_compute_cost(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.compute_cost)
}
inline ::int64_t CostGraphDef_Node::_internal_compute_cost() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compute_cost_;
}
inline void CostGraphDef_Node::_internal_set_compute_cost(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_cost_ = value;
}

// int64 compute_time = 14;
inline void CostGraphDef_Node::clear_compute_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_time_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node::compute_time() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.compute_time)
  return _internal_compute_time();
}
inline void CostGraphDef_Node::set_compute_time(::int64_t value) {
  _internal_set_compute_time(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.compute_time)
}
inline ::int64_t CostGraphDef_Node::_internal_compute_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compute_time_;
}
inline void CostGraphDef_Node::_internal_set_compute_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_time_ = value;
}

// int64 memory_time = 15;
inline void CostGraphDef_Node::clear_memory_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_time_ = ::int64_t{0};
}
inline ::int64_t CostGraphDef_Node::memory_time() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.memory_time)
  return _internal_memory_time();
}
inline void CostGraphDef_Node::set_memory_time(::int64_t value) {
  _internal_set_memory_time(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.memory_time)
}
inline ::int64_t CostGraphDef_Node::_internal_memory_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_time_;
}
inline void CostGraphDef_Node::_internal_set_memory_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_time_ = value;
}

// bool is_final = 7;
inline void CostGraphDef_Node::clear_is_final() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_final_ = false;
}
inline bool CostGraphDef_Node::is_final() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.is_final)
  return _internal_is_final();
}
inline void CostGraphDef_Node::set_is_final(bool value) {
  _internal_set_is_final(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.is_final)
}
inline bool CostGraphDef_Node::_internal_is_final() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_final_;
}
inline void CostGraphDef_Node::_internal_set_is_final(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_final_ = value;
}

// repeated int32 control_input = 8;
inline int CostGraphDef_Node::_internal_control_input_size() const {
  return _internal_control_input().size();
}
inline int CostGraphDef_Node::control_input_size() const {
  return _internal_control_input_size();
}
inline void CostGraphDef_Node::clear_control_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_input_.Clear();
}
inline ::int32_t CostGraphDef_Node::control_input(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.control_input)
  return _internal_control_input().Get(index);
}
inline void CostGraphDef_Node::set_control_input(int index, ::int32_t value) {
  _internal_mutable_control_input()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.control_input)
}
inline void CostGraphDef_Node::add_control_input(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_control_input()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.CostGraphDef.Node.control_input)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& CostGraphDef_Node::control_input() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CostGraphDef.Node.control_input)
  return _internal_control_input();
}
inline ::google::protobuf::RepeatedField<::int32_t>* CostGraphDef_Node::mutable_control_input()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CostGraphDef.Node.control_input)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_control_input();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
CostGraphDef_Node::_internal_control_input() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_input_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* CostGraphDef_Node::_internal_mutable_control_input() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.control_input_;
}

// bool inaccurate = 17;
inline void CostGraphDef_Node::clear_inaccurate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inaccurate_ = false;
}
inline bool CostGraphDef_Node::inaccurate() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.inaccurate)
  return _internal_inaccurate();
}
inline void CostGraphDef_Node::set_inaccurate(bool value) {
  _internal_set_inaccurate(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.inaccurate)
}
inline bool CostGraphDef_Node::_internal_inaccurate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inaccurate_;
}
inline void CostGraphDef_Node::_internal_set_inaccurate(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inaccurate_ = value;
}

// -------------------------------------------------------------------

// CostGraphDef_AggregatedCost

// float cost = 1;
inline void CostGraphDef_AggregatedCost::clear_cost() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cost_ = 0;
}
inline float CostGraphDef_AggregatedCost::cost() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.AggregatedCost.cost)
  return _internal_cost();
}
inline void CostGraphDef_AggregatedCost::set_cost(float value) {
  _internal_set_cost(value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.AggregatedCost.cost)
}
inline float CostGraphDef_AggregatedCost::_internal_cost() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cost_;
}
inline void CostGraphDef_AggregatedCost::_internal_set_cost(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cost_ = value;
}

// string dimension = 2;
inline void CostGraphDef_AggregatedCost::clear_dimension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimension_.ClearToEmpty();
}
inline const std::string& CostGraphDef_AggregatedCost::dimension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.AggregatedCost.dimension)
  return _internal_dimension();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CostGraphDef_AggregatedCost::set_dimension(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimension_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.AggregatedCost.dimension)
}
inline std::string* CostGraphDef_AggregatedCost::mutable_dimension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dimension();
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.AggregatedCost.dimension)
  return _s;
}
inline const std::string& CostGraphDef_AggregatedCost::_internal_dimension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dimension_.Get();
}
inline void CostGraphDef_AggregatedCost::_internal_set_dimension(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimension_.Set(value, GetArena());
}
inline std::string* CostGraphDef_AggregatedCost::_internal_mutable_dimension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dimension_.Mutable( GetArena());
}
inline std::string* CostGraphDef_AggregatedCost::release_dimension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CostGraphDef.AggregatedCost.dimension)
  return _impl_.dimension_.Release();
}
inline void CostGraphDef_AggregatedCost::set_allocated_dimension(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimension_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dimension_.IsDefault()) {
          _impl_.dimension_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CostGraphDef.AggregatedCost.dimension)
}

// -------------------------------------------------------------------

// CostGraphDef

// repeated .tensorflow.CostGraphDef.Node node = 1;
inline int CostGraphDef::_internal_node_size() const {
  return _internal_node().size();
}
inline int CostGraphDef::node_size() const {
  return _internal_node_size();
}
inline void CostGraphDef::clear_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_.Clear();
}
inline ::tensorflow::CostGraphDef_Node* CostGraphDef::mutable_node(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.node)
  return _internal_mutable_node()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node>* CostGraphDef::mutable_node()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CostGraphDef.node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node();
}
inline const ::tensorflow::CostGraphDef_Node& CostGraphDef::node(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.node)
  return _internal_node().Get(index);
}
inline ::tensorflow::CostGraphDef_Node* CostGraphDef::add_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::CostGraphDef_Node* _add = _internal_mutable_node()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.CostGraphDef.node)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node>& CostGraphDef::node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CostGraphDef.node)
  return _internal_node();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node>&
CostGraphDef::_internal_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_Node>*
CostGraphDef::_internal_mutable_node() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_;
}

// repeated .tensorflow.CostGraphDef.AggregatedCost cost = 2;
inline int CostGraphDef::_internal_cost_size() const {
  return _internal_cost().size();
}
inline int CostGraphDef::cost_size() const {
  return _internal_cost_size();
}
inline void CostGraphDef::clear_cost() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cost_.Clear();
}
inline ::tensorflow::CostGraphDef_AggregatedCost* CostGraphDef::mutable_cost(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.cost)
  return _internal_mutable_cost()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_AggregatedCost>* CostGraphDef::mutable_cost()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CostGraphDef.cost)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cost();
}
inline const ::tensorflow::CostGraphDef_AggregatedCost& CostGraphDef::cost(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.cost)
  return _internal_cost().Get(index);
}
inline ::tensorflow::CostGraphDef_AggregatedCost* CostGraphDef::add_cost() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::CostGraphDef_AggregatedCost* _add = _internal_mutable_cost()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.CostGraphDef.cost)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_AggregatedCost>& CostGraphDef::cost() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CostGraphDef.cost)
  return _internal_cost();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_AggregatedCost>&
CostGraphDef::_internal_cost() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cost_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::CostGraphDef_AggregatedCost>*
CostGraphDef::_internal_mutable_cost() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cost_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto_2epb_2eh
