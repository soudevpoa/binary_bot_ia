// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/dataset.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fdataset_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fdataset_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/tensor.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fdataset_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2fdataset_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fframework_2fdataset_2eproto;
namespace tensorflow {
namespace data {
class CompressedComponentMetadata;
struct CompressedComponentMetadataDefaultTypeInternal;
PROTOBUF_EXPORT extern CompressedComponentMetadataDefaultTypeInternal _CompressedComponentMetadata_default_instance_;
class CompressedElement;
struct CompressedElementDefaultTypeInternal;
PROTOBUF_EXPORT extern CompressedElementDefaultTypeInternal _CompressedElement_default_instance_;
class UncompressedElement;
struct UncompressedElementDefaultTypeInternal;
PROTOBUF_EXPORT extern UncompressedElementDefaultTypeInternal _UncompressedElement_default_instance_;
}  // namespace data
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace data {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT CompressedComponentMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.data.CompressedComponentMetadata) */ {
 public:
  inline CompressedComponentMetadata() : CompressedComponentMetadata(nullptr) {}
  ~CompressedComponentMetadata() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompressedComponentMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompressedComponentMetadata(const CompressedComponentMetadata& from) : CompressedComponentMetadata(nullptr, from) {}
  inline CompressedComponentMetadata(CompressedComponentMetadata&& from) noexcept
      : CompressedComponentMetadata(nullptr, std::move(from)) {}
  inline CompressedComponentMetadata& operator=(const CompressedComponentMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompressedComponentMetadata& operator=(CompressedComponentMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompressedComponentMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompressedComponentMetadata* internal_default_instance() {
    return reinterpret_cast<const CompressedComponentMetadata*>(
        &_CompressedComponentMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CompressedComponentMetadata& a, CompressedComponentMetadata& b) { a.Swap(&b); }
  inline void Swap(CompressedComponentMetadata* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompressedComponentMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompressedComponentMetadata* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CompressedComponentMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompressedComponentMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompressedComponentMetadata& from) { CompressedComponentMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompressedComponentMetadata* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.data.CompressedComponentMetadata"; }

 protected:
  explicit CompressedComponentMetadata(::google::protobuf::Arena* arena);
  CompressedComponentMetadata(::google::protobuf::Arena* arena, const CompressedComponentMetadata& from);
  CompressedComponentMetadata(::google::protobuf::Arena* arena, CompressedComponentMetadata&& from) noexcept
      : CompressedComponentMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUncompressedBytesFieldNumber = 4,
    kTensorShapeFieldNumber = 2,
    kDtypeFieldNumber = 1,
  };
  // repeated uint64 uncompressed_bytes = 4;
  int uncompressed_bytes_size() const;
  private:
  int _internal_uncompressed_bytes_size() const;

  public:
  void clear_uncompressed_bytes() ;
  ::uint64_t uncompressed_bytes(int index) const;
  void set_uncompressed_bytes(int index, ::uint64_t value);
  void add_uncompressed_bytes(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& uncompressed_bytes() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_uncompressed_bytes();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_uncompressed_bytes() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_uncompressed_bytes();

  public:
  // .tensorflow.TensorShapeProto tensor_shape = 2;
  bool has_tensor_shape() const;
  void clear_tensor_shape() ;
  const ::tensorflow::TensorShapeProto& tensor_shape() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorShapeProto* release_tensor_shape();
  ::tensorflow::TensorShapeProto* mutable_tensor_shape();
  void set_allocated_tensor_shape(::tensorflow::TensorShapeProto* value);
  void unsafe_arena_set_allocated_tensor_shape(::tensorflow::TensorShapeProto* value);
  ::tensorflow::TensorShapeProto* unsafe_arena_release_tensor_shape();

  private:
  const ::tensorflow::TensorShapeProto& _internal_tensor_shape() const;
  ::tensorflow::TensorShapeProto* _internal_mutable_tensor_shape();

  public:
  // .tensorflow.DataType dtype = 1;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.data.CompressedComponentMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CompressedComponentMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint64_t> uncompressed_bytes_;
    mutable ::google::protobuf::internal::CachedSize _uncompressed_bytes_cached_byte_size_;
    ::tensorflow::TensorShapeProto* tensor_shape_;
    int dtype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fdataset_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CompressedElement final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.data.CompressedElement) */ {
 public:
  inline CompressedElement() : CompressedElement(nullptr) {}
  ~CompressedElement() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompressedElement(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompressedElement(const CompressedElement& from) : CompressedElement(nullptr, from) {}
  inline CompressedElement(CompressedElement&& from) noexcept
      : CompressedElement(nullptr, std::move(from)) {}
  inline CompressedElement& operator=(const CompressedElement& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompressedElement& operator=(CompressedElement&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompressedElement& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompressedElement* internal_default_instance() {
    return reinterpret_cast<const CompressedElement*>(
        &_CompressedElement_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CompressedElement& a, CompressedElement& b) { a.Swap(&b); }
  inline void Swap(CompressedElement* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompressedElement* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompressedElement* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CompressedElement>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompressedElement& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompressedElement& from) { CompressedElement::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompressedElement* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.data.CompressedElement"; }

 protected:
  explicit CompressedElement(::google::protobuf::Arena* arena);
  CompressedElement(::google::protobuf::Arena* arena, const CompressedElement& from);
  CompressedElement(::google::protobuf::Arena* arena, CompressedElement&& from) noexcept
      : CompressedElement(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentMetadataFieldNumber = 2,
    kDataFieldNumber = 1,
    kVersionFieldNumber = 3,
  };
  // repeated .tensorflow.data.CompressedComponentMetadata component_metadata = 2;
  int component_metadata_size() const;
  private:
  int _internal_component_metadata_size() const;

  public:
  void clear_component_metadata() ;
  ::tensorflow::data::CompressedComponentMetadata* mutable_component_metadata(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::data::CompressedComponentMetadata>* mutable_component_metadata();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::data::CompressedComponentMetadata>& _internal_component_metadata() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::data::CompressedComponentMetadata>* _internal_mutable_component_metadata();
  public:
  const ::tensorflow::data::CompressedComponentMetadata& component_metadata(int index) const;
  ::tensorflow::data::CompressedComponentMetadata* add_component_metadata();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::data::CompressedComponentMetadata>& component_metadata() const;
  // bytes data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int32 version = 3;
  void clear_version() ;
  ::int32_t version() const;
  void set_version(::int32_t value);

  private:
  ::int32_t _internal_version() const;
  void _internal_set_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.data.CompressedElement)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CompressedElement& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::data::CompressedComponentMetadata > component_metadata_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fdataset_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT UncompressedElement final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.data.UncompressedElement) */ {
 public:
  inline UncompressedElement() : UncompressedElement(nullptr) {}
  ~UncompressedElement() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UncompressedElement(
      ::google::protobuf::internal::ConstantInitialized);

  inline UncompressedElement(const UncompressedElement& from) : UncompressedElement(nullptr, from) {}
  inline UncompressedElement(UncompressedElement&& from) noexcept
      : UncompressedElement(nullptr, std::move(from)) {}
  inline UncompressedElement& operator=(const UncompressedElement& from) {
    CopyFrom(from);
    return *this;
  }
  inline UncompressedElement& operator=(UncompressedElement&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UncompressedElement& default_instance() {
    return *internal_default_instance();
  }
  static inline const UncompressedElement* internal_default_instance() {
    return reinterpret_cast<const UncompressedElement*>(
        &_UncompressedElement_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(UncompressedElement& a, UncompressedElement& b) { a.Swap(&b); }
  inline void Swap(UncompressedElement* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UncompressedElement* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UncompressedElement* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UncompressedElement>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UncompressedElement& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UncompressedElement& from) { UncompressedElement::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UncompressedElement* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.data.UncompressedElement"; }

 protected:
  explicit UncompressedElement(::google::protobuf::Arena* arena);
  UncompressedElement(::google::protobuf::Arena* arena, const UncompressedElement& from);
  UncompressedElement(::google::protobuf::Arena* arena, UncompressedElement&& from) noexcept
      : UncompressedElement(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kComponentsFieldNumber = 1,
  };
  // repeated .tensorflow.TensorProto components = 1;
  int components_size() const;
  private:
  int _internal_components_size() const;

  public:
  void clear_components() ;
  ::tensorflow::TensorProto* mutable_components(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* mutable_components();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& _internal_components() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* _internal_mutable_components();
  public:
  const ::tensorflow::TensorProto& components(int index) const;
  ::tensorflow::TensorProto* add_components();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& components() const;
  // @@protoc_insertion_point(class_scope:tensorflow.data.UncompressedElement)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UncompressedElement& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto > components_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fdataset_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CompressedComponentMetadata

// .tensorflow.DataType dtype = 1;
inline void CompressedComponentMetadata::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
}
inline ::tensorflow::DataType CompressedComponentMetadata::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.CompressedComponentMetadata.dtype)
  return _internal_dtype();
}
inline void CompressedComponentMetadata::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.data.CompressedComponentMetadata.dtype)
}
inline ::tensorflow::DataType CompressedComponentMetadata::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void CompressedComponentMetadata::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// .tensorflow.TensorShapeProto tensor_shape = 2;
inline bool CompressedComponentMetadata::has_tensor_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tensor_shape_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorShapeProto& CompressedComponentMetadata::_internal_tensor_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorShapeProto* p = _impl_.tensor_shape_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorShapeProto&>(::tensorflow::_TensorShapeProto_default_instance_);
}
inline const ::tensorflow::TensorShapeProto& CompressedComponentMetadata::tensor_shape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.CompressedComponentMetadata.tensor_shape)
  return _internal_tensor_shape();
}
inline void CompressedComponentMetadata::unsafe_arena_set_allocated_tensor_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_shape_);
  }
  _impl_.tensor_shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.data.CompressedComponentMetadata.tensor_shape)
}
inline ::tensorflow::TensorShapeProto* CompressedComponentMetadata::release_tensor_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* released = _impl_.tensor_shape_;
  _impl_.tensor_shape_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TensorShapeProto* CompressedComponentMetadata::unsafe_arena_release_tensor_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.data.CompressedComponentMetadata.tensor_shape)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* temp = _impl_.tensor_shape_;
  _impl_.tensor_shape_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorShapeProto* CompressedComponentMetadata::_internal_mutable_tensor_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tensor_shape_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorShapeProto>(GetArena());
    _impl_.tensor_shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(p);
  }
  return _impl_.tensor_shape_;
}
inline ::tensorflow::TensorShapeProto* CompressedComponentMetadata::mutable_tensor_shape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TensorShapeProto* _msg = _internal_mutable_tensor_shape();
  // @@protoc_insertion_point(field_mutable:tensorflow.data.CompressedComponentMetadata.tensor_shape)
  return _msg;
}
inline void CompressedComponentMetadata::set_allocated_tensor_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_shape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tensor_shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.data.CompressedComponentMetadata.tensor_shape)
}

// repeated uint64 uncompressed_bytes = 4;
inline int CompressedComponentMetadata::_internal_uncompressed_bytes_size() const {
  return _internal_uncompressed_bytes().size();
}
inline int CompressedComponentMetadata::uncompressed_bytes_size() const {
  return _internal_uncompressed_bytes_size();
}
inline void CompressedComponentMetadata::clear_uncompressed_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uncompressed_bytes_.Clear();
}
inline ::uint64_t CompressedComponentMetadata::uncompressed_bytes(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.data.CompressedComponentMetadata.uncompressed_bytes)
  return _internal_uncompressed_bytes().Get(index);
}
inline void CompressedComponentMetadata::set_uncompressed_bytes(int index, ::uint64_t value) {
  _internal_mutable_uncompressed_bytes()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.data.CompressedComponentMetadata.uncompressed_bytes)
}
inline void CompressedComponentMetadata::add_uncompressed_bytes(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_uncompressed_bytes()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.data.CompressedComponentMetadata.uncompressed_bytes)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& CompressedComponentMetadata::uncompressed_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.data.CompressedComponentMetadata.uncompressed_bytes)
  return _internal_uncompressed_bytes();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CompressedComponentMetadata::mutable_uncompressed_bytes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.data.CompressedComponentMetadata.uncompressed_bytes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_uncompressed_bytes();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
CompressedComponentMetadata::_internal_uncompressed_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uncompressed_bytes_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CompressedComponentMetadata::_internal_mutable_uncompressed_bytes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.uncompressed_bytes_;
}

// -------------------------------------------------------------------

// CompressedElement

// bytes data = 1;
inline void CompressedElement::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& CompressedElement::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.CompressedElement.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CompressedElement::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.data.CompressedElement.data)
}
inline std::string* CompressedElement::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:tensorflow.data.CompressedElement.data)
  return _s;
}
inline const std::string& CompressedElement::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CompressedElement::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* CompressedElement::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* CompressedElement::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.data.CompressedElement.data)
  return _impl_.data_.Release();
}
inline void CompressedElement::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.data.CompressedElement.data)
}

// repeated .tensorflow.data.CompressedComponentMetadata component_metadata = 2;
inline int CompressedElement::_internal_component_metadata_size() const {
  return _internal_component_metadata().size();
}
inline int CompressedElement::component_metadata_size() const {
  return _internal_component_metadata_size();
}
inline void CompressedElement::clear_component_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_metadata_.Clear();
}
inline ::tensorflow::data::CompressedComponentMetadata* CompressedElement::mutable_component_metadata(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.data.CompressedElement.component_metadata)
  return _internal_mutable_component_metadata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::data::CompressedComponentMetadata>* CompressedElement::mutable_component_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.data.CompressedElement.component_metadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_component_metadata();
}
inline const ::tensorflow::data::CompressedComponentMetadata& CompressedElement::component_metadata(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.CompressedElement.component_metadata)
  return _internal_component_metadata().Get(index);
}
inline ::tensorflow::data::CompressedComponentMetadata* CompressedElement::add_component_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::data::CompressedComponentMetadata* _add = _internal_mutable_component_metadata()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.data.CompressedElement.component_metadata)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::data::CompressedComponentMetadata>& CompressedElement::component_metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.data.CompressedElement.component_metadata)
  return _internal_component_metadata();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::data::CompressedComponentMetadata>&
CompressedElement::_internal_component_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_metadata_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::data::CompressedComponentMetadata>*
CompressedElement::_internal_mutable_component_metadata() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.component_metadata_;
}

// int32 version = 3;
inline void CompressedElement::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0;
}
inline ::int32_t CompressedElement::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.CompressedElement.version)
  return _internal_version();
}
inline void CompressedElement::set_version(::int32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:tensorflow.data.CompressedElement.version)
}
inline ::int32_t CompressedElement::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void CompressedElement::_internal_set_version(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// -------------------------------------------------------------------

// UncompressedElement

// repeated .tensorflow.TensorProto components = 1;
inline int UncompressedElement::_internal_components_size() const {
  return _internal_components().size();
}
inline int UncompressedElement::components_size() const {
  return _internal_components_size();
}
inline ::tensorflow::TensorProto* UncompressedElement::mutable_components(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.data.UncompressedElement.components)
  return _internal_mutable_components()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* UncompressedElement::mutable_components()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.data.UncompressedElement.components)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_components();
}
inline const ::tensorflow::TensorProto& UncompressedElement::components(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.UncompressedElement.components)
  return _internal_components().Get(index);
}
inline ::tensorflow::TensorProto* UncompressedElement::add_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TensorProto* _add = _internal_mutable_components()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.data.UncompressedElement.components)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& UncompressedElement::components() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.data.UncompressedElement.components)
  return _internal_components();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>&
UncompressedElement::_internal_components() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.components_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>*
UncompressedElement::_internal_mutable_components() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.components_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace data
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fdataset_2eproto_2epb_2eh
