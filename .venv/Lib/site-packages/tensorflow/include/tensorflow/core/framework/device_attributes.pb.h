// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/device_attributes.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto;
namespace tensorflow {
class DeviceAttributes;
struct DeviceAttributesDefaultTypeInternal;
PROTOBUF_EXPORT extern DeviceAttributesDefaultTypeInternal _DeviceAttributes_default_instance_;
class DeviceLocality;
struct DeviceLocalityDefaultTypeInternal;
PROTOBUF_EXPORT extern DeviceLocalityDefaultTypeInternal _DeviceLocality_default_instance_;
class InterconnectLink;
struct InterconnectLinkDefaultTypeInternal;
PROTOBUF_EXPORT extern InterconnectLinkDefaultTypeInternal _InterconnectLink_default_instance_;
class LocalLinks;
struct LocalLinksDefaultTypeInternal;
PROTOBUF_EXPORT extern LocalLinksDefaultTypeInternal _LocalLinks_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT InterconnectLink final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.InterconnectLink) */ {
 public:
  inline InterconnectLink() : InterconnectLink(nullptr) {}
  ~InterconnectLink() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterconnectLink(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterconnectLink(const InterconnectLink& from) : InterconnectLink(nullptr, from) {}
  inline InterconnectLink(InterconnectLink&& from) noexcept
      : InterconnectLink(nullptr, std::move(from)) {}
  inline InterconnectLink& operator=(const InterconnectLink& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterconnectLink& operator=(InterconnectLink&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterconnectLink& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterconnectLink* internal_default_instance() {
    return reinterpret_cast<const InterconnectLink*>(
        &_InterconnectLink_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(InterconnectLink& a, InterconnectLink& b) { a.Swap(&b); }
  inline void Swap(InterconnectLink* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterconnectLink* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterconnectLink* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InterconnectLink>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterconnectLink& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterconnectLink& from) { InterconnectLink::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InterconnectLink* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.InterconnectLink"; }

 protected:
  explicit InterconnectLink(::google::protobuf::Arena* arena);
  InterconnectLink(::google::protobuf::Arena* arena, const InterconnectLink& from);
  InterconnectLink(::google::protobuf::Arena* arena, InterconnectLink&& from) noexcept
      : InterconnectLink(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 2,
    kDeviceIdFieldNumber = 1,
    kStrengthFieldNumber = 3,
  };
  // string type = 2;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // int32 device_id = 1;
  void clear_device_id() ;
  ::int32_t device_id() const;
  void set_device_id(::int32_t value);

  private:
  ::int32_t _internal_device_id() const;
  void _internal_set_device_id(::int32_t value);

  public:
  // int32 strength = 3;
  void clear_strength() ;
  ::int32_t strength() const;
  void set_strength(::int32_t value);

  private:
  ::int32_t _internal_strength() const;
  void _internal_set_strength(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.InterconnectLink)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      40, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterconnectLink& from_msg);
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::int32_t device_id_;
    ::int32_t strength_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT LocalLinks final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.LocalLinks) */ {
 public:
  inline LocalLinks() : LocalLinks(nullptr) {}
  ~LocalLinks() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LocalLinks(
      ::google::protobuf::internal::ConstantInitialized);

  inline LocalLinks(const LocalLinks& from) : LocalLinks(nullptr, from) {}
  inline LocalLinks(LocalLinks&& from) noexcept
      : LocalLinks(nullptr, std::move(from)) {}
  inline LocalLinks& operator=(const LocalLinks& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocalLinks& operator=(LocalLinks&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocalLinks& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocalLinks* internal_default_instance() {
    return reinterpret_cast<const LocalLinks*>(
        &_LocalLinks_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LocalLinks& a, LocalLinks& b) { a.Swap(&b); }
  inline void Swap(LocalLinks* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocalLinks* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocalLinks* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LocalLinks>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocalLinks& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LocalLinks& from) { LocalLinks::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocalLinks* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.LocalLinks"; }

 protected:
  explicit LocalLinks(::google::protobuf::Arena* arena);
  LocalLinks(::google::protobuf::Arena* arena, const LocalLinks& from);
  LocalLinks(::google::protobuf::Arena* arena, LocalLinks&& from) noexcept
      : LocalLinks(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLinkFieldNumber = 1,
  };
  // repeated .tensorflow.InterconnectLink link = 1;
  int link_size() const;
  private:
  int _internal_link_size() const;

  public:
  void clear_link() ;
  ::tensorflow::InterconnectLink* mutable_link(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::InterconnectLink>* mutable_link();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::InterconnectLink>& _internal_link() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::InterconnectLink>* _internal_mutable_link();
  public:
  const ::tensorflow::InterconnectLink& link(int index) const;
  ::tensorflow::InterconnectLink* add_link();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::InterconnectLink>& link() const;
  // @@protoc_insertion_point(class_scope:tensorflow.LocalLinks)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LocalLinks& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::InterconnectLink > link_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT DeviceLocality final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.DeviceLocality) */ {
 public:
  inline DeviceLocality() : DeviceLocality(nullptr) {}
  ~DeviceLocality() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceLocality(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceLocality(const DeviceLocality& from) : DeviceLocality(nullptr, from) {}
  inline DeviceLocality(DeviceLocality&& from) noexcept
      : DeviceLocality(nullptr, std::move(from)) {}
  inline DeviceLocality& operator=(const DeviceLocality& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceLocality& operator=(DeviceLocality&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceLocality& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceLocality* internal_default_instance() {
    return reinterpret_cast<const DeviceLocality*>(
        &_DeviceLocality_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DeviceLocality& a, DeviceLocality& b) { a.Swap(&b); }
  inline void Swap(DeviceLocality* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceLocality* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceLocality* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeviceLocality>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceLocality& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceLocality& from) { DeviceLocality::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeviceLocality* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.DeviceLocality"; }

 protected:
  explicit DeviceLocality(::google::protobuf::Arena* arena);
  DeviceLocality(::google::protobuf::Arena* arena, const DeviceLocality& from);
  DeviceLocality(::google::protobuf::Arena* arena, DeviceLocality&& from) noexcept
      : DeviceLocality(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLinksFieldNumber = 3,
    kBusIdFieldNumber = 1,
    kNumaNodeFieldNumber = 2,
  };
  // .tensorflow.LocalLinks links = 3;
  bool has_links() const;
  void clear_links() ;
  const ::tensorflow::LocalLinks& links() const;
  PROTOBUF_NODISCARD ::tensorflow::LocalLinks* release_links();
  ::tensorflow::LocalLinks* mutable_links();
  void set_allocated_links(::tensorflow::LocalLinks* value);
  void unsafe_arena_set_allocated_links(::tensorflow::LocalLinks* value);
  ::tensorflow::LocalLinks* unsafe_arena_release_links();

  private:
  const ::tensorflow::LocalLinks& _internal_links() const;
  ::tensorflow::LocalLinks* _internal_mutable_links();

  public:
  // int32 bus_id = 1;
  void clear_bus_id() ;
  ::int32_t bus_id() const;
  void set_bus_id(::int32_t value);

  private:
  ::int32_t _internal_bus_id() const;
  void _internal_set_bus_id(::int32_t value);

  public:
  // int32 numa_node = 2;
  void clear_numa_node() ;
  ::int32_t numa_node() const;
  void set_numa_node(::int32_t value);

  private:
  ::int32_t _internal_numa_node() const;
  void _internal_set_numa_node(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.DeviceLocality)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceLocality& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::LocalLinks* links_;
    ::int32_t bus_id_;
    ::int32_t numa_node_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT DeviceAttributes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.DeviceAttributes) */ {
 public:
  inline DeviceAttributes() : DeviceAttributes(nullptr) {}
  ~DeviceAttributes() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceAttributes(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceAttributes(const DeviceAttributes& from) : DeviceAttributes(nullptr, from) {}
  inline DeviceAttributes(DeviceAttributes&& from) noexcept
      : DeviceAttributes(nullptr, std::move(from)) {}
  inline DeviceAttributes& operator=(const DeviceAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceAttributes& operator=(DeviceAttributes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceAttributes& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceAttributes* internal_default_instance() {
    return reinterpret_cast<const DeviceAttributes*>(
        &_DeviceAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(DeviceAttributes& a, DeviceAttributes& b) { a.Swap(&b); }
  inline void Swap(DeviceAttributes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceAttributes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceAttributes* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeviceAttributes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceAttributes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceAttributes& from) { DeviceAttributes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeviceAttributes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.DeviceAttributes"; }

 protected:
  explicit DeviceAttributes(::google::protobuf::Arena* arena);
  DeviceAttributes(::google::protobuf::Arena* arena, const DeviceAttributes& from);
  DeviceAttributes(::google::protobuf::Arena* arena, DeviceAttributes&& from) noexcept
      : DeviceAttributes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kDeviceTypeFieldNumber = 2,
    kPhysicalDeviceDescFieldNumber = 7,
    kLocalityFieldNumber = 5,
    kMemoryLimitFieldNumber = 4,
    kIncarnationFieldNumber = 6,
    kXlaGlobalIdFieldNumber = 8,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string device_type = 2;
  void clear_device_type() ;
  const std::string& device_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_type();
  PROTOBUF_NODISCARD std::string* release_device_type();
  void set_allocated_device_type(std::string* value);

  private:
  const std::string& _internal_device_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_type(
      const std::string& value);
  std::string* _internal_mutable_device_type();

  public:
  // string physical_device_desc = 7;
  void clear_physical_device_desc() ;
  const std::string& physical_device_desc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_physical_device_desc(Arg_&& arg, Args_... args);
  std::string* mutable_physical_device_desc();
  PROTOBUF_NODISCARD std::string* release_physical_device_desc();
  void set_allocated_physical_device_desc(std::string* value);

  private:
  const std::string& _internal_physical_device_desc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_physical_device_desc(
      const std::string& value);
  std::string* _internal_mutable_physical_device_desc();

  public:
  // .tensorflow.DeviceLocality locality = 5;
  bool has_locality() const;
  void clear_locality() ;
  const ::tensorflow::DeviceLocality& locality() const;
  PROTOBUF_NODISCARD ::tensorflow::DeviceLocality* release_locality();
  ::tensorflow::DeviceLocality* mutable_locality();
  void set_allocated_locality(::tensorflow::DeviceLocality* value);
  void unsafe_arena_set_allocated_locality(::tensorflow::DeviceLocality* value);
  ::tensorflow::DeviceLocality* unsafe_arena_release_locality();

  private:
  const ::tensorflow::DeviceLocality& _internal_locality() const;
  ::tensorflow::DeviceLocality* _internal_mutable_locality();

  public:
  // int64 memory_limit = 4;
  void clear_memory_limit() ;
  ::int64_t memory_limit() const;
  void set_memory_limit(::int64_t value);

  private:
  ::int64_t _internal_memory_limit() const;
  void _internal_set_memory_limit(::int64_t value);

  public:
  // fixed64 incarnation = 6;
  void clear_incarnation() ;
  ::uint64_t incarnation() const;
  void set_incarnation(::uint64_t value);

  private:
  ::uint64_t _internal_incarnation() const;
  void _internal_set_incarnation(::uint64_t value);

  public:
  // int64 xla_global_id = 8;
  void clear_xla_global_id() ;
  ::int64_t xla_global_id() const;
  void set_xla_global_id(::int64_t value);

  private:
  ::int64_t _internal_xla_global_id() const;
  void _internal_set_xla_global_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.DeviceAttributes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      71, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceAttributes& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr device_type_;
    ::google::protobuf::internal::ArenaStringPtr physical_device_desc_;
    ::tensorflow::DeviceLocality* locality_;
    ::int64_t memory_limit_;
    ::uint64_t incarnation_;
    ::int64_t xla_global_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InterconnectLink

// int32 device_id = 1;
inline void InterconnectLink::clear_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_ = 0;
}
inline ::int32_t InterconnectLink::device_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.InterconnectLink.device_id)
  return _internal_device_id();
}
inline void InterconnectLink::set_device_id(::int32_t value) {
  _internal_set_device_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.InterconnectLink.device_id)
}
inline ::int32_t InterconnectLink::_internal_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_id_;
}
inline void InterconnectLink::_internal_set_device_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_ = value;
}

// string type = 2;
inline void InterconnectLink::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& InterconnectLink::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.InterconnectLink.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterconnectLink::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.InterconnectLink.type)
}
inline std::string* InterconnectLink::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:tensorflow.InterconnectLink.type)
  return _s;
}
inline const std::string& InterconnectLink::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void InterconnectLink::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* InterconnectLink::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* InterconnectLink::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.InterconnectLink.type)
  return _impl_.type_.Release();
}
inline void InterconnectLink::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.InterconnectLink.type)
}

// int32 strength = 3;
inline void InterconnectLink::clear_strength() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_ = 0;
}
inline ::int32_t InterconnectLink::strength() const {
  // @@protoc_insertion_point(field_get:tensorflow.InterconnectLink.strength)
  return _internal_strength();
}
inline void InterconnectLink::set_strength(::int32_t value) {
  _internal_set_strength(value);
  // @@protoc_insertion_point(field_set:tensorflow.InterconnectLink.strength)
}
inline ::int32_t InterconnectLink::_internal_strength() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strength_;
}
inline void InterconnectLink::_internal_set_strength(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strength_ = value;
}

// -------------------------------------------------------------------

// LocalLinks

// repeated .tensorflow.InterconnectLink link = 1;
inline int LocalLinks::_internal_link_size() const {
  return _internal_link().size();
}
inline int LocalLinks::link_size() const {
  return _internal_link_size();
}
inline void LocalLinks::clear_link() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.link_.Clear();
}
inline ::tensorflow::InterconnectLink* LocalLinks::mutable_link(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.LocalLinks.link)
  return _internal_mutable_link()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::InterconnectLink>* LocalLinks::mutable_link()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.LocalLinks.link)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_link();
}
inline const ::tensorflow::InterconnectLink& LocalLinks::link(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.LocalLinks.link)
  return _internal_link().Get(index);
}
inline ::tensorflow::InterconnectLink* LocalLinks::add_link() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::InterconnectLink* _add = _internal_mutable_link()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.LocalLinks.link)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::InterconnectLink>& LocalLinks::link() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.LocalLinks.link)
  return _internal_link();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::InterconnectLink>&
LocalLinks::_internal_link() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.link_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::InterconnectLink>*
LocalLinks::_internal_mutable_link() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.link_;
}

// -------------------------------------------------------------------

// DeviceLocality

// int32 bus_id = 1;
inline void DeviceLocality::clear_bus_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bus_id_ = 0;
}
inline ::int32_t DeviceLocality::bus_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceLocality.bus_id)
  return _internal_bus_id();
}
inline void DeviceLocality::set_bus_id(::int32_t value) {
  _internal_set_bus_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.DeviceLocality.bus_id)
}
inline ::int32_t DeviceLocality::_internal_bus_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bus_id_;
}
inline void DeviceLocality::_internal_set_bus_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bus_id_ = value;
}

// int32 numa_node = 2;
inline void DeviceLocality::clear_numa_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numa_node_ = 0;
}
inline ::int32_t DeviceLocality::numa_node() const {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceLocality.numa_node)
  return _internal_numa_node();
}
inline void DeviceLocality::set_numa_node(::int32_t value) {
  _internal_set_numa_node(value);
  // @@protoc_insertion_point(field_set:tensorflow.DeviceLocality.numa_node)
}
inline ::int32_t DeviceLocality::_internal_numa_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numa_node_;
}
inline void DeviceLocality::_internal_set_numa_node(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numa_node_ = value;
}

// .tensorflow.LocalLinks links = 3;
inline bool DeviceLocality::has_links() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.links_ != nullptr);
  return value;
}
inline void DeviceLocality::clear_links() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.links_ != nullptr) _impl_.links_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::LocalLinks& DeviceLocality::_internal_links() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::LocalLinks* p = _impl_.links_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::LocalLinks&>(::tensorflow::_LocalLinks_default_instance_);
}
inline const ::tensorflow::LocalLinks& DeviceLocality::links() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceLocality.links)
  return _internal_links();
}
inline void DeviceLocality::unsafe_arena_set_allocated_links(::tensorflow::LocalLinks* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.links_);
  }
  _impl_.links_ = reinterpret_cast<::tensorflow::LocalLinks*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.DeviceLocality.links)
}
inline ::tensorflow::LocalLinks* DeviceLocality::release_links() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::LocalLinks* released = _impl_.links_;
  _impl_.links_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::LocalLinks* DeviceLocality::unsafe_arena_release_links() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.DeviceLocality.links)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::LocalLinks* temp = _impl_.links_;
  _impl_.links_ = nullptr;
  return temp;
}
inline ::tensorflow::LocalLinks* DeviceLocality::_internal_mutable_links() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.links_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::LocalLinks>(GetArena());
    _impl_.links_ = reinterpret_cast<::tensorflow::LocalLinks*>(p);
  }
  return _impl_.links_;
}
inline ::tensorflow::LocalLinks* DeviceLocality::mutable_links() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::LocalLinks* _msg = _internal_mutable_links();
  // @@protoc_insertion_point(field_mutable:tensorflow.DeviceLocality.links)
  return _msg;
}
inline void DeviceLocality::set_allocated_links(::tensorflow::LocalLinks* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.links_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.links_ = reinterpret_cast<::tensorflow::LocalLinks*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DeviceLocality.links)
}

// -------------------------------------------------------------------

// DeviceAttributes

// string name = 1;
inline void DeviceAttributes::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& DeviceAttributes::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceAttributes.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceAttributes::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.DeviceAttributes.name)
}
inline std::string* DeviceAttributes::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.DeviceAttributes.name)
  return _s;
}
inline const std::string& DeviceAttributes::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void DeviceAttributes::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* DeviceAttributes::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* DeviceAttributes::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.DeviceAttributes.name)
  return _impl_.name_.Release();
}
inline void DeviceAttributes::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DeviceAttributes.name)
}

// string device_type = 2;
inline void DeviceAttributes::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.ClearToEmpty();
}
inline const std::string& DeviceAttributes::device_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceAttributes.device_type)
  return _internal_device_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceAttributes::set_device_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.DeviceAttributes.device_type)
}
inline std::string* DeviceAttributes::mutable_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_type();
  // @@protoc_insertion_point(field_mutable:tensorflow.DeviceAttributes.device_type)
  return _s;
}
inline const std::string& DeviceAttributes::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_type_.Get();
}
inline void DeviceAttributes::_internal_set_device_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(value, GetArena());
}
inline std::string* DeviceAttributes::_internal_mutable_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_type_.Mutable( GetArena());
}
inline std::string* DeviceAttributes::release_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.DeviceAttributes.device_type)
  return _impl_.device_type_.Release();
}
inline void DeviceAttributes::set_allocated_device_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_type_.IsDefault()) {
          _impl_.device_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DeviceAttributes.device_type)
}

// int64 memory_limit = 4;
inline void DeviceAttributes::clear_memory_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_limit_ = ::int64_t{0};
}
inline ::int64_t DeviceAttributes::memory_limit() const {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceAttributes.memory_limit)
  return _internal_memory_limit();
}
inline void DeviceAttributes::set_memory_limit(::int64_t value) {
  _internal_set_memory_limit(value);
  // @@protoc_insertion_point(field_set:tensorflow.DeviceAttributes.memory_limit)
}
inline ::int64_t DeviceAttributes::_internal_memory_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_limit_;
}
inline void DeviceAttributes::_internal_set_memory_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_limit_ = value;
}

// .tensorflow.DeviceLocality locality = 5;
inline bool DeviceAttributes::has_locality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.locality_ != nullptr);
  return value;
}
inline void DeviceAttributes::clear_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.locality_ != nullptr) _impl_.locality_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::DeviceLocality& DeviceAttributes::_internal_locality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::DeviceLocality* p = _impl_.locality_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::DeviceLocality&>(::tensorflow::_DeviceLocality_default_instance_);
}
inline const ::tensorflow::DeviceLocality& DeviceAttributes::locality() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceAttributes.locality)
  return _internal_locality();
}
inline void DeviceAttributes::unsafe_arena_set_allocated_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.locality_);
  }
  _impl_.locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.DeviceAttributes.locality)
}
inline ::tensorflow::DeviceLocality* DeviceAttributes::release_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceLocality* released = _impl_.locality_;
  _impl_.locality_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::DeviceLocality* DeviceAttributes::unsafe_arena_release_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.DeviceAttributes.locality)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceLocality* temp = _impl_.locality_;
  _impl_.locality_ = nullptr;
  return temp;
}
inline ::tensorflow::DeviceLocality* DeviceAttributes::_internal_mutable_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.locality_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::DeviceLocality>(GetArena());
    _impl_.locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(p);
  }
  return _impl_.locality_;
}
inline ::tensorflow::DeviceLocality* DeviceAttributes::mutable_locality() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::DeviceLocality* _msg = _internal_mutable_locality();
  // @@protoc_insertion_point(field_mutable:tensorflow.DeviceAttributes.locality)
  return _msg;
}
inline void DeviceAttributes::set_allocated_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.locality_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DeviceAttributes.locality)
}

// fixed64 incarnation = 6;
inline void DeviceAttributes::clear_incarnation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.incarnation_ = ::uint64_t{0u};
}
inline ::uint64_t DeviceAttributes::incarnation() const {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceAttributes.incarnation)
  return _internal_incarnation();
}
inline void DeviceAttributes::set_incarnation(::uint64_t value) {
  _internal_set_incarnation(value);
  // @@protoc_insertion_point(field_set:tensorflow.DeviceAttributes.incarnation)
}
inline ::uint64_t DeviceAttributes::_internal_incarnation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.incarnation_;
}
inline void DeviceAttributes::_internal_set_incarnation(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.incarnation_ = value;
}

// string physical_device_desc = 7;
inline void DeviceAttributes::clear_physical_device_desc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.physical_device_desc_.ClearToEmpty();
}
inline const std::string& DeviceAttributes::physical_device_desc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceAttributes.physical_device_desc)
  return _internal_physical_device_desc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceAttributes::set_physical_device_desc(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.physical_device_desc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.DeviceAttributes.physical_device_desc)
}
inline std::string* DeviceAttributes::mutable_physical_device_desc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_physical_device_desc();
  // @@protoc_insertion_point(field_mutable:tensorflow.DeviceAttributes.physical_device_desc)
  return _s;
}
inline const std::string& DeviceAttributes::_internal_physical_device_desc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.physical_device_desc_.Get();
}
inline void DeviceAttributes::_internal_set_physical_device_desc(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.physical_device_desc_.Set(value, GetArena());
}
inline std::string* DeviceAttributes::_internal_mutable_physical_device_desc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.physical_device_desc_.Mutable( GetArena());
}
inline std::string* DeviceAttributes::release_physical_device_desc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.DeviceAttributes.physical_device_desc)
  return _impl_.physical_device_desc_.Release();
}
inline void DeviceAttributes::set_allocated_physical_device_desc(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.physical_device_desc_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.physical_device_desc_.IsDefault()) {
          _impl_.physical_device_desc_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DeviceAttributes.physical_device_desc)
}

// int64 xla_global_id = 8;
inline void DeviceAttributes::clear_xla_global_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xla_global_id_ = ::int64_t{0};
}
inline ::int64_t DeviceAttributes::xla_global_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceAttributes.xla_global_id)
  return _internal_xla_global_id();
}
inline void DeviceAttributes::set_xla_global_id(::int64_t value) {
  _internal_set_xla_global_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.DeviceAttributes.xla_global_id)
}
inline ::int64_t DeviceAttributes::_internal_xla_global_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xla_global_id_;
}
inline void DeviceAttributes::_internal_set_xla_global_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xla_global_id_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto_2epb_2eh
