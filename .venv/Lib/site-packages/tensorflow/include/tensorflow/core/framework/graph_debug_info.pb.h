// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/graph_debug_info.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto;
namespace tensorflow {
class GraphDebugInfo;
struct GraphDebugInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphDebugInfoDefaultTypeInternal _GraphDebugInfo_default_instance_;
class GraphDebugInfo_FileLineCol;
struct GraphDebugInfo_FileLineColDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphDebugInfo_FileLineColDefaultTypeInternal _GraphDebugInfo_FileLineCol_default_instance_;
class GraphDebugInfo_FramesByIdEntry_DoNotUse;
struct GraphDebugInfo_FramesByIdEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphDebugInfo_FramesByIdEntry_DoNotUseDefaultTypeInternal _GraphDebugInfo_FramesByIdEntry_DoNotUse_default_instance_;
class GraphDebugInfo_NameToTraceIdEntry_DoNotUse;
struct GraphDebugInfo_NameToTraceIdEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphDebugInfo_NameToTraceIdEntry_DoNotUseDefaultTypeInternal _GraphDebugInfo_NameToTraceIdEntry_DoNotUse_default_instance_;
class GraphDebugInfo_StackTrace;
struct GraphDebugInfo_StackTraceDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphDebugInfo_StackTraceDefaultTypeInternal _GraphDebugInfo_StackTrace_default_instance_;
class GraphDebugInfo_TracesByIdEntry_DoNotUse;
struct GraphDebugInfo_TracesByIdEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphDebugInfo_TracesByIdEntry_DoNotUseDefaultTypeInternal _GraphDebugInfo_TracesByIdEntry_DoNotUse_default_instance_;
class GraphDebugInfo_TracesEntry_DoNotUse;
struct GraphDebugInfo_TracesEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphDebugInfo_TracesEntry_DoNotUseDefaultTypeInternal _GraphDebugInfo_TracesEntry_DoNotUse_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class GraphDebugInfo_NameToTraceIdEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GraphDebugInfo_NameToTraceIdEntry_DoNotUse, std::string, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GraphDebugInfo_NameToTraceIdEntry_DoNotUse, std::string, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>;
  GraphDebugInfo_NameToTraceIdEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphDebugInfo_NameToTraceIdEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GraphDebugInfo_NameToTraceIdEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GraphDebugInfo_NameToTraceIdEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GraphDebugInfo_NameToTraceIdEntry_DoNotUse*>(
        &_GraphDebugInfo_NameToTraceIdEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphDebugInfo_FileLineCol final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphDebugInfo.FileLineCol) */ {
 public:
  inline GraphDebugInfo_FileLineCol() : GraphDebugInfo_FileLineCol(nullptr) {}
  ~GraphDebugInfo_FileLineCol() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphDebugInfo_FileLineCol(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphDebugInfo_FileLineCol(const GraphDebugInfo_FileLineCol& from) : GraphDebugInfo_FileLineCol(nullptr, from) {}
  inline GraphDebugInfo_FileLineCol(GraphDebugInfo_FileLineCol&& from) noexcept
      : GraphDebugInfo_FileLineCol(nullptr, std::move(from)) {}
  inline GraphDebugInfo_FileLineCol& operator=(const GraphDebugInfo_FileLineCol& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphDebugInfo_FileLineCol& operator=(GraphDebugInfo_FileLineCol&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphDebugInfo_FileLineCol& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphDebugInfo_FileLineCol* internal_default_instance() {
    return reinterpret_cast<const GraphDebugInfo_FileLineCol*>(
        &_GraphDebugInfo_FileLineCol_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GraphDebugInfo_FileLineCol& a, GraphDebugInfo_FileLineCol& b) { a.Swap(&b); }
  inline void Swap(GraphDebugInfo_FileLineCol* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphDebugInfo_FileLineCol* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphDebugInfo_FileLineCol* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphDebugInfo_FileLineCol>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphDebugInfo_FileLineCol& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphDebugInfo_FileLineCol& from) { GraphDebugInfo_FileLineCol::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphDebugInfo_FileLineCol* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphDebugInfo.FileLineCol"; }

 protected:
  explicit GraphDebugInfo_FileLineCol(::google::protobuf::Arena* arena);
  GraphDebugInfo_FileLineCol(::google::protobuf::Arena* arena, const GraphDebugInfo_FileLineCol& from);
  GraphDebugInfo_FileLineCol(::google::protobuf::Arena* arena, GraphDebugInfo_FileLineCol&& from) noexcept
      : GraphDebugInfo_FileLineCol(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFuncFieldNumber = 4,
    kCodeFieldNumber = 5,
    kFileIndexFieldNumber = 1,
    kLineFieldNumber = 2,
    kColFieldNumber = 3,
  };
  // optional string func = 4;
  bool has_func() const;
  void clear_func() ;
  const std::string& func() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_func(Arg_&& arg, Args_... args);
  std::string* mutable_func();
  PROTOBUF_NODISCARD std::string* release_func();
  void set_allocated_func(std::string* value);

  private:
  const std::string& _internal_func() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_func(
      const std::string& value);
  std::string* _internal_mutable_func();

  public:
  // optional string code = 5;
  bool has_code() const;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // optional int32 file_index = 1;
  bool has_file_index() const;
  void clear_file_index() ;
  ::int32_t file_index() const;
  void set_file_index(::int32_t value);

  private:
  ::int32_t _internal_file_index() const;
  void _internal_set_file_index(::int32_t value);

  public:
  // optional int32 line = 2;
  bool has_line() const;
  void clear_line() ;
  ::int32_t line() const;
  void set_line(::int32_t value);

  private:
  ::int32_t _internal_line() const;
  void _internal_set_line(::int32_t value);

  public:
  // optional int32 col = 3;
  bool has_col() const;
  void clear_col() ;
  ::int32_t col() const;
  void set_col(::int32_t value);

  private:
  ::int32_t _internal_col() const;
  void _internal_set_col(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphDebugInfo.FileLineCol)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      54, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphDebugInfo_FileLineCol& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr func_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::int32_t file_index_;
    ::int32_t line_;
    ::int32_t col_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphDebugInfo_StackTrace final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphDebugInfo.StackTrace) */ {
 public:
  inline GraphDebugInfo_StackTrace() : GraphDebugInfo_StackTrace(nullptr) {}
  ~GraphDebugInfo_StackTrace() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphDebugInfo_StackTrace(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphDebugInfo_StackTrace(const GraphDebugInfo_StackTrace& from) : GraphDebugInfo_StackTrace(nullptr, from) {}
  inline GraphDebugInfo_StackTrace(GraphDebugInfo_StackTrace&& from) noexcept
      : GraphDebugInfo_StackTrace(nullptr, std::move(from)) {}
  inline GraphDebugInfo_StackTrace& operator=(const GraphDebugInfo_StackTrace& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphDebugInfo_StackTrace& operator=(GraphDebugInfo_StackTrace&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphDebugInfo_StackTrace& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphDebugInfo_StackTrace* internal_default_instance() {
    return reinterpret_cast<const GraphDebugInfo_StackTrace*>(
        &_GraphDebugInfo_StackTrace_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GraphDebugInfo_StackTrace& a, GraphDebugInfo_StackTrace& b) { a.Swap(&b); }
  inline void Swap(GraphDebugInfo_StackTrace* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphDebugInfo_StackTrace* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphDebugInfo_StackTrace* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphDebugInfo_StackTrace>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphDebugInfo_StackTrace& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphDebugInfo_StackTrace& from) { GraphDebugInfo_StackTrace::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphDebugInfo_StackTrace* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphDebugInfo.StackTrace"; }

 protected:
  explicit GraphDebugInfo_StackTrace(::google::protobuf::Arena* arena);
  GraphDebugInfo_StackTrace(::google::protobuf::Arena* arena, const GraphDebugInfo_StackTrace& from);
  GraphDebugInfo_StackTrace(::google::protobuf::Arena* arena, GraphDebugInfo_StackTrace&& from) noexcept
      : GraphDebugInfo_StackTrace(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileLineColsFieldNumber = 1,
    kFrameIdFieldNumber = 2,
  };
  // repeated .tensorflow.GraphDebugInfo.FileLineCol file_line_cols = 1;
  int file_line_cols_size() const;
  private:
  int _internal_file_line_cols_size() const;

  public:
  void clear_file_line_cols() ;
  ::tensorflow::GraphDebugInfo_FileLineCol* mutable_file_line_cols(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDebugInfo_FileLineCol>* mutable_file_line_cols();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDebugInfo_FileLineCol>& _internal_file_line_cols() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDebugInfo_FileLineCol>* _internal_mutable_file_line_cols();
  public:
  const ::tensorflow::GraphDebugInfo_FileLineCol& file_line_cols(int index) const;
  ::tensorflow::GraphDebugInfo_FileLineCol* add_file_line_cols();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDebugInfo_FileLineCol>& file_line_cols() const;
  // repeated fixed64 frame_id = 2 [packed = true];
  int frame_id_size() const;
  private:
  int _internal_frame_id_size() const;

  public:
  void clear_frame_id() ;
  ::uint64_t frame_id(int index) const;
  void set_frame_id(int index, ::uint64_t value);
  void add_frame_id(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& frame_id() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_frame_id();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_frame_id() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_frame_id();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphDebugInfo.StackTrace)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphDebugInfo_StackTrace& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::GraphDebugInfo_FileLineCol > file_line_cols_;
    ::google::protobuf::RepeatedField<::uint64_t> frame_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto;
};
// -------------------------------------------------------------------

class GraphDebugInfo_FramesByIdEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GraphDebugInfo_FramesByIdEntry_DoNotUse, ::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GraphDebugInfo_FramesByIdEntry_DoNotUse, ::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GraphDebugInfo_FramesByIdEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphDebugInfo_FramesByIdEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GraphDebugInfo_FramesByIdEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GraphDebugInfo_FramesByIdEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GraphDebugInfo_FramesByIdEntry_DoNotUse*>(
        &_GraphDebugInfo_FramesByIdEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto;
};
// -------------------------------------------------------------------

class GraphDebugInfo_TracesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GraphDebugInfo_TracesEntry_DoNotUse, std::string, ::tensorflow::GraphDebugInfo_StackTrace,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GraphDebugInfo_TracesEntry_DoNotUse, std::string, ::tensorflow::GraphDebugInfo_StackTrace,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GraphDebugInfo_TracesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphDebugInfo_TracesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GraphDebugInfo_TracesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GraphDebugInfo_TracesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GraphDebugInfo_TracesEntry_DoNotUse*>(
        &_GraphDebugInfo_TracesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      49, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto;
};
// -------------------------------------------------------------------

class GraphDebugInfo_TracesByIdEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GraphDebugInfo_TracesByIdEntry_DoNotUse, ::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GraphDebugInfo_TracesByIdEntry_DoNotUse, ::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GraphDebugInfo_TracesByIdEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphDebugInfo_TracesByIdEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GraphDebugInfo_TracesByIdEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GraphDebugInfo_TracesByIdEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GraphDebugInfo_TracesByIdEntry_DoNotUse*>(
        &_GraphDebugInfo_TracesByIdEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphDebugInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphDebugInfo) */ {
 public:
  inline GraphDebugInfo() : GraphDebugInfo(nullptr) {}
  ~GraphDebugInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphDebugInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphDebugInfo(const GraphDebugInfo& from) : GraphDebugInfo(nullptr, from) {}
  inline GraphDebugInfo(GraphDebugInfo&& from) noexcept
      : GraphDebugInfo(nullptr, std::move(from)) {}
  inline GraphDebugInfo& operator=(const GraphDebugInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphDebugInfo& operator=(GraphDebugInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphDebugInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphDebugInfo* internal_default_instance() {
    return reinterpret_cast<const GraphDebugInfo*>(
        &_GraphDebugInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GraphDebugInfo& a, GraphDebugInfo& b) { a.Swap(&b); }
  inline void Swap(GraphDebugInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphDebugInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphDebugInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphDebugInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphDebugInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphDebugInfo& from) { GraphDebugInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphDebugInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphDebugInfo"; }

 protected:
  explicit GraphDebugInfo(::google::protobuf::Arena* arena);
  GraphDebugInfo(::google::protobuf::Arena* arena, const GraphDebugInfo& from);
  GraphDebugInfo(::google::protobuf::Arena* arena, GraphDebugInfo&& from) noexcept
      : GraphDebugInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FileLineCol = GraphDebugInfo_FileLineCol;
  using StackTrace = GraphDebugInfo_StackTrace;

  // accessors -------------------------------------------------------
  enum : int {
    kFilesFieldNumber = 1,
    kTracesFieldNumber = 2,
    kFramesByIdFieldNumber = 4,
    kNameToTraceIdFieldNumber = 5,
    kTracesByIdFieldNumber = 6,
  };
  // repeated string files = 1;
  int files_size() const;
  private:
  int _internal_files_size() const;

  public:
  void clear_files() ;
  const std::string& files(int index) const;
  std::string* mutable_files(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_files(int index, Arg_&& value, Args_... args);
  std::string* add_files();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_files(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_files();

  public:
  // map<string, .tensorflow.GraphDebugInfo.StackTrace> traces = 2;
  int traces_size() const;
  private:
  int _internal_traces_size() const;

  public:
  void clear_traces() ;
  const ::google::protobuf::Map<std::string, ::tensorflow::GraphDebugInfo_StackTrace>& traces() const;
  ::google::protobuf::Map<std::string, ::tensorflow::GraphDebugInfo_StackTrace>* mutable_traces();

  private:
  const ::google::protobuf::Map<std::string, ::tensorflow::GraphDebugInfo_StackTrace>& _internal_traces() const;
  ::google::protobuf::Map<std::string, ::tensorflow::GraphDebugInfo_StackTrace>* _internal_mutable_traces();

  public:
  // map<fixed64, .tensorflow.GraphDebugInfo.FileLineCol> frames_by_id = 4;
  int frames_by_id_size() const;
  private:
  int _internal_frames_by_id_size() const;

  public:
  void clear_frames_by_id() ;
  const ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol>& frames_by_id() const;
  ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol>* mutable_frames_by_id();

  private:
  const ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol>& _internal_frames_by_id() const;
  ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol>* _internal_mutable_frames_by_id();

  public:
  // map<string, fixed64> name_to_trace_id = 5;
  int name_to_trace_id_size() const;
  private:
  int _internal_name_to_trace_id_size() const;

  public:
  void clear_name_to_trace_id() ;
  const ::google::protobuf::Map<std::string, ::uint64_t>& name_to_trace_id() const;
  ::google::protobuf::Map<std::string, ::uint64_t>* mutable_name_to_trace_id();

  private:
  const ::google::protobuf::Map<std::string, ::uint64_t>& _internal_name_to_trace_id() const;
  ::google::protobuf::Map<std::string, ::uint64_t>* _internal_mutable_name_to_trace_id();

  public:
  // map<fixed64, .tensorflow.GraphDebugInfo.StackTrace> traces_by_id = 6;
  int traces_by_id_size() const;
  private:
  int _internal_traces_by_id_size() const;

  public:
  void clear_traces_by_id() ;
  const ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace>& traces_by_id() const;
  ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace>* mutable_traces_by_id();

  private:
  const ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace>& _internal_traces_by_id() const;
  ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace>* _internal_mutable_traces_by_id();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphDebugInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 5, 7,
      61, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphDebugInfo& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> files_;
    ::google::protobuf::internal::MapField<GraphDebugInfo_TracesEntry_DoNotUse, std::string, ::tensorflow::GraphDebugInfo_StackTrace,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        traces_;
    ::google::protobuf::internal::MapField<GraphDebugInfo_FramesByIdEntry_DoNotUse, ::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        frames_by_id_;
    ::google::protobuf::internal::MapField<GraphDebugInfo_NameToTraceIdEntry_DoNotUse, std::string, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>
        name_to_trace_id_;
    ::google::protobuf::internal::MapField<GraphDebugInfo_TracesByIdEntry_DoNotUse, ::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        traces_by_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GraphDebugInfo_FileLineCol

// optional int32 file_index = 1;
inline bool GraphDebugInfo_FileLineCol::has_file_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void GraphDebugInfo_FileLineCol::clear_file_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t GraphDebugInfo_FileLineCol::file_index() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphDebugInfo.FileLineCol.file_index)
  return _internal_file_index();
}
inline void GraphDebugInfo_FileLineCol::set_file_index(::int32_t value) {
  _internal_set_file_index(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:tensorflow.GraphDebugInfo.FileLineCol.file_index)
}
inline ::int32_t GraphDebugInfo_FileLineCol::_internal_file_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_index_;
}
inline void GraphDebugInfo_FileLineCol::_internal_set_file_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_index_ = value;
}

// optional int32 line = 2;
inline bool GraphDebugInfo_FileLineCol::has_line() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void GraphDebugInfo_FileLineCol::clear_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.line_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t GraphDebugInfo_FileLineCol::line() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphDebugInfo.FileLineCol.line)
  return _internal_line();
}
inline void GraphDebugInfo_FileLineCol::set_line(::int32_t value) {
  _internal_set_line(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:tensorflow.GraphDebugInfo.FileLineCol.line)
}
inline ::int32_t GraphDebugInfo_FileLineCol::_internal_line() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.line_;
}
inline void GraphDebugInfo_FileLineCol::_internal_set_line(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.line_ = value;
}

// optional int32 col = 3;
inline bool GraphDebugInfo_FileLineCol::has_col() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void GraphDebugInfo_FileLineCol::clear_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t GraphDebugInfo_FileLineCol::col() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphDebugInfo.FileLineCol.col)
  return _internal_col();
}
inline void GraphDebugInfo_FileLineCol::set_col(::int32_t value) {
  _internal_set_col(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:tensorflow.GraphDebugInfo.FileLineCol.col)
}
inline ::int32_t GraphDebugInfo_FileLineCol::_internal_col() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.col_;
}
inline void GraphDebugInfo_FileLineCol::_internal_set_col(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = value;
}

// optional string func = 4;
inline bool GraphDebugInfo_FileLineCol::has_func() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GraphDebugInfo_FileLineCol::clear_func() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.func_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GraphDebugInfo_FileLineCol::func() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphDebugInfo.FileLineCol.func)
  return _internal_func();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphDebugInfo_FileLineCol::set_func(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.func_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.GraphDebugInfo.FileLineCol.func)
}
inline std::string* GraphDebugInfo_FileLineCol::mutable_func() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_func();
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphDebugInfo.FileLineCol.func)
  return _s;
}
inline const std::string& GraphDebugInfo_FileLineCol::_internal_func() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.func_.Get();
}
inline void GraphDebugInfo_FileLineCol::_internal_set_func(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.func_.Set(value, GetArena());
}
inline std::string* GraphDebugInfo_FileLineCol::_internal_mutable_func() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.func_.Mutable( GetArena());
}
inline std::string* GraphDebugInfo_FileLineCol::release_func() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.GraphDebugInfo.FileLineCol.func)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.func_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.func_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GraphDebugInfo_FileLineCol::set_allocated_func(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.func_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.func_.IsDefault()) {
          _impl_.func_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.GraphDebugInfo.FileLineCol.func)
}

// optional string code = 5;
inline bool GraphDebugInfo_FileLineCol::has_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GraphDebugInfo_FileLineCol::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GraphDebugInfo_FileLineCol::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphDebugInfo.FileLineCol.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphDebugInfo_FileLineCol::set_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.GraphDebugInfo.FileLineCol.code)
}
inline std::string* GraphDebugInfo_FileLineCol::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphDebugInfo.FileLineCol.code)
  return _s;
}
inline const std::string& GraphDebugInfo_FileLineCol::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_.Get();
}
inline void GraphDebugInfo_FileLineCol::_internal_set_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* GraphDebugInfo_FileLineCol::_internal_mutable_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* GraphDebugInfo_FileLineCol::release_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.GraphDebugInfo.FileLineCol.code)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.code_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GraphDebugInfo_FileLineCol::set_allocated_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.GraphDebugInfo.FileLineCol.code)
}

// -------------------------------------------------------------------

// GraphDebugInfo_StackTrace

// repeated .tensorflow.GraphDebugInfo.FileLineCol file_line_cols = 1;
inline int GraphDebugInfo_StackTrace::_internal_file_line_cols_size() const {
  return _internal_file_line_cols().size();
}
inline int GraphDebugInfo_StackTrace::file_line_cols_size() const {
  return _internal_file_line_cols_size();
}
inline void GraphDebugInfo_StackTrace::clear_file_line_cols() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_line_cols_.Clear();
}
inline ::tensorflow::GraphDebugInfo_FileLineCol* GraphDebugInfo_StackTrace::mutable_file_line_cols(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphDebugInfo.StackTrace.file_line_cols)
  return _internal_mutable_file_line_cols()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDebugInfo_FileLineCol>* GraphDebugInfo_StackTrace::mutable_file_line_cols()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphDebugInfo.StackTrace.file_line_cols)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_file_line_cols();
}
inline const ::tensorflow::GraphDebugInfo_FileLineCol& GraphDebugInfo_StackTrace::file_line_cols(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphDebugInfo.StackTrace.file_line_cols)
  return _internal_file_line_cols().Get(index);
}
inline ::tensorflow::GraphDebugInfo_FileLineCol* GraphDebugInfo_StackTrace::add_file_line_cols() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::GraphDebugInfo_FileLineCol* _add = _internal_mutable_file_line_cols()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GraphDebugInfo.StackTrace.file_line_cols)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDebugInfo_FileLineCol>& GraphDebugInfo_StackTrace::file_line_cols() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphDebugInfo.StackTrace.file_line_cols)
  return _internal_file_line_cols();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDebugInfo_FileLineCol>&
GraphDebugInfo_StackTrace::_internal_file_line_cols() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_line_cols_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDebugInfo_FileLineCol>*
GraphDebugInfo_StackTrace::_internal_mutable_file_line_cols() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.file_line_cols_;
}

// repeated fixed64 frame_id = 2 [packed = true];
inline int GraphDebugInfo_StackTrace::_internal_frame_id_size() const {
  return _internal_frame_id().size();
}
inline int GraphDebugInfo_StackTrace::frame_id_size() const {
  return _internal_frame_id_size();
}
inline void GraphDebugInfo_StackTrace::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.Clear();
}
inline ::uint64_t GraphDebugInfo_StackTrace::frame_id(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphDebugInfo.StackTrace.frame_id)
  return _internal_frame_id().Get(index);
}
inline void GraphDebugInfo_StackTrace::set_frame_id(int index, ::uint64_t value) {
  _internal_mutable_frame_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphDebugInfo.StackTrace.frame_id)
}
inline void GraphDebugInfo_StackTrace::add_frame_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_frame_id()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.GraphDebugInfo.StackTrace.frame_id)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& GraphDebugInfo_StackTrace::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphDebugInfo.StackTrace.frame_id)
  return _internal_frame_id();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* GraphDebugInfo_StackTrace::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphDebugInfo.StackTrace.frame_id)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_frame_id();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
GraphDebugInfo_StackTrace::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* GraphDebugInfo_StackTrace::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.frame_id_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GraphDebugInfo

// repeated string files = 1;
inline int GraphDebugInfo::_internal_files_size() const {
  return _internal_files().size();
}
inline int GraphDebugInfo::files_size() const {
  return _internal_files_size();
}
inline void GraphDebugInfo::clear_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.files_.Clear();
}
inline std::string* GraphDebugInfo::add_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.GraphDebugInfo.files)
  return _s;
}
inline const std::string& GraphDebugInfo::files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphDebugInfo.files)
  return _internal_files().Get(index);
}
inline std::string* GraphDebugInfo::mutable_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphDebugInfo.files)
  return _internal_mutable_files()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GraphDebugInfo::set_files(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_files()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.GraphDebugInfo.files)
}
template <typename Arg_, typename... Args_>
inline void GraphDebugInfo::add_files(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_files(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.GraphDebugInfo.files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GraphDebugInfo::files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphDebugInfo.files)
  return _internal_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GraphDebugInfo::mutable_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphDebugInfo.files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GraphDebugInfo::_internal_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GraphDebugInfo::_internal_mutable_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.files_;
}

// map<fixed64, .tensorflow.GraphDebugInfo.FileLineCol> frames_by_id = 4;
inline int GraphDebugInfo::_internal_frames_by_id_size() const {
  return _internal_frames_by_id().size();
}
inline int GraphDebugInfo::frames_by_id_size() const {
  return _internal_frames_by_id_size();
}
inline void GraphDebugInfo::clear_frames_by_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frames_by_id_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol>& GraphDebugInfo::_internal_frames_by_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frames_by_id_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol>& GraphDebugInfo::frames_by_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.GraphDebugInfo.frames_by_id)
  return _internal_frames_by_id();
}
inline ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol>* GraphDebugInfo::_internal_mutable_frames_by_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.frames_by_id_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol>* GraphDebugInfo::mutable_frames_by_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.GraphDebugInfo.frames_by_id)
  return _internal_mutable_frames_by_id();
}

// map<fixed64, .tensorflow.GraphDebugInfo.StackTrace> traces_by_id = 6;
inline int GraphDebugInfo::_internal_traces_by_id_size() const {
  return _internal_traces_by_id().size();
}
inline int GraphDebugInfo::traces_by_id_size() const {
  return _internal_traces_by_id_size();
}
inline void GraphDebugInfo::clear_traces_by_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.traces_by_id_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace>& GraphDebugInfo::_internal_traces_by_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.traces_by_id_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace>& GraphDebugInfo::traces_by_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.GraphDebugInfo.traces_by_id)
  return _internal_traces_by_id();
}
inline ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace>* GraphDebugInfo::_internal_mutable_traces_by_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.traces_by_id_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace>* GraphDebugInfo::mutable_traces_by_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.GraphDebugInfo.traces_by_id)
  return _internal_mutable_traces_by_id();
}

// map<string, .tensorflow.GraphDebugInfo.StackTrace> traces = 2;
inline int GraphDebugInfo::_internal_traces_size() const {
  return _internal_traces().size();
}
inline int GraphDebugInfo::traces_size() const {
  return _internal_traces_size();
}
inline void GraphDebugInfo::clear_traces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.traces_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::GraphDebugInfo_StackTrace>& GraphDebugInfo::_internal_traces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.traces_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::GraphDebugInfo_StackTrace>& GraphDebugInfo::traces() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.GraphDebugInfo.traces)
  return _internal_traces();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::GraphDebugInfo_StackTrace>* GraphDebugInfo::_internal_mutable_traces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.traces_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::GraphDebugInfo_StackTrace>* GraphDebugInfo::mutable_traces() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.GraphDebugInfo.traces)
  return _internal_mutable_traces();
}

// map<string, fixed64> name_to_trace_id = 5;
inline int GraphDebugInfo::_internal_name_to_trace_id_size() const {
  return _internal_name_to_trace_id().size();
}
inline int GraphDebugInfo::name_to_trace_id_size() const {
  return _internal_name_to_trace_id_size();
}
inline void GraphDebugInfo::clear_name_to_trace_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_to_trace_id_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::uint64_t>& GraphDebugInfo::_internal_name_to_trace_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_to_trace_id_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::uint64_t>& GraphDebugInfo::name_to_trace_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.GraphDebugInfo.name_to_trace_id)
  return _internal_name_to_trace_id();
}
inline ::google::protobuf::Map<std::string, ::uint64_t>* GraphDebugInfo::_internal_mutable_name_to_trace_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_to_trace_id_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::uint64_t>* GraphDebugInfo::mutable_name_to_trace_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.GraphDebugInfo.name_to_trace_id)
  return _internal_mutable_name_to_trace_id();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto_2epb_2eh
