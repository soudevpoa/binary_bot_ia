// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/graph_transfer_info.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto;
namespace tensorflow {
class GraphTransferConstNodeInfo;
struct GraphTransferConstNodeInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphTransferConstNodeInfoDefaultTypeInternal _GraphTransferConstNodeInfo_default_instance_;
class GraphTransferGraphInputNodeInfo;
struct GraphTransferGraphInputNodeInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphTransferGraphInputNodeInfoDefaultTypeInternal _GraphTransferGraphInputNodeInfo_default_instance_;
class GraphTransferGraphOutputNodeInfo;
struct GraphTransferGraphOutputNodeInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphTransferGraphOutputNodeInfoDefaultTypeInternal _GraphTransferGraphOutputNodeInfo_default_instance_;
class GraphTransferInfo;
struct GraphTransferInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphTransferInfoDefaultTypeInternal _GraphTransferInfo_default_instance_;
class GraphTransferNodeInfo;
struct GraphTransferNodeInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphTransferNodeInfoDefaultTypeInternal _GraphTransferNodeInfo_default_instance_;
class GraphTransferNodeInput;
struct GraphTransferNodeInputDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphTransferNodeInputDefaultTypeInternal _GraphTransferNodeInput_default_instance_;
class GraphTransferNodeInputInfo;
struct GraphTransferNodeInputInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphTransferNodeInputInfoDefaultTypeInternal _GraphTransferNodeInputInfo_default_instance_;
class GraphTransferNodeOutputInfo;
struct GraphTransferNodeOutputInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphTransferNodeOutputInfoDefaultTypeInternal _GraphTransferNodeOutputInfo_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
enum GraphTransferInfo_Destination : int {
  GraphTransferInfo_Destination_NOP = 0,
  GraphTransferInfo_Destination_HEXAGON = 1,
  GraphTransferInfo_Destination_GraphTransferInfo_Destination_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GraphTransferInfo_Destination_GraphTransferInfo_Destination_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool GraphTransferInfo_Destination_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t GraphTransferInfo_Destination_internal_data_[];
constexpr GraphTransferInfo_Destination GraphTransferInfo_Destination_Destination_MIN = static_cast<GraphTransferInfo_Destination>(0);
constexpr GraphTransferInfo_Destination GraphTransferInfo_Destination_Destination_MAX = static_cast<GraphTransferInfo_Destination>(1);
constexpr int GraphTransferInfo_Destination_Destination_ARRAYSIZE = 1 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
GraphTransferInfo_Destination_descriptor();
template <typename T>
const std::string& GraphTransferInfo_Destination_Name(T value) {
  static_assert(std::is_same<T, GraphTransferInfo_Destination>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Destination_Name().");
  return GraphTransferInfo_Destination_Name(static_cast<GraphTransferInfo_Destination>(value));
}
template <>
inline const std::string& GraphTransferInfo_Destination_Name(GraphTransferInfo_Destination value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GraphTransferInfo_Destination_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool GraphTransferInfo_Destination_Parse(absl::string_view name, GraphTransferInfo_Destination* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GraphTransferInfo_Destination>(
      GraphTransferInfo_Destination_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphTransferNodeOutputInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphTransferNodeOutputInfo) */ {
 public:
  inline GraphTransferNodeOutputInfo() : GraphTransferNodeOutputInfo(nullptr) {}
  ~GraphTransferNodeOutputInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTransferNodeOutputInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTransferNodeOutputInfo(const GraphTransferNodeOutputInfo& from) : GraphTransferNodeOutputInfo(nullptr, from) {}
  inline GraphTransferNodeOutputInfo(GraphTransferNodeOutputInfo&& from) noexcept
      : GraphTransferNodeOutputInfo(nullptr, std::move(from)) {}
  inline GraphTransferNodeOutputInfo& operator=(const GraphTransferNodeOutputInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTransferNodeOutputInfo& operator=(GraphTransferNodeOutputInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTransferNodeOutputInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTransferNodeOutputInfo* internal_default_instance() {
    return reinterpret_cast<const GraphTransferNodeOutputInfo*>(
        &_GraphTransferNodeOutputInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GraphTransferNodeOutputInfo& a, GraphTransferNodeOutputInfo& b) { a.Swap(&b); }
  inline void Swap(GraphTransferNodeOutputInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTransferNodeOutputInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTransferNodeOutputInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphTransferNodeOutputInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphTransferNodeOutputInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphTransferNodeOutputInfo& from) { GraphTransferNodeOutputInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphTransferNodeOutputInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphTransferNodeOutputInfo"; }

 protected:
  explicit GraphTransferNodeOutputInfo(::google::protobuf::Arena* arena);
  GraphTransferNodeOutputInfo(::google::protobuf::Arena* arena, const GraphTransferNodeOutputInfo& from);
  GraphTransferNodeOutputInfo(::google::protobuf::Arena* arena, GraphTransferNodeOutputInfo&& from) noexcept
      : GraphTransferNodeOutputInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMaxByteSizeFieldNumber = 2,
    kNodeIdFieldNumber = 1,
  };
  // repeated int32 max_byte_size = 2;
  int max_byte_size_size() const;
  private:
  int _internal_max_byte_size_size() const;

  public:
  void clear_max_byte_size() ;
  ::int32_t max_byte_size(int index) const;
  void set_max_byte_size(int index, ::int32_t value);
  void add_max_byte_size(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& max_byte_size() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_max_byte_size();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_max_byte_size() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_max_byte_size();

  public:
  // int32 node_id = 1;
  void clear_node_id() ;
  ::int32_t node_id() const;
  void set_node_id(::int32_t value);

  private:
  ::int32_t _internal_node_id() const;
  void _internal_set_node_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferNodeOutputInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTransferNodeOutputInfo& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> max_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _max_byte_size_cached_byte_size_;
    ::int32_t node_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphTransferNodeInput final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphTransferNodeInput) */ {
 public:
  inline GraphTransferNodeInput() : GraphTransferNodeInput(nullptr) {}
  ~GraphTransferNodeInput() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTransferNodeInput(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTransferNodeInput(const GraphTransferNodeInput& from) : GraphTransferNodeInput(nullptr, from) {}
  inline GraphTransferNodeInput(GraphTransferNodeInput&& from) noexcept
      : GraphTransferNodeInput(nullptr, std::move(from)) {}
  inline GraphTransferNodeInput& operator=(const GraphTransferNodeInput& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTransferNodeInput& operator=(GraphTransferNodeInput&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTransferNodeInput& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTransferNodeInput* internal_default_instance() {
    return reinterpret_cast<const GraphTransferNodeInput*>(
        &_GraphTransferNodeInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GraphTransferNodeInput& a, GraphTransferNodeInput& b) { a.Swap(&b); }
  inline void Swap(GraphTransferNodeInput* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTransferNodeInput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTransferNodeInput* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphTransferNodeInput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphTransferNodeInput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphTransferNodeInput& from) { GraphTransferNodeInput::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphTransferNodeInput* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphTransferNodeInput"; }

 protected:
  explicit GraphTransferNodeInput(::google::protobuf::Arena* arena);
  GraphTransferNodeInput(::google::protobuf::Arena* arena, const GraphTransferNodeInput& from);
  GraphTransferNodeInput(::google::protobuf::Arena* arena, GraphTransferNodeInput&& from) noexcept
      : GraphTransferNodeInput(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeIdFieldNumber = 1,
    kOutputPortFieldNumber = 2,
  };
  // int32 node_id = 1;
  void clear_node_id() ;
  ::int32_t node_id() const;
  void set_node_id(::int32_t value);

  private:
  ::int32_t _internal_node_id() const;
  void _internal_set_node_id(::int32_t value);

  public:
  // int32 output_port = 2;
  void clear_output_port() ;
  ::int32_t output_port() const;
  void set_output_port(::int32_t value);

  private:
  ::int32_t _internal_output_port() const;
  void _internal_set_output_port(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferNodeInput)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTransferNodeInput& from_msg);
    ::int32_t node_id_;
    ::int32_t output_port_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphTransferNodeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphTransferNodeInfo) */ {
 public:
  inline GraphTransferNodeInfo() : GraphTransferNodeInfo(nullptr) {}
  ~GraphTransferNodeInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTransferNodeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTransferNodeInfo(const GraphTransferNodeInfo& from) : GraphTransferNodeInfo(nullptr, from) {}
  inline GraphTransferNodeInfo(GraphTransferNodeInfo&& from) noexcept
      : GraphTransferNodeInfo(nullptr, std::move(from)) {}
  inline GraphTransferNodeInfo& operator=(const GraphTransferNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTransferNodeInfo& operator=(GraphTransferNodeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTransferNodeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTransferNodeInfo* internal_default_instance() {
    return reinterpret_cast<const GraphTransferNodeInfo*>(
        &_GraphTransferNodeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GraphTransferNodeInfo& a, GraphTransferNodeInfo& b) { a.Swap(&b); }
  inline void Swap(GraphTransferNodeInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTransferNodeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTransferNodeInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphTransferNodeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphTransferNodeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphTransferNodeInfo& from) { GraphTransferNodeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphTransferNodeInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphTransferNodeInfo"; }

 protected:
  explicit GraphTransferNodeInfo(::google::protobuf::Arena* arena);
  GraphTransferNodeInfo(::google::protobuf::Arena* arena, const GraphTransferNodeInfo& from);
  GraphTransferNodeInfo(::google::protobuf::Arena* arena, GraphTransferNodeInfo&& from) noexcept
      : GraphTransferNodeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kTypeNameFieldNumber = 3,
    kNodeIdFieldNumber = 2,
    kSocOpIdFieldNumber = 4,
    kPaddingIdFieldNumber = 5,
    kInputCountFieldNumber = 6,
    kOutputCountFieldNumber = 7,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string type_name = 3;
  void clear_type_name() ;
  const std::string& type_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type_name(Arg_&& arg, Args_... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* value);

  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(
      const std::string& value);
  std::string* _internal_mutable_type_name();

  public:
  // int32 node_id = 2;
  void clear_node_id() ;
  ::int32_t node_id() const;
  void set_node_id(::int32_t value);

  private:
  ::int32_t _internal_node_id() const;
  void _internal_set_node_id(::int32_t value);

  public:
  // int32 soc_op_id = 4;
  void clear_soc_op_id() ;
  ::int32_t soc_op_id() const;
  void set_soc_op_id(::int32_t value);

  private:
  ::int32_t _internal_soc_op_id() const;
  void _internal_set_soc_op_id(::int32_t value);

  public:
  // int32 padding_id = 5;
  void clear_padding_id() ;
  ::int32_t padding_id() const;
  void set_padding_id(::int32_t value);

  private:
  ::int32_t _internal_padding_id() const;
  void _internal_set_padding_id(::int32_t value);

  public:
  // int32 input_count = 6;
  void clear_input_count() ;
  ::int32_t input_count() const;
  void set_input_count(::int32_t value);

  private:
  ::int32_t _internal_input_count() const;
  void _internal_set_input_count(::int32_t value);

  public:
  // int32 output_count = 7;
  void clear_output_count() ;
  ::int32_t output_count() const;
  void set_output_count(::int32_t value);

  private:
  ::int32_t _internal_output_count() const;
  void _internal_set_output_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferNodeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      54, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTransferNodeInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr type_name_;
    ::int32_t node_id_;
    ::int32_t soc_op_id_;
    ::int32_t padding_id_;
    ::int32_t input_count_;
    ::int32_t output_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphTransferGraphOutputNodeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphTransferGraphOutputNodeInfo) */ {
 public:
  inline GraphTransferGraphOutputNodeInfo() : GraphTransferGraphOutputNodeInfo(nullptr) {}
  ~GraphTransferGraphOutputNodeInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTransferGraphOutputNodeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTransferGraphOutputNodeInfo(const GraphTransferGraphOutputNodeInfo& from) : GraphTransferGraphOutputNodeInfo(nullptr, from) {}
  inline GraphTransferGraphOutputNodeInfo(GraphTransferGraphOutputNodeInfo&& from) noexcept
      : GraphTransferGraphOutputNodeInfo(nullptr, std::move(from)) {}
  inline GraphTransferGraphOutputNodeInfo& operator=(const GraphTransferGraphOutputNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTransferGraphOutputNodeInfo& operator=(GraphTransferGraphOutputNodeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTransferGraphOutputNodeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTransferGraphOutputNodeInfo* internal_default_instance() {
    return reinterpret_cast<const GraphTransferGraphOutputNodeInfo*>(
        &_GraphTransferGraphOutputNodeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GraphTransferGraphOutputNodeInfo& a, GraphTransferGraphOutputNodeInfo& b) { a.Swap(&b); }
  inline void Swap(GraphTransferGraphOutputNodeInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTransferGraphOutputNodeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTransferGraphOutputNodeInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphTransferGraphOutputNodeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphTransferGraphOutputNodeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphTransferGraphOutputNodeInfo& from) { GraphTransferGraphOutputNodeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphTransferGraphOutputNodeInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphTransferGraphOutputNodeInfo"; }

 protected:
  explicit GraphTransferGraphOutputNodeInfo(::google::protobuf::Arena* arena);
  GraphTransferGraphOutputNodeInfo(::google::protobuf::Arena* arena, const GraphTransferGraphOutputNodeInfo& from);
  GraphTransferGraphOutputNodeInfo(::google::protobuf::Arena* arena, GraphTransferGraphOutputNodeInfo&& from) noexcept
      : GraphTransferGraphOutputNodeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShapeFieldNumber = 2,
    kNameFieldNumber = 1,
    kDtypeFieldNumber = 3,
  };
  // repeated int64 shape = 2;
  int shape_size() const;
  private:
  int _internal_shape_size() const;

  public:
  void clear_shape() ;
  ::int64_t shape(int index) const;
  void set_shape(int index, ::int64_t value);
  void add_shape(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_shape();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_shape();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .tensorflow.DataType dtype = 3;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferGraphOutputNodeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      56, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTransferGraphOutputNodeInfo& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> shape_;
    mutable ::google::protobuf::internal::CachedSize _shape_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    int dtype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphTransferGraphInputNodeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphTransferGraphInputNodeInfo) */ {
 public:
  inline GraphTransferGraphInputNodeInfo() : GraphTransferGraphInputNodeInfo(nullptr) {}
  ~GraphTransferGraphInputNodeInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTransferGraphInputNodeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTransferGraphInputNodeInfo(const GraphTransferGraphInputNodeInfo& from) : GraphTransferGraphInputNodeInfo(nullptr, from) {}
  inline GraphTransferGraphInputNodeInfo(GraphTransferGraphInputNodeInfo&& from) noexcept
      : GraphTransferGraphInputNodeInfo(nullptr, std::move(from)) {}
  inline GraphTransferGraphInputNodeInfo& operator=(const GraphTransferGraphInputNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTransferGraphInputNodeInfo& operator=(GraphTransferGraphInputNodeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTransferGraphInputNodeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTransferGraphInputNodeInfo* internal_default_instance() {
    return reinterpret_cast<const GraphTransferGraphInputNodeInfo*>(
        &_GraphTransferGraphInputNodeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GraphTransferGraphInputNodeInfo& a, GraphTransferGraphInputNodeInfo& b) { a.Swap(&b); }
  inline void Swap(GraphTransferGraphInputNodeInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTransferGraphInputNodeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTransferGraphInputNodeInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphTransferGraphInputNodeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphTransferGraphInputNodeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphTransferGraphInputNodeInfo& from) { GraphTransferGraphInputNodeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphTransferGraphInputNodeInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphTransferGraphInputNodeInfo"; }

 protected:
  explicit GraphTransferGraphInputNodeInfo(::google::protobuf::Arena* arena);
  GraphTransferGraphInputNodeInfo(::google::protobuf::Arena* arena, const GraphTransferGraphInputNodeInfo& from);
  GraphTransferGraphInputNodeInfo(::google::protobuf::Arena* arena, GraphTransferGraphInputNodeInfo&& from) noexcept
      : GraphTransferGraphInputNodeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShapeFieldNumber = 2,
    kNameFieldNumber = 1,
    kDtypeFieldNumber = 3,
  };
  // repeated int64 shape = 2;
  int shape_size() const;
  private:
  int _internal_shape_size() const;

  public:
  void clear_shape() ;
  ::int64_t shape(int index) const;
  void set_shape(int index, ::int64_t value);
  void add_shape(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_shape();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_shape();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .tensorflow.DataType dtype = 3;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferGraphInputNodeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      55, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTransferGraphInputNodeInfo& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> shape_;
    mutable ::google::protobuf::internal::CachedSize _shape_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    int dtype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphTransferConstNodeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphTransferConstNodeInfo) */ {
 public:
  inline GraphTransferConstNodeInfo() : GraphTransferConstNodeInfo(nullptr) {}
  ~GraphTransferConstNodeInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTransferConstNodeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTransferConstNodeInfo(const GraphTransferConstNodeInfo& from) : GraphTransferConstNodeInfo(nullptr, from) {}
  inline GraphTransferConstNodeInfo(GraphTransferConstNodeInfo&& from) noexcept
      : GraphTransferConstNodeInfo(nullptr, std::move(from)) {}
  inline GraphTransferConstNodeInfo& operator=(const GraphTransferConstNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTransferConstNodeInfo& operator=(GraphTransferConstNodeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTransferConstNodeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTransferConstNodeInfo* internal_default_instance() {
    return reinterpret_cast<const GraphTransferConstNodeInfo*>(
        &_GraphTransferConstNodeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GraphTransferConstNodeInfo& a, GraphTransferConstNodeInfo& b) { a.Swap(&b); }
  inline void Swap(GraphTransferConstNodeInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTransferConstNodeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTransferConstNodeInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphTransferConstNodeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphTransferConstNodeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphTransferConstNodeInfo& from) { GraphTransferConstNodeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphTransferConstNodeInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphTransferConstNodeInfo"; }

 protected:
  explicit GraphTransferConstNodeInfo(::google::protobuf::Arena* arena);
  GraphTransferConstNodeInfo(::google::protobuf::Arena* arena, const GraphTransferConstNodeInfo& from);
  GraphTransferConstNodeInfo(::google::protobuf::Arena* arena, GraphTransferConstNodeInfo&& from) noexcept
      : GraphTransferConstNodeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShapeFieldNumber = 3,
    kNameFieldNumber = 1,
    kDataFieldNumber = 4,
    kNodeIdFieldNumber = 2,
    kDtypeFieldNumber = 5,
  };
  // repeated int64 shape = 3;
  int shape_size() const;
  private:
  int _internal_shape_size() const;

  public:
  void clear_shape() ;
  ::int64_t shape(int index) const;
  void set_shape(int index, ::int64_t value);
  void add_shape(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_shape();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_shape();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bytes data = 4;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int32 node_id = 2;
  void clear_node_id() ;
  ::int32_t node_id() const;
  void set_node_id(::int32_t value);

  private:
  ::int32_t _internal_node_id() const;
  void _internal_set_node_id(::int32_t value);

  public:
  // .tensorflow.DataType dtype = 5;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferConstNodeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      50, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTransferConstNodeInfo& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> shape_;
    mutable ::google::protobuf::internal::CachedSize _shape_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t node_id_;
    int dtype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphTransferNodeInputInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphTransferNodeInputInfo) */ {
 public:
  inline GraphTransferNodeInputInfo() : GraphTransferNodeInputInfo(nullptr) {}
  ~GraphTransferNodeInputInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTransferNodeInputInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTransferNodeInputInfo(const GraphTransferNodeInputInfo& from) : GraphTransferNodeInputInfo(nullptr, from) {}
  inline GraphTransferNodeInputInfo(GraphTransferNodeInputInfo&& from) noexcept
      : GraphTransferNodeInputInfo(nullptr, std::move(from)) {}
  inline GraphTransferNodeInputInfo& operator=(const GraphTransferNodeInputInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTransferNodeInputInfo& operator=(GraphTransferNodeInputInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTransferNodeInputInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTransferNodeInputInfo* internal_default_instance() {
    return reinterpret_cast<const GraphTransferNodeInputInfo*>(
        &_GraphTransferNodeInputInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GraphTransferNodeInputInfo& a, GraphTransferNodeInputInfo& b) { a.Swap(&b); }
  inline void Swap(GraphTransferNodeInputInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTransferNodeInputInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTransferNodeInputInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphTransferNodeInputInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphTransferNodeInputInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphTransferNodeInputInfo& from) { GraphTransferNodeInputInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphTransferNodeInputInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphTransferNodeInputInfo"; }

 protected:
  explicit GraphTransferNodeInputInfo(::google::protobuf::Arena* arena);
  GraphTransferNodeInputInfo(::google::protobuf::Arena* arena, const GraphTransferNodeInputInfo& from);
  GraphTransferNodeInputInfo(::google::protobuf::Arena* arena, GraphTransferNodeInputInfo&& from) noexcept
      : GraphTransferNodeInputInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeInputFieldNumber = 2,
    kNodeIdFieldNumber = 1,
  };
  // repeated .tensorflow.GraphTransferNodeInput node_input = 2;
  int node_input_size() const;
  private:
  int _internal_node_input_size() const;

  public:
  void clear_node_input() ;
  ::tensorflow::GraphTransferNodeInput* mutable_node_input(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInput>* mutable_node_input();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInput>& _internal_node_input() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInput>* _internal_mutable_node_input();
  public:
  const ::tensorflow::GraphTransferNodeInput& node_input(int index) const;
  ::tensorflow::GraphTransferNodeInput* add_node_input();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInput>& node_input() const;
  // int32 node_id = 1;
  void clear_node_id() ;
  ::int32_t node_id() const;
  void set_node_id(::int32_t value);

  private:
  ::int32_t _internal_node_id() const;
  void _internal_set_node_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferNodeInputInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTransferNodeInputInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::GraphTransferNodeInput > node_input_;
    ::int32_t node_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphTransferInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GraphTransferInfo) */ {
 public:
  inline GraphTransferInfo() : GraphTransferInfo(nullptr) {}
  ~GraphTransferInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTransferInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTransferInfo(const GraphTransferInfo& from) : GraphTransferInfo(nullptr, from) {}
  inline GraphTransferInfo(GraphTransferInfo&& from) noexcept
      : GraphTransferInfo(nullptr, std::move(from)) {}
  inline GraphTransferInfo& operator=(const GraphTransferInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTransferInfo& operator=(GraphTransferInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTransferInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTransferInfo* internal_default_instance() {
    return reinterpret_cast<const GraphTransferInfo*>(
        &_GraphTransferInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GraphTransferInfo& a, GraphTransferInfo& b) { a.Swap(&b); }
  inline void Swap(GraphTransferInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTransferInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTransferInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphTransferInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphTransferInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphTransferInfo& from) { GraphTransferInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphTransferInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GraphTransferInfo"; }

 protected:
  explicit GraphTransferInfo(::google::protobuf::Arena* arena);
  GraphTransferInfo(::google::protobuf::Arena* arena, const GraphTransferInfo& from);
  GraphTransferInfo(::google::protobuf::Arena* arena, GraphTransferInfo&& from) noexcept
      : GraphTransferInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Destination = GraphTransferInfo_Destination;
  static constexpr Destination NOP = GraphTransferInfo_Destination_NOP;
  static constexpr Destination HEXAGON = GraphTransferInfo_Destination_HEXAGON;
  static inline bool Destination_IsValid(int value) {
    return GraphTransferInfo_Destination_IsValid(value);
  }
  static constexpr Destination Destination_MIN = GraphTransferInfo_Destination_Destination_MIN;
  static constexpr Destination Destination_MAX = GraphTransferInfo_Destination_Destination_MAX;
  static constexpr int Destination_ARRAYSIZE = GraphTransferInfo_Destination_Destination_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Destination_descriptor() {
    return GraphTransferInfo_Destination_descriptor();
  }
  template <typename T>
  static inline const std::string& Destination_Name(T value) {
    return GraphTransferInfo_Destination_Name(value);
  }
  static inline bool Destination_Parse(absl::string_view name, Destination* value) {
    return GraphTransferInfo_Destination_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kNodeInfoFieldNumber = 1,
    kConstNodeInfoFieldNumber = 2,
    kNodeInputInfoFieldNumber = 3,
    kNodeOutputInfoFieldNumber = 4,
    kGraphInputNodeInfoFieldNumber = 5,
    kGraphOutputNodeInfoFieldNumber = 6,
    kDestinationFieldNumber = 7,
  };
  // repeated .tensorflow.GraphTransferNodeInfo node_info = 1;
  int node_info_size() const;
  private:
  int _internal_node_info_size() const;

  public:
  void clear_node_info() ;
  ::tensorflow::GraphTransferNodeInfo* mutable_node_info(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInfo>* mutable_node_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInfo>& _internal_node_info() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInfo>* _internal_mutable_node_info();
  public:
  const ::tensorflow::GraphTransferNodeInfo& node_info(int index) const;
  ::tensorflow::GraphTransferNodeInfo* add_node_info();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInfo>& node_info() const;
  // repeated .tensorflow.GraphTransferConstNodeInfo const_node_info = 2;
  int const_node_info_size() const;
  private:
  int _internal_const_node_info_size() const;

  public:
  void clear_const_node_info() ;
  ::tensorflow::GraphTransferConstNodeInfo* mutable_const_node_info(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferConstNodeInfo>* mutable_const_node_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferConstNodeInfo>& _internal_const_node_info() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferConstNodeInfo>* _internal_mutable_const_node_info();
  public:
  const ::tensorflow::GraphTransferConstNodeInfo& const_node_info(int index) const;
  ::tensorflow::GraphTransferConstNodeInfo* add_const_node_info();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferConstNodeInfo>& const_node_info() const;
  // repeated .tensorflow.GraphTransferNodeInputInfo node_input_info = 3;
  int node_input_info_size() const;
  private:
  int _internal_node_input_info_size() const;

  public:
  void clear_node_input_info() ;
  ::tensorflow::GraphTransferNodeInputInfo* mutable_node_input_info(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInputInfo>* mutable_node_input_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInputInfo>& _internal_node_input_info() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInputInfo>* _internal_mutable_node_input_info();
  public:
  const ::tensorflow::GraphTransferNodeInputInfo& node_input_info(int index) const;
  ::tensorflow::GraphTransferNodeInputInfo* add_node_input_info();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInputInfo>& node_input_info() const;
  // repeated .tensorflow.GraphTransferNodeOutputInfo node_output_info = 4;
  int node_output_info_size() const;
  private:
  int _internal_node_output_info_size() const;

  public:
  void clear_node_output_info() ;
  ::tensorflow::GraphTransferNodeOutputInfo* mutable_node_output_info(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeOutputInfo>* mutable_node_output_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeOutputInfo>& _internal_node_output_info() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeOutputInfo>* _internal_mutable_node_output_info();
  public:
  const ::tensorflow::GraphTransferNodeOutputInfo& node_output_info(int index) const;
  ::tensorflow::GraphTransferNodeOutputInfo* add_node_output_info();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeOutputInfo>& node_output_info() const;
  // repeated .tensorflow.GraphTransferGraphInputNodeInfo graph_input_node_info = 5;
  int graph_input_node_info_size() const;
  private:
  int _internal_graph_input_node_info_size() const;

  public:
  void clear_graph_input_node_info() ;
  ::tensorflow::GraphTransferGraphInputNodeInfo* mutable_graph_input_node_info(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphInputNodeInfo>* mutable_graph_input_node_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphInputNodeInfo>& _internal_graph_input_node_info() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphInputNodeInfo>* _internal_mutable_graph_input_node_info();
  public:
  const ::tensorflow::GraphTransferGraphInputNodeInfo& graph_input_node_info(int index) const;
  ::tensorflow::GraphTransferGraphInputNodeInfo* add_graph_input_node_info();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphInputNodeInfo>& graph_input_node_info() const;
  // repeated .tensorflow.GraphTransferGraphOutputNodeInfo graph_output_node_info = 6;
  int graph_output_node_info_size() const;
  private:
  int _internal_graph_output_node_info_size() const;

  public:
  void clear_graph_output_node_info() ;
  ::tensorflow::GraphTransferGraphOutputNodeInfo* mutable_graph_output_node_info(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphOutputNodeInfo>* mutable_graph_output_node_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphOutputNodeInfo>& _internal_graph_output_node_info() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphOutputNodeInfo>* _internal_mutable_graph_output_node_info();
  public:
  const ::tensorflow::GraphTransferGraphOutputNodeInfo& graph_output_node_info(int index) const;
  ::tensorflow::GraphTransferGraphOutputNodeInfo* add_graph_output_node_info();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphOutputNodeInfo>& graph_output_node_info() const;
  // .tensorflow.GraphTransferInfo.Destination destination = 7;
  void clear_destination() ;
  ::tensorflow::GraphTransferInfo_Destination destination() const;
  void set_destination(::tensorflow::GraphTransferInfo_Destination value);

  private:
  ::tensorflow::GraphTransferInfo_Destination _internal_destination() const;
  void _internal_set_destination(::tensorflow::GraphTransferInfo_Destination value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 6,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTransferInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::GraphTransferNodeInfo > node_info_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::GraphTransferConstNodeInfo > const_node_info_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::GraphTransferNodeInputInfo > node_input_info_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::GraphTransferNodeOutputInfo > node_output_info_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::GraphTransferGraphInputNodeInfo > graph_input_node_info_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::GraphTransferGraphOutputNodeInfo > graph_output_node_info_;
    int destination_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GraphTransferNodeInput

// int32 node_id = 1;
inline void GraphTransferNodeInput::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = 0;
}
inline ::int32_t GraphTransferNodeInput::node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInput.node_id)
  return _internal_node_id();
}
inline void GraphTransferNodeInput::set_node_id(::int32_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInput.node_id)
}
inline ::int32_t GraphTransferNodeInput::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_;
}
inline void GraphTransferNodeInput::_internal_set_node_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = value;
}

// int32 output_port = 2;
inline void GraphTransferNodeInput::clear_output_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_port_ = 0;
}
inline ::int32_t GraphTransferNodeInput::output_port() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInput.output_port)
  return _internal_output_port();
}
inline void GraphTransferNodeInput::set_output_port(::int32_t value) {
  _internal_set_output_port(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInput.output_port)
}
inline ::int32_t GraphTransferNodeInput::_internal_output_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_port_;
}
inline void GraphTransferNodeInput::_internal_set_output_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_port_ = value;
}

// -------------------------------------------------------------------

// GraphTransferNodeInfo

// string name = 1;
inline void GraphTransferNodeInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GraphTransferNodeInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphTransferNodeInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInfo.name)
}
inline std::string* GraphTransferNodeInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferNodeInfo.name)
  return _s;
}
inline const std::string& GraphTransferNodeInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GraphTransferNodeInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GraphTransferNodeInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GraphTransferNodeInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.GraphTransferNodeInfo.name)
  return _impl_.name_.Release();
}
inline void GraphTransferNodeInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.GraphTransferNodeInfo.name)
}

// int32 node_id = 2;
inline void GraphTransferNodeInfo::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = 0;
}
inline ::int32_t GraphTransferNodeInfo::node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInfo.node_id)
  return _internal_node_id();
}
inline void GraphTransferNodeInfo::set_node_id(::int32_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInfo.node_id)
}
inline ::int32_t GraphTransferNodeInfo::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_;
}
inline void GraphTransferNodeInfo::_internal_set_node_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = value;
}

// string type_name = 3;
inline void GraphTransferNodeInfo::clear_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.ClearToEmpty();
}
inline const std::string& GraphTransferNodeInfo::type_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInfo.type_name)
  return _internal_type_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphTransferNodeInfo::set_type_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInfo.type_name)
}
inline std::string* GraphTransferNodeInfo::mutable_type_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferNodeInfo.type_name)
  return _s;
}
inline const std::string& GraphTransferNodeInfo::_internal_type_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_name_.Get();
}
inline void GraphTransferNodeInfo::_internal_set_type_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.Set(value, GetArena());
}
inline std::string* GraphTransferNodeInfo::_internal_mutable_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_name_.Mutable( GetArena());
}
inline std::string* GraphTransferNodeInfo::release_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.GraphTransferNodeInfo.type_name)
  return _impl_.type_name_.Release();
}
inline void GraphTransferNodeInfo::set_allocated_type_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_name_.IsDefault()) {
          _impl_.type_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.GraphTransferNodeInfo.type_name)
}

// int32 soc_op_id = 4;
inline void GraphTransferNodeInfo::clear_soc_op_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.soc_op_id_ = 0;
}
inline ::int32_t GraphTransferNodeInfo::soc_op_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInfo.soc_op_id)
  return _internal_soc_op_id();
}
inline void GraphTransferNodeInfo::set_soc_op_id(::int32_t value) {
  _internal_set_soc_op_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInfo.soc_op_id)
}
inline ::int32_t GraphTransferNodeInfo::_internal_soc_op_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.soc_op_id_;
}
inline void GraphTransferNodeInfo::_internal_set_soc_op_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.soc_op_id_ = value;
}

// int32 padding_id = 5;
inline void GraphTransferNodeInfo::clear_padding_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.padding_id_ = 0;
}
inline ::int32_t GraphTransferNodeInfo::padding_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInfo.padding_id)
  return _internal_padding_id();
}
inline void GraphTransferNodeInfo::set_padding_id(::int32_t value) {
  _internal_set_padding_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInfo.padding_id)
}
inline ::int32_t GraphTransferNodeInfo::_internal_padding_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.padding_id_;
}
inline void GraphTransferNodeInfo::_internal_set_padding_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.padding_id_ = value;
}

// int32 input_count = 6;
inline void GraphTransferNodeInfo::clear_input_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_count_ = 0;
}
inline ::int32_t GraphTransferNodeInfo::input_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInfo.input_count)
  return _internal_input_count();
}
inline void GraphTransferNodeInfo::set_input_count(::int32_t value) {
  _internal_set_input_count(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInfo.input_count)
}
inline ::int32_t GraphTransferNodeInfo::_internal_input_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_count_;
}
inline void GraphTransferNodeInfo::_internal_set_input_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_count_ = value;
}

// int32 output_count = 7;
inline void GraphTransferNodeInfo::clear_output_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_count_ = 0;
}
inline ::int32_t GraphTransferNodeInfo::output_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInfo.output_count)
  return _internal_output_count();
}
inline void GraphTransferNodeInfo::set_output_count(::int32_t value) {
  _internal_set_output_count(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInfo.output_count)
}
inline ::int32_t GraphTransferNodeInfo::_internal_output_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_count_;
}
inline void GraphTransferNodeInfo::_internal_set_output_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_count_ = value;
}

// -------------------------------------------------------------------

// GraphTransferConstNodeInfo

// string name = 1;
inline void GraphTransferConstNodeInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GraphTransferConstNodeInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferConstNodeInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphTransferConstNodeInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferConstNodeInfo.name)
}
inline std::string* GraphTransferConstNodeInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferConstNodeInfo.name)
  return _s;
}
inline const std::string& GraphTransferConstNodeInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GraphTransferConstNodeInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GraphTransferConstNodeInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GraphTransferConstNodeInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.GraphTransferConstNodeInfo.name)
  return _impl_.name_.Release();
}
inline void GraphTransferConstNodeInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.GraphTransferConstNodeInfo.name)
}

// int32 node_id = 2;
inline void GraphTransferConstNodeInfo::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = 0;
}
inline ::int32_t GraphTransferConstNodeInfo::node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferConstNodeInfo.node_id)
  return _internal_node_id();
}
inline void GraphTransferConstNodeInfo::set_node_id(::int32_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferConstNodeInfo.node_id)
}
inline ::int32_t GraphTransferConstNodeInfo::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_;
}
inline void GraphTransferConstNodeInfo::_internal_set_node_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = value;
}

// repeated int64 shape = 3;
inline int GraphTransferConstNodeInfo::_internal_shape_size() const {
  return _internal_shape().size();
}
inline int GraphTransferConstNodeInfo::shape_size() const {
  return _internal_shape_size();
}
inline void GraphTransferConstNodeInfo::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shape_.Clear();
}
inline ::int64_t GraphTransferConstNodeInfo::shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferConstNodeInfo.shape)
  return _internal_shape().Get(index);
}
inline void GraphTransferConstNodeInfo::set_shape(int index, ::int64_t value) {
  _internal_mutable_shape()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferConstNodeInfo.shape)
}
inline void GraphTransferConstNodeInfo::add_shape(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_shape()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferConstNodeInfo.shape)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& GraphTransferConstNodeInfo::shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferConstNodeInfo.shape)
  return _internal_shape();
}
inline ::google::protobuf::RepeatedField<::int64_t>* GraphTransferConstNodeInfo::mutable_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferConstNodeInfo.shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shape();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
GraphTransferConstNodeInfo::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shape_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* GraphTransferConstNodeInfo::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shape_;
}

// bytes data = 4;
inline void GraphTransferConstNodeInfo::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& GraphTransferConstNodeInfo::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferConstNodeInfo.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphTransferConstNodeInfo::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferConstNodeInfo.data)
}
inline std::string* GraphTransferConstNodeInfo::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferConstNodeInfo.data)
  return _s;
}
inline const std::string& GraphTransferConstNodeInfo::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void GraphTransferConstNodeInfo::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* GraphTransferConstNodeInfo::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* GraphTransferConstNodeInfo::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.GraphTransferConstNodeInfo.data)
  return _impl_.data_.Release();
}
inline void GraphTransferConstNodeInfo::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.GraphTransferConstNodeInfo.data)
}

// .tensorflow.DataType dtype = 5;
inline void GraphTransferConstNodeInfo::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
}
inline ::tensorflow::DataType GraphTransferConstNodeInfo::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferConstNodeInfo.dtype)
  return _internal_dtype();
}
inline void GraphTransferConstNodeInfo::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferConstNodeInfo.dtype)
}
inline ::tensorflow::DataType GraphTransferConstNodeInfo::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void GraphTransferConstNodeInfo::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// -------------------------------------------------------------------

// GraphTransferNodeInputInfo

// int32 node_id = 1;
inline void GraphTransferNodeInputInfo::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = 0;
}
inline ::int32_t GraphTransferNodeInputInfo::node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInputInfo.node_id)
  return _internal_node_id();
}
inline void GraphTransferNodeInputInfo::set_node_id(::int32_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeInputInfo.node_id)
}
inline ::int32_t GraphTransferNodeInputInfo::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_;
}
inline void GraphTransferNodeInputInfo::_internal_set_node_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = value;
}

// repeated .tensorflow.GraphTransferNodeInput node_input = 2;
inline int GraphTransferNodeInputInfo::_internal_node_input_size() const {
  return _internal_node_input().size();
}
inline int GraphTransferNodeInputInfo::node_input_size() const {
  return _internal_node_input_size();
}
inline void GraphTransferNodeInputInfo::clear_node_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_input_.Clear();
}
inline ::tensorflow::GraphTransferNodeInput* GraphTransferNodeInputInfo::mutable_node_input(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferNodeInputInfo.node_input)
  return _internal_mutable_node_input()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInput>* GraphTransferNodeInputInfo::mutable_node_input()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferNodeInputInfo.node_input)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node_input();
}
inline const ::tensorflow::GraphTransferNodeInput& GraphTransferNodeInputInfo::node_input(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeInputInfo.node_input)
  return _internal_node_input().Get(index);
}
inline ::tensorflow::GraphTransferNodeInput* GraphTransferNodeInputInfo::add_node_input() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::GraphTransferNodeInput* _add = _internal_mutable_node_input()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferNodeInputInfo.node_input)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInput>& GraphTransferNodeInputInfo::node_input() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferNodeInputInfo.node_input)
  return _internal_node_input();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInput>&
GraphTransferNodeInputInfo::_internal_node_input() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_input_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInput>*
GraphTransferNodeInputInfo::_internal_mutable_node_input() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_input_;
}

// -------------------------------------------------------------------

// GraphTransferNodeOutputInfo

// int32 node_id = 1;
inline void GraphTransferNodeOutputInfo::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = 0;
}
inline ::int32_t GraphTransferNodeOutputInfo::node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeOutputInfo.node_id)
  return _internal_node_id();
}
inline void GraphTransferNodeOutputInfo::set_node_id(::int32_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeOutputInfo.node_id)
}
inline ::int32_t GraphTransferNodeOutputInfo::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_;
}
inline void GraphTransferNodeOutputInfo::_internal_set_node_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = value;
}

// repeated int32 max_byte_size = 2;
inline int GraphTransferNodeOutputInfo::_internal_max_byte_size_size() const {
  return _internal_max_byte_size().size();
}
inline int GraphTransferNodeOutputInfo::max_byte_size_size() const {
  return _internal_max_byte_size_size();
}
inline void GraphTransferNodeOutputInfo::clear_max_byte_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_byte_size_.Clear();
}
inline ::int32_t GraphTransferNodeOutputInfo::max_byte_size(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferNodeOutputInfo.max_byte_size)
  return _internal_max_byte_size().Get(index);
}
inline void GraphTransferNodeOutputInfo::set_max_byte_size(int index, ::int32_t value) {
  _internal_mutable_max_byte_size()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferNodeOutputInfo.max_byte_size)
}
inline void GraphTransferNodeOutputInfo::add_max_byte_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_max_byte_size()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferNodeOutputInfo.max_byte_size)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GraphTransferNodeOutputInfo::max_byte_size() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferNodeOutputInfo.max_byte_size)
  return _internal_max_byte_size();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GraphTransferNodeOutputInfo::mutable_max_byte_size()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferNodeOutputInfo.max_byte_size)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_max_byte_size();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
GraphTransferNodeOutputInfo::_internal_max_byte_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_byte_size_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GraphTransferNodeOutputInfo::_internal_mutable_max_byte_size() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.max_byte_size_;
}

// -------------------------------------------------------------------

// GraphTransferGraphInputNodeInfo

// string name = 1;
inline void GraphTransferGraphInputNodeInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GraphTransferGraphInputNodeInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferGraphInputNodeInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphTransferGraphInputNodeInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferGraphInputNodeInfo.name)
}
inline std::string* GraphTransferGraphInputNodeInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferGraphInputNodeInfo.name)
  return _s;
}
inline const std::string& GraphTransferGraphInputNodeInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GraphTransferGraphInputNodeInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GraphTransferGraphInputNodeInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GraphTransferGraphInputNodeInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.GraphTransferGraphInputNodeInfo.name)
  return _impl_.name_.Release();
}
inline void GraphTransferGraphInputNodeInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.GraphTransferGraphInputNodeInfo.name)
}

// repeated int64 shape = 2;
inline int GraphTransferGraphInputNodeInfo::_internal_shape_size() const {
  return _internal_shape().size();
}
inline int GraphTransferGraphInputNodeInfo::shape_size() const {
  return _internal_shape_size();
}
inline void GraphTransferGraphInputNodeInfo::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shape_.Clear();
}
inline ::int64_t GraphTransferGraphInputNodeInfo::shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferGraphInputNodeInfo.shape)
  return _internal_shape().Get(index);
}
inline void GraphTransferGraphInputNodeInfo::set_shape(int index, ::int64_t value) {
  _internal_mutable_shape()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferGraphInputNodeInfo.shape)
}
inline void GraphTransferGraphInputNodeInfo::add_shape(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_shape()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferGraphInputNodeInfo.shape)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& GraphTransferGraphInputNodeInfo::shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferGraphInputNodeInfo.shape)
  return _internal_shape();
}
inline ::google::protobuf::RepeatedField<::int64_t>* GraphTransferGraphInputNodeInfo::mutable_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferGraphInputNodeInfo.shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shape();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
GraphTransferGraphInputNodeInfo::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shape_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* GraphTransferGraphInputNodeInfo::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shape_;
}

// .tensorflow.DataType dtype = 3;
inline void GraphTransferGraphInputNodeInfo::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
}
inline ::tensorflow::DataType GraphTransferGraphInputNodeInfo::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferGraphInputNodeInfo.dtype)
  return _internal_dtype();
}
inline void GraphTransferGraphInputNodeInfo::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferGraphInputNodeInfo.dtype)
}
inline ::tensorflow::DataType GraphTransferGraphInputNodeInfo::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void GraphTransferGraphInputNodeInfo::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// -------------------------------------------------------------------

// GraphTransferGraphOutputNodeInfo

// string name = 1;
inline void GraphTransferGraphOutputNodeInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GraphTransferGraphOutputNodeInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferGraphOutputNodeInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphTransferGraphOutputNodeInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferGraphOutputNodeInfo.name)
}
inline std::string* GraphTransferGraphOutputNodeInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferGraphOutputNodeInfo.name)
  return _s;
}
inline const std::string& GraphTransferGraphOutputNodeInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GraphTransferGraphOutputNodeInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GraphTransferGraphOutputNodeInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GraphTransferGraphOutputNodeInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.GraphTransferGraphOutputNodeInfo.name)
  return _impl_.name_.Release();
}
inline void GraphTransferGraphOutputNodeInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.GraphTransferGraphOutputNodeInfo.name)
}

// repeated int64 shape = 2;
inline int GraphTransferGraphOutputNodeInfo::_internal_shape_size() const {
  return _internal_shape().size();
}
inline int GraphTransferGraphOutputNodeInfo::shape_size() const {
  return _internal_shape_size();
}
inline void GraphTransferGraphOutputNodeInfo::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shape_.Clear();
}
inline ::int64_t GraphTransferGraphOutputNodeInfo::shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferGraphOutputNodeInfo.shape)
  return _internal_shape().Get(index);
}
inline void GraphTransferGraphOutputNodeInfo::set_shape(int index, ::int64_t value) {
  _internal_mutable_shape()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferGraphOutputNodeInfo.shape)
}
inline void GraphTransferGraphOutputNodeInfo::add_shape(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_shape()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferGraphOutputNodeInfo.shape)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& GraphTransferGraphOutputNodeInfo::shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferGraphOutputNodeInfo.shape)
  return _internal_shape();
}
inline ::google::protobuf::RepeatedField<::int64_t>* GraphTransferGraphOutputNodeInfo::mutable_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferGraphOutputNodeInfo.shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shape();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
GraphTransferGraphOutputNodeInfo::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shape_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* GraphTransferGraphOutputNodeInfo::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shape_;
}

// .tensorflow.DataType dtype = 3;
inline void GraphTransferGraphOutputNodeInfo::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
}
inline ::tensorflow::DataType GraphTransferGraphOutputNodeInfo::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferGraphOutputNodeInfo.dtype)
  return _internal_dtype();
}
inline void GraphTransferGraphOutputNodeInfo::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferGraphOutputNodeInfo.dtype)
}
inline ::tensorflow::DataType GraphTransferGraphOutputNodeInfo::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void GraphTransferGraphOutputNodeInfo::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// -------------------------------------------------------------------

// GraphTransferInfo

// repeated .tensorflow.GraphTransferNodeInfo node_info = 1;
inline int GraphTransferInfo::_internal_node_info_size() const {
  return _internal_node_info().size();
}
inline int GraphTransferInfo::node_info_size() const {
  return _internal_node_info_size();
}
inline void GraphTransferInfo::clear_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_info_.Clear();
}
inline ::tensorflow::GraphTransferNodeInfo* GraphTransferInfo::mutable_node_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferInfo.node_info)
  return _internal_mutable_node_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInfo>* GraphTransferInfo::mutable_node_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferInfo.node_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node_info();
}
inline const ::tensorflow::GraphTransferNodeInfo& GraphTransferInfo::node_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferInfo.node_info)
  return _internal_node_info().Get(index);
}
inline ::tensorflow::GraphTransferNodeInfo* GraphTransferInfo::add_node_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::GraphTransferNodeInfo* _add = _internal_mutable_node_info()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferInfo.node_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInfo>& GraphTransferInfo::node_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferInfo.node_info)
  return _internal_node_info();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInfo>&
GraphTransferInfo::_internal_node_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_info_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInfo>*
GraphTransferInfo::_internal_mutable_node_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_info_;
}

// repeated .tensorflow.GraphTransferConstNodeInfo const_node_info = 2;
inline int GraphTransferInfo::_internal_const_node_info_size() const {
  return _internal_const_node_info().size();
}
inline int GraphTransferInfo::const_node_info_size() const {
  return _internal_const_node_info_size();
}
inline void GraphTransferInfo::clear_const_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.const_node_info_.Clear();
}
inline ::tensorflow::GraphTransferConstNodeInfo* GraphTransferInfo::mutable_const_node_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferInfo.const_node_info)
  return _internal_mutable_const_node_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferConstNodeInfo>* GraphTransferInfo::mutable_const_node_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferInfo.const_node_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_const_node_info();
}
inline const ::tensorflow::GraphTransferConstNodeInfo& GraphTransferInfo::const_node_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferInfo.const_node_info)
  return _internal_const_node_info().Get(index);
}
inline ::tensorflow::GraphTransferConstNodeInfo* GraphTransferInfo::add_const_node_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::GraphTransferConstNodeInfo* _add = _internal_mutable_const_node_info()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferInfo.const_node_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferConstNodeInfo>& GraphTransferInfo::const_node_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferInfo.const_node_info)
  return _internal_const_node_info();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferConstNodeInfo>&
GraphTransferInfo::_internal_const_node_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.const_node_info_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferConstNodeInfo>*
GraphTransferInfo::_internal_mutable_const_node_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.const_node_info_;
}

// repeated .tensorflow.GraphTransferNodeInputInfo node_input_info = 3;
inline int GraphTransferInfo::_internal_node_input_info_size() const {
  return _internal_node_input_info().size();
}
inline int GraphTransferInfo::node_input_info_size() const {
  return _internal_node_input_info_size();
}
inline void GraphTransferInfo::clear_node_input_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_input_info_.Clear();
}
inline ::tensorflow::GraphTransferNodeInputInfo* GraphTransferInfo::mutable_node_input_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferInfo.node_input_info)
  return _internal_mutable_node_input_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInputInfo>* GraphTransferInfo::mutable_node_input_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferInfo.node_input_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node_input_info();
}
inline const ::tensorflow::GraphTransferNodeInputInfo& GraphTransferInfo::node_input_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferInfo.node_input_info)
  return _internal_node_input_info().Get(index);
}
inline ::tensorflow::GraphTransferNodeInputInfo* GraphTransferInfo::add_node_input_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::GraphTransferNodeInputInfo* _add = _internal_mutable_node_input_info()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferInfo.node_input_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInputInfo>& GraphTransferInfo::node_input_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferInfo.node_input_info)
  return _internal_node_input_info();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInputInfo>&
GraphTransferInfo::_internal_node_input_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_input_info_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeInputInfo>*
GraphTransferInfo::_internal_mutable_node_input_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_input_info_;
}

// repeated .tensorflow.GraphTransferNodeOutputInfo node_output_info = 4;
inline int GraphTransferInfo::_internal_node_output_info_size() const {
  return _internal_node_output_info().size();
}
inline int GraphTransferInfo::node_output_info_size() const {
  return _internal_node_output_info_size();
}
inline void GraphTransferInfo::clear_node_output_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_output_info_.Clear();
}
inline ::tensorflow::GraphTransferNodeOutputInfo* GraphTransferInfo::mutable_node_output_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferInfo.node_output_info)
  return _internal_mutable_node_output_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeOutputInfo>* GraphTransferInfo::mutable_node_output_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferInfo.node_output_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node_output_info();
}
inline const ::tensorflow::GraphTransferNodeOutputInfo& GraphTransferInfo::node_output_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferInfo.node_output_info)
  return _internal_node_output_info().Get(index);
}
inline ::tensorflow::GraphTransferNodeOutputInfo* GraphTransferInfo::add_node_output_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::GraphTransferNodeOutputInfo* _add = _internal_mutable_node_output_info()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferInfo.node_output_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeOutputInfo>& GraphTransferInfo::node_output_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferInfo.node_output_info)
  return _internal_node_output_info();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeOutputInfo>&
GraphTransferInfo::_internal_node_output_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_output_info_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferNodeOutputInfo>*
GraphTransferInfo::_internal_mutable_node_output_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_output_info_;
}

// repeated .tensorflow.GraphTransferGraphInputNodeInfo graph_input_node_info = 5;
inline int GraphTransferInfo::_internal_graph_input_node_info_size() const {
  return _internal_graph_input_node_info().size();
}
inline int GraphTransferInfo::graph_input_node_info_size() const {
  return _internal_graph_input_node_info_size();
}
inline void GraphTransferInfo::clear_graph_input_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_input_node_info_.Clear();
}
inline ::tensorflow::GraphTransferGraphInputNodeInfo* GraphTransferInfo::mutable_graph_input_node_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferInfo.graph_input_node_info)
  return _internal_mutable_graph_input_node_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphInputNodeInfo>* GraphTransferInfo::mutable_graph_input_node_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferInfo.graph_input_node_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_graph_input_node_info();
}
inline const ::tensorflow::GraphTransferGraphInputNodeInfo& GraphTransferInfo::graph_input_node_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferInfo.graph_input_node_info)
  return _internal_graph_input_node_info().Get(index);
}
inline ::tensorflow::GraphTransferGraphInputNodeInfo* GraphTransferInfo::add_graph_input_node_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::GraphTransferGraphInputNodeInfo* _add = _internal_mutable_graph_input_node_info()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferInfo.graph_input_node_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphInputNodeInfo>& GraphTransferInfo::graph_input_node_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferInfo.graph_input_node_info)
  return _internal_graph_input_node_info();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphInputNodeInfo>&
GraphTransferInfo::_internal_graph_input_node_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_input_node_info_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphInputNodeInfo>*
GraphTransferInfo::_internal_mutable_graph_input_node_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.graph_input_node_info_;
}

// repeated .tensorflow.GraphTransferGraphOutputNodeInfo graph_output_node_info = 6;
inline int GraphTransferInfo::_internal_graph_output_node_info_size() const {
  return _internal_graph_output_node_info().size();
}
inline int GraphTransferInfo::graph_output_node_info_size() const {
  return _internal_graph_output_node_info_size();
}
inline void GraphTransferInfo::clear_graph_output_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_output_node_info_.Clear();
}
inline ::tensorflow::GraphTransferGraphOutputNodeInfo* GraphTransferInfo::mutable_graph_output_node_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GraphTransferInfo.graph_output_node_info)
  return _internal_mutable_graph_output_node_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphOutputNodeInfo>* GraphTransferInfo::mutable_graph_output_node_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GraphTransferInfo.graph_output_node_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_graph_output_node_info();
}
inline const ::tensorflow::GraphTransferGraphOutputNodeInfo& GraphTransferInfo::graph_output_node_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferInfo.graph_output_node_info)
  return _internal_graph_output_node_info().Get(index);
}
inline ::tensorflow::GraphTransferGraphOutputNodeInfo* GraphTransferInfo::add_graph_output_node_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::GraphTransferGraphOutputNodeInfo* _add = _internal_mutable_graph_output_node_info()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GraphTransferInfo.graph_output_node_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphOutputNodeInfo>& GraphTransferInfo::graph_output_node_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GraphTransferInfo.graph_output_node_info)
  return _internal_graph_output_node_info();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphOutputNodeInfo>&
GraphTransferInfo::_internal_graph_output_node_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_output_node_info_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphTransferGraphOutputNodeInfo>*
GraphTransferInfo::_internal_mutable_graph_output_node_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.graph_output_node_info_;
}

// .tensorflow.GraphTransferInfo.Destination destination = 7;
inline void GraphTransferInfo::clear_destination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_ = 0;
}
inline ::tensorflow::GraphTransferInfo_Destination GraphTransferInfo::destination() const {
  // @@protoc_insertion_point(field_get:tensorflow.GraphTransferInfo.destination)
  return _internal_destination();
}
inline void GraphTransferInfo::set_destination(::tensorflow::GraphTransferInfo_Destination value) {
  _internal_set_destination(value);
  // @@protoc_insertion_point(field_set:tensorflow.GraphTransferInfo.destination)
}
inline ::tensorflow::GraphTransferInfo_Destination GraphTransferInfo::_internal_destination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::GraphTransferInfo_Destination>(_impl_.destination_);
}
inline void GraphTransferInfo::_internal_set_destination(::tensorflow::GraphTransferInfo_Destination value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::GraphTransferInfo_Destination> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::GraphTransferInfo_Destination>() {
  return ::tensorflow::GraphTransferInfo_Destination_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto_2epb_2eh
