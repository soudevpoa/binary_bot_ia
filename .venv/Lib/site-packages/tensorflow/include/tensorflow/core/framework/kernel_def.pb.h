// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/kernel_def.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/attr_value.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto;
namespace tensorflow {
class KernelDef;
struct KernelDefDefaultTypeInternal;
PROTOBUF_EXPORT extern KernelDefDefaultTypeInternal _KernelDef_default_instance_;
class KernelDef_AttrConstraint;
struct KernelDef_AttrConstraintDefaultTypeInternal;
PROTOBUF_EXPORT extern KernelDef_AttrConstraintDefaultTypeInternal _KernelDef_AttrConstraint_default_instance_;
class KernelList;
struct KernelListDefaultTypeInternal;
PROTOBUF_EXPORT extern KernelListDefaultTypeInternal _KernelList_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT KernelDef_AttrConstraint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.KernelDef.AttrConstraint) */ {
 public:
  inline KernelDef_AttrConstraint() : KernelDef_AttrConstraint(nullptr) {}
  ~KernelDef_AttrConstraint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KernelDef_AttrConstraint(
      ::google::protobuf::internal::ConstantInitialized);

  inline KernelDef_AttrConstraint(const KernelDef_AttrConstraint& from) : KernelDef_AttrConstraint(nullptr, from) {}
  inline KernelDef_AttrConstraint(KernelDef_AttrConstraint&& from) noexcept
      : KernelDef_AttrConstraint(nullptr, std::move(from)) {}
  inline KernelDef_AttrConstraint& operator=(const KernelDef_AttrConstraint& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelDef_AttrConstraint& operator=(KernelDef_AttrConstraint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KernelDef_AttrConstraint& default_instance() {
    return *internal_default_instance();
  }
  static inline const KernelDef_AttrConstraint* internal_default_instance() {
    return reinterpret_cast<const KernelDef_AttrConstraint*>(
        &_KernelDef_AttrConstraint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(KernelDef_AttrConstraint& a, KernelDef_AttrConstraint& b) { a.Swap(&b); }
  inline void Swap(KernelDef_AttrConstraint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KernelDef_AttrConstraint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KernelDef_AttrConstraint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KernelDef_AttrConstraint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KernelDef_AttrConstraint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KernelDef_AttrConstraint& from) { KernelDef_AttrConstraint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KernelDef_AttrConstraint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.KernelDef.AttrConstraint"; }

 protected:
  explicit KernelDef_AttrConstraint(::google::protobuf::Arena* arena);
  KernelDef_AttrConstraint(::google::protobuf::Arena* arena, const KernelDef_AttrConstraint& from);
  KernelDef_AttrConstraint(::google::protobuf::Arena* arena, KernelDef_AttrConstraint&& from) noexcept
      : KernelDef_AttrConstraint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kAllowedValuesFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .tensorflow.AttrValue allowed_values = 2;
  bool has_allowed_values() const;
  void clear_allowed_values() ;
  const ::tensorflow::AttrValue& allowed_values() const;
  PROTOBUF_NODISCARD ::tensorflow::AttrValue* release_allowed_values();
  ::tensorflow::AttrValue* mutable_allowed_values();
  void set_allocated_allowed_values(::tensorflow::AttrValue* value);
  void unsafe_arena_set_allocated_allowed_values(::tensorflow::AttrValue* value);
  ::tensorflow::AttrValue* unsafe_arena_release_allowed_values();

  private:
  const ::tensorflow::AttrValue& _internal_allowed_values() const;
  ::tensorflow::AttrValue* _internal_mutable_allowed_values();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.KernelDef.AttrConstraint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      48, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KernelDef_AttrConstraint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::tensorflow::AttrValue* allowed_values_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT KernelDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.KernelDef) */ {
 public:
  inline KernelDef() : KernelDef(nullptr) {}
  ~KernelDef() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KernelDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline KernelDef(const KernelDef& from) : KernelDef(nullptr, from) {}
  inline KernelDef(KernelDef&& from) noexcept
      : KernelDef(nullptr, std::move(from)) {}
  inline KernelDef& operator=(const KernelDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelDef& operator=(KernelDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KernelDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const KernelDef* internal_default_instance() {
    return reinterpret_cast<const KernelDef*>(
        &_KernelDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(KernelDef& a, KernelDef& b) { a.Swap(&b); }
  inline void Swap(KernelDef* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KernelDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KernelDef* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KernelDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KernelDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KernelDef& from) { KernelDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KernelDef* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.KernelDef"; }

 protected:
  explicit KernelDef(::google::protobuf::Arena* arena);
  KernelDef(::google::protobuf::Arena* arena, const KernelDef& from);
  KernelDef(::google::protobuf::Arena* arena, KernelDef&& from) noexcept
      : KernelDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using AttrConstraint = KernelDef_AttrConstraint;

  // accessors -------------------------------------------------------
  enum : int {
    kConstraintFieldNumber = 3,
    kHostMemoryArgFieldNumber = 4,
    kOpFieldNumber = 1,
    kDeviceTypeFieldNumber = 2,
    kLabelFieldNumber = 5,
    kPriorityFieldNumber = 6,
  };
  // repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
  int constraint_size() const;
  private:
  int _internal_constraint_size() const;

  public:
  void clear_constraint() ;
  ::tensorflow::KernelDef_AttrConstraint* mutable_constraint(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef_AttrConstraint>* mutable_constraint();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef_AttrConstraint>& _internal_constraint() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef_AttrConstraint>* _internal_mutable_constraint();
  public:
  const ::tensorflow::KernelDef_AttrConstraint& constraint(int index) const;
  ::tensorflow::KernelDef_AttrConstraint* add_constraint();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef_AttrConstraint>& constraint() const;
  // repeated string host_memory_arg = 4;
  int host_memory_arg_size() const;
  private:
  int _internal_host_memory_arg_size() const;

  public:
  void clear_host_memory_arg() ;
  const std::string& host_memory_arg(int index) const;
  std::string* mutable_host_memory_arg(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host_memory_arg(int index, Arg_&& value, Args_... args);
  std::string* add_host_memory_arg();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_host_memory_arg(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& host_memory_arg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_host_memory_arg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_host_memory_arg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_host_memory_arg();

  public:
  // string op = 1;
  void clear_op() ;
  const std::string& op() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_op(Arg_&& arg, Args_... args);
  std::string* mutable_op();
  PROTOBUF_NODISCARD std::string* release_op();
  void set_allocated_op(std::string* value);

  private:
  const std::string& _internal_op() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_op(
      const std::string& value);
  std::string* _internal_mutable_op();

  public:
  // string device_type = 2;
  void clear_device_type() ;
  const std::string& device_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_type();
  PROTOBUF_NODISCARD std::string* release_device_type();
  void set_allocated_device_type(std::string* value);

  private:
  const std::string& _internal_device_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_type(
      const std::string& value);
  std::string* _internal_mutable_device_type();

  public:
  // string label = 5;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // int32 priority = 6;
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.KernelDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      62, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KernelDef& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::KernelDef_AttrConstraint > constraint_;
    ::google::protobuf::RepeatedPtrField<std::string> host_memory_arg_;
    ::google::protobuf::internal::ArenaStringPtr op_;
    ::google::protobuf::internal::ArenaStringPtr device_type_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::int32_t priority_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT KernelList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.KernelList) */ {
 public:
  inline KernelList() : KernelList(nullptr) {}
  ~KernelList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KernelList(
      ::google::protobuf::internal::ConstantInitialized);

  inline KernelList(const KernelList& from) : KernelList(nullptr, from) {}
  inline KernelList(KernelList&& from) noexcept
      : KernelList(nullptr, std::move(from)) {}
  inline KernelList& operator=(const KernelList& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelList& operator=(KernelList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KernelList& default_instance() {
    return *internal_default_instance();
  }
  static inline const KernelList* internal_default_instance() {
    return reinterpret_cast<const KernelList*>(
        &_KernelList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(KernelList& a, KernelList& b) { a.Swap(&b); }
  inline void Swap(KernelList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KernelList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KernelList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KernelList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KernelList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KernelList& from) { KernelList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KernelList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.KernelList"; }

 protected:
  explicit KernelList(::google::protobuf::Arena* arena);
  KernelList(::google::protobuf::Arena* arena, const KernelList& from);
  KernelList(::google::protobuf::Arena* arena, KernelList&& from) noexcept
      : KernelList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKernelFieldNumber = 1,
  };
  // repeated .tensorflow.KernelDef kernel = 1;
  int kernel_size() const;
  private:
  int _internal_kernel_size() const;

  public:
  void clear_kernel() ;
  ::tensorflow::KernelDef* mutable_kernel(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef>* mutable_kernel();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef>& _internal_kernel() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef>* _internal_mutable_kernel();
  public:
  const ::tensorflow::KernelDef& kernel(int index) const;
  ::tensorflow::KernelDef* add_kernel();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef>& kernel() const;
  // @@protoc_insertion_point(class_scope:tensorflow.KernelList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KernelList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::KernelDef > kernel_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// KernelDef_AttrConstraint

// string name = 1;
inline void KernelDef_AttrConstraint::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& KernelDef_AttrConstraint::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.AttrConstraint.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KernelDef_AttrConstraint::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.AttrConstraint.name)
}
inline std::string* KernelDef_AttrConstraint::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.AttrConstraint.name)
  return _s;
}
inline const std::string& KernelDef_AttrConstraint::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void KernelDef_AttrConstraint::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* KernelDef_AttrConstraint::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* KernelDef_AttrConstraint::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.AttrConstraint.name)
  return _impl_.name_.Release();
}
inline void KernelDef_AttrConstraint::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.AttrConstraint.name)
}

// .tensorflow.AttrValue allowed_values = 2;
inline bool KernelDef_AttrConstraint::has_allowed_values() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.allowed_values_ != nullptr);
  return value;
}
inline const ::tensorflow::AttrValue& KernelDef_AttrConstraint::_internal_allowed_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::AttrValue* p = _impl_.allowed_values_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::AttrValue&>(::tensorflow::_AttrValue_default_instance_);
}
inline const ::tensorflow::AttrValue& KernelDef_AttrConstraint::allowed_values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.AttrConstraint.allowed_values)
  return _internal_allowed_values();
}
inline void KernelDef_AttrConstraint::unsafe_arena_set_allocated_allowed_values(::tensorflow::AttrValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allowed_values_);
  }
  _impl_.allowed_values_ = reinterpret_cast<::tensorflow::AttrValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.KernelDef.AttrConstraint.allowed_values)
}
inline ::tensorflow::AttrValue* KernelDef_AttrConstraint::release_allowed_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::AttrValue* released = _impl_.allowed_values_;
  _impl_.allowed_values_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::AttrValue* KernelDef_AttrConstraint::unsafe_arena_release_allowed_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.AttrConstraint.allowed_values)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::AttrValue* temp = _impl_.allowed_values_;
  _impl_.allowed_values_ = nullptr;
  return temp;
}
inline ::tensorflow::AttrValue* KernelDef_AttrConstraint::_internal_mutable_allowed_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allowed_values_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::AttrValue>(GetArena());
    _impl_.allowed_values_ = reinterpret_cast<::tensorflow::AttrValue*>(p);
  }
  return _impl_.allowed_values_;
}
inline ::tensorflow::AttrValue* KernelDef_AttrConstraint::mutable_allowed_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::AttrValue* _msg = _internal_mutable_allowed_values();
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.AttrConstraint.allowed_values)
  return _msg;
}
inline void KernelDef_AttrConstraint::set_allocated_allowed_values(::tensorflow::AttrValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allowed_values_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.allowed_values_ = reinterpret_cast<::tensorflow::AttrValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.AttrConstraint.allowed_values)
}

// -------------------------------------------------------------------

// KernelDef

// string op = 1;
inline void KernelDef::clear_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_.ClearToEmpty();
}
inline const std::string& KernelDef::op() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.op)
  return _internal_op();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KernelDef::set_op(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.op)
}
inline std::string* KernelDef::mutable_op() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_op();
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.op)
  return _s;
}
inline const std::string& KernelDef::_internal_op() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_.Get();
}
inline void KernelDef::_internal_set_op(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_.Set(value, GetArena());
}
inline std::string* KernelDef::_internal_mutable_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.op_.Mutable( GetArena());
}
inline std::string* KernelDef::release_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.op)
  return _impl_.op_.Release();
}
inline void KernelDef::set_allocated_op(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.op_.IsDefault()) {
          _impl_.op_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.op)
}

// string device_type = 2;
inline void KernelDef::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.ClearToEmpty();
}
inline const std::string& KernelDef::device_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.device_type)
  return _internal_device_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KernelDef::set_device_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.device_type)
}
inline std::string* KernelDef::mutable_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_type();
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.device_type)
  return _s;
}
inline const std::string& KernelDef::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_type_.Get();
}
inline void KernelDef::_internal_set_device_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(value, GetArena());
}
inline std::string* KernelDef::_internal_mutable_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_type_.Mutable( GetArena());
}
inline std::string* KernelDef::release_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.device_type)
  return _impl_.device_type_.Release();
}
inline void KernelDef::set_allocated_device_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_type_.IsDefault()) {
          _impl_.device_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.device_type)
}

// repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
inline int KernelDef::_internal_constraint_size() const {
  return _internal_constraint().size();
}
inline int KernelDef::constraint_size() const {
  return _internal_constraint_size();
}
inline void KernelDef::clear_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraint_.Clear();
}
inline ::tensorflow::KernelDef_AttrConstraint* KernelDef::mutable_constraint(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.constraint)
  return _internal_mutable_constraint()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef_AttrConstraint>* KernelDef::mutable_constraint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.KernelDef.constraint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_constraint();
}
inline const ::tensorflow::KernelDef_AttrConstraint& KernelDef::constraint(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.constraint)
  return _internal_constraint().Get(index);
}
inline ::tensorflow::KernelDef_AttrConstraint* KernelDef::add_constraint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::KernelDef_AttrConstraint* _add = _internal_mutable_constraint()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.KernelDef.constraint)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef_AttrConstraint>& KernelDef::constraint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.KernelDef.constraint)
  return _internal_constraint();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef_AttrConstraint>&
KernelDef::_internal_constraint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constraint_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef_AttrConstraint>*
KernelDef::_internal_mutable_constraint() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.constraint_;
}

// repeated string host_memory_arg = 4;
inline int KernelDef::_internal_host_memory_arg_size() const {
  return _internal_host_memory_arg().size();
}
inline int KernelDef::host_memory_arg_size() const {
  return _internal_host_memory_arg_size();
}
inline void KernelDef::clear_host_memory_arg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_memory_arg_.Clear();
}
inline std::string* KernelDef::add_host_memory_arg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_host_memory_arg()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.KernelDef.host_memory_arg)
  return _s;
}
inline const std::string& KernelDef::host_memory_arg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.host_memory_arg)
  return _internal_host_memory_arg().Get(index);
}
inline std::string* KernelDef::mutable_host_memory_arg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.host_memory_arg)
  return _internal_mutable_host_memory_arg()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void KernelDef::set_host_memory_arg(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_host_memory_arg()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.host_memory_arg)
}
template <typename Arg_, typename... Args_>
inline void KernelDef::add_host_memory_arg(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_host_memory_arg(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.KernelDef.host_memory_arg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
KernelDef::host_memory_arg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.KernelDef.host_memory_arg)
  return _internal_host_memory_arg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
KernelDef::mutable_host_memory_arg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.KernelDef.host_memory_arg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_host_memory_arg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
KernelDef::_internal_host_memory_arg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_memory_arg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
KernelDef::_internal_mutable_host_memory_arg() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.host_memory_arg_;
}

// string label = 5;
inline void KernelDef::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& KernelDef::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KernelDef::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.label)
}
inline std::string* KernelDef::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelDef.label)
  return _s;
}
inline const std::string& KernelDef::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void KernelDef::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* KernelDef::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* KernelDef::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.KernelDef.label)
  return _impl_.label_.Release();
}
inline void KernelDef::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.KernelDef.label)
}

// int32 priority = 6;
inline void KernelDef::clear_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = 0;
}
inline ::int32_t KernelDef::priority() const {
  // @@protoc_insertion_point(field_get:tensorflow.KernelDef.priority)
  return _internal_priority();
}
inline void KernelDef::set_priority(::int32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:tensorflow.KernelDef.priority)
}
inline ::int32_t KernelDef::_internal_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_;
}
inline void KernelDef::_internal_set_priority(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = value;
}

// -------------------------------------------------------------------

// KernelList

// repeated .tensorflow.KernelDef kernel = 1;
inline int KernelList::_internal_kernel_size() const {
  return _internal_kernel().size();
}
inline int KernelList::kernel_size() const {
  return _internal_kernel_size();
}
inline void KernelList::clear_kernel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kernel_.Clear();
}
inline ::tensorflow::KernelDef* KernelList::mutable_kernel(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.KernelList.kernel)
  return _internal_mutable_kernel()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef>* KernelList::mutable_kernel()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.KernelList.kernel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_kernel();
}
inline const ::tensorflow::KernelDef& KernelList::kernel(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.KernelList.kernel)
  return _internal_kernel().Get(index);
}
inline ::tensorflow::KernelDef* KernelList::add_kernel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::KernelDef* _add = _internal_mutable_kernel()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.KernelList.kernel)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef>& KernelList::kernel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.KernelList.kernel)
  return _internal_kernel();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef>&
KernelList::_internal_kernel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kernel_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::KernelDef>*
KernelList::_internal_mutable_kernel() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.kernel_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_2epb_2eh
