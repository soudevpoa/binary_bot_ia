// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/step_stats.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/allocation_description.pb.h"
#include "tensorflow/core/framework/tensor_description.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto;
namespace tensorflow {
class AllocationRecord;
struct AllocationRecordDefaultTypeInternal;
PROTOBUF_EXPORT extern AllocationRecordDefaultTypeInternal _AllocationRecord_default_instance_;
class AllocatorMemoryUsed;
struct AllocatorMemoryUsedDefaultTypeInternal;
PROTOBUF_EXPORT extern AllocatorMemoryUsedDefaultTypeInternal _AllocatorMemoryUsed_default_instance_;
class DeviceStepStats;
struct DeviceStepStatsDefaultTypeInternal;
PROTOBUF_EXPORT extern DeviceStepStatsDefaultTypeInternal _DeviceStepStats_default_instance_;
class DeviceStepStats_ThreadNamesEntry_DoNotUse;
struct DeviceStepStats_ThreadNamesEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern DeviceStepStats_ThreadNamesEntry_DoNotUseDefaultTypeInternal _DeviceStepStats_ThreadNamesEntry_DoNotUse_default_instance_;
class MemoryStats;
struct MemoryStatsDefaultTypeInternal;
PROTOBUF_EXPORT extern MemoryStatsDefaultTypeInternal _MemoryStats_default_instance_;
class NodeExecStats;
struct NodeExecStatsDefaultTypeInternal;
PROTOBUF_EXPORT extern NodeExecStatsDefaultTypeInternal _NodeExecStats_default_instance_;
class NodeOutput;
struct NodeOutputDefaultTypeInternal;
PROTOBUF_EXPORT extern NodeOutputDefaultTypeInternal _NodeOutput_default_instance_;
class StepStats;
struct StepStatsDefaultTypeInternal;
PROTOBUF_EXPORT extern StepStatsDefaultTypeInternal _StepStats_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT MemoryStats final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.MemoryStats) */ {
 public:
  inline MemoryStats() : MemoryStats(nullptr) {}
  ~MemoryStats() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MemoryStats(
      ::google::protobuf::internal::ConstantInitialized);

  inline MemoryStats(const MemoryStats& from) : MemoryStats(nullptr, from) {}
  inline MemoryStats(MemoryStats&& from) noexcept
      : MemoryStats(nullptr, std::move(from)) {}
  inline MemoryStats& operator=(const MemoryStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemoryStats& operator=(MemoryStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MemoryStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const MemoryStats* internal_default_instance() {
    return reinterpret_cast<const MemoryStats*>(
        &_MemoryStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MemoryStats& a, MemoryStats& b) { a.Swap(&b); }
  inline void Swap(MemoryStats* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MemoryStats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MemoryStats* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MemoryStats>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MemoryStats& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MemoryStats& from) { MemoryStats::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MemoryStats* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.MemoryStats"; }

 protected:
  explicit MemoryStats(::google::protobuf::Arena* arena);
  MemoryStats(::google::protobuf::Arena* arena, const MemoryStats& from);
  MemoryStats(::google::protobuf::Arena* arena, MemoryStats&& from) noexcept
      : MemoryStats(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPersistentTensorAllocIdsFieldNumber = 5,
    kDevicePersistentTensorAllocIdsFieldNumber = 6,
    kTempMemorySizeFieldNumber = 1,
    kDeviceTempMemorySizeFieldNumber = 2,
    kPersistentMemorySizeFieldNumber = 3,
    kDevicePersistentMemorySizeFieldNumber = 4,
  };
  // repeated int64 persistent_tensor_alloc_ids = 5;
  int persistent_tensor_alloc_ids_size() const;
  private:
  int _internal_persistent_tensor_alloc_ids_size() const;

  public:
  void clear_persistent_tensor_alloc_ids() ;
  ::int64_t persistent_tensor_alloc_ids(int index) const;
  void set_persistent_tensor_alloc_ids(int index, ::int64_t value);
  void add_persistent_tensor_alloc_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& persistent_tensor_alloc_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_persistent_tensor_alloc_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_persistent_tensor_alloc_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_persistent_tensor_alloc_ids();

  public:
  // repeated int64 device_persistent_tensor_alloc_ids = 6 [deprecated = true];
  [[deprecated]]  int device_persistent_tensor_alloc_ids_size() const;
  private:
  int _internal_device_persistent_tensor_alloc_ids_size() const;

  public:
  [[deprecated]]  void clear_device_persistent_tensor_alloc_ids() ;
  [[deprecated]] ::int64_t device_persistent_tensor_alloc_ids(int index) const;
  [[deprecated]] void set_device_persistent_tensor_alloc_ids(int index, ::int64_t value);
  [[deprecated]] void add_device_persistent_tensor_alloc_ids(::int64_t value);
  [[deprecated]] const ::google::protobuf::RepeatedField<::int64_t>& device_persistent_tensor_alloc_ids() const;
  [[deprecated]] ::google::protobuf::RepeatedField<::int64_t>* mutable_device_persistent_tensor_alloc_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_device_persistent_tensor_alloc_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_device_persistent_tensor_alloc_ids();

  public:
  // int64 temp_memory_size = 1;
  void clear_temp_memory_size() ;
  ::int64_t temp_memory_size() const;
  void set_temp_memory_size(::int64_t value);

  private:
  ::int64_t _internal_temp_memory_size() const;
  void _internal_set_temp_memory_size(::int64_t value);

  public:
  // int64 device_temp_memory_size = 2 [deprecated = true];
  [[deprecated]]  void clear_device_temp_memory_size() ;
  [[deprecated]] ::int64_t device_temp_memory_size() const;
  [[deprecated]] void set_device_temp_memory_size(::int64_t value);

  private:
  ::int64_t _internal_device_temp_memory_size() const;
  void _internal_set_device_temp_memory_size(::int64_t value);

  public:
  // int64 persistent_memory_size = 3;
  void clear_persistent_memory_size() ;
  ::int64_t persistent_memory_size() const;
  void set_persistent_memory_size(::int64_t value);

  private:
  ::int64_t _internal_persistent_memory_size() const;
  void _internal_set_persistent_memory_size(::int64_t value);

  public:
  // int64 device_persistent_memory_size = 4 [deprecated = true];
  [[deprecated]]  void clear_device_persistent_memory_size() ;
  [[deprecated]] ::int64_t device_persistent_memory_size() const;
  [[deprecated]] void set_device_persistent_memory_size(::int64_t value);

  private:
  ::int64_t _internal_device_persistent_memory_size() const;
  void _internal_set_device_persistent_memory_size(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.MemoryStats)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MemoryStats& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> persistent_tensor_alloc_ids_;
    mutable ::google::protobuf::internal::CachedSize _persistent_tensor_alloc_ids_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> device_persistent_tensor_alloc_ids_;
    mutable ::google::protobuf::internal::CachedSize _device_persistent_tensor_alloc_ids_cached_byte_size_;
    ::int64_t temp_memory_size_;
    ::int64_t device_temp_memory_size_;
    ::int64_t persistent_memory_size_;
    ::int64_t device_persistent_memory_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto;
};
// -------------------------------------------------------------------

class DeviceStepStats_ThreadNamesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          DeviceStepStats_ThreadNamesEntry_DoNotUse, ::uint32_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      DeviceStepStats_ThreadNamesEntry_DoNotUse, ::uint32_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  DeviceStepStats_ThreadNamesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceStepStats_ThreadNamesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit DeviceStepStats_ThreadNamesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const DeviceStepStats_ThreadNamesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const DeviceStepStats_ThreadNamesEntry_DoNotUse*>(
        &_DeviceStepStats_ThreadNamesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AllocationRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.AllocationRecord) */ {
 public:
  inline AllocationRecord() : AllocationRecord(nullptr) {}
  ~AllocationRecord() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AllocationRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline AllocationRecord(const AllocationRecord& from) : AllocationRecord(nullptr, from) {}
  inline AllocationRecord(AllocationRecord&& from) noexcept
      : AllocationRecord(nullptr, std::move(from)) {}
  inline AllocationRecord& operator=(const AllocationRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline AllocationRecord& operator=(AllocationRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AllocationRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const AllocationRecord* internal_default_instance() {
    return reinterpret_cast<const AllocationRecord*>(
        &_AllocationRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AllocationRecord& a, AllocationRecord& b) { a.Swap(&b); }
  inline void Swap(AllocationRecord* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AllocationRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AllocationRecord* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AllocationRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AllocationRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AllocationRecord& from) { AllocationRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AllocationRecord* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.AllocationRecord"; }

 protected:
  explicit AllocationRecord(::google::protobuf::Arena* arena);
  AllocationRecord(::google::protobuf::Arena* arena, const AllocationRecord& from);
  AllocationRecord(::google::protobuf::Arena* arena, AllocationRecord&& from) noexcept
      : AllocationRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllocMicrosFieldNumber = 1,
    kAllocBytesFieldNumber = 2,
  };
  // int64 alloc_micros = 1;
  void clear_alloc_micros() ;
  ::int64_t alloc_micros() const;
  void set_alloc_micros(::int64_t value);

  private:
  ::int64_t _internal_alloc_micros() const;
  void _internal_set_alloc_micros(::int64_t value);

  public:
  // int64 alloc_bytes = 2;
  void clear_alloc_bytes() ;
  ::int64_t alloc_bytes() const;
  void set_alloc_bytes(::int64_t value);

  private:
  ::int64_t _internal_alloc_bytes() const;
  void _internal_set_alloc_bytes(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.AllocationRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AllocationRecord& from_msg);
    ::int64_t alloc_micros_;
    ::int64_t alloc_bytes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AllocatorMemoryUsed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.AllocatorMemoryUsed) */ {
 public:
  inline AllocatorMemoryUsed() : AllocatorMemoryUsed(nullptr) {}
  ~AllocatorMemoryUsed() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AllocatorMemoryUsed(
      ::google::protobuf::internal::ConstantInitialized);

  inline AllocatorMemoryUsed(const AllocatorMemoryUsed& from) : AllocatorMemoryUsed(nullptr, from) {}
  inline AllocatorMemoryUsed(AllocatorMemoryUsed&& from) noexcept
      : AllocatorMemoryUsed(nullptr, std::move(from)) {}
  inline AllocatorMemoryUsed& operator=(const AllocatorMemoryUsed& from) {
    CopyFrom(from);
    return *this;
  }
  inline AllocatorMemoryUsed& operator=(AllocatorMemoryUsed&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AllocatorMemoryUsed& default_instance() {
    return *internal_default_instance();
  }
  static inline const AllocatorMemoryUsed* internal_default_instance() {
    return reinterpret_cast<const AllocatorMemoryUsed*>(
        &_AllocatorMemoryUsed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AllocatorMemoryUsed& a, AllocatorMemoryUsed& b) { a.Swap(&b); }
  inline void Swap(AllocatorMemoryUsed* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AllocatorMemoryUsed* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AllocatorMemoryUsed* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AllocatorMemoryUsed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AllocatorMemoryUsed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AllocatorMemoryUsed& from) { AllocatorMemoryUsed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AllocatorMemoryUsed* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.AllocatorMemoryUsed"; }

 protected:
  explicit AllocatorMemoryUsed(::google::protobuf::Arena* arena);
  AllocatorMemoryUsed(::google::protobuf::Arena* arena, const AllocatorMemoryUsed& from);
  AllocatorMemoryUsed(::google::protobuf::Arena* arena, AllocatorMemoryUsed&& from) noexcept
      : AllocatorMemoryUsed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllocationRecordsFieldNumber = 6,
    kAllocatorNameFieldNumber = 1,
    kTotalBytesFieldNumber = 2,
    kPeakBytesFieldNumber = 3,
    kLiveBytesFieldNumber = 4,
    kAllocatorBytesInUseFieldNumber = 5,
  };
  // repeated .tensorflow.AllocationRecord allocation_records = 6;
  int allocation_records_size() const;
  private:
  int _internal_allocation_records_size() const;

  public:
  void clear_allocation_records() ;
  ::tensorflow::AllocationRecord* mutable_allocation_records(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationRecord>* mutable_allocation_records();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationRecord>& _internal_allocation_records() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationRecord>* _internal_mutable_allocation_records();
  public:
  const ::tensorflow::AllocationRecord& allocation_records(int index) const;
  ::tensorflow::AllocationRecord* add_allocation_records();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationRecord>& allocation_records() const;
  // string allocator_name = 1;
  void clear_allocator_name() ;
  const std::string& allocator_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_allocator_name(Arg_&& arg, Args_... args);
  std::string* mutable_allocator_name();
  PROTOBUF_NODISCARD std::string* release_allocator_name();
  void set_allocated_allocator_name(std::string* value);

  private:
  const std::string& _internal_allocator_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_allocator_name(
      const std::string& value);
  std::string* _internal_mutable_allocator_name();

  public:
  // int64 total_bytes = 2;
  void clear_total_bytes() ;
  ::int64_t total_bytes() const;
  void set_total_bytes(::int64_t value);

  private:
  ::int64_t _internal_total_bytes() const;
  void _internal_set_total_bytes(::int64_t value);

  public:
  // int64 peak_bytes = 3;
  void clear_peak_bytes() ;
  ::int64_t peak_bytes() const;
  void set_peak_bytes(::int64_t value);

  private:
  ::int64_t _internal_peak_bytes() const;
  void _internal_set_peak_bytes(::int64_t value);

  public:
  // int64 live_bytes = 4;
  void clear_live_bytes() ;
  ::int64_t live_bytes() const;
  void set_live_bytes(::int64_t value);

  private:
  ::int64_t _internal_live_bytes() const;
  void _internal_set_live_bytes(::int64_t value);

  public:
  // int64 allocator_bytes_in_use = 5;
  void clear_allocator_bytes_in_use() ;
  ::int64_t allocator_bytes_in_use() const;
  void set_allocator_bytes_in_use(::int64_t value);

  private:
  ::int64_t _internal_allocator_bytes_in_use() const;
  void _internal_set_allocator_bytes_in_use(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.AllocatorMemoryUsed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      53, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AllocatorMemoryUsed& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::AllocationRecord > allocation_records_;
    ::google::protobuf::internal::ArenaStringPtr allocator_name_;
    ::int64_t total_bytes_;
    ::int64_t peak_bytes_;
    ::int64_t live_bytes_;
    ::int64_t allocator_bytes_in_use_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT NodeOutput final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.NodeOutput) */ {
 public:
  inline NodeOutput() : NodeOutput(nullptr) {}
  ~NodeOutput() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeOutput(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeOutput(const NodeOutput& from) : NodeOutput(nullptr, from) {}
  inline NodeOutput(NodeOutput&& from) noexcept
      : NodeOutput(nullptr, std::move(from)) {}
  inline NodeOutput& operator=(const NodeOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeOutput& operator=(NodeOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeOutput* internal_default_instance() {
    return reinterpret_cast<const NodeOutput*>(
        &_NodeOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(NodeOutput& a, NodeOutput& b) { a.Swap(&b); }
  inline void Swap(NodeOutput* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeOutput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeOutput* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeOutput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeOutput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeOutput& from) { NodeOutput::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeOutput* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.NodeOutput"; }

 protected:
  explicit NodeOutput(::google::protobuf::Arena* arena);
  NodeOutput(::google::protobuf::Arena* arena, const NodeOutput& from);
  NodeOutput(::google::protobuf::Arena* arena, NodeOutput&& from) noexcept
      : NodeOutput(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTensorDescriptionFieldNumber = 3,
    kSlotFieldNumber = 1,
  };
  // .tensorflow.TensorDescription tensor_description = 3;
  bool has_tensor_description() const;
  void clear_tensor_description() ;
  const ::tensorflow::TensorDescription& tensor_description() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorDescription* release_tensor_description();
  ::tensorflow::TensorDescription* mutable_tensor_description();
  void set_allocated_tensor_description(::tensorflow::TensorDescription* value);
  void unsafe_arena_set_allocated_tensor_description(::tensorflow::TensorDescription* value);
  ::tensorflow::TensorDescription* unsafe_arena_release_tensor_description();

  private:
  const ::tensorflow::TensorDescription& _internal_tensor_description() const;
  ::tensorflow::TensorDescription* _internal_mutable_tensor_description();

  public:
  // int32 slot = 1;
  void clear_slot() ;
  ::int32_t slot() const;
  void set_slot(::int32_t value);

  private:
  ::int32_t _internal_slot() const;
  void _internal_set_slot(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.NodeOutput)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeOutput& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::TensorDescription* tensor_description_;
    ::int32_t slot_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT NodeExecStats final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.NodeExecStats) */ {
 public:
  inline NodeExecStats() : NodeExecStats(nullptr) {}
  ~NodeExecStats() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeExecStats(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeExecStats(const NodeExecStats& from) : NodeExecStats(nullptr, from) {}
  inline NodeExecStats(NodeExecStats&& from) noexcept
      : NodeExecStats(nullptr, std::move(from)) {}
  inline NodeExecStats& operator=(const NodeExecStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeExecStats& operator=(NodeExecStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeExecStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeExecStats* internal_default_instance() {
    return reinterpret_cast<const NodeExecStats*>(
        &_NodeExecStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(NodeExecStats& a, NodeExecStats& b) { a.Swap(&b); }
  inline void Swap(NodeExecStats* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeExecStats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeExecStats* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeExecStats>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeExecStats& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeExecStats& from) { NodeExecStats::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeExecStats* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.NodeExecStats"; }

 protected:
  explicit NodeExecStats(::google::protobuf::Arena* arena);
  NodeExecStats(::google::protobuf::Arena* arena, const NodeExecStats& from);
  NodeExecStats(::google::protobuf::Arena* arena, NodeExecStats&& from) noexcept
      : NodeExecStats(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMemoryFieldNumber = 6,
    kOutputFieldNumber = 7,
    kReferencedTensorFieldNumber = 11,
    kNodeNameFieldNumber = 1,
    kTimelineLabelFieldNumber = 8,
    kMemoryStatsFieldNumber = 12,
    kAllStartMicrosFieldNumber = 2,
    kOpStartRelMicrosFieldNumber = 3,
    kOpEndRelMicrosFieldNumber = 4,
    kAllEndRelMicrosFieldNumber = 5,
    kScheduledMicrosFieldNumber = 9,
    kAllStartNanosFieldNumber = 13,
    kOpStartRelNanosFieldNumber = 14,
    kOpEndRelNanosFieldNumber = 15,
    kAllEndRelNanosFieldNumber = 16,
    kScheduledNanosFieldNumber = 17,
    kThreadIdFieldNumber = 10,
  };
  // repeated .tensorflow.AllocatorMemoryUsed memory = 6;
  int memory_size() const;
  private:
  int _internal_memory_size() const;

  public:
  void clear_memory() ;
  ::tensorflow::AllocatorMemoryUsed* mutable_memory(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::AllocatorMemoryUsed>* mutable_memory();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocatorMemoryUsed>& _internal_memory() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::AllocatorMemoryUsed>* _internal_mutable_memory();
  public:
  const ::tensorflow::AllocatorMemoryUsed& memory(int index) const;
  ::tensorflow::AllocatorMemoryUsed* add_memory();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocatorMemoryUsed>& memory() const;
  // repeated .tensorflow.NodeOutput output = 7;
  int output_size() const;
  private:
  int _internal_output_size() const;

  public:
  void clear_output() ;
  ::tensorflow::NodeOutput* mutable_output(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::NodeOutput>* mutable_output();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::NodeOutput>& _internal_output() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::NodeOutput>* _internal_mutable_output();
  public:
  const ::tensorflow::NodeOutput& output(int index) const;
  ::tensorflow::NodeOutput* add_output();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::NodeOutput>& output() const;
  // repeated .tensorflow.AllocationDescription referenced_tensor = 11;
  int referenced_tensor_size() const;
  private:
  int _internal_referenced_tensor_size() const;

  public:
  void clear_referenced_tensor() ;
  ::tensorflow::AllocationDescription* mutable_referenced_tensor(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationDescription>* mutable_referenced_tensor();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationDescription>& _internal_referenced_tensor() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationDescription>* _internal_mutable_referenced_tensor();
  public:
  const ::tensorflow::AllocationDescription& referenced_tensor(int index) const;
  ::tensorflow::AllocationDescription* add_referenced_tensor();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationDescription>& referenced_tensor() const;
  // string node_name = 1;
  void clear_node_name() ;
  const std::string& node_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_name(Arg_&& arg, Args_... args);
  std::string* mutable_node_name();
  PROTOBUF_NODISCARD std::string* release_node_name();
  void set_allocated_node_name(std::string* value);

  private:
  const std::string& _internal_node_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_name(
      const std::string& value);
  std::string* _internal_mutable_node_name();

  public:
  // string timeline_label = 8;
  void clear_timeline_label() ;
  const std::string& timeline_label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timeline_label(Arg_&& arg, Args_... args);
  std::string* mutable_timeline_label();
  PROTOBUF_NODISCARD std::string* release_timeline_label();
  void set_allocated_timeline_label(std::string* value);

  private:
  const std::string& _internal_timeline_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timeline_label(
      const std::string& value);
  std::string* _internal_mutable_timeline_label();

  public:
  // .tensorflow.MemoryStats memory_stats = 12;
  bool has_memory_stats() const;
  void clear_memory_stats() ;
  const ::tensorflow::MemoryStats& memory_stats() const;
  PROTOBUF_NODISCARD ::tensorflow::MemoryStats* release_memory_stats();
  ::tensorflow::MemoryStats* mutable_memory_stats();
  void set_allocated_memory_stats(::tensorflow::MemoryStats* value);
  void unsafe_arena_set_allocated_memory_stats(::tensorflow::MemoryStats* value);
  ::tensorflow::MemoryStats* unsafe_arena_release_memory_stats();

  private:
  const ::tensorflow::MemoryStats& _internal_memory_stats() const;
  ::tensorflow::MemoryStats* _internal_mutable_memory_stats();

  public:
  // int64 all_start_micros = 2;
  void clear_all_start_micros() ;
  ::int64_t all_start_micros() const;
  void set_all_start_micros(::int64_t value);

  private:
  ::int64_t _internal_all_start_micros() const;
  void _internal_set_all_start_micros(::int64_t value);

  public:
  // int64 op_start_rel_micros = 3;
  void clear_op_start_rel_micros() ;
  ::int64_t op_start_rel_micros() const;
  void set_op_start_rel_micros(::int64_t value);

  private:
  ::int64_t _internal_op_start_rel_micros() const;
  void _internal_set_op_start_rel_micros(::int64_t value);

  public:
  // int64 op_end_rel_micros = 4;
  void clear_op_end_rel_micros() ;
  ::int64_t op_end_rel_micros() const;
  void set_op_end_rel_micros(::int64_t value);

  private:
  ::int64_t _internal_op_end_rel_micros() const;
  void _internal_set_op_end_rel_micros(::int64_t value);

  public:
  // int64 all_end_rel_micros = 5;
  void clear_all_end_rel_micros() ;
  ::int64_t all_end_rel_micros() const;
  void set_all_end_rel_micros(::int64_t value);

  private:
  ::int64_t _internal_all_end_rel_micros() const;
  void _internal_set_all_end_rel_micros(::int64_t value);

  public:
  // int64 scheduled_micros = 9;
  void clear_scheduled_micros() ;
  ::int64_t scheduled_micros() const;
  void set_scheduled_micros(::int64_t value);

  private:
  ::int64_t _internal_scheduled_micros() const;
  void _internal_set_scheduled_micros(::int64_t value);

  public:
  // int64 all_start_nanos = 13;
  void clear_all_start_nanos() ;
  ::int64_t all_start_nanos() const;
  void set_all_start_nanos(::int64_t value);

  private:
  ::int64_t _internal_all_start_nanos() const;
  void _internal_set_all_start_nanos(::int64_t value);

  public:
  // int64 op_start_rel_nanos = 14;
  void clear_op_start_rel_nanos() ;
  ::int64_t op_start_rel_nanos() const;
  void set_op_start_rel_nanos(::int64_t value);

  private:
  ::int64_t _internal_op_start_rel_nanos() const;
  void _internal_set_op_start_rel_nanos(::int64_t value);

  public:
  // int64 op_end_rel_nanos = 15;
  void clear_op_end_rel_nanos() ;
  ::int64_t op_end_rel_nanos() const;
  void set_op_end_rel_nanos(::int64_t value);

  private:
  ::int64_t _internal_op_end_rel_nanos() const;
  void _internal_set_op_end_rel_nanos(::int64_t value);

  public:
  // int64 all_end_rel_nanos = 16;
  void clear_all_end_rel_nanos() ;
  ::int64_t all_end_rel_nanos() const;
  void set_all_end_rel_nanos(::int64_t value);

  private:
  ::int64_t _internal_all_end_rel_nanos() const;
  void _internal_set_all_end_rel_nanos(::int64_t value);

  public:
  // int64 scheduled_nanos = 17;
  void clear_scheduled_nanos() ;
  ::int64_t scheduled_nanos() const;
  void set_scheduled_nanos(::int64_t value);

  private:
  ::int64_t _internal_scheduled_nanos() const;
  void _internal_set_scheduled_nanos(::int64_t value);

  public:
  // uint32 thread_id = 10;
  void clear_thread_id() ;
  ::uint32_t thread_id() const;
  void set_thread_id(::uint32_t value);

  private:
  ::uint32_t _internal_thread_id() const;
  void _internal_set_thread_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.NodeExecStats)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 17, 4,
      72, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeExecStats& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::AllocatorMemoryUsed > memory_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::NodeOutput > output_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::AllocationDescription > referenced_tensor_;
    ::google::protobuf::internal::ArenaStringPtr node_name_;
    ::google::protobuf::internal::ArenaStringPtr timeline_label_;
    ::tensorflow::MemoryStats* memory_stats_;
    ::int64_t all_start_micros_;
    ::int64_t op_start_rel_micros_;
    ::int64_t op_end_rel_micros_;
    ::int64_t all_end_rel_micros_;
    ::int64_t scheduled_micros_;
    ::int64_t all_start_nanos_;
    ::int64_t op_start_rel_nanos_;
    ::int64_t op_end_rel_nanos_;
    ::int64_t all_end_rel_nanos_;
    ::int64_t scheduled_nanos_;
    ::uint32_t thread_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT DeviceStepStats final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.DeviceStepStats) */ {
 public:
  inline DeviceStepStats() : DeviceStepStats(nullptr) {}
  ~DeviceStepStats() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceStepStats(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceStepStats(const DeviceStepStats& from) : DeviceStepStats(nullptr, from) {}
  inline DeviceStepStats(DeviceStepStats&& from) noexcept
      : DeviceStepStats(nullptr, std::move(from)) {}
  inline DeviceStepStats& operator=(const DeviceStepStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceStepStats& operator=(DeviceStepStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceStepStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceStepStats* internal_default_instance() {
    return reinterpret_cast<const DeviceStepStats*>(
        &_DeviceStepStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(DeviceStepStats& a, DeviceStepStats& b) { a.Swap(&b); }
  inline void Swap(DeviceStepStats* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceStepStats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceStepStats* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeviceStepStats>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceStepStats& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceStepStats& from) { DeviceStepStats::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeviceStepStats* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.DeviceStepStats"; }

 protected:
  explicit DeviceStepStats(::google::protobuf::Arena* arena);
  DeviceStepStats(::google::protobuf::Arena* arena, const DeviceStepStats& from);
  DeviceStepStats(::google::protobuf::Arena* arena, DeviceStepStats&& from) noexcept
      : DeviceStepStats(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeStatsFieldNumber = 2,
    kThreadNamesFieldNumber = 3,
    kDeviceFieldNumber = 1,
  };
  // repeated .tensorflow.NodeExecStats node_stats = 2;
  int node_stats_size() const;
  private:
  int _internal_node_stats_size() const;

  public:
  void clear_node_stats() ;
  ::tensorflow::NodeExecStats* mutable_node_stats(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::NodeExecStats>* mutable_node_stats();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::NodeExecStats>& _internal_node_stats() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::NodeExecStats>* _internal_mutable_node_stats();
  public:
  const ::tensorflow::NodeExecStats& node_stats(int index) const;
  ::tensorflow::NodeExecStats* add_node_stats();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::NodeExecStats>& node_stats() const;
  // map<uint32, string> thread_names = 3;
  int thread_names_size() const;
  private:
  int _internal_thread_names_size() const;

  public:
  void clear_thread_names() ;
  const ::google::protobuf::Map<::uint32_t, std::string>& thread_names() const;
  ::google::protobuf::Map<::uint32_t, std::string>* mutable_thread_names();

  private:
  const ::google::protobuf::Map<::uint32_t, std::string>& _internal_thread_names() const;
  ::google::protobuf::Map<::uint32_t, std::string>* _internal_mutable_thread_names();

  public:
  // string device = 1;
  void clear_device() ;
  const std::string& device() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device(Arg_&& arg, Args_... args);
  std::string* mutable_device();
  PROTOBUF_NODISCARD std::string* release_device();
  void set_allocated_device(std::string* value);

  private:
  const std::string& _internal_device() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device(
      const std::string& value);
  std::string* _internal_mutable_device();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.DeviceStepStats)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 2,
      53, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceStepStats& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::NodeExecStats > node_stats_;
    ::google::protobuf::internal::MapField<DeviceStepStats_ThreadNamesEntry_DoNotUse, ::uint32_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        thread_names_;
    ::google::protobuf::internal::ArenaStringPtr device_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT StepStats final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.StepStats) */ {
 public:
  inline StepStats() : StepStats(nullptr) {}
  ~StepStats() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepStats(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepStats(const StepStats& from) : StepStats(nullptr, from) {}
  inline StepStats(StepStats&& from) noexcept
      : StepStats(nullptr, std::move(from)) {}
  inline StepStats& operator=(const StepStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepStats& operator=(StepStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepStats* internal_default_instance() {
    return reinterpret_cast<const StepStats*>(
        &_StepStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(StepStats& a, StepStats& b) { a.Swap(&b); }
  inline void Swap(StepStats* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepStats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepStats* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StepStats>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepStats& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepStats& from) { StepStats::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StepStats* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.StepStats"; }

 protected:
  explicit StepStats(::google::protobuf::Arena* arena);
  StepStats(::google::protobuf::Arena* arena, const StepStats& from);
  StepStats(::google::protobuf::Arena* arena, StepStats&& from) noexcept
      : StepStats(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevStatsFieldNumber = 1,
  };
  // repeated .tensorflow.DeviceStepStats dev_stats = 1;
  int dev_stats_size() const;
  private:
  int _internal_dev_stats_size() const;

  public:
  void clear_dev_stats() ;
  ::tensorflow::DeviceStepStats* mutable_dev_stats(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceStepStats>* mutable_dev_stats();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceStepStats>& _internal_dev_stats() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceStepStats>* _internal_mutable_dev_stats();
  public:
  const ::tensorflow::DeviceStepStats& dev_stats(int index) const;
  ::tensorflow::DeviceStepStats* add_dev_stats();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceStepStats>& dev_stats() const;
  // @@protoc_insertion_point(class_scope:tensorflow.StepStats)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepStats& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceStepStats > dev_stats_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AllocationRecord

// int64 alloc_micros = 1;
inline void AllocationRecord::clear_alloc_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alloc_micros_ = ::int64_t{0};
}
inline ::int64_t AllocationRecord::alloc_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.AllocationRecord.alloc_micros)
  return _internal_alloc_micros();
}
inline void AllocationRecord::set_alloc_micros(::int64_t value) {
  _internal_set_alloc_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.AllocationRecord.alloc_micros)
}
inline ::int64_t AllocationRecord::_internal_alloc_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alloc_micros_;
}
inline void AllocationRecord::_internal_set_alloc_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alloc_micros_ = value;
}

// int64 alloc_bytes = 2;
inline void AllocationRecord::clear_alloc_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alloc_bytes_ = ::int64_t{0};
}
inline ::int64_t AllocationRecord::alloc_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.AllocationRecord.alloc_bytes)
  return _internal_alloc_bytes();
}
inline void AllocationRecord::set_alloc_bytes(::int64_t value) {
  _internal_set_alloc_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.AllocationRecord.alloc_bytes)
}
inline ::int64_t AllocationRecord::_internal_alloc_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alloc_bytes_;
}
inline void AllocationRecord::_internal_set_alloc_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alloc_bytes_ = value;
}

// -------------------------------------------------------------------

// AllocatorMemoryUsed

// string allocator_name = 1;
inline void AllocatorMemoryUsed::clear_allocator_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocator_name_.ClearToEmpty();
}
inline const std::string& AllocatorMemoryUsed::allocator_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.AllocatorMemoryUsed.allocator_name)
  return _internal_allocator_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AllocatorMemoryUsed::set_allocator_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocator_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.AllocatorMemoryUsed.allocator_name)
}
inline std::string* AllocatorMemoryUsed::mutable_allocator_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_allocator_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.AllocatorMemoryUsed.allocator_name)
  return _s;
}
inline const std::string& AllocatorMemoryUsed::_internal_allocator_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allocator_name_.Get();
}
inline void AllocatorMemoryUsed::_internal_set_allocator_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocator_name_.Set(value, GetArena());
}
inline std::string* AllocatorMemoryUsed::_internal_mutable_allocator_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.allocator_name_.Mutable( GetArena());
}
inline std::string* AllocatorMemoryUsed::release_allocator_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.AllocatorMemoryUsed.allocator_name)
  return _impl_.allocator_name_.Release();
}
inline void AllocatorMemoryUsed::set_allocated_allocator_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocator_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.allocator_name_.IsDefault()) {
          _impl_.allocator_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.AllocatorMemoryUsed.allocator_name)
}

// int64 total_bytes = 2;
inline void AllocatorMemoryUsed::clear_total_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_bytes_ = ::int64_t{0};
}
inline ::int64_t AllocatorMemoryUsed::total_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.AllocatorMemoryUsed.total_bytes)
  return _internal_total_bytes();
}
inline void AllocatorMemoryUsed::set_total_bytes(::int64_t value) {
  _internal_set_total_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.AllocatorMemoryUsed.total_bytes)
}
inline ::int64_t AllocatorMemoryUsed::_internal_total_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_bytes_;
}
inline void AllocatorMemoryUsed::_internal_set_total_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_bytes_ = value;
}

// int64 peak_bytes = 3;
inline void AllocatorMemoryUsed::clear_peak_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peak_bytes_ = ::int64_t{0};
}
inline ::int64_t AllocatorMemoryUsed::peak_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.AllocatorMemoryUsed.peak_bytes)
  return _internal_peak_bytes();
}
inline void AllocatorMemoryUsed::set_peak_bytes(::int64_t value) {
  _internal_set_peak_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.AllocatorMemoryUsed.peak_bytes)
}
inline ::int64_t AllocatorMemoryUsed::_internal_peak_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peak_bytes_;
}
inline void AllocatorMemoryUsed::_internal_set_peak_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peak_bytes_ = value;
}

// int64 live_bytes = 4;
inline void AllocatorMemoryUsed::clear_live_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.live_bytes_ = ::int64_t{0};
}
inline ::int64_t AllocatorMemoryUsed::live_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.AllocatorMemoryUsed.live_bytes)
  return _internal_live_bytes();
}
inline void AllocatorMemoryUsed::set_live_bytes(::int64_t value) {
  _internal_set_live_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.AllocatorMemoryUsed.live_bytes)
}
inline ::int64_t AllocatorMemoryUsed::_internal_live_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.live_bytes_;
}
inline void AllocatorMemoryUsed::_internal_set_live_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.live_bytes_ = value;
}

// repeated .tensorflow.AllocationRecord allocation_records = 6;
inline int AllocatorMemoryUsed::_internal_allocation_records_size() const {
  return _internal_allocation_records().size();
}
inline int AllocatorMemoryUsed::allocation_records_size() const {
  return _internal_allocation_records_size();
}
inline void AllocatorMemoryUsed::clear_allocation_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocation_records_.Clear();
}
inline ::tensorflow::AllocationRecord* AllocatorMemoryUsed::mutable_allocation_records(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.AllocatorMemoryUsed.allocation_records)
  return _internal_mutable_allocation_records()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationRecord>* AllocatorMemoryUsed::mutable_allocation_records()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.AllocatorMemoryUsed.allocation_records)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_allocation_records();
}
inline const ::tensorflow::AllocationRecord& AllocatorMemoryUsed::allocation_records(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.AllocatorMemoryUsed.allocation_records)
  return _internal_allocation_records().Get(index);
}
inline ::tensorflow::AllocationRecord* AllocatorMemoryUsed::add_allocation_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::AllocationRecord* _add = _internal_mutable_allocation_records()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.AllocatorMemoryUsed.allocation_records)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationRecord>& AllocatorMemoryUsed::allocation_records() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.AllocatorMemoryUsed.allocation_records)
  return _internal_allocation_records();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationRecord>&
AllocatorMemoryUsed::_internal_allocation_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allocation_records_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationRecord>*
AllocatorMemoryUsed::_internal_mutable_allocation_records() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.allocation_records_;
}

// int64 allocator_bytes_in_use = 5;
inline void AllocatorMemoryUsed::clear_allocator_bytes_in_use() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocator_bytes_in_use_ = ::int64_t{0};
}
inline ::int64_t AllocatorMemoryUsed::allocator_bytes_in_use() const {
  // @@protoc_insertion_point(field_get:tensorflow.AllocatorMemoryUsed.allocator_bytes_in_use)
  return _internal_allocator_bytes_in_use();
}
inline void AllocatorMemoryUsed::set_allocator_bytes_in_use(::int64_t value) {
  _internal_set_allocator_bytes_in_use(value);
  // @@protoc_insertion_point(field_set:tensorflow.AllocatorMemoryUsed.allocator_bytes_in_use)
}
inline ::int64_t AllocatorMemoryUsed::_internal_allocator_bytes_in_use() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allocator_bytes_in_use_;
}
inline void AllocatorMemoryUsed::_internal_set_allocator_bytes_in_use(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocator_bytes_in_use_ = value;
}

// -------------------------------------------------------------------

// NodeOutput

// int32 slot = 1;
inline void NodeOutput::clear_slot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slot_ = 0;
}
inline ::int32_t NodeOutput::slot() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeOutput.slot)
  return _internal_slot();
}
inline void NodeOutput::set_slot(::int32_t value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeOutput.slot)
}
inline ::int32_t NodeOutput::_internal_slot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slot_;
}
inline void NodeOutput::_internal_set_slot(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slot_ = value;
}

// .tensorflow.TensorDescription tensor_description = 3;
inline bool NodeOutput::has_tensor_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tensor_description_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorDescription& NodeOutput::_internal_tensor_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorDescription* p = _impl_.tensor_description_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorDescription&>(::tensorflow::_TensorDescription_default_instance_);
}
inline const ::tensorflow::TensorDescription& NodeOutput::tensor_description() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NodeOutput.tensor_description)
  return _internal_tensor_description();
}
inline void NodeOutput::unsafe_arena_set_allocated_tensor_description(::tensorflow::TensorDescription* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_description_);
  }
  _impl_.tensor_description_ = reinterpret_cast<::tensorflow::TensorDescription*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.NodeOutput.tensor_description)
}
inline ::tensorflow::TensorDescription* NodeOutput::release_tensor_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorDescription* released = _impl_.tensor_description_;
  _impl_.tensor_description_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TensorDescription* NodeOutput::unsafe_arena_release_tensor_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.NodeOutput.tensor_description)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorDescription* temp = _impl_.tensor_description_;
  _impl_.tensor_description_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorDescription* NodeOutput::_internal_mutable_tensor_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tensor_description_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorDescription>(GetArena());
    _impl_.tensor_description_ = reinterpret_cast<::tensorflow::TensorDescription*>(p);
  }
  return _impl_.tensor_description_;
}
inline ::tensorflow::TensorDescription* NodeOutput::mutable_tensor_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TensorDescription* _msg = _internal_mutable_tensor_description();
  // @@protoc_insertion_point(field_mutable:tensorflow.NodeOutput.tensor_description)
  return _msg;
}
inline void NodeOutput::set_allocated_tensor_description(::tensorflow::TensorDescription* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_description_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tensor_description_ = reinterpret_cast<::tensorflow::TensorDescription*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.NodeOutput.tensor_description)
}

// -------------------------------------------------------------------

// MemoryStats

// int64 temp_memory_size = 1;
inline void MemoryStats::clear_temp_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temp_memory_size_ = ::int64_t{0};
}
inline ::int64_t MemoryStats::temp_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.MemoryStats.temp_memory_size)
  return _internal_temp_memory_size();
}
inline void MemoryStats::set_temp_memory_size(::int64_t value) {
  _internal_set_temp_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.MemoryStats.temp_memory_size)
}
inline ::int64_t MemoryStats::_internal_temp_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.temp_memory_size_;
}
inline void MemoryStats::_internal_set_temp_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temp_memory_size_ = value;
}

// int64 persistent_memory_size = 3;
inline void MemoryStats::clear_persistent_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persistent_memory_size_ = ::int64_t{0};
}
inline ::int64_t MemoryStats::persistent_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.MemoryStats.persistent_memory_size)
  return _internal_persistent_memory_size();
}
inline void MemoryStats::set_persistent_memory_size(::int64_t value) {
  _internal_set_persistent_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.MemoryStats.persistent_memory_size)
}
inline ::int64_t MemoryStats::_internal_persistent_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.persistent_memory_size_;
}
inline void MemoryStats::_internal_set_persistent_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persistent_memory_size_ = value;
}

// repeated int64 persistent_tensor_alloc_ids = 5;
inline int MemoryStats::_internal_persistent_tensor_alloc_ids_size() const {
  return _internal_persistent_tensor_alloc_ids().size();
}
inline int MemoryStats::persistent_tensor_alloc_ids_size() const {
  return _internal_persistent_tensor_alloc_ids_size();
}
inline void MemoryStats::clear_persistent_tensor_alloc_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persistent_tensor_alloc_ids_.Clear();
}
inline ::int64_t MemoryStats::persistent_tensor_alloc_ids(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.MemoryStats.persistent_tensor_alloc_ids)
  return _internal_persistent_tensor_alloc_ids().Get(index);
}
inline void MemoryStats::set_persistent_tensor_alloc_ids(int index, ::int64_t value) {
  _internal_mutable_persistent_tensor_alloc_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.MemoryStats.persistent_tensor_alloc_ids)
}
inline void MemoryStats::add_persistent_tensor_alloc_ids(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_persistent_tensor_alloc_ids()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.MemoryStats.persistent_tensor_alloc_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& MemoryStats::persistent_tensor_alloc_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.MemoryStats.persistent_tensor_alloc_ids)
  return _internal_persistent_tensor_alloc_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* MemoryStats::mutable_persistent_tensor_alloc_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.MemoryStats.persistent_tensor_alloc_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_persistent_tensor_alloc_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
MemoryStats::_internal_persistent_tensor_alloc_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.persistent_tensor_alloc_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* MemoryStats::_internal_mutable_persistent_tensor_alloc_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.persistent_tensor_alloc_ids_;
}

// int64 device_temp_memory_size = 2 [deprecated = true];
inline void MemoryStats::clear_device_temp_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_temp_memory_size_ = ::int64_t{0};
}
inline ::int64_t MemoryStats::device_temp_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.MemoryStats.device_temp_memory_size)
  return _internal_device_temp_memory_size();
}
inline void MemoryStats::set_device_temp_memory_size(::int64_t value) {
  _internal_set_device_temp_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.MemoryStats.device_temp_memory_size)
}
inline ::int64_t MemoryStats::_internal_device_temp_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_temp_memory_size_;
}
inline void MemoryStats::_internal_set_device_temp_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_temp_memory_size_ = value;
}

// int64 device_persistent_memory_size = 4 [deprecated = true];
inline void MemoryStats::clear_device_persistent_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_persistent_memory_size_ = ::int64_t{0};
}
inline ::int64_t MemoryStats::device_persistent_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.MemoryStats.device_persistent_memory_size)
  return _internal_device_persistent_memory_size();
}
inline void MemoryStats::set_device_persistent_memory_size(::int64_t value) {
  _internal_set_device_persistent_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.MemoryStats.device_persistent_memory_size)
}
inline ::int64_t MemoryStats::_internal_device_persistent_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_persistent_memory_size_;
}
inline void MemoryStats::_internal_set_device_persistent_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_persistent_memory_size_ = value;
}

// repeated int64 device_persistent_tensor_alloc_ids = 6 [deprecated = true];
inline int MemoryStats::_internal_device_persistent_tensor_alloc_ids_size() const {
  return _internal_device_persistent_tensor_alloc_ids().size();
}
inline int MemoryStats::device_persistent_tensor_alloc_ids_size() const {
  return _internal_device_persistent_tensor_alloc_ids_size();
}
inline void MemoryStats::clear_device_persistent_tensor_alloc_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_persistent_tensor_alloc_ids_.Clear();
}
inline ::int64_t MemoryStats::device_persistent_tensor_alloc_ids(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.MemoryStats.device_persistent_tensor_alloc_ids)
  return _internal_device_persistent_tensor_alloc_ids().Get(index);
}
inline void MemoryStats::set_device_persistent_tensor_alloc_ids(int index, ::int64_t value) {
  _internal_mutable_device_persistent_tensor_alloc_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.MemoryStats.device_persistent_tensor_alloc_ids)
}
inline void MemoryStats::add_device_persistent_tensor_alloc_ids(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_device_persistent_tensor_alloc_ids()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.MemoryStats.device_persistent_tensor_alloc_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& MemoryStats::device_persistent_tensor_alloc_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.MemoryStats.device_persistent_tensor_alloc_ids)
  return _internal_device_persistent_tensor_alloc_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* MemoryStats::mutable_device_persistent_tensor_alloc_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.MemoryStats.device_persistent_tensor_alloc_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_persistent_tensor_alloc_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
MemoryStats::_internal_device_persistent_tensor_alloc_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_persistent_tensor_alloc_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* MemoryStats::_internal_mutable_device_persistent_tensor_alloc_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_persistent_tensor_alloc_ids_;
}

// -------------------------------------------------------------------

// NodeExecStats

// string node_name = 1;
inline void NodeExecStats::clear_node_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.ClearToEmpty();
}
inline const std::string& NodeExecStats::node_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.node_name)
  return _internal_node_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeExecStats::set_node_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.node_name)
}
inline std::string* NodeExecStats::mutable_node_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.NodeExecStats.node_name)
  return _s;
}
inline const std::string& NodeExecStats::_internal_node_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_name_.Get();
}
inline void NodeExecStats::_internal_set_node_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.Set(value, GetArena());
}
inline std::string* NodeExecStats::_internal_mutable_node_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_name_.Mutable( GetArena());
}
inline std::string* NodeExecStats::release_node_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.NodeExecStats.node_name)
  return _impl_.node_name_.Release();
}
inline void NodeExecStats::set_allocated_node_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_name_.IsDefault()) {
          _impl_.node_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.NodeExecStats.node_name)
}

// int64 all_start_micros = 2;
inline void NodeExecStats::clear_all_start_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_start_micros_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::all_start_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.all_start_micros)
  return _internal_all_start_micros();
}
inline void NodeExecStats::set_all_start_micros(::int64_t value) {
  _internal_set_all_start_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.all_start_micros)
}
inline ::int64_t NodeExecStats::_internal_all_start_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_start_micros_;
}
inline void NodeExecStats::_internal_set_all_start_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_start_micros_ = value;
}

// int64 op_start_rel_micros = 3;
inline void NodeExecStats::clear_op_start_rel_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_start_rel_micros_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::op_start_rel_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.op_start_rel_micros)
  return _internal_op_start_rel_micros();
}
inline void NodeExecStats::set_op_start_rel_micros(::int64_t value) {
  _internal_set_op_start_rel_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.op_start_rel_micros)
}
inline ::int64_t NodeExecStats::_internal_op_start_rel_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_start_rel_micros_;
}
inline void NodeExecStats::_internal_set_op_start_rel_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_start_rel_micros_ = value;
}

// int64 op_end_rel_micros = 4;
inline void NodeExecStats::clear_op_end_rel_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_end_rel_micros_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::op_end_rel_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.op_end_rel_micros)
  return _internal_op_end_rel_micros();
}
inline void NodeExecStats::set_op_end_rel_micros(::int64_t value) {
  _internal_set_op_end_rel_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.op_end_rel_micros)
}
inline ::int64_t NodeExecStats::_internal_op_end_rel_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_end_rel_micros_;
}
inline void NodeExecStats::_internal_set_op_end_rel_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_end_rel_micros_ = value;
}

// int64 all_end_rel_micros = 5;
inline void NodeExecStats::clear_all_end_rel_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_end_rel_micros_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::all_end_rel_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.all_end_rel_micros)
  return _internal_all_end_rel_micros();
}
inline void NodeExecStats::set_all_end_rel_micros(::int64_t value) {
  _internal_set_all_end_rel_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.all_end_rel_micros)
}
inline ::int64_t NodeExecStats::_internal_all_end_rel_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_end_rel_micros_;
}
inline void NodeExecStats::_internal_set_all_end_rel_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_end_rel_micros_ = value;
}

// repeated .tensorflow.AllocatorMemoryUsed memory = 6;
inline int NodeExecStats::_internal_memory_size() const {
  return _internal_memory().size();
}
inline int NodeExecStats::memory_size() const {
  return _internal_memory_size();
}
inline void NodeExecStats::clear_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_.Clear();
}
inline ::tensorflow::AllocatorMemoryUsed* NodeExecStats::mutable_memory(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.NodeExecStats.memory)
  return _internal_mutable_memory()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::AllocatorMemoryUsed>* NodeExecStats::mutable_memory()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.NodeExecStats.memory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_memory();
}
inline const ::tensorflow::AllocatorMemoryUsed& NodeExecStats::memory(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.memory)
  return _internal_memory().Get(index);
}
inline ::tensorflow::AllocatorMemoryUsed* NodeExecStats::add_memory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::AllocatorMemoryUsed* _add = _internal_mutable_memory()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.NodeExecStats.memory)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocatorMemoryUsed>& NodeExecStats::memory() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.NodeExecStats.memory)
  return _internal_memory();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocatorMemoryUsed>&
NodeExecStats::_internal_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::AllocatorMemoryUsed>*
NodeExecStats::_internal_mutable_memory() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.memory_;
}

// repeated .tensorflow.NodeOutput output = 7;
inline int NodeExecStats::_internal_output_size() const {
  return _internal_output().size();
}
inline int NodeExecStats::output_size() const {
  return _internal_output_size();
}
inline void NodeExecStats::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.Clear();
}
inline ::tensorflow::NodeOutput* NodeExecStats::mutable_output(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.NodeExecStats.output)
  return _internal_mutable_output()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::NodeOutput>* NodeExecStats::mutable_output()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.NodeExecStats.output)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_output();
}
inline const ::tensorflow::NodeOutput& NodeExecStats::output(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.output)
  return _internal_output().Get(index);
}
inline ::tensorflow::NodeOutput* NodeExecStats::add_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::NodeOutput* _add = _internal_mutable_output()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.NodeExecStats.output)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::NodeOutput>& NodeExecStats::output() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.NodeExecStats.output)
  return _internal_output();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::NodeOutput>&
NodeExecStats::_internal_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::NodeOutput>*
NodeExecStats::_internal_mutable_output() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.output_;
}

// string timeline_label = 8;
inline void NodeExecStats::clear_timeline_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeline_label_.ClearToEmpty();
}
inline const std::string& NodeExecStats::timeline_label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.timeline_label)
  return _internal_timeline_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeExecStats::set_timeline_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeline_label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.timeline_label)
}
inline std::string* NodeExecStats::mutable_timeline_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timeline_label();
  // @@protoc_insertion_point(field_mutable:tensorflow.NodeExecStats.timeline_label)
  return _s;
}
inline const std::string& NodeExecStats::_internal_timeline_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeline_label_.Get();
}
inline void NodeExecStats::_internal_set_timeline_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeline_label_.Set(value, GetArena());
}
inline std::string* NodeExecStats::_internal_mutable_timeline_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timeline_label_.Mutable( GetArena());
}
inline std::string* NodeExecStats::release_timeline_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.NodeExecStats.timeline_label)
  return _impl_.timeline_label_.Release();
}
inline void NodeExecStats::set_allocated_timeline_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeline_label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timeline_label_.IsDefault()) {
          _impl_.timeline_label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.NodeExecStats.timeline_label)
}

// int64 scheduled_micros = 9;
inline void NodeExecStats::clear_scheduled_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scheduled_micros_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::scheduled_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.scheduled_micros)
  return _internal_scheduled_micros();
}
inline void NodeExecStats::set_scheduled_micros(::int64_t value) {
  _internal_set_scheduled_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.scheduled_micros)
}
inline ::int64_t NodeExecStats::_internal_scheduled_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scheduled_micros_;
}
inline void NodeExecStats::_internal_set_scheduled_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scheduled_micros_ = value;
}

// uint32 thread_id = 10;
inline void NodeExecStats::clear_thread_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.thread_id_ = 0u;
}
inline ::uint32_t NodeExecStats::thread_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.thread_id)
  return _internal_thread_id();
}
inline void NodeExecStats::set_thread_id(::uint32_t value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.thread_id)
}
inline ::uint32_t NodeExecStats::_internal_thread_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.thread_id_;
}
inline void NodeExecStats::_internal_set_thread_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.thread_id_ = value;
}

// repeated .tensorflow.AllocationDescription referenced_tensor = 11;
inline int NodeExecStats::_internal_referenced_tensor_size() const {
  return _internal_referenced_tensor().size();
}
inline int NodeExecStats::referenced_tensor_size() const {
  return _internal_referenced_tensor_size();
}
inline ::tensorflow::AllocationDescription* NodeExecStats::mutable_referenced_tensor(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.NodeExecStats.referenced_tensor)
  return _internal_mutable_referenced_tensor()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationDescription>* NodeExecStats::mutable_referenced_tensor()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.NodeExecStats.referenced_tensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_referenced_tensor();
}
inline const ::tensorflow::AllocationDescription& NodeExecStats::referenced_tensor(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.referenced_tensor)
  return _internal_referenced_tensor().Get(index);
}
inline ::tensorflow::AllocationDescription* NodeExecStats::add_referenced_tensor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::AllocationDescription* _add = _internal_mutable_referenced_tensor()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.NodeExecStats.referenced_tensor)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationDescription>& NodeExecStats::referenced_tensor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.NodeExecStats.referenced_tensor)
  return _internal_referenced_tensor();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationDescription>&
NodeExecStats::_internal_referenced_tensor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.referenced_tensor_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::AllocationDescription>*
NodeExecStats::_internal_mutable_referenced_tensor() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.referenced_tensor_;
}

// .tensorflow.MemoryStats memory_stats = 12;
inline bool NodeExecStats::has_memory_stats() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.memory_stats_ != nullptr);
  return value;
}
inline void NodeExecStats::clear_memory_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.memory_stats_ != nullptr) _impl_.memory_stats_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::MemoryStats& NodeExecStats::_internal_memory_stats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::MemoryStats* p = _impl_.memory_stats_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::MemoryStats&>(::tensorflow::_MemoryStats_default_instance_);
}
inline const ::tensorflow::MemoryStats& NodeExecStats::memory_stats() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.memory_stats)
  return _internal_memory_stats();
}
inline void NodeExecStats::unsafe_arena_set_allocated_memory_stats(::tensorflow::MemoryStats* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.memory_stats_);
  }
  _impl_.memory_stats_ = reinterpret_cast<::tensorflow::MemoryStats*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.NodeExecStats.memory_stats)
}
inline ::tensorflow::MemoryStats* NodeExecStats::release_memory_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::MemoryStats* released = _impl_.memory_stats_;
  _impl_.memory_stats_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::MemoryStats* NodeExecStats::unsafe_arena_release_memory_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.NodeExecStats.memory_stats)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::MemoryStats* temp = _impl_.memory_stats_;
  _impl_.memory_stats_ = nullptr;
  return temp;
}
inline ::tensorflow::MemoryStats* NodeExecStats::_internal_mutable_memory_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.memory_stats_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::MemoryStats>(GetArena());
    _impl_.memory_stats_ = reinterpret_cast<::tensorflow::MemoryStats*>(p);
  }
  return _impl_.memory_stats_;
}
inline ::tensorflow::MemoryStats* NodeExecStats::mutable_memory_stats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::MemoryStats* _msg = _internal_mutable_memory_stats();
  // @@protoc_insertion_point(field_mutable:tensorflow.NodeExecStats.memory_stats)
  return _msg;
}
inline void NodeExecStats::set_allocated_memory_stats(::tensorflow::MemoryStats* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.memory_stats_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.memory_stats_ = reinterpret_cast<::tensorflow::MemoryStats*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.NodeExecStats.memory_stats)
}

// int64 all_start_nanos = 13;
inline void NodeExecStats::clear_all_start_nanos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_start_nanos_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::all_start_nanos() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.all_start_nanos)
  return _internal_all_start_nanos();
}
inline void NodeExecStats::set_all_start_nanos(::int64_t value) {
  _internal_set_all_start_nanos(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.all_start_nanos)
}
inline ::int64_t NodeExecStats::_internal_all_start_nanos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_start_nanos_;
}
inline void NodeExecStats::_internal_set_all_start_nanos(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_start_nanos_ = value;
}

// int64 op_start_rel_nanos = 14;
inline void NodeExecStats::clear_op_start_rel_nanos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_start_rel_nanos_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::op_start_rel_nanos() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.op_start_rel_nanos)
  return _internal_op_start_rel_nanos();
}
inline void NodeExecStats::set_op_start_rel_nanos(::int64_t value) {
  _internal_set_op_start_rel_nanos(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.op_start_rel_nanos)
}
inline ::int64_t NodeExecStats::_internal_op_start_rel_nanos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_start_rel_nanos_;
}
inline void NodeExecStats::_internal_set_op_start_rel_nanos(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_start_rel_nanos_ = value;
}

// int64 op_end_rel_nanos = 15;
inline void NodeExecStats::clear_op_end_rel_nanos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_end_rel_nanos_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::op_end_rel_nanos() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.op_end_rel_nanos)
  return _internal_op_end_rel_nanos();
}
inline void NodeExecStats::set_op_end_rel_nanos(::int64_t value) {
  _internal_set_op_end_rel_nanos(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.op_end_rel_nanos)
}
inline ::int64_t NodeExecStats::_internal_op_end_rel_nanos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_end_rel_nanos_;
}
inline void NodeExecStats::_internal_set_op_end_rel_nanos(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_end_rel_nanos_ = value;
}

// int64 all_end_rel_nanos = 16;
inline void NodeExecStats::clear_all_end_rel_nanos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_end_rel_nanos_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::all_end_rel_nanos() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.all_end_rel_nanos)
  return _internal_all_end_rel_nanos();
}
inline void NodeExecStats::set_all_end_rel_nanos(::int64_t value) {
  _internal_set_all_end_rel_nanos(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.all_end_rel_nanos)
}
inline ::int64_t NodeExecStats::_internal_all_end_rel_nanos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_end_rel_nanos_;
}
inline void NodeExecStats::_internal_set_all_end_rel_nanos(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_end_rel_nanos_ = value;
}

// int64 scheduled_nanos = 17;
inline void NodeExecStats::clear_scheduled_nanos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scheduled_nanos_ = ::int64_t{0};
}
inline ::int64_t NodeExecStats::scheduled_nanos() const {
  // @@protoc_insertion_point(field_get:tensorflow.NodeExecStats.scheduled_nanos)
  return _internal_scheduled_nanos();
}
inline void NodeExecStats::set_scheduled_nanos(::int64_t value) {
  _internal_set_scheduled_nanos(value);
  // @@protoc_insertion_point(field_set:tensorflow.NodeExecStats.scheduled_nanos)
}
inline ::int64_t NodeExecStats::_internal_scheduled_nanos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scheduled_nanos_;
}
inline void NodeExecStats::_internal_set_scheduled_nanos(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scheduled_nanos_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DeviceStepStats

// string device = 1;
inline void DeviceStepStats::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.ClearToEmpty();
}
inline const std::string& DeviceStepStats::device() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceStepStats.device)
  return _internal_device();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceStepStats::set_device(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.DeviceStepStats.device)
}
inline std::string* DeviceStepStats::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:tensorflow.DeviceStepStats.device)
  return _s;
}
inline const std::string& DeviceStepStats::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_.Get();
}
inline void DeviceStepStats::_internal_set_device(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(value, GetArena());
}
inline std::string* DeviceStepStats::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_.Mutable( GetArena());
}
inline std::string* DeviceStepStats::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.DeviceStepStats.device)
  return _impl_.device_.Release();
}
inline void DeviceStepStats::set_allocated_device(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_.IsDefault()) {
          _impl_.device_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DeviceStepStats.device)
}

// repeated .tensorflow.NodeExecStats node_stats = 2;
inline int DeviceStepStats::_internal_node_stats_size() const {
  return _internal_node_stats().size();
}
inline int DeviceStepStats::node_stats_size() const {
  return _internal_node_stats_size();
}
inline void DeviceStepStats::clear_node_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_stats_.Clear();
}
inline ::tensorflow::NodeExecStats* DeviceStepStats::mutable_node_stats(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.DeviceStepStats.node_stats)
  return _internal_mutable_node_stats()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::NodeExecStats>* DeviceStepStats::mutable_node_stats()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.DeviceStepStats.node_stats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node_stats();
}
inline const ::tensorflow::NodeExecStats& DeviceStepStats::node_stats(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeviceStepStats.node_stats)
  return _internal_node_stats().Get(index);
}
inline ::tensorflow::NodeExecStats* DeviceStepStats::add_node_stats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::NodeExecStats* _add = _internal_mutable_node_stats()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.DeviceStepStats.node_stats)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::NodeExecStats>& DeviceStepStats::node_stats() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.DeviceStepStats.node_stats)
  return _internal_node_stats();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::NodeExecStats>&
DeviceStepStats::_internal_node_stats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_stats_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::NodeExecStats>*
DeviceStepStats::_internal_mutable_node_stats() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_stats_;
}

// map<uint32, string> thread_names = 3;
inline int DeviceStepStats::_internal_thread_names_size() const {
  return _internal_thread_names().size();
}
inline int DeviceStepStats::thread_names_size() const {
  return _internal_thread_names_size();
}
inline void DeviceStepStats::clear_thread_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.thread_names_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, std::string>& DeviceStepStats::_internal_thread_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.thread_names_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, std::string>& DeviceStepStats::thread_names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.DeviceStepStats.thread_names)
  return _internal_thread_names();
}
inline ::google::protobuf::Map<::uint32_t, std::string>* DeviceStepStats::_internal_mutable_thread_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.thread_names_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, std::string>* DeviceStepStats::mutable_thread_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.DeviceStepStats.thread_names)
  return _internal_mutable_thread_names();
}

// -------------------------------------------------------------------

// StepStats

// repeated .tensorflow.DeviceStepStats dev_stats = 1;
inline int StepStats::_internal_dev_stats_size() const {
  return _internal_dev_stats().size();
}
inline int StepStats::dev_stats_size() const {
  return _internal_dev_stats_size();
}
inline void StepStats::clear_dev_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_stats_.Clear();
}
inline ::tensorflow::DeviceStepStats* StepStats::mutable_dev_stats(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.StepStats.dev_stats)
  return _internal_mutable_dev_stats()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceStepStats>* StepStats::mutable_dev_stats()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.StepStats.dev_stats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dev_stats();
}
inline const ::tensorflow::DeviceStepStats& StepStats::dev_stats(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.StepStats.dev_stats)
  return _internal_dev_stats().Get(index);
}
inline ::tensorflow::DeviceStepStats* StepStats::add_dev_stats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::DeviceStepStats* _add = _internal_mutable_dev_stats()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.StepStats.dev_stats)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceStepStats>& StepStats::dev_stats() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.StepStats.dev_stats)
  return _internal_dev_stats();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceStepStats>&
StepStats::_internal_dev_stats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dev_stats_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceStepStats>*
StepStats::_internal_mutable_dev_stats() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dev_stats_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto_2epb_2eh
