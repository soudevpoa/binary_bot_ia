// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/summary.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fsummary_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fsummary_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "xla/tsl/protobuf/histogram.pb.h"
#include "tensorflow/core/framework/tensor.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fsummary_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2fsummary_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fframework_2fsummary_2eproto;
namespace tensorflow {
class Summary;
struct SummaryDefaultTypeInternal;
PROTOBUF_EXPORT extern SummaryDefaultTypeInternal _Summary_default_instance_;
class SummaryDescription;
struct SummaryDescriptionDefaultTypeInternal;
PROTOBUF_EXPORT extern SummaryDescriptionDefaultTypeInternal _SummaryDescription_default_instance_;
class SummaryMetadata;
struct SummaryMetadataDefaultTypeInternal;
PROTOBUF_EXPORT extern SummaryMetadataDefaultTypeInternal _SummaryMetadata_default_instance_;
class SummaryMetadata_PluginData;
struct SummaryMetadata_PluginDataDefaultTypeInternal;
PROTOBUF_EXPORT extern SummaryMetadata_PluginDataDefaultTypeInternal _SummaryMetadata_PluginData_default_instance_;
class Summary_Audio;
struct Summary_AudioDefaultTypeInternal;
PROTOBUF_EXPORT extern Summary_AudioDefaultTypeInternal _Summary_Audio_default_instance_;
class Summary_Image;
struct Summary_ImageDefaultTypeInternal;
PROTOBUF_EXPORT extern Summary_ImageDefaultTypeInternal _Summary_Image_default_instance_;
class Summary_Value;
struct Summary_ValueDefaultTypeInternal;
PROTOBUF_EXPORT extern Summary_ValueDefaultTypeInternal _Summary_Value_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
enum DataClass : int {
  DATA_CLASS_UNKNOWN = 0,
  DATA_CLASS_SCALAR = 1,
  DATA_CLASS_TENSOR = 2,
  DATA_CLASS_BLOB_SEQUENCE = 3,
  DataClass_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DataClass_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool DataClass_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t DataClass_internal_data_[];
constexpr DataClass DataClass_MIN = static_cast<DataClass>(0);
constexpr DataClass DataClass_MAX = static_cast<DataClass>(3);
constexpr int DataClass_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
DataClass_descriptor();
template <typename T>
const std::string& DataClass_Name(T value) {
  static_assert(std::is_same<T, DataClass>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DataClass_Name().");
  return DataClass_Name(static_cast<DataClass>(value));
}
template <>
inline const std::string& DataClass_Name(DataClass value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DataClass_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool DataClass_Parse(absl::string_view name, DataClass* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataClass>(
      DataClass_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT SummaryMetadata_PluginData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.SummaryMetadata.PluginData) */ {
 public:
  inline SummaryMetadata_PluginData() : SummaryMetadata_PluginData(nullptr) {}
  ~SummaryMetadata_PluginData() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SummaryMetadata_PluginData(
      ::google::protobuf::internal::ConstantInitialized);

  inline SummaryMetadata_PluginData(const SummaryMetadata_PluginData& from) : SummaryMetadata_PluginData(nullptr, from) {}
  inline SummaryMetadata_PluginData(SummaryMetadata_PluginData&& from) noexcept
      : SummaryMetadata_PluginData(nullptr, std::move(from)) {}
  inline SummaryMetadata_PluginData& operator=(const SummaryMetadata_PluginData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SummaryMetadata_PluginData& operator=(SummaryMetadata_PluginData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SummaryMetadata_PluginData& default_instance() {
    return *internal_default_instance();
  }
  static inline const SummaryMetadata_PluginData* internal_default_instance() {
    return reinterpret_cast<const SummaryMetadata_PluginData*>(
        &_SummaryMetadata_PluginData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SummaryMetadata_PluginData& a, SummaryMetadata_PluginData& b) { a.Swap(&b); }
  inline void Swap(SummaryMetadata_PluginData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SummaryMetadata_PluginData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SummaryMetadata_PluginData* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SummaryMetadata_PluginData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SummaryMetadata_PluginData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SummaryMetadata_PluginData& from) { SummaryMetadata_PluginData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SummaryMetadata_PluginData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.SummaryMetadata.PluginData"; }

 protected:
  explicit SummaryMetadata_PluginData(::google::protobuf::Arena* arena);
  SummaryMetadata_PluginData(::google::protobuf::Arena* arena, const SummaryMetadata_PluginData& from);
  SummaryMetadata_PluginData(::google::protobuf::Arena* arena, SummaryMetadata_PluginData&& from) noexcept
      : SummaryMetadata_PluginData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPluginNameFieldNumber = 1,
    kContentFieldNumber = 2,
  };
  // string plugin_name = 1;
  void clear_plugin_name() ;
  const std::string& plugin_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plugin_name(Arg_&& arg, Args_... args);
  std::string* mutable_plugin_name();
  PROTOBUF_NODISCARD std::string* release_plugin_name();
  void set_allocated_plugin_name(std::string* value);

  private:
  const std::string& _internal_plugin_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plugin_name(
      const std::string& value);
  std::string* _internal_mutable_plugin_name();

  public:
  // bytes content = 2;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.SummaryMetadata.PluginData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SummaryMetadata_PluginData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr plugin_name_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fsummary_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT SummaryDescription final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.SummaryDescription) */ {
 public:
  inline SummaryDescription() : SummaryDescription(nullptr) {}
  ~SummaryDescription() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SummaryDescription(
      ::google::protobuf::internal::ConstantInitialized);

  inline SummaryDescription(const SummaryDescription& from) : SummaryDescription(nullptr, from) {}
  inline SummaryDescription(SummaryDescription&& from) noexcept
      : SummaryDescription(nullptr, std::move(from)) {}
  inline SummaryDescription& operator=(const SummaryDescription& from) {
    CopyFrom(from);
    return *this;
  }
  inline SummaryDescription& operator=(SummaryDescription&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SummaryDescription& default_instance() {
    return *internal_default_instance();
  }
  static inline const SummaryDescription* internal_default_instance() {
    return reinterpret_cast<const SummaryDescription*>(
        &_SummaryDescription_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SummaryDescription& a, SummaryDescription& b) { a.Swap(&b); }
  inline void Swap(SummaryDescription* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SummaryDescription* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SummaryDescription* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SummaryDescription>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SummaryDescription& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SummaryDescription& from) { SummaryDescription::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SummaryDescription* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.SummaryDescription"; }

 protected:
  explicit SummaryDescription(::google::protobuf::Arena* arena);
  SummaryDescription(::google::protobuf::Arena* arena, const SummaryDescription& from);
  SummaryDescription(::google::protobuf::Arena* arena, SummaryDescription&& from) noexcept
      : SummaryDescription(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeHintFieldNumber = 1,
  };
  // string type_hint = 1;
  void clear_type_hint() ;
  const std::string& type_hint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type_hint(Arg_&& arg, Args_... args);
  std::string* mutable_type_hint();
  PROTOBUF_NODISCARD std::string* release_type_hint();
  void set_allocated_type_hint(std::string* value);

  private:
  const std::string& _internal_type_hint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_hint(
      const std::string& value);
  std::string* _internal_mutable_type_hint();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.SummaryDescription)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SummaryDescription& from_msg);
    ::google::protobuf::internal::ArenaStringPtr type_hint_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fsummary_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT Summary_Image final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.Summary.Image) */ {
 public:
  inline Summary_Image() : Summary_Image(nullptr) {}
  ~Summary_Image() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Summary_Image(
      ::google::protobuf::internal::ConstantInitialized);

  inline Summary_Image(const Summary_Image& from) : Summary_Image(nullptr, from) {}
  inline Summary_Image(Summary_Image&& from) noexcept
      : Summary_Image(nullptr, std::move(from)) {}
  inline Summary_Image& operator=(const Summary_Image& from) {
    CopyFrom(from);
    return *this;
  }
  inline Summary_Image& operator=(Summary_Image&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Summary_Image& default_instance() {
    return *internal_default_instance();
  }
  static inline const Summary_Image* internal_default_instance() {
    return reinterpret_cast<const Summary_Image*>(
        &_Summary_Image_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Summary_Image& a, Summary_Image& b) { a.Swap(&b); }
  inline void Swap(Summary_Image* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Summary_Image* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Summary_Image* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Summary_Image>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Summary_Image& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Summary_Image& from) { Summary_Image::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Summary_Image* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.Summary.Image"; }

 protected:
  explicit Summary_Image(::google::protobuf::Arena* arena);
  Summary_Image(::google::protobuf::Arena* arena, const Summary_Image& from);
  Summary_Image(::google::protobuf::Arena* arena, Summary_Image&& from) noexcept
      : Summary_Image(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEncodedImageStringFieldNumber = 4,
    kHeightFieldNumber = 1,
    kWidthFieldNumber = 2,
    kColorspaceFieldNumber = 3,
  };
  // bytes encoded_image_string = 4;
  void clear_encoded_image_string() ;
  const std::string& encoded_image_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encoded_image_string(Arg_&& arg, Args_... args);
  std::string* mutable_encoded_image_string();
  PROTOBUF_NODISCARD std::string* release_encoded_image_string();
  void set_allocated_encoded_image_string(std::string* value);

  private:
  const std::string& _internal_encoded_image_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encoded_image_string(
      const std::string& value);
  std::string* _internal_mutable_encoded_image_string();

  public:
  // int32 height = 1;
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // int32 width = 2;
  void clear_width() ;
  ::int32_t width() const;
  void set_width(::int32_t value);

  private:
  ::int32_t _internal_width() const;
  void _internal_set_width(::int32_t value);

  public:
  // int32 colorspace = 3;
  void clear_colorspace() ;
  ::int32_t colorspace() const;
  void set_colorspace(::int32_t value);

  private:
  ::int32_t _internal_colorspace() const;
  void _internal_set_colorspace(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.Summary.Image)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Summary_Image& from_msg);
    ::google::protobuf::internal::ArenaStringPtr encoded_image_string_;
    ::int32_t height_;
    ::int32_t width_;
    ::int32_t colorspace_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fsummary_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT Summary_Audio final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.Summary.Audio) */ {
 public:
  inline Summary_Audio() : Summary_Audio(nullptr) {}
  ~Summary_Audio() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Summary_Audio(
      ::google::protobuf::internal::ConstantInitialized);

  inline Summary_Audio(const Summary_Audio& from) : Summary_Audio(nullptr, from) {}
  inline Summary_Audio(Summary_Audio&& from) noexcept
      : Summary_Audio(nullptr, std::move(from)) {}
  inline Summary_Audio& operator=(const Summary_Audio& from) {
    CopyFrom(from);
    return *this;
  }
  inline Summary_Audio& operator=(Summary_Audio&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Summary_Audio& default_instance() {
    return *internal_default_instance();
  }
  static inline const Summary_Audio* internal_default_instance() {
    return reinterpret_cast<const Summary_Audio*>(
        &_Summary_Audio_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Summary_Audio& a, Summary_Audio& b) { a.Swap(&b); }
  inline void Swap(Summary_Audio* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Summary_Audio* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Summary_Audio* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Summary_Audio>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Summary_Audio& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Summary_Audio& from) { Summary_Audio::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Summary_Audio* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.Summary.Audio"; }

 protected:
  explicit Summary_Audio(::google::protobuf::Arena* arena);
  Summary_Audio(::google::protobuf::Arena* arena, const Summary_Audio& from);
  Summary_Audio(::google::protobuf::Arena* arena, Summary_Audio&& from) noexcept
      : Summary_Audio(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEncodedAudioStringFieldNumber = 4,
    kContentTypeFieldNumber = 5,
    kNumChannelsFieldNumber = 2,
    kLengthFramesFieldNumber = 3,
    kSampleRateFieldNumber = 1,
  };
  // bytes encoded_audio_string = 4;
  void clear_encoded_audio_string() ;
  const std::string& encoded_audio_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encoded_audio_string(Arg_&& arg, Args_... args);
  std::string* mutable_encoded_audio_string();
  PROTOBUF_NODISCARD std::string* release_encoded_audio_string();
  void set_allocated_encoded_audio_string(std::string* value);

  private:
  const std::string& _internal_encoded_audio_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encoded_audio_string(
      const std::string& value);
  std::string* _internal_mutable_encoded_audio_string();

  public:
  // string content_type = 5;
  void clear_content_type() ;
  const std::string& content_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content_type(Arg_&& arg, Args_... args);
  std::string* mutable_content_type();
  PROTOBUF_NODISCARD std::string* release_content_type();
  void set_allocated_content_type(std::string* value);

  private:
  const std::string& _internal_content_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content_type(
      const std::string& value);
  std::string* _internal_mutable_content_type();

  public:
  // int64 num_channels = 2;
  void clear_num_channels() ;
  ::int64_t num_channels() const;
  void set_num_channels(::int64_t value);

  private:
  ::int64_t _internal_num_channels() const;
  void _internal_set_num_channels(::int64_t value);

  public:
  // int64 length_frames = 3;
  void clear_length_frames() ;
  ::int64_t length_frames() const;
  void set_length_frames(::int64_t value);

  private:
  ::int64_t _internal_length_frames() const;
  void _internal_set_length_frames(::int64_t value);

  public:
  // float sample_rate = 1;
  void clear_sample_rate() ;
  float sample_rate() const;
  void set_sample_rate(float value);

  private:
  float _internal_sample_rate() const;
  void _internal_set_sample_rate(float value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.Summary.Audio)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      45, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Summary_Audio& from_msg);
    ::google::protobuf::internal::ArenaStringPtr encoded_audio_string_;
    ::google::protobuf::internal::ArenaStringPtr content_type_;
    ::int64_t num_channels_;
    ::int64_t length_frames_;
    float sample_rate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fsummary_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT SummaryMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.SummaryMetadata) */ {
 public:
  inline SummaryMetadata() : SummaryMetadata(nullptr) {}
  ~SummaryMetadata() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SummaryMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline SummaryMetadata(const SummaryMetadata& from) : SummaryMetadata(nullptr, from) {}
  inline SummaryMetadata(SummaryMetadata&& from) noexcept
      : SummaryMetadata(nullptr, std::move(from)) {}
  inline SummaryMetadata& operator=(const SummaryMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline SummaryMetadata& operator=(SummaryMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SummaryMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const SummaryMetadata* internal_default_instance() {
    return reinterpret_cast<const SummaryMetadata*>(
        &_SummaryMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SummaryMetadata& a, SummaryMetadata& b) { a.Swap(&b); }
  inline void Swap(SummaryMetadata* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SummaryMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SummaryMetadata* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SummaryMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SummaryMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SummaryMetadata& from) { SummaryMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SummaryMetadata* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.SummaryMetadata"; }

 protected:
  explicit SummaryMetadata(::google::protobuf::Arena* arena);
  SummaryMetadata(::google::protobuf::Arena* arena, const SummaryMetadata& from);
  SummaryMetadata(::google::protobuf::Arena* arena, SummaryMetadata&& from) noexcept
      : SummaryMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PluginData = SummaryMetadata_PluginData;

  // accessors -------------------------------------------------------
  enum : int {
    kDisplayNameFieldNumber = 2,
    kSummaryDescriptionFieldNumber = 3,
    kPluginDataFieldNumber = 1,
    kDataClassFieldNumber = 4,
  };
  // string display_name = 2;
  void clear_display_name() ;
  const std::string& display_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_display_name(Arg_&& arg, Args_... args);
  std::string* mutable_display_name();
  PROTOBUF_NODISCARD std::string* release_display_name();
  void set_allocated_display_name(std::string* value);

  private:
  const std::string& _internal_display_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(
      const std::string& value);
  std::string* _internal_mutable_display_name();

  public:
  // string summary_description = 3;
  void clear_summary_description() ;
  const std::string& summary_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_summary_description(Arg_&& arg, Args_... args);
  std::string* mutable_summary_description();
  PROTOBUF_NODISCARD std::string* release_summary_description();
  void set_allocated_summary_description(std::string* value);

  private:
  const std::string& _internal_summary_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_summary_description(
      const std::string& value);
  std::string* _internal_mutable_summary_description();

  public:
  // .tensorflow.SummaryMetadata.PluginData plugin_data = 1;
  bool has_plugin_data() const;
  void clear_plugin_data() ;
  const ::tensorflow::SummaryMetadata_PluginData& plugin_data() const;
  PROTOBUF_NODISCARD ::tensorflow::SummaryMetadata_PluginData* release_plugin_data();
  ::tensorflow::SummaryMetadata_PluginData* mutable_plugin_data();
  void set_allocated_plugin_data(::tensorflow::SummaryMetadata_PluginData* value);
  void unsafe_arena_set_allocated_plugin_data(::tensorflow::SummaryMetadata_PluginData* value);
  ::tensorflow::SummaryMetadata_PluginData* unsafe_arena_release_plugin_data();

  private:
  const ::tensorflow::SummaryMetadata_PluginData& _internal_plugin_data() const;
  ::tensorflow::SummaryMetadata_PluginData* _internal_mutable_plugin_data();

  public:
  // .tensorflow.DataClass data_class = 4;
  void clear_data_class() ;
  ::tensorflow::DataClass data_class() const;
  void set_data_class(::tensorflow::DataClass value);

  private:
  ::tensorflow::DataClass _internal_data_class() const;
  void _internal_set_data_class(::tensorflow::DataClass value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.SummaryMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      66, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SummaryMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr display_name_;
    ::google::protobuf::internal::ArenaStringPtr summary_description_;
    ::tensorflow::SummaryMetadata_PluginData* plugin_data_;
    int data_class_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fsummary_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT Summary_Value final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.Summary.Value) */ {
 public:
  inline Summary_Value() : Summary_Value(nullptr) {}
  ~Summary_Value() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Summary_Value(
      ::google::protobuf::internal::ConstantInitialized);

  inline Summary_Value(const Summary_Value& from) : Summary_Value(nullptr, from) {}
  inline Summary_Value(Summary_Value&& from) noexcept
      : Summary_Value(nullptr, std::move(from)) {}
  inline Summary_Value& operator=(const Summary_Value& from) {
    CopyFrom(from);
    return *this;
  }
  inline Summary_Value& operator=(Summary_Value&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Summary_Value& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kSimpleValue = 2,
    kObsoleteOldStyleHistogram = 3,
    kImage = 4,
    kHisto = 5,
    kAudio = 6,
    kTensor = 8,
    VALUE_NOT_SET = 0,
  };
  static inline const Summary_Value* internal_default_instance() {
    return reinterpret_cast<const Summary_Value*>(
        &_Summary_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Summary_Value& a, Summary_Value& b) { a.Swap(&b); }
  inline void Swap(Summary_Value* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Summary_Value* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Summary_Value* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Summary_Value>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Summary_Value& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Summary_Value& from) { Summary_Value::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Summary_Value* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.Summary.Value"; }

 protected:
  explicit Summary_Value(::google::protobuf::Arena* arena);
  Summary_Value(::google::protobuf::Arena* arena, const Summary_Value& from);
  Summary_Value(::google::protobuf::Arena* arena, Summary_Value&& from) noexcept
      : Summary_Value(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTagFieldNumber = 1,
    kNodeNameFieldNumber = 7,
    kMetadataFieldNumber = 9,
    kSimpleValueFieldNumber = 2,
    kObsoleteOldStyleHistogramFieldNumber = 3,
    kImageFieldNumber = 4,
    kHistoFieldNumber = 5,
    kAudioFieldNumber = 6,
    kTensorFieldNumber = 8,
  };
  // string tag = 1;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* value);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // string node_name = 7;
  void clear_node_name() ;
  const std::string& node_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_name(Arg_&& arg, Args_... args);
  std::string* mutable_node_name();
  PROTOBUF_NODISCARD std::string* release_node_name();
  void set_allocated_node_name(std::string* value);

  private:
  const std::string& _internal_node_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_name(
      const std::string& value);
  std::string* _internal_mutable_node_name();

  public:
  // .tensorflow.SummaryMetadata metadata = 9;
  bool has_metadata() const;
  void clear_metadata() ;
  const ::tensorflow::SummaryMetadata& metadata() const;
  PROTOBUF_NODISCARD ::tensorflow::SummaryMetadata* release_metadata();
  ::tensorflow::SummaryMetadata* mutable_metadata();
  void set_allocated_metadata(::tensorflow::SummaryMetadata* value);
  void unsafe_arena_set_allocated_metadata(::tensorflow::SummaryMetadata* value);
  ::tensorflow::SummaryMetadata* unsafe_arena_release_metadata();

  private:
  const ::tensorflow::SummaryMetadata& _internal_metadata() const;
  ::tensorflow::SummaryMetadata* _internal_mutable_metadata();

  public:
  // float simple_value = 2;
  bool has_simple_value() const;
  void clear_simple_value() ;
  float simple_value() const;
  void set_simple_value(float value);

  private:
  float _internal_simple_value() const;
  void _internal_set_simple_value(float value);

  public:
  // bytes obsolete_old_style_histogram = 3;
  bool has_obsolete_old_style_histogram() const;
  void clear_obsolete_old_style_histogram() ;
  const std::string& obsolete_old_style_histogram() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_obsolete_old_style_histogram(Arg_&& arg, Args_... args);
  std::string* mutable_obsolete_old_style_histogram();
  PROTOBUF_NODISCARD std::string* release_obsolete_old_style_histogram();
  void set_allocated_obsolete_old_style_histogram(std::string* value);

  private:
  const std::string& _internal_obsolete_old_style_histogram() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_obsolete_old_style_histogram(
      const std::string& value);
  std::string* _internal_mutable_obsolete_old_style_histogram();

  public:
  // .tensorflow.Summary.Image image = 4;
  bool has_image() const;
  private:
  bool _internal_has_image() const;

  public:
  void clear_image() ;
  const ::tensorflow::Summary_Image& image() const;
  PROTOBUF_NODISCARD ::tensorflow::Summary_Image* release_image();
  ::tensorflow::Summary_Image* mutable_image();
  void set_allocated_image(::tensorflow::Summary_Image* value);
  void unsafe_arena_set_allocated_image(::tensorflow::Summary_Image* value);
  ::tensorflow::Summary_Image* unsafe_arena_release_image();

  private:
  const ::tensorflow::Summary_Image& _internal_image() const;
  ::tensorflow::Summary_Image* _internal_mutable_image();

  public:
  // .tensorflow.HistogramProto histo = 5;
  bool has_histo() const;
  private:
  bool _internal_has_histo() const;

  public:
  void clear_histo() ;
  const ::tensorflow::HistogramProto& histo() const;
  PROTOBUF_NODISCARD ::tensorflow::HistogramProto* release_histo();
  ::tensorflow::HistogramProto* mutable_histo();
  void set_allocated_histo(::tensorflow::HistogramProto* value);
  void unsafe_arena_set_allocated_histo(::tensorflow::HistogramProto* value);
  ::tensorflow::HistogramProto* unsafe_arena_release_histo();

  private:
  const ::tensorflow::HistogramProto& _internal_histo() const;
  ::tensorflow::HistogramProto* _internal_mutable_histo();

  public:
  // .tensorflow.Summary.Audio audio = 6;
  bool has_audio() const;
  private:
  bool _internal_has_audio() const;

  public:
  void clear_audio() ;
  const ::tensorflow::Summary_Audio& audio() const;
  PROTOBUF_NODISCARD ::tensorflow::Summary_Audio* release_audio();
  ::tensorflow::Summary_Audio* mutable_audio();
  void set_allocated_audio(::tensorflow::Summary_Audio* value);
  void unsafe_arena_set_allocated_audio(::tensorflow::Summary_Audio* value);
  ::tensorflow::Summary_Audio* unsafe_arena_release_audio();

  private:
  const ::tensorflow::Summary_Audio& _internal_audio() const;
  ::tensorflow::Summary_Audio* _internal_mutable_audio();

  public:
  // .tensorflow.TensorProto tensor = 8;
  bool has_tensor() const;
  private:
  bool _internal_has_tensor() const;

  public:
  void clear_tensor() ;
  const ::tensorflow::TensorProto& tensor() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorProto* release_tensor();
  ::tensorflow::TensorProto* mutable_tensor();
  void set_allocated_tensor(::tensorflow::TensorProto* value);
  void unsafe_arena_set_allocated_tensor(::tensorflow::TensorProto* value);
  ::tensorflow::TensorProto* unsafe_arena_release_tensor();

  private:
  const ::tensorflow::TensorProto& _internal_tensor() const;
  ::tensorflow::TensorProto* _internal_mutable_tensor();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.Summary.Value)
 private:
  class _Internal;
  void set_has_simple_value();
  void set_has_obsolete_old_style_histogram();
  void set_has_image();
  void set_has_histo();
  void set_has_audio();
  void set_has_tensor();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 5,
      53, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Summary_Value& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    ::google::protobuf::internal::ArenaStringPtr node_name_;
    ::tensorflow::SummaryMetadata* metadata_;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      float simple_value_;
      ::google::protobuf::internal::ArenaStringPtr obsolete_old_style_histogram_;
      ::tensorflow::Summary_Image* image_;
      ::tensorflow::HistogramProto* histo_;
      ::tensorflow::Summary_Audio* audio_;
      ::tensorflow::TensorProto* tensor_;
    } value_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fsummary_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT Summary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.Summary) */ {
 public:
  inline Summary() : Summary(nullptr) {}
  ~Summary() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Summary(
      ::google::protobuf::internal::ConstantInitialized);

  inline Summary(const Summary& from) : Summary(nullptr, from) {}
  inline Summary(Summary&& from) noexcept
      : Summary(nullptr, std::move(from)) {}
  inline Summary& operator=(const Summary& from) {
    CopyFrom(from);
    return *this;
  }
  inline Summary& operator=(Summary&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Summary& default_instance() {
    return *internal_default_instance();
  }
  static inline const Summary* internal_default_instance() {
    return reinterpret_cast<const Summary*>(
        &_Summary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Summary& a, Summary& b) { a.Swap(&b); }
  inline void Swap(Summary* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Summary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Summary* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Summary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Summary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Summary& from) { Summary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Summary* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.Summary"; }

 protected:
  explicit Summary(::google::protobuf::Arena* arena);
  Summary(::google::protobuf::Arena* arena, const Summary& from);
  Summary(::google::protobuf::Arena* arena, Summary&& from) noexcept
      : Summary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Image = Summary_Image;
  using Audio = Summary_Audio;
  using Value = Summary_Value;

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // repeated .tensorflow.Summary.Value value = 1;
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  ::tensorflow::Summary_Value* mutable_value(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::Summary_Value>* mutable_value();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::Summary_Value>& _internal_value() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::Summary_Value>* _internal_mutable_value();
  public:
  const ::tensorflow::Summary_Value& value(int index) const;
  ::tensorflow::Summary_Value* add_value();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::Summary_Value>& value() const;
  // @@protoc_insertion_point(class_scope:tensorflow.Summary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Summary& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::Summary_Value > value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fsummary_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SummaryDescription

// string type_hint = 1;
inline void SummaryDescription::clear_type_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_hint_.ClearToEmpty();
}
inline const std::string& SummaryDescription::type_hint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.SummaryDescription.type_hint)
  return _internal_type_hint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SummaryDescription::set_type_hint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_hint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.SummaryDescription.type_hint)
}
inline std::string* SummaryDescription::mutable_type_hint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type_hint();
  // @@protoc_insertion_point(field_mutable:tensorflow.SummaryDescription.type_hint)
  return _s;
}
inline const std::string& SummaryDescription::_internal_type_hint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_hint_.Get();
}
inline void SummaryDescription::_internal_set_type_hint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_hint_.Set(value, GetArena());
}
inline std::string* SummaryDescription::_internal_mutable_type_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_hint_.Mutable( GetArena());
}
inline std::string* SummaryDescription::release_type_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.SummaryDescription.type_hint)
  return _impl_.type_hint_.Release();
}
inline void SummaryDescription::set_allocated_type_hint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_hint_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_hint_.IsDefault()) {
          _impl_.type_hint_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SummaryDescription.type_hint)
}

// -------------------------------------------------------------------

// SummaryMetadata_PluginData

// string plugin_name = 1;
inline void SummaryMetadata_PluginData::clear_plugin_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plugin_name_.ClearToEmpty();
}
inline const std::string& SummaryMetadata_PluginData::plugin_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.SummaryMetadata.PluginData.plugin_name)
  return _internal_plugin_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SummaryMetadata_PluginData::set_plugin_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plugin_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.SummaryMetadata.PluginData.plugin_name)
}
inline std::string* SummaryMetadata_PluginData::mutable_plugin_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_plugin_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.SummaryMetadata.PluginData.plugin_name)
  return _s;
}
inline const std::string& SummaryMetadata_PluginData::_internal_plugin_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.plugin_name_.Get();
}
inline void SummaryMetadata_PluginData::_internal_set_plugin_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plugin_name_.Set(value, GetArena());
}
inline std::string* SummaryMetadata_PluginData::_internal_mutable_plugin_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.plugin_name_.Mutable( GetArena());
}
inline std::string* SummaryMetadata_PluginData::release_plugin_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.SummaryMetadata.PluginData.plugin_name)
  return _impl_.plugin_name_.Release();
}
inline void SummaryMetadata_PluginData::set_allocated_plugin_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plugin_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plugin_name_.IsDefault()) {
          _impl_.plugin_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SummaryMetadata.PluginData.plugin_name)
}

// bytes content = 2;
inline void SummaryMetadata_PluginData::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& SummaryMetadata_PluginData::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.SummaryMetadata.PluginData.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SummaryMetadata_PluginData::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.SummaryMetadata.PluginData.content)
}
inline std::string* SummaryMetadata_PluginData::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:tensorflow.SummaryMetadata.PluginData.content)
  return _s;
}
inline const std::string& SummaryMetadata_PluginData::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void SummaryMetadata_PluginData::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* SummaryMetadata_PluginData::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* SummaryMetadata_PluginData::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.SummaryMetadata.PluginData.content)
  return _impl_.content_.Release();
}
inline void SummaryMetadata_PluginData::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_.IsDefault()) {
          _impl_.content_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SummaryMetadata.PluginData.content)
}

// -------------------------------------------------------------------

// SummaryMetadata

// .tensorflow.SummaryMetadata.PluginData plugin_data = 1;
inline bool SummaryMetadata::has_plugin_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.plugin_data_ != nullptr);
  return value;
}
inline void SummaryMetadata::clear_plugin_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.plugin_data_ != nullptr) _impl_.plugin_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::SummaryMetadata_PluginData& SummaryMetadata::_internal_plugin_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::SummaryMetadata_PluginData* p = _impl_.plugin_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::SummaryMetadata_PluginData&>(::tensorflow::_SummaryMetadata_PluginData_default_instance_);
}
inline const ::tensorflow::SummaryMetadata_PluginData& SummaryMetadata::plugin_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.SummaryMetadata.plugin_data)
  return _internal_plugin_data();
}
inline void SummaryMetadata::unsafe_arena_set_allocated_plugin_data(::tensorflow::SummaryMetadata_PluginData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.plugin_data_);
  }
  _impl_.plugin_data_ = reinterpret_cast<::tensorflow::SummaryMetadata_PluginData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SummaryMetadata.plugin_data)
}
inline ::tensorflow::SummaryMetadata_PluginData* SummaryMetadata::release_plugin_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::SummaryMetadata_PluginData* released = _impl_.plugin_data_;
  _impl_.plugin_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::SummaryMetadata_PluginData* SummaryMetadata::unsafe_arena_release_plugin_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.SummaryMetadata.plugin_data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::SummaryMetadata_PluginData* temp = _impl_.plugin_data_;
  _impl_.plugin_data_ = nullptr;
  return temp;
}
inline ::tensorflow::SummaryMetadata_PluginData* SummaryMetadata::_internal_mutable_plugin_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.plugin_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::SummaryMetadata_PluginData>(GetArena());
    _impl_.plugin_data_ = reinterpret_cast<::tensorflow::SummaryMetadata_PluginData*>(p);
  }
  return _impl_.plugin_data_;
}
inline ::tensorflow::SummaryMetadata_PluginData* SummaryMetadata::mutable_plugin_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::SummaryMetadata_PluginData* _msg = _internal_mutable_plugin_data();
  // @@protoc_insertion_point(field_mutable:tensorflow.SummaryMetadata.plugin_data)
  return _msg;
}
inline void SummaryMetadata::set_allocated_plugin_data(::tensorflow::SummaryMetadata_PluginData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.plugin_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.plugin_data_ = reinterpret_cast<::tensorflow::SummaryMetadata_PluginData*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SummaryMetadata.plugin_data)
}

// string display_name = 2;
inline void SummaryMetadata::clear_display_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.display_name_.ClearToEmpty();
}
inline const std::string& SummaryMetadata::display_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.SummaryMetadata.display_name)
  return _internal_display_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SummaryMetadata::set_display_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.display_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.SummaryMetadata.display_name)
}
inline std::string* SummaryMetadata::mutable_display_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_display_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.SummaryMetadata.display_name)
  return _s;
}
inline const std::string& SummaryMetadata::_internal_display_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.display_name_.Get();
}
inline void SummaryMetadata::_internal_set_display_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.display_name_.Set(value, GetArena());
}
inline std::string* SummaryMetadata::_internal_mutable_display_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.display_name_.Mutable( GetArena());
}
inline std::string* SummaryMetadata::release_display_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.SummaryMetadata.display_name)
  return _impl_.display_name_.Release();
}
inline void SummaryMetadata::set_allocated_display_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.display_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.display_name_.IsDefault()) {
          _impl_.display_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SummaryMetadata.display_name)
}

// string summary_description = 3;
inline void SummaryMetadata::clear_summary_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_description_.ClearToEmpty();
}
inline const std::string& SummaryMetadata::summary_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.SummaryMetadata.summary_description)
  return _internal_summary_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SummaryMetadata::set_summary_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.SummaryMetadata.summary_description)
}
inline std::string* SummaryMetadata::mutable_summary_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_summary_description();
  // @@protoc_insertion_point(field_mutable:tensorflow.SummaryMetadata.summary_description)
  return _s;
}
inline const std::string& SummaryMetadata::_internal_summary_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.summary_description_.Get();
}
inline void SummaryMetadata::_internal_set_summary_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_description_.Set(value, GetArena());
}
inline std::string* SummaryMetadata::_internal_mutable_summary_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.summary_description_.Mutable( GetArena());
}
inline std::string* SummaryMetadata::release_summary_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.SummaryMetadata.summary_description)
  return _impl_.summary_description_.Release();
}
inline void SummaryMetadata::set_allocated_summary_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.summary_description_.IsDefault()) {
          _impl_.summary_description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SummaryMetadata.summary_description)
}

// .tensorflow.DataClass data_class = 4;
inline void SummaryMetadata::clear_data_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_class_ = 0;
}
inline ::tensorflow::DataClass SummaryMetadata::data_class() const {
  // @@protoc_insertion_point(field_get:tensorflow.SummaryMetadata.data_class)
  return _internal_data_class();
}
inline void SummaryMetadata::set_data_class(::tensorflow::DataClass value) {
  _internal_set_data_class(value);
  // @@protoc_insertion_point(field_set:tensorflow.SummaryMetadata.data_class)
}
inline ::tensorflow::DataClass SummaryMetadata::_internal_data_class() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataClass>(_impl_.data_class_);
}
inline void SummaryMetadata::_internal_set_data_class(::tensorflow::DataClass value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_class_ = value;
}

// -------------------------------------------------------------------

// Summary_Image

// int32 height = 1;
inline void Summary_Image::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
}
inline ::int32_t Summary_Image::height() const {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Image.height)
  return _internal_height();
}
inline void Summary_Image::set_height(::int32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Image.height)
}
inline ::int32_t Summary_Image::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void Summary_Image::_internal_set_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// int32 width = 2;
inline void Summary_Image::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
}
inline ::int32_t Summary_Image::width() const {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Image.width)
  return _internal_width();
}
inline void Summary_Image::set_width(::int32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Image.width)
}
inline ::int32_t Summary_Image::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void Summary_Image::_internal_set_width(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// int32 colorspace = 3;
inline void Summary_Image::clear_colorspace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.colorspace_ = 0;
}
inline ::int32_t Summary_Image::colorspace() const {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Image.colorspace)
  return _internal_colorspace();
}
inline void Summary_Image::set_colorspace(::int32_t value) {
  _internal_set_colorspace(value);
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Image.colorspace)
}
inline ::int32_t Summary_Image::_internal_colorspace() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.colorspace_;
}
inline void Summary_Image::_internal_set_colorspace(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.colorspace_ = value;
}

// bytes encoded_image_string = 4;
inline void Summary_Image::clear_encoded_image_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoded_image_string_.ClearToEmpty();
}
inline const std::string& Summary_Image::encoded_image_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Image.encoded_image_string)
  return _internal_encoded_image_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Summary_Image::set_encoded_image_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoded_image_string_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Image.encoded_image_string)
}
inline std::string* Summary_Image::mutable_encoded_image_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encoded_image_string();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Image.encoded_image_string)
  return _s;
}
inline const std::string& Summary_Image::_internal_encoded_image_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encoded_image_string_.Get();
}
inline void Summary_Image::_internal_set_encoded_image_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoded_image_string_.Set(value, GetArena());
}
inline std::string* Summary_Image::_internal_mutable_encoded_image_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.encoded_image_string_.Mutable( GetArena());
}
inline std::string* Summary_Image::release_encoded_image_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Image.encoded_image_string)
  return _impl_.encoded_image_string_.Release();
}
inline void Summary_Image::set_allocated_encoded_image_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoded_image_string_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.encoded_image_string_.IsDefault()) {
          _impl_.encoded_image_string_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.Summary.Image.encoded_image_string)
}

// -------------------------------------------------------------------

// Summary_Audio

// float sample_rate = 1;
inline void Summary_Audio::clear_sample_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sample_rate_ = 0;
}
inline float Summary_Audio::sample_rate() const {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Audio.sample_rate)
  return _internal_sample_rate();
}
inline void Summary_Audio::set_sample_rate(float value) {
  _internal_set_sample_rate(value);
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Audio.sample_rate)
}
inline float Summary_Audio::_internal_sample_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sample_rate_;
}
inline void Summary_Audio::_internal_set_sample_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sample_rate_ = value;
}

// int64 num_channels = 2;
inline void Summary_Audio::clear_num_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = ::int64_t{0};
}
inline ::int64_t Summary_Audio::num_channels() const {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Audio.num_channels)
  return _internal_num_channels();
}
inline void Summary_Audio::set_num_channels(::int64_t value) {
  _internal_set_num_channels(value);
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Audio.num_channels)
}
inline ::int64_t Summary_Audio::_internal_num_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_channels_;
}
inline void Summary_Audio::_internal_set_num_channels(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = value;
}

// int64 length_frames = 3;
inline void Summary_Audio::clear_length_frames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.length_frames_ = ::int64_t{0};
}
inline ::int64_t Summary_Audio::length_frames() const {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Audio.length_frames)
  return _internal_length_frames();
}
inline void Summary_Audio::set_length_frames(::int64_t value) {
  _internal_set_length_frames(value);
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Audio.length_frames)
}
inline ::int64_t Summary_Audio::_internal_length_frames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.length_frames_;
}
inline void Summary_Audio::_internal_set_length_frames(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.length_frames_ = value;
}

// bytes encoded_audio_string = 4;
inline void Summary_Audio::clear_encoded_audio_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoded_audio_string_.ClearToEmpty();
}
inline const std::string& Summary_Audio::encoded_audio_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Audio.encoded_audio_string)
  return _internal_encoded_audio_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Summary_Audio::set_encoded_audio_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoded_audio_string_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Audio.encoded_audio_string)
}
inline std::string* Summary_Audio::mutable_encoded_audio_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encoded_audio_string();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Audio.encoded_audio_string)
  return _s;
}
inline const std::string& Summary_Audio::_internal_encoded_audio_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encoded_audio_string_.Get();
}
inline void Summary_Audio::_internal_set_encoded_audio_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoded_audio_string_.Set(value, GetArena());
}
inline std::string* Summary_Audio::_internal_mutable_encoded_audio_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.encoded_audio_string_.Mutable( GetArena());
}
inline std::string* Summary_Audio::release_encoded_audio_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Audio.encoded_audio_string)
  return _impl_.encoded_audio_string_.Release();
}
inline void Summary_Audio::set_allocated_encoded_audio_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoded_audio_string_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.encoded_audio_string_.IsDefault()) {
          _impl_.encoded_audio_string_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.Summary.Audio.encoded_audio_string)
}

// string content_type = 5;
inline void Summary_Audio::clear_content_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_.ClearToEmpty();
}
inline const std::string& Summary_Audio::content_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Audio.content_type)
  return _internal_content_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Summary_Audio::set_content_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Audio.content_type)
}
inline std::string* Summary_Audio::mutable_content_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content_type();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Audio.content_type)
  return _s;
}
inline const std::string& Summary_Audio::_internal_content_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_type_.Get();
}
inline void Summary_Audio::_internal_set_content_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_.Set(value, GetArena());
}
inline std::string* Summary_Audio::_internal_mutable_content_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_type_.Mutable( GetArena());
}
inline std::string* Summary_Audio::release_content_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Audio.content_type)
  return _impl_.content_type_.Release();
}
inline void Summary_Audio::set_allocated_content_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_type_.IsDefault()) {
          _impl_.content_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.Summary.Audio.content_type)
}

// -------------------------------------------------------------------

// Summary_Value

// string node_name = 7;
inline void Summary_Value::clear_node_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.ClearToEmpty();
}
inline const std::string& Summary_Value::node_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Value.node_name)
  return _internal_node_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Summary_Value::set_node_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Value.node_name)
}
inline std::string* Summary_Value::mutable_node_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Value.node_name)
  return _s;
}
inline const std::string& Summary_Value::_internal_node_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_name_.Get();
}
inline void Summary_Value::_internal_set_node_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.Set(value, GetArena());
}
inline std::string* Summary_Value::_internal_mutable_node_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_name_.Mutable( GetArena());
}
inline std::string* Summary_Value::release_node_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Value.node_name)
  return _impl_.node_name_.Release();
}
inline void Summary_Value::set_allocated_node_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_name_.IsDefault()) {
          _impl_.node_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.Summary.Value.node_name)
}

// string tag = 1;
inline void Summary_Value::clear_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& Summary_Value::tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Value.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Summary_Value::set_tag(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Value.tag)
}
inline std::string* Summary_Value::mutable_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Value.tag)
  return _s;
}
inline const std::string& Summary_Value::_internal_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tag_.Get();
}
inline void Summary_Value::_internal_set_tag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.Set(value, GetArena());
}
inline std::string* Summary_Value::_internal_mutable_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tag_.Mutable( GetArena());
}
inline std::string* Summary_Value::release_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Value.tag)
  return _impl_.tag_.Release();
}
inline void Summary_Value::set_allocated_tag(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.Summary.Value.tag)
}

// .tensorflow.SummaryMetadata metadata = 9;
inline bool Summary_Value::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void Summary_Value::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::SummaryMetadata& Summary_Value::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::SummaryMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::SummaryMetadata&>(::tensorflow::_SummaryMetadata_default_instance_);
}
inline const ::tensorflow::SummaryMetadata& Summary_Value::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Value.metadata)
  return _internal_metadata();
}
inline void Summary_Value::unsafe_arena_set_allocated_metadata(::tensorflow::SummaryMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::tensorflow::SummaryMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.Summary.Value.metadata)
}
inline ::tensorflow::SummaryMetadata* Summary_Value::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::SummaryMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::SummaryMetadata* Summary_Value::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Value.metadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::SummaryMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::tensorflow::SummaryMetadata* Summary_Value::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::SummaryMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::tensorflow::SummaryMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::tensorflow::SummaryMetadata* Summary_Value::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::SummaryMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Value.metadata)
  return _msg;
}
inline void Summary_Value::set_allocated_metadata(::tensorflow::SummaryMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.metadata_ = reinterpret_cast<::tensorflow::SummaryMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.Summary.Value.metadata)
}

// float simple_value = 2;
inline bool Summary_Value::has_simple_value() const {
  return value_case() == kSimpleValue;
}
inline void Summary_Value::set_has_simple_value() {
  _impl_._oneof_case_[0] = kSimpleValue;
}
inline void Summary_Value::clear_simple_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kSimpleValue) {
    _impl_.value_.simple_value_ = 0;
    clear_has_value();
  }
}
inline float Summary_Value::simple_value() const {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Value.simple_value)
  return _internal_simple_value();
}
inline void Summary_Value::set_simple_value(float value) {
  if (value_case() != kSimpleValue) {
    clear_value();
    set_has_simple_value();
  }
  _impl_.value_.simple_value_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Value.simple_value)
}
inline float Summary_Value::_internal_simple_value() const {
  if (value_case() == kSimpleValue) {
    return _impl_.value_.simple_value_;
  }
  return 0;
}

// bytes obsolete_old_style_histogram = 3;
inline bool Summary_Value::has_obsolete_old_style_histogram() const {
  return value_case() == kObsoleteOldStyleHistogram;
}
inline void Summary_Value::set_has_obsolete_old_style_histogram() {
  _impl_._oneof_case_[0] = kObsoleteOldStyleHistogram;
}
inline void Summary_Value::clear_obsolete_old_style_histogram() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kObsoleteOldStyleHistogram) {
    _impl_.value_.obsolete_old_style_histogram_.Destroy();
    clear_has_value();
  }
}
inline const std::string& Summary_Value::obsolete_old_style_histogram() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Value.obsolete_old_style_histogram)
  return _internal_obsolete_old_style_histogram();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Summary_Value::set_obsolete_old_style_histogram(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kObsoleteOldStyleHistogram) {
    clear_value();

    set_has_obsolete_old_style_histogram();
    _impl_.value_.obsolete_old_style_histogram_.InitDefault();
  }
  _impl_.value_.obsolete_old_style_histogram_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.Summary.Value.obsolete_old_style_histogram)
}
inline std::string* Summary_Value::mutable_obsolete_old_style_histogram() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_obsolete_old_style_histogram();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Value.obsolete_old_style_histogram)
  return _s;
}
inline const std::string& Summary_Value::_internal_obsolete_old_style_histogram() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kObsoleteOldStyleHistogram) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.obsolete_old_style_histogram_.Get();
}
inline void Summary_Value::_internal_set_obsolete_old_style_histogram(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kObsoleteOldStyleHistogram) {
    clear_value();

    set_has_obsolete_old_style_histogram();
    _impl_.value_.obsolete_old_style_histogram_.InitDefault();
  }
  _impl_.value_.obsolete_old_style_histogram_.Set(value, GetArena());
}
inline std::string* Summary_Value::_internal_mutable_obsolete_old_style_histogram() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kObsoleteOldStyleHistogram) {
    clear_value();

    set_has_obsolete_old_style_histogram();
    _impl_.value_.obsolete_old_style_histogram_.InitDefault();
  }
  return _impl_.value_.obsolete_old_style_histogram_.Mutable( GetArena());
}
inline std::string* Summary_Value::release_obsolete_old_style_histogram() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Value.obsolete_old_style_histogram)
  if (value_case() != kObsoleteOldStyleHistogram) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.obsolete_old_style_histogram_.Release();
}
inline void Summary_Value::set_allocated_obsolete_old_style_histogram(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_obsolete_old_style_histogram();
    _impl_.value_.obsolete_old_style_histogram_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.Summary.Value.obsolete_old_style_histogram)
}

// .tensorflow.Summary.Image image = 4;
inline bool Summary_Value::has_image() const {
  return value_case() == kImage;
}
inline bool Summary_Value::_internal_has_image() const {
  return value_case() == kImage;
}
inline void Summary_Value::set_has_image() {
  _impl_._oneof_case_[0] = kImage;
}
inline void Summary_Value::clear_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kImage) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.image_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.image_);
    }
    clear_has_value();
  }
}
inline ::tensorflow::Summary_Image* Summary_Value::release_image() {
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Value.image)
  if (value_case() == kImage) {
    clear_has_value();
    auto* temp = _impl_.value_.image_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.image_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::Summary_Image& Summary_Value::_internal_image() const {
  return value_case() == kImage ? *_impl_.value_.image_ : reinterpret_cast<::tensorflow::Summary_Image&>(::tensorflow::_Summary_Image_default_instance_);
}
inline const ::tensorflow::Summary_Image& Summary_Value::image() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Value.image)
  return _internal_image();
}
inline ::tensorflow::Summary_Image* Summary_Value::unsafe_arena_release_image() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.Summary.Value.image)
  if (value_case() == kImage) {
    clear_has_value();
    auto* temp = _impl_.value_.image_;
    _impl_.value_.image_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Summary_Value::unsafe_arena_set_allocated_image(::tensorflow::Summary_Image* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_image();
    _impl_.value_.image_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.Summary.Value.image)
}
inline ::tensorflow::Summary_Image* Summary_Value::_internal_mutable_image() {
  if (value_case() != kImage) {
    clear_value();
    set_has_image();
    _impl_.value_.image_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::Summary_Image>(GetArena());
  }
  return _impl_.value_.image_;
}
inline ::tensorflow::Summary_Image* Summary_Value::mutable_image() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::Summary_Image* _msg = _internal_mutable_image();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Value.image)
  return _msg;
}

// .tensorflow.HistogramProto histo = 5;
inline bool Summary_Value::has_histo() const {
  return value_case() == kHisto;
}
inline bool Summary_Value::_internal_has_histo() const {
  return value_case() == kHisto;
}
inline void Summary_Value::set_has_histo() {
  _impl_._oneof_case_[0] = kHisto;
}
inline ::tensorflow::HistogramProto* Summary_Value::release_histo() {
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Value.histo)
  if (value_case() == kHisto) {
    clear_has_value();
    auto* temp = _impl_.value_.histo_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.histo_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::HistogramProto& Summary_Value::_internal_histo() const {
  return value_case() == kHisto ? *_impl_.value_.histo_ : reinterpret_cast<::tensorflow::HistogramProto&>(::tensorflow::_HistogramProto_default_instance_);
}
inline const ::tensorflow::HistogramProto& Summary_Value::histo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Value.histo)
  return _internal_histo();
}
inline ::tensorflow::HistogramProto* Summary_Value::unsafe_arena_release_histo() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.Summary.Value.histo)
  if (value_case() == kHisto) {
    clear_has_value();
    auto* temp = _impl_.value_.histo_;
    _impl_.value_.histo_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Summary_Value::unsafe_arena_set_allocated_histo(::tensorflow::HistogramProto* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_histo();
    _impl_.value_.histo_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.Summary.Value.histo)
}
inline ::tensorflow::HistogramProto* Summary_Value::_internal_mutable_histo() {
  if (value_case() != kHisto) {
    clear_value();
    set_has_histo();
    _impl_.value_.histo_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::HistogramProto>(GetArena());
  }
  return _impl_.value_.histo_;
}
inline ::tensorflow::HistogramProto* Summary_Value::mutable_histo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::HistogramProto* _msg = _internal_mutable_histo();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Value.histo)
  return _msg;
}

// .tensorflow.Summary.Audio audio = 6;
inline bool Summary_Value::has_audio() const {
  return value_case() == kAudio;
}
inline bool Summary_Value::_internal_has_audio() const {
  return value_case() == kAudio;
}
inline void Summary_Value::set_has_audio() {
  _impl_._oneof_case_[0] = kAudio;
}
inline void Summary_Value::clear_audio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kAudio) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.audio_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.audio_);
    }
    clear_has_value();
  }
}
inline ::tensorflow::Summary_Audio* Summary_Value::release_audio() {
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Value.audio)
  if (value_case() == kAudio) {
    clear_has_value();
    auto* temp = _impl_.value_.audio_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.audio_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::Summary_Audio& Summary_Value::_internal_audio() const {
  return value_case() == kAudio ? *_impl_.value_.audio_ : reinterpret_cast<::tensorflow::Summary_Audio&>(::tensorflow::_Summary_Audio_default_instance_);
}
inline const ::tensorflow::Summary_Audio& Summary_Value::audio() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Value.audio)
  return _internal_audio();
}
inline ::tensorflow::Summary_Audio* Summary_Value::unsafe_arena_release_audio() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.Summary.Value.audio)
  if (value_case() == kAudio) {
    clear_has_value();
    auto* temp = _impl_.value_.audio_;
    _impl_.value_.audio_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Summary_Value::unsafe_arena_set_allocated_audio(::tensorflow::Summary_Audio* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_audio();
    _impl_.value_.audio_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.Summary.Value.audio)
}
inline ::tensorflow::Summary_Audio* Summary_Value::_internal_mutable_audio() {
  if (value_case() != kAudio) {
    clear_value();
    set_has_audio();
    _impl_.value_.audio_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::Summary_Audio>(GetArena());
  }
  return _impl_.value_.audio_;
}
inline ::tensorflow::Summary_Audio* Summary_Value::mutable_audio() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::Summary_Audio* _msg = _internal_mutable_audio();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Value.audio)
  return _msg;
}

// .tensorflow.TensorProto tensor = 8;
inline bool Summary_Value::has_tensor() const {
  return value_case() == kTensor;
}
inline bool Summary_Value::_internal_has_tensor() const {
  return value_case() == kTensor;
}
inline void Summary_Value::set_has_tensor() {
  _impl_._oneof_case_[0] = kTensor;
}
inline ::tensorflow::TensorProto* Summary_Value::release_tensor() {
  // @@protoc_insertion_point(field_release:tensorflow.Summary.Value.tensor)
  if (value_case() == kTensor) {
    clear_has_value();
    auto* temp = _impl_.value_.tensor_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.tensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::TensorProto& Summary_Value::_internal_tensor() const {
  return value_case() == kTensor ? *_impl_.value_.tensor_ : reinterpret_cast<::tensorflow::TensorProto&>(::tensorflow::_TensorProto_default_instance_);
}
inline const ::tensorflow::TensorProto& Summary_Value::tensor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.Value.tensor)
  return _internal_tensor();
}
inline ::tensorflow::TensorProto* Summary_Value::unsafe_arena_release_tensor() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.Summary.Value.tensor)
  if (value_case() == kTensor) {
    clear_has_value();
    auto* temp = _impl_.value_.tensor_;
    _impl_.value_.tensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Summary_Value::unsafe_arena_set_allocated_tensor(::tensorflow::TensorProto* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_tensor();
    _impl_.value_.tensor_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.Summary.Value.tensor)
}
inline ::tensorflow::TensorProto* Summary_Value::_internal_mutable_tensor() {
  if (value_case() != kTensor) {
    clear_value();
    set_has_tensor();
    _impl_.value_.tensor_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorProto>(GetArena());
  }
  return _impl_.value_.tensor_;
}
inline ::tensorflow::TensorProto* Summary_Value::mutable_tensor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::TensorProto* _msg = _internal_mutable_tensor();
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.Value.tensor)
  return _msg;
}

inline bool Summary_Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Summary_Value::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline Summary_Value::ValueCase Summary_Value::value_case() const {
  return Summary_Value::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Summary

// repeated .tensorflow.Summary.Value value = 1;
inline int Summary::_internal_value_size() const {
  return _internal_value().size();
}
inline int Summary::value_size() const {
  return _internal_value_size();
}
inline void Summary::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Clear();
}
inline ::tensorflow::Summary_Value* Summary::mutable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.Summary.value)
  return _internal_mutable_value()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::Summary_Value>* Summary::mutable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.Summary.value)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_value();
}
inline const ::tensorflow::Summary_Value& Summary::value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.Summary.value)
  return _internal_value().Get(index);
}
inline ::tensorflow::Summary_Value* Summary::add_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::Summary_Value* _add = _internal_mutable_value()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.Summary.value)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::Summary_Value>& Summary::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.Summary.value)
  return _internal_value();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::Summary_Value>&
Summary::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::Summary_Value>*
Summary::_internal_mutable_value() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.value_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::DataClass> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::DataClass>() {
  return ::tensorflow::DataClass_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fsummary_2eproto_2epb_2eh
