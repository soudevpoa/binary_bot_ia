// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/variable.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fvariable_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fvariable_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fvariable_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2fvariable_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fframework_2fvariable_2eproto;
namespace tensorflow {
class SaveSliceInfoDef;
struct SaveSliceInfoDefDefaultTypeInternal;
PROTOBUF_EXPORT extern SaveSliceInfoDefDefaultTypeInternal _SaveSliceInfoDef_default_instance_;
class VariableDef;
struct VariableDefDefaultTypeInternal;
PROTOBUF_EXPORT extern VariableDefDefaultTypeInternal _VariableDef_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
enum VariableSynchronization : int {
  VARIABLE_SYNCHRONIZATION_AUTO = 0,
  VARIABLE_SYNCHRONIZATION_NONE = 1,
  VARIABLE_SYNCHRONIZATION_ON_WRITE = 2,
  VARIABLE_SYNCHRONIZATION_ON_READ = 3,
  VariableSynchronization_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  VariableSynchronization_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool VariableSynchronization_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t VariableSynchronization_internal_data_[];
constexpr VariableSynchronization VariableSynchronization_MIN = static_cast<VariableSynchronization>(0);
constexpr VariableSynchronization VariableSynchronization_MAX = static_cast<VariableSynchronization>(3);
constexpr int VariableSynchronization_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
VariableSynchronization_descriptor();
template <typename T>
const std::string& VariableSynchronization_Name(T value) {
  static_assert(std::is_same<T, VariableSynchronization>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to VariableSynchronization_Name().");
  return VariableSynchronization_Name(static_cast<VariableSynchronization>(value));
}
template <>
inline const std::string& VariableSynchronization_Name(VariableSynchronization value) {
  return ::google::protobuf::internal::NameOfDenseEnum<VariableSynchronization_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool VariableSynchronization_Parse(absl::string_view name, VariableSynchronization* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VariableSynchronization>(
      VariableSynchronization_descriptor(), name, value);
}
enum VariableAggregation : int {
  VARIABLE_AGGREGATION_NONE = 0,
  VARIABLE_AGGREGATION_SUM = 1,
  VARIABLE_AGGREGATION_MEAN = 2,
  VARIABLE_AGGREGATION_ONLY_FIRST_REPLICA = 3,
  VariableAggregation_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  VariableAggregation_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool VariableAggregation_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t VariableAggregation_internal_data_[];
constexpr VariableAggregation VariableAggregation_MIN = static_cast<VariableAggregation>(0);
constexpr VariableAggregation VariableAggregation_MAX = static_cast<VariableAggregation>(3);
constexpr int VariableAggregation_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
VariableAggregation_descriptor();
template <typename T>
const std::string& VariableAggregation_Name(T value) {
  static_assert(std::is_same<T, VariableAggregation>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to VariableAggregation_Name().");
  return VariableAggregation_Name(static_cast<VariableAggregation>(value));
}
template <>
inline const std::string& VariableAggregation_Name(VariableAggregation value) {
  return ::google::protobuf::internal::NameOfDenseEnum<VariableAggregation_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool VariableAggregation_Parse(absl::string_view name, VariableAggregation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VariableAggregation>(
      VariableAggregation_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT SaveSliceInfoDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.SaveSliceInfoDef) */ {
 public:
  inline SaveSliceInfoDef() : SaveSliceInfoDef(nullptr) {}
  ~SaveSliceInfoDef() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaveSliceInfoDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaveSliceInfoDef(const SaveSliceInfoDef& from) : SaveSliceInfoDef(nullptr, from) {}
  inline SaveSliceInfoDef(SaveSliceInfoDef&& from) noexcept
      : SaveSliceInfoDef(nullptr, std::move(from)) {}
  inline SaveSliceInfoDef& operator=(const SaveSliceInfoDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveSliceInfoDef& operator=(SaveSliceInfoDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveSliceInfoDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveSliceInfoDef* internal_default_instance() {
    return reinterpret_cast<const SaveSliceInfoDef*>(
        &_SaveSliceInfoDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SaveSliceInfoDef& a, SaveSliceInfoDef& b) { a.Swap(&b); }
  inline void Swap(SaveSliceInfoDef* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveSliceInfoDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveSliceInfoDef* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SaveSliceInfoDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaveSliceInfoDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaveSliceInfoDef& from) { SaveSliceInfoDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SaveSliceInfoDef* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.SaveSliceInfoDef"; }

 protected:
  explicit SaveSliceInfoDef(::google::protobuf::Arena* arena);
  SaveSliceInfoDef(::google::protobuf::Arena* arena, const SaveSliceInfoDef& from);
  SaveSliceInfoDef(::google::protobuf::Arena* arena, SaveSliceInfoDef&& from) noexcept
      : SaveSliceInfoDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFullShapeFieldNumber = 2,
    kVarOffsetFieldNumber = 3,
    kVarShapeFieldNumber = 4,
    kFullNameFieldNumber = 1,
  };
  // repeated int64 full_shape = 2;
  int full_shape_size() const;
  private:
  int _internal_full_shape_size() const;

  public:
  void clear_full_shape() ;
  ::int64_t full_shape(int index) const;
  void set_full_shape(int index, ::int64_t value);
  void add_full_shape(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& full_shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_full_shape();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_full_shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_full_shape();

  public:
  // repeated int64 var_offset = 3;
  int var_offset_size() const;
  private:
  int _internal_var_offset_size() const;

  public:
  void clear_var_offset() ;
  ::int64_t var_offset(int index) const;
  void set_var_offset(int index, ::int64_t value);
  void add_var_offset(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& var_offset() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_var_offset();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_var_offset() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_var_offset();

  public:
  // repeated int64 var_shape = 4;
  int var_shape_size() const;
  private:
  int _internal_var_shape_size() const;

  public:
  void clear_var_shape() ;
  ::int64_t var_shape(int index) const;
  void set_var_shape(int index, ::int64_t value);
  void add_var_shape(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& var_shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_var_shape();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_var_shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_var_shape();

  public:
  // string full_name = 1;
  void clear_full_name() ;
  const std::string& full_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_full_name(Arg_&& arg, Args_... args);
  std::string* mutable_full_name();
  PROTOBUF_NODISCARD std::string* release_full_name();
  void set_allocated_full_name(std::string* value);

  private:
  const std::string& _internal_full_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_full_name(
      const std::string& value);
  std::string* _internal_mutable_full_name();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.SaveSliceInfoDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      45, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaveSliceInfoDef& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> full_shape_;
    mutable ::google::protobuf::internal::CachedSize _full_shape_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> var_offset_;
    mutable ::google::protobuf::internal::CachedSize _var_offset_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> var_shape_;
    mutable ::google::protobuf::internal::CachedSize _var_shape_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr full_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fvariable_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT VariableDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.VariableDef) */ {
 public:
  inline VariableDef() : VariableDef(nullptr) {}
  ~VariableDef() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VariableDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline VariableDef(const VariableDef& from) : VariableDef(nullptr, from) {}
  inline VariableDef(VariableDef&& from) noexcept
      : VariableDef(nullptr, std::move(from)) {}
  inline VariableDef& operator=(const VariableDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline VariableDef& operator=(VariableDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VariableDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const VariableDef* internal_default_instance() {
    return reinterpret_cast<const VariableDef*>(
        &_VariableDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(VariableDef& a, VariableDef& b) { a.Swap(&b); }
  inline void Swap(VariableDef* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VariableDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VariableDef* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<VariableDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VariableDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VariableDef& from) { VariableDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VariableDef* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.VariableDef"; }

 protected:
  explicit VariableDef(::google::protobuf::Arena* arena);
  VariableDef(::google::protobuf::Arena* arena, const VariableDef& from);
  VariableDef(::google::protobuf::Arena* arena, VariableDef&& from) noexcept
      : VariableDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVariableNameFieldNumber = 1,
    kInitializerNameFieldNumber = 2,
    kSnapshotNameFieldNumber = 3,
    kInitialValueNameFieldNumber = 6,
    kSaveSliceInfoDefFieldNumber = 4,
    kIsResourceFieldNumber = 5,
    kTrainableFieldNumber = 7,
    kSynchronizationFieldNumber = 8,
    kAggregationFieldNumber = 9,
  };
  // string variable_name = 1;
  void clear_variable_name() ;
  const std::string& variable_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_variable_name(Arg_&& arg, Args_... args);
  std::string* mutable_variable_name();
  PROTOBUF_NODISCARD std::string* release_variable_name();
  void set_allocated_variable_name(std::string* value);

  private:
  const std::string& _internal_variable_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_variable_name(
      const std::string& value);
  std::string* _internal_mutable_variable_name();

  public:
  // string initializer_name = 2;
  void clear_initializer_name() ;
  const std::string& initializer_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initializer_name(Arg_&& arg, Args_... args);
  std::string* mutable_initializer_name();
  PROTOBUF_NODISCARD std::string* release_initializer_name();
  void set_allocated_initializer_name(std::string* value);

  private:
  const std::string& _internal_initializer_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initializer_name(
      const std::string& value);
  std::string* _internal_mutable_initializer_name();

  public:
  // string snapshot_name = 3;
  void clear_snapshot_name() ;
  const std::string& snapshot_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snapshot_name(Arg_&& arg, Args_... args);
  std::string* mutable_snapshot_name();
  PROTOBUF_NODISCARD std::string* release_snapshot_name();
  void set_allocated_snapshot_name(std::string* value);

  private:
  const std::string& _internal_snapshot_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snapshot_name(
      const std::string& value);
  std::string* _internal_mutable_snapshot_name();

  public:
  // string initial_value_name = 6;
  void clear_initial_value_name() ;
  const std::string& initial_value_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initial_value_name(Arg_&& arg, Args_... args);
  std::string* mutable_initial_value_name();
  PROTOBUF_NODISCARD std::string* release_initial_value_name();
  void set_allocated_initial_value_name(std::string* value);

  private:
  const std::string& _internal_initial_value_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initial_value_name(
      const std::string& value);
  std::string* _internal_mutable_initial_value_name();

  public:
  // .tensorflow.SaveSliceInfoDef save_slice_info_def = 4;
  bool has_save_slice_info_def() const;
  void clear_save_slice_info_def() ;
  const ::tensorflow::SaveSliceInfoDef& save_slice_info_def() const;
  PROTOBUF_NODISCARD ::tensorflow::SaveSliceInfoDef* release_save_slice_info_def();
  ::tensorflow::SaveSliceInfoDef* mutable_save_slice_info_def();
  void set_allocated_save_slice_info_def(::tensorflow::SaveSliceInfoDef* value);
  void unsafe_arena_set_allocated_save_slice_info_def(::tensorflow::SaveSliceInfoDef* value);
  ::tensorflow::SaveSliceInfoDef* unsafe_arena_release_save_slice_info_def();

  private:
  const ::tensorflow::SaveSliceInfoDef& _internal_save_slice_info_def() const;
  ::tensorflow::SaveSliceInfoDef* _internal_mutable_save_slice_info_def();

  public:
  // bool is_resource = 5;
  void clear_is_resource() ;
  bool is_resource() const;
  void set_is_resource(bool value);

  private:
  bool _internal_is_resource() const;
  void _internal_set_is_resource(bool value);

  public:
  // bool trainable = 7;
  void clear_trainable() ;
  bool trainable() const;
  void set_trainable(bool value);

  private:
  bool _internal_trainable() const;
  void _internal_set_trainable(bool value);

  public:
  // .tensorflow.VariableSynchronization synchronization = 8;
  void clear_synchronization() ;
  ::tensorflow::VariableSynchronization synchronization() const;
  void set_synchronization(::tensorflow::VariableSynchronization value);

  private:
  ::tensorflow::VariableSynchronization _internal_synchronization() const;
  void _internal_set_synchronization(::tensorflow::VariableSynchronization value);

  public:
  // .tensorflow.VariableAggregation aggregation = 9;
  void clear_aggregation() ;
  ::tensorflow::VariableAggregation aggregation() const;
  void set_aggregation(::tensorflow::VariableAggregation value);

  private:
  ::tensorflow::VariableAggregation _internal_aggregation() const;
  void _internal_set_aggregation(::tensorflow::VariableAggregation value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.VariableDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 1,
      99, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VariableDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr variable_name_;
    ::google::protobuf::internal::ArenaStringPtr initializer_name_;
    ::google::protobuf::internal::ArenaStringPtr snapshot_name_;
    ::google::protobuf::internal::ArenaStringPtr initial_value_name_;
    ::tensorflow::SaveSliceInfoDef* save_slice_info_def_;
    bool is_resource_;
    bool trainable_;
    int synchronization_;
    int aggregation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2fvariable_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// VariableDef

// string variable_name = 1;
inline void VariableDef::clear_variable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variable_name_.ClearToEmpty();
}
inline const std::string& VariableDef::variable_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.variable_name)
  return _internal_variable_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VariableDef::set_variable_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variable_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.variable_name)
}
inline std::string* VariableDef::mutable_variable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_variable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.VariableDef.variable_name)
  return _s;
}
inline const std::string& VariableDef::_internal_variable_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.variable_name_.Get();
}
inline void VariableDef::_internal_set_variable_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variable_name_.Set(value, GetArena());
}
inline std::string* VariableDef::_internal_mutable_variable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.variable_name_.Mutable( GetArena());
}
inline std::string* VariableDef::release_variable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.VariableDef.variable_name)
  return _impl_.variable_name_.Release();
}
inline void VariableDef::set_allocated_variable_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variable_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.variable_name_.IsDefault()) {
          _impl_.variable_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VariableDef.variable_name)
}

// string initial_value_name = 6;
inline void VariableDef::clear_initial_value_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_value_name_.ClearToEmpty();
}
inline const std::string& VariableDef::initial_value_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.initial_value_name)
  return _internal_initial_value_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VariableDef::set_initial_value_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_value_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.initial_value_name)
}
inline std::string* VariableDef::mutable_initial_value_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initial_value_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.VariableDef.initial_value_name)
  return _s;
}
inline const std::string& VariableDef::_internal_initial_value_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_value_name_.Get();
}
inline void VariableDef::_internal_set_initial_value_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_value_name_.Set(value, GetArena());
}
inline std::string* VariableDef::_internal_mutable_initial_value_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initial_value_name_.Mutable( GetArena());
}
inline std::string* VariableDef::release_initial_value_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.VariableDef.initial_value_name)
  return _impl_.initial_value_name_.Release();
}
inline void VariableDef::set_allocated_initial_value_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_value_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.initial_value_name_.IsDefault()) {
          _impl_.initial_value_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VariableDef.initial_value_name)
}

// string initializer_name = 2;
inline void VariableDef::clear_initializer_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initializer_name_.ClearToEmpty();
}
inline const std::string& VariableDef::initializer_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.initializer_name)
  return _internal_initializer_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VariableDef::set_initializer_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initializer_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.initializer_name)
}
inline std::string* VariableDef::mutable_initializer_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initializer_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.VariableDef.initializer_name)
  return _s;
}
inline const std::string& VariableDef::_internal_initializer_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initializer_name_.Get();
}
inline void VariableDef::_internal_set_initializer_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initializer_name_.Set(value, GetArena());
}
inline std::string* VariableDef::_internal_mutable_initializer_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initializer_name_.Mutable( GetArena());
}
inline std::string* VariableDef::release_initializer_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.VariableDef.initializer_name)
  return _impl_.initializer_name_.Release();
}
inline void VariableDef::set_allocated_initializer_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initializer_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.initializer_name_.IsDefault()) {
          _impl_.initializer_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VariableDef.initializer_name)
}

// string snapshot_name = 3;
inline void VariableDef::clear_snapshot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_name_.ClearToEmpty();
}
inline const std::string& VariableDef::snapshot_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.snapshot_name)
  return _internal_snapshot_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VariableDef::set_snapshot_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.snapshot_name)
}
inline std::string* VariableDef::mutable_snapshot_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snapshot_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.VariableDef.snapshot_name)
  return _s;
}
inline const std::string& VariableDef::_internal_snapshot_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snapshot_name_.Get();
}
inline void VariableDef::_internal_set_snapshot_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_name_.Set(value, GetArena());
}
inline std::string* VariableDef::_internal_mutable_snapshot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snapshot_name_.Mutable( GetArena());
}
inline std::string* VariableDef::release_snapshot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.VariableDef.snapshot_name)
  return _impl_.snapshot_name_.Release();
}
inline void VariableDef::set_allocated_snapshot_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.snapshot_name_.IsDefault()) {
          _impl_.snapshot_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VariableDef.snapshot_name)
}

// .tensorflow.SaveSliceInfoDef save_slice_info_def = 4;
inline bool VariableDef::has_save_slice_info_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.save_slice_info_def_ != nullptr);
  return value;
}
inline void VariableDef::clear_save_slice_info_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.save_slice_info_def_ != nullptr) _impl_.save_slice_info_def_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::SaveSliceInfoDef& VariableDef::_internal_save_slice_info_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::SaveSliceInfoDef* p = _impl_.save_slice_info_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::SaveSliceInfoDef&>(::tensorflow::_SaveSliceInfoDef_default_instance_);
}
inline const ::tensorflow::SaveSliceInfoDef& VariableDef::save_slice_info_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.save_slice_info_def)
  return _internal_save_slice_info_def();
}
inline void VariableDef::unsafe_arena_set_allocated_save_slice_info_def(::tensorflow::SaveSliceInfoDef* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.save_slice_info_def_);
  }
  _impl_.save_slice_info_def_ = reinterpret_cast<::tensorflow::SaveSliceInfoDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.VariableDef.save_slice_info_def)
}
inline ::tensorflow::SaveSliceInfoDef* VariableDef::release_save_slice_info_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::SaveSliceInfoDef* released = _impl_.save_slice_info_def_;
  _impl_.save_slice_info_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::SaveSliceInfoDef* VariableDef::unsafe_arena_release_save_slice_info_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.VariableDef.save_slice_info_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::SaveSliceInfoDef* temp = _impl_.save_slice_info_def_;
  _impl_.save_slice_info_def_ = nullptr;
  return temp;
}
inline ::tensorflow::SaveSliceInfoDef* VariableDef::_internal_mutable_save_slice_info_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.save_slice_info_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::SaveSliceInfoDef>(GetArena());
    _impl_.save_slice_info_def_ = reinterpret_cast<::tensorflow::SaveSliceInfoDef*>(p);
  }
  return _impl_.save_slice_info_def_;
}
inline ::tensorflow::SaveSliceInfoDef* VariableDef::mutable_save_slice_info_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::SaveSliceInfoDef* _msg = _internal_mutable_save_slice_info_def();
  // @@protoc_insertion_point(field_mutable:tensorflow.VariableDef.save_slice_info_def)
  return _msg;
}
inline void VariableDef::set_allocated_save_slice_info_def(::tensorflow::SaveSliceInfoDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.save_slice_info_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.save_slice_info_def_ = reinterpret_cast<::tensorflow::SaveSliceInfoDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VariableDef.save_slice_info_def)
}

// bool is_resource = 5;
inline void VariableDef::clear_is_resource() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_resource_ = false;
}
inline bool VariableDef::is_resource() const {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.is_resource)
  return _internal_is_resource();
}
inline void VariableDef::set_is_resource(bool value) {
  _internal_set_is_resource(value);
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.is_resource)
}
inline bool VariableDef::_internal_is_resource() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_resource_;
}
inline void VariableDef::_internal_set_is_resource(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_resource_ = value;
}

// bool trainable = 7;
inline void VariableDef::clear_trainable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trainable_ = false;
}
inline bool VariableDef::trainable() const {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.trainable)
  return _internal_trainable();
}
inline void VariableDef::set_trainable(bool value) {
  _internal_set_trainable(value);
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.trainable)
}
inline bool VariableDef::_internal_trainable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trainable_;
}
inline void VariableDef::_internal_set_trainable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trainable_ = value;
}

// .tensorflow.VariableSynchronization synchronization = 8;
inline void VariableDef::clear_synchronization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.synchronization_ = 0;
}
inline ::tensorflow::VariableSynchronization VariableDef::synchronization() const {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.synchronization)
  return _internal_synchronization();
}
inline void VariableDef::set_synchronization(::tensorflow::VariableSynchronization value) {
  _internal_set_synchronization(value);
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.synchronization)
}
inline ::tensorflow::VariableSynchronization VariableDef::_internal_synchronization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::VariableSynchronization>(_impl_.synchronization_);
}
inline void VariableDef::_internal_set_synchronization(::tensorflow::VariableSynchronization value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.synchronization_ = value;
}

// .tensorflow.VariableAggregation aggregation = 9;
inline void VariableDef::clear_aggregation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aggregation_ = 0;
}
inline ::tensorflow::VariableAggregation VariableDef::aggregation() const {
  // @@protoc_insertion_point(field_get:tensorflow.VariableDef.aggregation)
  return _internal_aggregation();
}
inline void VariableDef::set_aggregation(::tensorflow::VariableAggregation value) {
  _internal_set_aggregation(value);
  // @@protoc_insertion_point(field_set:tensorflow.VariableDef.aggregation)
}
inline ::tensorflow::VariableAggregation VariableDef::_internal_aggregation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::VariableAggregation>(_impl_.aggregation_);
}
inline void VariableDef::_internal_set_aggregation(::tensorflow::VariableAggregation value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aggregation_ = value;
}

// -------------------------------------------------------------------

// SaveSliceInfoDef

// string full_name = 1;
inline void SaveSliceInfoDef::clear_full_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_name_.ClearToEmpty();
}
inline const std::string& SaveSliceInfoDef::full_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.SaveSliceInfoDef.full_name)
  return _internal_full_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveSliceInfoDef::set_full_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.SaveSliceInfoDef.full_name)
}
inline std::string* SaveSliceInfoDef::mutable_full_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_full_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.SaveSliceInfoDef.full_name)
  return _s;
}
inline const std::string& SaveSliceInfoDef::_internal_full_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.full_name_.Get();
}
inline void SaveSliceInfoDef::_internal_set_full_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_name_.Set(value, GetArena());
}
inline std::string* SaveSliceInfoDef::_internal_mutable_full_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.full_name_.Mutable( GetArena());
}
inline std::string* SaveSliceInfoDef::release_full_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.SaveSliceInfoDef.full_name)
  return _impl_.full_name_.Release();
}
inline void SaveSliceInfoDef::set_allocated_full_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.full_name_.IsDefault()) {
          _impl_.full_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SaveSliceInfoDef.full_name)
}

// repeated int64 full_shape = 2;
inline int SaveSliceInfoDef::_internal_full_shape_size() const {
  return _internal_full_shape().size();
}
inline int SaveSliceInfoDef::full_shape_size() const {
  return _internal_full_shape_size();
}
inline void SaveSliceInfoDef::clear_full_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_shape_.Clear();
}
inline ::int64_t SaveSliceInfoDef::full_shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SaveSliceInfoDef.full_shape)
  return _internal_full_shape().Get(index);
}
inline void SaveSliceInfoDef::set_full_shape(int index, ::int64_t value) {
  _internal_mutable_full_shape()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.SaveSliceInfoDef.full_shape)
}
inline void SaveSliceInfoDef::add_full_shape(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_full_shape()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.SaveSliceInfoDef.full_shape)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SaveSliceInfoDef::full_shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.SaveSliceInfoDef.full_shape)
  return _internal_full_shape();
}
inline ::google::protobuf::RepeatedField<::int64_t>* SaveSliceInfoDef::mutable_full_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SaveSliceInfoDef.full_shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_full_shape();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
SaveSliceInfoDef::_internal_full_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.full_shape_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* SaveSliceInfoDef::_internal_mutable_full_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.full_shape_;
}

// repeated int64 var_offset = 3;
inline int SaveSliceInfoDef::_internal_var_offset_size() const {
  return _internal_var_offset().size();
}
inline int SaveSliceInfoDef::var_offset_size() const {
  return _internal_var_offset_size();
}
inline void SaveSliceInfoDef::clear_var_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.var_offset_.Clear();
}
inline ::int64_t SaveSliceInfoDef::var_offset(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SaveSliceInfoDef.var_offset)
  return _internal_var_offset().Get(index);
}
inline void SaveSliceInfoDef::set_var_offset(int index, ::int64_t value) {
  _internal_mutable_var_offset()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.SaveSliceInfoDef.var_offset)
}
inline void SaveSliceInfoDef::add_var_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_var_offset()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.SaveSliceInfoDef.var_offset)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SaveSliceInfoDef::var_offset() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.SaveSliceInfoDef.var_offset)
  return _internal_var_offset();
}
inline ::google::protobuf::RepeatedField<::int64_t>* SaveSliceInfoDef::mutable_var_offset()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SaveSliceInfoDef.var_offset)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_var_offset();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
SaveSliceInfoDef::_internal_var_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.var_offset_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* SaveSliceInfoDef::_internal_mutable_var_offset() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.var_offset_;
}

// repeated int64 var_shape = 4;
inline int SaveSliceInfoDef::_internal_var_shape_size() const {
  return _internal_var_shape().size();
}
inline int SaveSliceInfoDef::var_shape_size() const {
  return _internal_var_shape_size();
}
inline void SaveSliceInfoDef::clear_var_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.var_shape_.Clear();
}
inline ::int64_t SaveSliceInfoDef::var_shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.SaveSliceInfoDef.var_shape)
  return _internal_var_shape().Get(index);
}
inline void SaveSliceInfoDef::set_var_shape(int index, ::int64_t value) {
  _internal_mutable_var_shape()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.SaveSliceInfoDef.var_shape)
}
inline void SaveSliceInfoDef::add_var_shape(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_var_shape()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.SaveSliceInfoDef.var_shape)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SaveSliceInfoDef::var_shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.SaveSliceInfoDef.var_shape)
  return _internal_var_shape();
}
inline ::google::protobuf::RepeatedField<::int64_t>* SaveSliceInfoDef::mutable_var_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.SaveSliceInfoDef.var_shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_var_shape();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
SaveSliceInfoDef::_internal_var_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.var_shape_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* SaveSliceInfoDef::_internal_mutable_var_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.var_shape_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::VariableSynchronization> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::VariableSynchronization>() {
  return ::tensorflow::VariableSynchronization_descriptor();
}
template <>
struct is_proto_enum<::tensorflow::VariableAggregation> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::VariableAggregation>() {
  return ::tensorflow::VariableAggregation_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fvariable_2eproto_2epb_2eh
