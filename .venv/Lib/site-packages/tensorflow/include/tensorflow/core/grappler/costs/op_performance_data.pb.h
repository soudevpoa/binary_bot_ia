// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/grappler/costs/op_performance_data.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/tensor.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/types.pb.h"
#include "tensorflow/core/framework/attr_value.pb.h"
#include "tensorflow/core/protobuf/device_properties.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
namespace tensorflow {
class LogNormalDistribution;
struct LogNormalDistributionDefaultTypeInternal;
PROTOBUF_EXPORT extern LogNormalDistributionDefaultTypeInternal _LogNormalDistribution_default_instance_;
class NormalDistribution;
struct NormalDistributionDefaultTypeInternal;
PROTOBUF_EXPORT extern NormalDistributionDefaultTypeInternal _NormalDistribution_default_instance_;
class OpInfo;
struct OpInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern OpInfoDefaultTypeInternal _OpInfo_default_instance_;
class OpInfo_AttrEntry_DoNotUse;
struct OpInfo_AttrEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern OpInfo_AttrEntry_DoNotUseDefaultTypeInternal _OpInfo_AttrEntry_DoNotUse_default_instance_;
class OpInfo_TensorProperties;
struct OpInfo_TensorPropertiesDefaultTypeInternal;
PROTOBUF_EXPORT extern OpInfo_TensorPropertiesDefaultTypeInternal _OpInfo_TensorProperties_default_instance_;
class OpPerformance;
struct OpPerformanceDefaultTypeInternal;
PROTOBUF_EXPORT extern OpPerformanceDefaultTypeInternal _OpPerformance_default_instance_;
class OpPerformanceList;
struct OpPerformanceListDefaultTypeInternal;
PROTOBUF_EXPORT extern OpPerformanceListDefaultTypeInternal _OpPerformanceList_default_instance_;
class OpPerformance_OpMemory;
struct OpPerformance_OpMemoryDefaultTypeInternal;
PROTOBUF_EXPORT extern OpPerformance_OpMemoryDefaultTypeInternal _OpPerformance_OpMemory_default_instance_;
class SessionInfo;
struct SessionInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern SessionInfoDefaultTypeInternal _SessionInfo_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT SessionInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.SessionInfo) */ {
 public:
  inline SessionInfo() : SessionInfo(nullptr) {}
  ~SessionInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SessionInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline SessionInfo(const SessionInfo& from) : SessionInfo(nullptr, from) {}
  inline SessionInfo(SessionInfo&& from) noexcept
      : SessionInfo(nullptr, std::move(from)) {}
  inline SessionInfo& operator=(const SessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SessionInfo& operator=(SessionInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SessionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const SessionInfo* internal_default_instance() {
    return reinterpret_cast<const SessionInfo*>(
        &_SessionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SessionInfo& a, SessionInfo& b) { a.Swap(&b); }
  inline void Swap(SessionInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SessionInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SessionInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SessionInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SessionInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SessionInfo& from) { SessionInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SessionInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.SessionInfo"; }

 protected:
  explicit SessionInfo(::google::protobuf::Arena* arena);
  SessionInfo(::google::protobuf::Arena* arena, const SessionInfo& from);
  SessionInfo(::google::protobuf::Arena* arena, SessionInfo&& from) noexcept
      : SessionInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIntraOpParallelismFieldNumber = 1,
  };
  // int64 intra_op_parallelism = 1;
  void clear_intra_op_parallelism() ;
  ::int64_t intra_op_parallelism() const;
  void set_intra_op_parallelism(::int64_t value);

  private:
  ::int64_t _internal_intra_op_parallelism() const;
  void _internal_set_intra_op_parallelism(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.SessionInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SessionInfo& from_msg);
    ::int64_t intra_op_parallelism_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT OpPerformance_OpMemory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.OpPerformance.OpMemory) */ {
 public:
  inline OpPerformance_OpMemory() : OpPerformance_OpMemory(nullptr) {}
  ~OpPerformance_OpMemory() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpPerformance_OpMemory(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpPerformance_OpMemory(const OpPerformance_OpMemory& from) : OpPerformance_OpMemory(nullptr, from) {}
  inline OpPerformance_OpMemory(OpPerformance_OpMemory&& from) noexcept
      : OpPerformance_OpMemory(nullptr, std::move(from)) {}
  inline OpPerformance_OpMemory& operator=(const OpPerformance_OpMemory& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpPerformance_OpMemory& operator=(OpPerformance_OpMemory&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpPerformance_OpMemory& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpPerformance_OpMemory* internal_default_instance() {
    return reinterpret_cast<const OpPerformance_OpMemory*>(
        &_OpPerformance_OpMemory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(OpPerformance_OpMemory& a, OpPerformance_OpMemory& b) { a.Swap(&b); }
  inline void Swap(OpPerformance_OpMemory* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpPerformance_OpMemory* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpPerformance_OpMemory* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OpPerformance_OpMemory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpPerformance_OpMemory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpPerformance_OpMemory& from) { OpPerformance_OpMemory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpPerformance_OpMemory* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.OpPerformance.OpMemory"; }

 protected:
  explicit OpPerformance_OpMemory(::google::protobuf::Arena* arena);
  OpPerformance_OpMemory(::google::protobuf::Arena* arena, const OpPerformance_OpMemory& from);
  OpPerformance_OpMemory(::google::protobuf::Arena* arena, OpPerformance_OpMemory&& from) noexcept
      : OpPerformance_OpMemory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputMemoryFieldNumber = 1,
    kTempMemoryFieldNumber = 2,
    kDeviceTempMemoryFieldNumber = 3,
    kPersistentMemoryFieldNumber = 4,
    kDevicePersistentMemoryFieldNumber = 5,
  };
  // repeated int64 output_memory = 1;
  int output_memory_size() const;
  private:
  int _internal_output_memory_size() const;

  public:
  void clear_output_memory() ;
  ::int64_t output_memory(int index) const;
  void set_output_memory(int index, ::int64_t value);
  void add_output_memory(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& output_memory() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_output_memory();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_output_memory() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_output_memory();

  public:
  // int64 temp_memory = 2;
  void clear_temp_memory() ;
  ::int64_t temp_memory() const;
  void set_temp_memory(::int64_t value);

  private:
  ::int64_t _internal_temp_memory() const;
  void _internal_set_temp_memory(::int64_t value);

  public:
  // int64 device_temp_memory = 3 [deprecated = true];
  [[deprecated]]  void clear_device_temp_memory() ;
  [[deprecated]] ::int64_t device_temp_memory() const;
  [[deprecated]] void set_device_temp_memory(::int64_t value);

  private:
  ::int64_t _internal_device_temp_memory() const;
  void _internal_set_device_temp_memory(::int64_t value);

  public:
  // int64 persistent_memory = 4;
  void clear_persistent_memory() ;
  ::int64_t persistent_memory() const;
  void set_persistent_memory(::int64_t value);

  private:
  ::int64_t _internal_persistent_memory() const;
  void _internal_set_persistent_memory(::int64_t value);

  public:
  // int64 device_persistent_memory = 5 [deprecated = true];
  [[deprecated]]  void clear_device_persistent_memory() ;
  [[deprecated]] ::int64_t device_persistent_memory() const;
  [[deprecated]] void set_device_persistent_memory(::int64_t value);

  private:
  ::int64_t _internal_device_persistent_memory() const;
  void _internal_set_device_persistent_memory(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.OpPerformance.OpMemory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpPerformance_OpMemory& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> output_memory_;
    mutable ::google::protobuf::internal::CachedSize _output_memory_cached_byte_size_;
    ::int64_t temp_memory_;
    ::int64_t device_temp_memory_;
    ::int64_t persistent_memory_;
    ::int64_t device_persistent_memory_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT NormalDistribution final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.NormalDistribution) */ {
 public:
  inline NormalDistribution() : NormalDistribution(nullptr) {}
  ~NormalDistribution() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NormalDistribution(
      ::google::protobuf::internal::ConstantInitialized);

  inline NormalDistribution(const NormalDistribution& from) : NormalDistribution(nullptr, from) {}
  inline NormalDistribution(NormalDistribution&& from) noexcept
      : NormalDistribution(nullptr, std::move(from)) {}
  inline NormalDistribution& operator=(const NormalDistribution& from) {
    CopyFrom(from);
    return *this;
  }
  inline NormalDistribution& operator=(NormalDistribution&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NormalDistribution& default_instance() {
    return *internal_default_instance();
  }
  static inline const NormalDistribution* internal_default_instance() {
    return reinterpret_cast<const NormalDistribution*>(
        &_NormalDistribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(NormalDistribution& a, NormalDistribution& b) { a.Swap(&b); }
  inline void Swap(NormalDistribution* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NormalDistribution* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NormalDistribution* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NormalDistribution>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NormalDistribution& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NormalDistribution& from) { NormalDistribution::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NormalDistribution* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.NormalDistribution"; }

 protected:
  explicit NormalDistribution(::google::protobuf::Arena* arena);
  NormalDistribution(::google::protobuf::Arena* arena, const NormalDistribution& from);
  NormalDistribution(::google::protobuf::Arena* arena, NormalDistribution&& from) noexcept
      : NormalDistribution(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMuFieldNumber = 1,
    kSigmaFieldNumber = 2,
  };
  // double mu = 1;
  void clear_mu() ;
  double mu() const;
  void set_mu(double value);

  private:
  double _internal_mu() const;
  void _internal_set_mu(double value);

  public:
  // double sigma = 2;
  void clear_sigma() ;
  double sigma() const;
  void set_sigma(double value);

  private:
  double _internal_sigma() const;
  void _internal_set_sigma(double value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.NormalDistribution)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NormalDistribution& from_msg);
    double mu_;
    double sigma_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT LogNormalDistribution final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.LogNormalDistribution) */ {
 public:
  inline LogNormalDistribution() : LogNormalDistribution(nullptr) {}
  ~LogNormalDistribution() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LogNormalDistribution(
      ::google::protobuf::internal::ConstantInitialized);

  inline LogNormalDistribution(const LogNormalDistribution& from) : LogNormalDistribution(nullptr, from) {}
  inline LogNormalDistribution(LogNormalDistribution&& from) noexcept
      : LogNormalDistribution(nullptr, std::move(from)) {}
  inline LogNormalDistribution& operator=(const LogNormalDistribution& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogNormalDistribution& operator=(LogNormalDistribution&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogNormalDistribution& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogNormalDistribution* internal_default_instance() {
    return reinterpret_cast<const LogNormalDistribution*>(
        &_LogNormalDistribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(LogNormalDistribution& a, LogNormalDistribution& b) { a.Swap(&b); }
  inline void Swap(LogNormalDistribution* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogNormalDistribution* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogNormalDistribution* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LogNormalDistribution>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogNormalDistribution& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LogNormalDistribution& from) { LogNormalDistribution::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LogNormalDistribution* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.LogNormalDistribution"; }

 protected:
  explicit LogNormalDistribution(::google::protobuf::Arena* arena);
  LogNormalDistribution(::google::protobuf::Arena* arena, const LogNormalDistribution& from);
  LogNormalDistribution(::google::protobuf::Arena* arena, LogNormalDistribution&& from) noexcept
      : LogNormalDistribution(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMuFieldNumber = 1,
    kSigmaFieldNumber = 2,
  };
  // double mu = 1;
  void clear_mu() ;
  double mu() const;
  void set_mu(double value);

  private:
  double _internal_mu() const;
  void _internal_set_mu(double value);

  public:
  // double sigma = 2;
  void clear_sigma() ;
  double sigma() const;
  void set_sigma(double value);

  private:
  double _internal_sigma() const;
  void _internal_set_sigma(double value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.LogNormalDistribution)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LogNormalDistribution& from_msg);
    double mu_;
    double sigma_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT OpInfo_TensorProperties final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.OpInfo.TensorProperties) */ {
 public:
  inline OpInfo_TensorProperties() : OpInfo_TensorProperties(nullptr) {}
  ~OpInfo_TensorProperties() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpInfo_TensorProperties(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpInfo_TensorProperties(const OpInfo_TensorProperties& from) : OpInfo_TensorProperties(nullptr, from) {}
  inline OpInfo_TensorProperties(OpInfo_TensorProperties&& from) noexcept
      : OpInfo_TensorProperties(nullptr, std::move(from)) {}
  inline OpInfo_TensorProperties& operator=(const OpInfo_TensorProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpInfo_TensorProperties& operator=(OpInfo_TensorProperties&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpInfo_TensorProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpInfo_TensorProperties* internal_default_instance() {
    return reinterpret_cast<const OpInfo_TensorProperties*>(
        &_OpInfo_TensorProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(OpInfo_TensorProperties& a, OpInfo_TensorProperties& b) { a.Swap(&b); }
  inline void Swap(OpInfo_TensorProperties* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpInfo_TensorProperties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpInfo_TensorProperties* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OpInfo_TensorProperties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpInfo_TensorProperties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpInfo_TensorProperties& from) { OpInfo_TensorProperties::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpInfo_TensorProperties* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.OpInfo.TensorProperties"; }

 protected:
  explicit OpInfo_TensorProperties(::google::protobuf::Arena* arena);
  OpInfo_TensorProperties(::google::protobuf::Arena* arena, const OpInfo_TensorProperties& from);
  OpInfo_TensorProperties(::google::protobuf::Arena* arena, OpInfo_TensorProperties&& from) noexcept
      : OpInfo_TensorProperties(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShapeFieldNumber = 2,
    kValueFieldNumber = 3,
    kDtypeFieldNumber = 1,
  };
  // .tensorflow.TensorShapeProto shape = 2;
  bool has_shape() const;
  void clear_shape() ;
  const ::tensorflow::TensorShapeProto& shape() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorShapeProto* release_shape();
  ::tensorflow::TensorShapeProto* mutable_shape();
  void set_allocated_shape(::tensorflow::TensorShapeProto* value);
  void unsafe_arena_set_allocated_shape(::tensorflow::TensorShapeProto* value);
  ::tensorflow::TensorShapeProto* unsafe_arena_release_shape();

  private:
  const ::tensorflow::TensorShapeProto& _internal_shape() const;
  ::tensorflow::TensorShapeProto* _internal_mutable_shape();

  public:
  // .tensorflow.TensorProto value = 3;
  bool has_value() const;
  void clear_value() ;
  const ::tensorflow::TensorProto& value() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorProto* release_value();
  ::tensorflow::TensorProto* mutable_value();
  void set_allocated_value(::tensorflow::TensorProto* value);
  void unsafe_arena_set_allocated_value(::tensorflow::TensorProto* value);
  ::tensorflow::TensorProto* unsafe_arena_release_value();

  private:
  const ::tensorflow::TensorProto& _internal_value() const;
  ::tensorflow::TensorProto* _internal_mutable_value();

  public:
  // .tensorflow.DataType dtype = 1;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.OpInfo.TensorProperties)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpInfo_TensorProperties& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::TensorShapeProto* shape_;
    ::tensorflow::TensorProto* value_;
    int dtype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
};
// -------------------------------------------------------------------

class OpInfo_AttrEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          OpInfo_AttrEntry_DoNotUse, std::string, ::tensorflow::AttrValue,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      OpInfo_AttrEntry_DoNotUse, std::string, ::tensorflow::AttrValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  OpInfo_AttrEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpInfo_AttrEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit OpInfo_AttrEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const OpInfo_AttrEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const OpInfo_AttrEntry_DoNotUse*>(
        &_OpInfo_AttrEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      39, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT OpInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.OpInfo) */ {
 public:
  inline OpInfo() : OpInfo(nullptr) {}
  ~OpInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpInfo(const OpInfo& from) : OpInfo(nullptr, from) {}
  inline OpInfo(OpInfo&& from) noexcept
      : OpInfo(nullptr, std::move(from)) {}
  inline OpInfo& operator=(const OpInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpInfo& operator=(OpInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpInfo* internal_default_instance() {
    return reinterpret_cast<const OpInfo*>(
        &_OpInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(OpInfo& a, OpInfo& b) { a.Swap(&b); }
  inline void Swap(OpInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OpInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpInfo& from) { OpInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.OpInfo"; }

 protected:
  explicit OpInfo(::google::protobuf::Arena* arena);
  OpInfo(::google::protobuf::Arena* arena, const OpInfo& from);
  OpInfo(::google::protobuf::Arena* arena, OpInfo&& from) noexcept
      : OpInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TensorProperties = OpInfo_TensorProperties;

  // accessors -------------------------------------------------------
  enum : int {
    kAttrFieldNumber = 2,
    kInputsFieldNumber = 3,
    kOutputsFieldNumber = 5,
    kOpFieldNumber = 1,
    kDeviceFieldNumber = 4,
    kSessionInfoFieldNumber = 6,
  };
  // map<string, .tensorflow.AttrValue> attr = 2;
  int attr_size() const;
  private:
  int _internal_attr_size() const;

  public:
  void clear_attr() ;
  const ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>& attr() const;
  ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>* mutable_attr();

  private:
  const ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>& _internal_attr() const;
  ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>* _internal_mutable_attr();

  public:
  // repeated .tensorflow.OpInfo.TensorProperties inputs = 3;
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;

  public:
  void clear_inputs() ;
  ::tensorflow::OpInfo_TensorProperties* mutable_inputs(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>* mutable_inputs();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>& _internal_inputs() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>* _internal_mutable_inputs();
  public:
  const ::tensorflow::OpInfo_TensorProperties& inputs(int index) const;
  ::tensorflow::OpInfo_TensorProperties* add_inputs();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>& inputs() const;
  // repeated .tensorflow.OpInfo.TensorProperties outputs = 5;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;

  public:
  void clear_outputs() ;
  ::tensorflow::OpInfo_TensorProperties* mutable_outputs(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>* mutable_outputs();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>& _internal_outputs() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>* _internal_mutable_outputs();
  public:
  const ::tensorflow::OpInfo_TensorProperties& outputs(int index) const;
  ::tensorflow::OpInfo_TensorProperties* add_outputs();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>& outputs() const;
  // string op = 1;
  void clear_op() ;
  const std::string& op() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_op(Arg_&& arg, Args_... args);
  std::string* mutable_op();
  PROTOBUF_NODISCARD std::string* release_op();
  void set_allocated_op(std::string* value);

  private:
  const std::string& _internal_op() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_op(
      const std::string& value);
  std::string* _internal_mutable_op();

  public:
  // .tensorflow.DeviceProperties device = 4;
  bool has_device() const;
  void clear_device() ;
  const ::tensorflow::DeviceProperties& device() const;
  PROTOBUF_NODISCARD ::tensorflow::DeviceProperties* release_device();
  ::tensorflow::DeviceProperties* mutable_device();
  void set_allocated_device(::tensorflow::DeviceProperties* value);
  void unsafe_arena_set_allocated_device(::tensorflow::DeviceProperties* value);
  ::tensorflow::DeviceProperties* unsafe_arena_release_device();

  private:
  const ::tensorflow::DeviceProperties& _internal_device() const;
  ::tensorflow::DeviceProperties* _internal_mutable_device();

  public:
  // .tensorflow.SessionInfo session_info = 6;
  bool has_session_info() const;
  void clear_session_info() ;
  const ::tensorflow::SessionInfo& session_info() const;
  PROTOBUF_NODISCARD ::tensorflow::SessionInfo* release_session_info();
  ::tensorflow::SessionInfo* mutable_session_info();
  void set_allocated_session_info(::tensorflow::SessionInfo* value);
  void unsafe_arena_set_allocated_session_info(::tensorflow::SessionInfo* value);
  ::tensorflow::SessionInfo* unsafe_arena_release_session_info();

  private:
  const ::tensorflow::SessionInfo& _internal_session_info() const;
  ::tensorflow::SessionInfo* _internal_mutable_session_info();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.OpInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 6,
      32, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<OpInfo_AttrEntry_DoNotUse, std::string, ::tensorflow::AttrValue,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        attr_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::OpInfo_TensorProperties > inputs_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::OpInfo_TensorProperties > outputs_;
    ::google::protobuf::internal::ArenaStringPtr op_;
    ::tensorflow::DeviceProperties* device_;
    ::tensorflow::SessionInfo* session_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT OpPerformance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.OpPerformance) */ {
 public:
  inline OpPerformance() : OpPerformance(nullptr) {}
  ~OpPerformance() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpPerformance(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpPerformance(const OpPerformance& from) : OpPerformance(nullptr, from) {}
  inline OpPerformance(OpPerformance&& from) noexcept
      : OpPerformance(nullptr, std::move(from)) {}
  inline OpPerformance& operator=(const OpPerformance& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpPerformance& operator=(OpPerformance&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpPerformance& default_instance() {
    return *internal_default_instance();
  }
  enum ExecutionTimeCase {
    kExecutionTimeNormal = 10,
    kExecutionTimeLogNormal = 11,
    EXECUTION_TIME_NOT_SET = 0,
  };
  static inline const OpPerformance* internal_default_instance() {
    return reinterpret_cast<const OpPerformance*>(
        &_OpPerformance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(OpPerformance& a, OpPerformance& b) { a.Swap(&b); }
  inline void Swap(OpPerformance* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpPerformance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpPerformance* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OpPerformance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpPerformance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpPerformance& from) { OpPerformance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpPerformance* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.OpPerformance"; }

 protected:
  explicit OpPerformance(::google::protobuf::Arena* arena);
  OpPerformance(::google::protobuf::Arena* arena, const OpPerformance& from);
  OpPerformance(::google::protobuf::Arena* arena, OpPerformance&& from) noexcept
      : OpPerformance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using OpMemory = OpPerformance_OpMemory;

  // accessors -------------------------------------------------------
  enum : int {
    kNodeFieldNumber = 5,
    kOpFieldNumber = 1,
    kOpMemoryFieldNumber = 9,
    kSessionInfoFieldNumber = 12,
    kTemporaryMemorySizeFieldNumber = 2,
    kComputeCostFieldNumber = 3,
    kComputeEfficiencyFieldNumber = 4,
    kComputeTimeFieldNumber = 6,
    kMemoryTimeFieldNumber = 7,
    kMemoryEfficiencyFieldNumber = 8,
    kExecutionTimeNormalFieldNumber = 10,
    kExecutionTimeLogNormalFieldNumber = 11,
  };
  // string node = 5;
  void clear_node() ;
  const std::string& node() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node(Arg_&& arg, Args_... args);
  std::string* mutable_node();
  PROTOBUF_NODISCARD std::string* release_node();
  void set_allocated_node(std::string* value);

  private:
  const std::string& _internal_node() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node(
      const std::string& value);
  std::string* _internal_mutable_node();

  public:
  // .tensorflow.OpInfo op = 1;
  bool has_op() const;
  void clear_op() ;
  const ::tensorflow::OpInfo& op() const;
  PROTOBUF_NODISCARD ::tensorflow::OpInfo* release_op();
  ::tensorflow::OpInfo* mutable_op();
  void set_allocated_op(::tensorflow::OpInfo* value);
  void unsafe_arena_set_allocated_op(::tensorflow::OpInfo* value);
  ::tensorflow::OpInfo* unsafe_arena_release_op();

  private:
  const ::tensorflow::OpInfo& _internal_op() const;
  ::tensorflow::OpInfo* _internal_mutable_op();

  public:
  // .tensorflow.OpPerformance.OpMemory op_memory = 9;
  bool has_op_memory() const;
  void clear_op_memory() ;
  const ::tensorflow::OpPerformance_OpMemory& op_memory() const;
  PROTOBUF_NODISCARD ::tensorflow::OpPerformance_OpMemory* release_op_memory();
  ::tensorflow::OpPerformance_OpMemory* mutable_op_memory();
  void set_allocated_op_memory(::tensorflow::OpPerformance_OpMemory* value);
  void unsafe_arena_set_allocated_op_memory(::tensorflow::OpPerformance_OpMemory* value);
  ::tensorflow::OpPerformance_OpMemory* unsafe_arena_release_op_memory();

  private:
  const ::tensorflow::OpPerformance_OpMemory& _internal_op_memory() const;
  ::tensorflow::OpPerformance_OpMemory* _internal_mutable_op_memory();

  public:
  // .tensorflow.SessionInfo session_info = 12 [deprecated = true];
  [[deprecated]]  bool has_session_info() const;
  [[deprecated]]  void clear_session_info() ;
  [[deprecated]] const ::tensorflow::SessionInfo& session_info() const;
  [[deprecated]] PROTOBUF_NODISCARD ::tensorflow::SessionInfo* release_session_info();
  [[deprecated]] ::tensorflow::SessionInfo* mutable_session_info();
  [[deprecated]] void set_allocated_session_info(::tensorflow::SessionInfo* value);
  [[deprecated]] void unsafe_arena_set_allocated_session_info(::tensorflow::SessionInfo* value);
  [[deprecated]] ::tensorflow::SessionInfo* unsafe_arena_release_session_info();

  private:
  const ::tensorflow::SessionInfo& _internal_session_info() const;
  ::tensorflow::SessionInfo* _internal_mutable_session_info();

  public:
  // int64 temporary_memory_size = 2;
  void clear_temporary_memory_size() ;
  ::int64_t temporary_memory_size() const;
  void set_temporary_memory_size(::int64_t value);

  private:
  ::int64_t _internal_temporary_memory_size() const;
  void _internal_set_temporary_memory_size(::int64_t value);

  public:
  // int64 compute_cost = 3;
  void clear_compute_cost() ;
  ::int64_t compute_cost() const;
  void set_compute_cost(::int64_t value);

  private:
  ::int64_t _internal_compute_cost() const;
  void _internal_set_compute_cost(::int64_t value);

  public:
  // double compute_efficiency = 4;
  void clear_compute_efficiency() ;
  double compute_efficiency() const;
  void set_compute_efficiency(double value);

  private:
  double _internal_compute_efficiency() const;
  void _internal_set_compute_efficiency(double value);

  public:
  // int64 compute_time = 6;
  void clear_compute_time() ;
  ::int64_t compute_time() const;
  void set_compute_time(::int64_t value);

  private:
  ::int64_t _internal_compute_time() const;
  void _internal_set_compute_time(::int64_t value);

  public:
  // int64 memory_time = 7;
  void clear_memory_time() ;
  ::int64_t memory_time() const;
  void set_memory_time(::int64_t value);

  private:
  ::int64_t _internal_memory_time() const;
  void _internal_set_memory_time(::int64_t value);

  public:
  // double memory_efficiency = 8;
  void clear_memory_efficiency() ;
  double memory_efficiency() const;
  void set_memory_efficiency(double value);

  private:
  double _internal_memory_efficiency() const;
  void _internal_set_memory_efficiency(double value);

  public:
  // .tensorflow.NormalDistribution execution_time_normal = 10;
  bool has_execution_time_normal() const;
  private:
  bool _internal_has_execution_time_normal() const;

  public:
  void clear_execution_time_normal() ;
  const ::tensorflow::NormalDistribution& execution_time_normal() const;
  PROTOBUF_NODISCARD ::tensorflow::NormalDistribution* release_execution_time_normal();
  ::tensorflow::NormalDistribution* mutable_execution_time_normal();
  void set_allocated_execution_time_normal(::tensorflow::NormalDistribution* value);
  void unsafe_arena_set_allocated_execution_time_normal(::tensorflow::NormalDistribution* value);
  ::tensorflow::NormalDistribution* unsafe_arena_release_execution_time_normal();

  private:
  const ::tensorflow::NormalDistribution& _internal_execution_time_normal() const;
  ::tensorflow::NormalDistribution* _internal_mutable_execution_time_normal();

  public:
  // .tensorflow.LogNormalDistribution execution_time_log_normal = 11;
  bool has_execution_time_log_normal() const;
  private:
  bool _internal_has_execution_time_log_normal() const;

  public:
  void clear_execution_time_log_normal() ;
  const ::tensorflow::LogNormalDistribution& execution_time_log_normal() const;
  PROTOBUF_NODISCARD ::tensorflow::LogNormalDistribution* release_execution_time_log_normal();
  ::tensorflow::LogNormalDistribution* mutable_execution_time_log_normal();
  void set_allocated_execution_time_log_normal(::tensorflow::LogNormalDistribution* value);
  void unsafe_arena_set_allocated_execution_time_log_normal(::tensorflow::LogNormalDistribution* value);
  ::tensorflow::LogNormalDistribution* unsafe_arena_release_execution_time_log_normal();

  private:
  const ::tensorflow::LogNormalDistribution& _internal_execution_time_log_normal() const;
  ::tensorflow::LogNormalDistribution* _internal_mutable_execution_time_log_normal();

  public:
  void clear_execution_time();
  ExecutionTimeCase execution_time_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.OpPerformance)
 private:
  class _Internal;
  void set_has_execution_time_normal();
  void set_has_execution_time_log_normal();
  inline bool has_execution_time() const;
  inline void clear_has_execution_time();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 5,
      45, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpPerformance& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr node_;
    ::tensorflow::OpInfo* op_;
    ::tensorflow::OpPerformance_OpMemory* op_memory_;
    ::tensorflow::SessionInfo* session_info_;
    ::int64_t temporary_memory_size_;
    ::int64_t compute_cost_;
    double compute_efficiency_;
    ::int64_t compute_time_;
    ::int64_t memory_time_;
    double memory_efficiency_;
    union ExecutionTimeUnion {
      constexpr ExecutionTimeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tensorflow::NormalDistribution* execution_time_normal_;
      ::tensorflow::LogNormalDistribution* execution_time_log_normal_;
    } execution_time_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT OpPerformanceList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.OpPerformanceList) */ {
 public:
  inline OpPerformanceList() : OpPerformanceList(nullptr) {}
  ~OpPerformanceList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpPerformanceList(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpPerformanceList(const OpPerformanceList& from) : OpPerformanceList(nullptr, from) {}
  inline OpPerformanceList(OpPerformanceList&& from) noexcept
      : OpPerformanceList(nullptr, std::move(from)) {}
  inline OpPerformanceList& operator=(const OpPerformanceList& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpPerformanceList& operator=(OpPerformanceList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpPerformanceList& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpPerformanceList* internal_default_instance() {
    return reinterpret_cast<const OpPerformanceList*>(
        &_OpPerformanceList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(OpPerformanceList& a, OpPerformanceList& b) { a.Swap(&b); }
  inline void Swap(OpPerformanceList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpPerformanceList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpPerformanceList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OpPerformanceList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpPerformanceList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpPerformanceList& from) { OpPerformanceList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpPerformanceList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.OpPerformanceList"; }

 protected:
  explicit OpPerformanceList(::google::protobuf::Arena* arena);
  OpPerformanceList(::google::protobuf::Arena* arena, const OpPerformanceList& from);
  OpPerformanceList(::google::protobuf::Arena* arena, OpPerformanceList&& from) noexcept
      : OpPerformanceList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOpPerformanceFieldNumber = 1,
  };
  // repeated .tensorflow.OpPerformance op_performance = 1;
  int op_performance_size() const;
  private:
  int _internal_op_performance_size() const;

  public:
  void clear_op_performance() ;
  ::tensorflow::OpPerformance* mutable_op_performance(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::OpPerformance>* mutable_op_performance();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::OpPerformance>& _internal_op_performance() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::OpPerformance>* _internal_mutable_op_performance();
  public:
  const ::tensorflow::OpPerformance& op_performance(int index) const;
  ::tensorflow::OpPerformance* add_op_performance();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::OpPerformance>& op_performance() const;
  // @@protoc_insertion_point(class_scope:tensorflow.OpPerformanceList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpPerformanceList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::OpPerformance > op_performance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SessionInfo

// int64 intra_op_parallelism = 1;
inline void SessionInfo::clear_intra_op_parallelism() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.intra_op_parallelism_ = ::int64_t{0};
}
inline ::int64_t SessionInfo::intra_op_parallelism() const {
  // @@protoc_insertion_point(field_get:tensorflow.SessionInfo.intra_op_parallelism)
  return _internal_intra_op_parallelism();
}
inline void SessionInfo::set_intra_op_parallelism(::int64_t value) {
  _internal_set_intra_op_parallelism(value);
  // @@protoc_insertion_point(field_set:tensorflow.SessionInfo.intra_op_parallelism)
}
inline ::int64_t SessionInfo::_internal_intra_op_parallelism() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.intra_op_parallelism_;
}
inline void SessionInfo::_internal_set_intra_op_parallelism(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.intra_op_parallelism_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OpInfo_TensorProperties

// .tensorflow.DataType dtype = 1;
inline void OpInfo_TensorProperties::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
}
inline ::tensorflow::DataType OpInfo_TensorProperties::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpInfo.TensorProperties.dtype)
  return _internal_dtype();
}
inline void OpInfo_TensorProperties::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpInfo.TensorProperties.dtype)
}
inline ::tensorflow::DataType OpInfo_TensorProperties::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void OpInfo_TensorProperties::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// .tensorflow.TensorShapeProto shape = 2;
inline bool OpInfo_TensorProperties::has_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shape_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorShapeProto& OpInfo_TensorProperties::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorShapeProto* p = _impl_.shape_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorShapeProto&>(::tensorflow::_TensorShapeProto_default_instance_);
}
inline const ::tensorflow::TensorShapeProto& OpInfo_TensorProperties::shape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpInfo.TensorProperties.shape)
  return _internal_shape();
}
inline void OpInfo_TensorProperties::unsafe_arena_set_allocated_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }
  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpInfo.TensorProperties.shape)
}
inline ::tensorflow::TensorShapeProto* OpInfo_TensorProperties::release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* released = _impl_.shape_;
  _impl_.shape_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TensorShapeProto* OpInfo_TensorProperties::unsafe_arena_release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpInfo.TensorProperties.shape)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* temp = _impl_.shape_;
  _impl_.shape_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorShapeProto* OpInfo_TensorProperties::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorShapeProto>(GetArena());
    _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(p);
  }
  return _impl_.shape_;
}
inline ::tensorflow::TensorShapeProto* OpInfo_TensorProperties::mutable_shape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TensorShapeProto* _msg = _internal_mutable_shape();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpInfo.TensorProperties.shape)
  return _msg;
}
inline void OpInfo_TensorProperties::set_allocated_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpInfo.TensorProperties.shape)
}

// .tensorflow.TensorProto value = 3;
inline bool OpInfo_TensorProperties::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorProto& OpInfo_TensorProperties::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorProto* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorProto&>(::tensorflow::_TensorProto_default_instance_);
}
inline const ::tensorflow::TensorProto& OpInfo_TensorProperties::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpInfo.TensorProperties.value)
  return _internal_value();
}
inline void OpInfo_TensorProperties::unsafe_arena_set_allocated_value(::tensorflow::TensorProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::tensorflow::TensorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpInfo.TensorProperties.value)
}
inline ::tensorflow::TensorProto* OpInfo_TensorProperties::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::TensorProto* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TensorProto* OpInfo_TensorProperties::unsafe_arena_release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpInfo.TensorProperties.value)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::TensorProto* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorProto* OpInfo_TensorProperties::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.value_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorProto>(GetArena());
    _impl_.value_ = reinterpret_cast<::tensorflow::TensorProto*>(p);
  }
  return _impl_.value_;
}
inline ::tensorflow::TensorProto* OpInfo_TensorProperties::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::TensorProto* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpInfo.TensorProperties.value)
  return _msg;
}
inline void OpInfo_TensorProperties::set_allocated_value(::tensorflow::TensorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.value_ = reinterpret_cast<::tensorflow::TensorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpInfo.TensorProperties.value)
}

// -------------------------------------------------------------------

// OpInfo

// string op = 1;
inline void OpInfo::clear_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_.ClearToEmpty();
}
inline const std::string& OpInfo::op() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpInfo.op)
  return _internal_op();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpInfo::set_op(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.OpInfo.op)
}
inline std::string* OpInfo::mutable_op() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_op();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpInfo.op)
  return _s;
}
inline const std::string& OpInfo::_internal_op() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_.Get();
}
inline void OpInfo::_internal_set_op(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_.Set(value, GetArena());
}
inline std::string* OpInfo::_internal_mutable_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.op_.Mutable( GetArena());
}
inline std::string* OpInfo::release_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpInfo.op)
  return _impl_.op_.Release();
}
inline void OpInfo::set_allocated_op(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.op_.IsDefault()) {
          _impl_.op_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpInfo.op)
}

// map<string, .tensorflow.AttrValue> attr = 2;
inline int OpInfo::_internal_attr_size() const {
  return _internal_attr().size();
}
inline int OpInfo::attr_size() const {
  return _internal_attr_size();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>& OpInfo::_internal_attr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attr_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>& OpInfo::attr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.OpInfo.attr)
  return _internal_attr();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>* OpInfo::_internal_mutable_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attr_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>* OpInfo::mutable_attr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.OpInfo.attr)
  return _internal_mutable_attr();
}

// repeated .tensorflow.OpInfo.TensorProperties inputs = 3;
inline int OpInfo::_internal_inputs_size() const {
  return _internal_inputs().size();
}
inline int OpInfo::inputs_size() const {
  return _internal_inputs_size();
}
inline void OpInfo::clear_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputs_.Clear();
}
inline ::tensorflow::OpInfo_TensorProperties* OpInfo::mutable_inputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.OpInfo.inputs)
  return _internal_mutable_inputs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>* OpInfo::mutable_inputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.OpInfo.inputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_inputs();
}
inline const ::tensorflow::OpInfo_TensorProperties& OpInfo::inputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpInfo.inputs)
  return _internal_inputs().Get(index);
}
inline ::tensorflow::OpInfo_TensorProperties* OpInfo::add_inputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::OpInfo_TensorProperties* _add = _internal_mutable_inputs()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.OpInfo.inputs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>& OpInfo::inputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.OpInfo.inputs)
  return _internal_inputs();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>&
OpInfo::_internal_inputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inputs_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>*
OpInfo::_internal_mutable_inputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.inputs_;
}

// repeated .tensorflow.OpInfo.TensorProperties outputs = 5;
inline int OpInfo::_internal_outputs_size() const {
  return _internal_outputs().size();
}
inline int OpInfo::outputs_size() const {
  return _internal_outputs_size();
}
inline void OpInfo::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
inline ::tensorflow::OpInfo_TensorProperties* OpInfo::mutable_outputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.OpInfo.outputs)
  return _internal_mutable_outputs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>* OpInfo::mutable_outputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.OpInfo.outputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_outputs();
}
inline const ::tensorflow::OpInfo_TensorProperties& OpInfo::outputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpInfo.outputs)
  return _internal_outputs().Get(index);
}
inline ::tensorflow::OpInfo_TensorProperties* OpInfo::add_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::OpInfo_TensorProperties* _add = _internal_mutable_outputs()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.OpInfo.outputs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>& OpInfo::outputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.OpInfo.outputs)
  return _internal_outputs();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>&
OpInfo::_internal_outputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outputs_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::OpInfo_TensorProperties>*
OpInfo::_internal_mutable_outputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.outputs_;
}

// .tensorflow.DeviceProperties device = 4;
inline bool OpInfo::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline const ::tensorflow::DeviceProperties& OpInfo::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::DeviceProperties* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::DeviceProperties&>(::tensorflow::_DeviceProperties_default_instance_);
}
inline const ::tensorflow::DeviceProperties& OpInfo::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpInfo.device)
  return _internal_device();
}
inline void OpInfo::unsafe_arena_set_allocated_device(::tensorflow::DeviceProperties* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::tensorflow::DeviceProperties*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpInfo.device)
}
inline ::tensorflow::DeviceProperties* OpInfo::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceProperties* released = _impl_.device_;
  _impl_.device_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::DeviceProperties* OpInfo::unsafe_arena_release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpInfo.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceProperties* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::tensorflow::DeviceProperties* OpInfo::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::DeviceProperties>(GetArena());
    _impl_.device_ = reinterpret_cast<::tensorflow::DeviceProperties*>(p);
  }
  return _impl_.device_;
}
inline ::tensorflow::DeviceProperties* OpInfo::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::DeviceProperties* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpInfo.device)
  return _msg;
}
inline void OpInfo::set_allocated_device(::tensorflow::DeviceProperties* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::tensorflow::DeviceProperties*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpInfo.device)
}

// .tensorflow.SessionInfo session_info = 6;
inline bool OpInfo::has_session_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.session_info_ != nullptr);
  return value;
}
inline void OpInfo::clear_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::tensorflow::SessionInfo& OpInfo::_internal_session_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::SessionInfo* p = _impl_.session_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::SessionInfo&>(::tensorflow::_SessionInfo_default_instance_);
}
inline const ::tensorflow::SessionInfo& OpInfo::session_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpInfo.session_info)
  return _internal_session_info();
}
inline void OpInfo::unsafe_arena_set_allocated_session_info(::tensorflow::SessionInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_info_);
  }
  _impl_.session_info_ = reinterpret_cast<::tensorflow::SessionInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpInfo.session_info)
}
inline ::tensorflow::SessionInfo* OpInfo::release_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::SessionInfo* released = _impl_.session_info_;
  _impl_.session_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::SessionInfo* OpInfo::unsafe_arena_release_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpInfo.session_info)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::SessionInfo* temp = _impl_.session_info_;
  _impl_.session_info_ = nullptr;
  return temp;
}
inline ::tensorflow::SessionInfo* OpInfo::_internal_mutable_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::SessionInfo>(GetArena());
    _impl_.session_info_ = reinterpret_cast<::tensorflow::SessionInfo*>(p);
  }
  return _impl_.session_info_;
}
inline ::tensorflow::SessionInfo* OpInfo::mutable_session_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::SessionInfo* _msg = _internal_mutable_session_info();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpInfo.session_info)
  return _msg;
}
inline void OpInfo::set_allocated_session_info(::tensorflow::SessionInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.session_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.session_info_ = reinterpret_cast<::tensorflow::SessionInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpInfo.session_info)
}

// -------------------------------------------------------------------

// NormalDistribution

// double mu = 1;
inline void NormalDistribution::clear_mu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mu_ = 0;
}
inline double NormalDistribution::mu() const {
  // @@protoc_insertion_point(field_get:tensorflow.NormalDistribution.mu)
  return _internal_mu();
}
inline void NormalDistribution::set_mu(double value) {
  _internal_set_mu(value);
  // @@protoc_insertion_point(field_set:tensorflow.NormalDistribution.mu)
}
inline double NormalDistribution::_internal_mu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mu_;
}
inline void NormalDistribution::_internal_set_mu(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mu_ = value;
}

// double sigma = 2;
inline void NormalDistribution::clear_sigma() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sigma_ = 0;
}
inline double NormalDistribution::sigma() const {
  // @@protoc_insertion_point(field_get:tensorflow.NormalDistribution.sigma)
  return _internal_sigma();
}
inline void NormalDistribution::set_sigma(double value) {
  _internal_set_sigma(value);
  // @@protoc_insertion_point(field_set:tensorflow.NormalDistribution.sigma)
}
inline double NormalDistribution::_internal_sigma() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sigma_;
}
inline void NormalDistribution::_internal_set_sigma(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sigma_ = value;
}

// -------------------------------------------------------------------

// LogNormalDistribution

// double mu = 1;
inline void LogNormalDistribution::clear_mu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mu_ = 0;
}
inline double LogNormalDistribution::mu() const {
  // @@protoc_insertion_point(field_get:tensorflow.LogNormalDistribution.mu)
  return _internal_mu();
}
inline void LogNormalDistribution::set_mu(double value) {
  _internal_set_mu(value);
  // @@protoc_insertion_point(field_set:tensorflow.LogNormalDistribution.mu)
}
inline double LogNormalDistribution::_internal_mu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mu_;
}
inline void LogNormalDistribution::_internal_set_mu(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mu_ = value;
}

// double sigma = 2;
inline void LogNormalDistribution::clear_sigma() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sigma_ = 0;
}
inline double LogNormalDistribution::sigma() const {
  // @@protoc_insertion_point(field_get:tensorflow.LogNormalDistribution.sigma)
  return _internal_sigma();
}
inline void LogNormalDistribution::set_sigma(double value) {
  _internal_set_sigma(value);
  // @@protoc_insertion_point(field_set:tensorflow.LogNormalDistribution.sigma)
}
inline double LogNormalDistribution::_internal_sigma() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sigma_;
}
inline void LogNormalDistribution::_internal_set_sigma(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sigma_ = value;
}

// -------------------------------------------------------------------

// OpPerformance_OpMemory

// repeated int64 output_memory = 1;
inline int OpPerformance_OpMemory::_internal_output_memory_size() const {
  return _internal_output_memory().size();
}
inline int OpPerformance_OpMemory::output_memory_size() const {
  return _internal_output_memory_size();
}
inline void OpPerformance_OpMemory::clear_output_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_memory_.Clear();
}
inline ::int64_t OpPerformance_OpMemory::output_memory(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.OpMemory.output_memory)
  return _internal_output_memory().Get(index);
}
inline void OpPerformance_OpMemory::set_output_memory(int index, ::int64_t value) {
  _internal_mutable_output_memory()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.OpMemory.output_memory)
}
inline void OpPerformance_OpMemory::add_output_memory(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_output_memory()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.OpPerformance.OpMemory.output_memory)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& OpPerformance_OpMemory::output_memory() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.OpPerformance.OpMemory.output_memory)
  return _internal_output_memory();
}
inline ::google::protobuf::RepeatedField<::int64_t>* OpPerformance_OpMemory::mutable_output_memory()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.OpPerformance.OpMemory.output_memory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_output_memory();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
OpPerformance_OpMemory::_internal_output_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_memory_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* OpPerformance_OpMemory::_internal_mutable_output_memory() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.output_memory_;
}

// int64 temp_memory = 2;
inline void OpPerformance_OpMemory::clear_temp_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temp_memory_ = ::int64_t{0};
}
inline ::int64_t OpPerformance_OpMemory::temp_memory() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.OpMemory.temp_memory)
  return _internal_temp_memory();
}
inline void OpPerformance_OpMemory::set_temp_memory(::int64_t value) {
  _internal_set_temp_memory(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.OpMemory.temp_memory)
}
inline ::int64_t OpPerformance_OpMemory::_internal_temp_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.temp_memory_;
}
inline void OpPerformance_OpMemory::_internal_set_temp_memory(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temp_memory_ = value;
}

// int64 persistent_memory = 4;
inline void OpPerformance_OpMemory::clear_persistent_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persistent_memory_ = ::int64_t{0};
}
inline ::int64_t OpPerformance_OpMemory::persistent_memory() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.OpMemory.persistent_memory)
  return _internal_persistent_memory();
}
inline void OpPerformance_OpMemory::set_persistent_memory(::int64_t value) {
  _internal_set_persistent_memory(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.OpMemory.persistent_memory)
}
inline ::int64_t OpPerformance_OpMemory::_internal_persistent_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.persistent_memory_;
}
inline void OpPerformance_OpMemory::_internal_set_persistent_memory(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persistent_memory_ = value;
}

// int64 device_temp_memory = 3 [deprecated = true];
inline void OpPerformance_OpMemory::clear_device_temp_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_temp_memory_ = ::int64_t{0};
}
inline ::int64_t OpPerformance_OpMemory::device_temp_memory() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.OpMemory.device_temp_memory)
  return _internal_device_temp_memory();
}
inline void OpPerformance_OpMemory::set_device_temp_memory(::int64_t value) {
  _internal_set_device_temp_memory(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.OpMemory.device_temp_memory)
}
inline ::int64_t OpPerformance_OpMemory::_internal_device_temp_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_temp_memory_;
}
inline void OpPerformance_OpMemory::_internal_set_device_temp_memory(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_temp_memory_ = value;
}

// int64 device_persistent_memory = 5 [deprecated = true];
inline void OpPerformance_OpMemory::clear_device_persistent_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_persistent_memory_ = ::int64_t{0};
}
inline ::int64_t OpPerformance_OpMemory::device_persistent_memory() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.OpMemory.device_persistent_memory)
  return _internal_device_persistent_memory();
}
inline void OpPerformance_OpMemory::set_device_persistent_memory(::int64_t value) {
  _internal_set_device_persistent_memory(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.OpMemory.device_persistent_memory)
}
inline ::int64_t OpPerformance_OpMemory::_internal_device_persistent_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_persistent_memory_;
}
inline void OpPerformance_OpMemory::_internal_set_device_persistent_memory(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_persistent_memory_ = value;
}

// -------------------------------------------------------------------

// OpPerformance

// .tensorflow.OpInfo op = 1;
inline bool OpPerformance::has_op() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.op_ != nullptr);
  return value;
}
inline void OpPerformance::clear_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.op_ != nullptr) _impl_.op_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::OpInfo& OpPerformance::_internal_op() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::OpInfo* p = _impl_.op_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::OpInfo&>(::tensorflow::_OpInfo_default_instance_);
}
inline const ::tensorflow::OpInfo& OpPerformance::op() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.op)
  return _internal_op();
}
inline void OpPerformance::unsafe_arena_set_allocated_op(::tensorflow::OpInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.op_);
  }
  _impl_.op_ = reinterpret_cast<::tensorflow::OpInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpPerformance.op)
}
inline ::tensorflow::OpInfo* OpPerformance::release_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::OpInfo* released = _impl_.op_;
  _impl_.op_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::OpInfo* OpPerformance::unsafe_arena_release_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpPerformance.op)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::OpInfo* temp = _impl_.op_;
  _impl_.op_ = nullptr;
  return temp;
}
inline ::tensorflow::OpInfo* OpPerformance::_internal_mutable_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.op_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::OpInfo>(GetArena());
    _impl_.op_ = reinterpret_cast<::tensorflow::OpInfo*>(p);
  }
  return _impl_.op_;
}
inline ::tensorflow::OpInfo* OpPerformance::mutable_op() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::OpInfo* _msg = _internal_mutable_op();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpPerformance.op)
  return _msg;
}
inline void OpPerformance::set_allocated_op(::tensorflow::OpInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.op_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.op_ = reinterpret_cast<::tensorflow::OpInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpPerformance.op)
}

// .tensorflow.SessionInfo session_info = 12 [deprecated = true];
inline bool OpPerformance::has_session_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.session_info_ != nullptr);
  return value;
}
inline void OpPerformance::clear_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::tensorflow::SessionInfo& OpPerformance::_internal_session_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::SessionInfo* p = _impl_.session_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::SessionInfo&>(::tensorflow::_SessionInfo_default_instance_);
}
inline const ::tensorflow::SessionInfo& OpPerformance::session_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.session_info)
  return _internal_session_info();
}
inline void OpPerformance::unsafe_arena_set_allocated_session_info(::tensorflow::SessionInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_info_);
  }
  _impl_.session_info_ = reinterpret_cast<::tensorflow::SessionInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpPerformance.session_info)
}
inline ::tensorflow::SessionInfo* OpPerformance::release_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tensorflow::SessionInfo* released = _impl_.session_info_;
  _impl_.session_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::SessionInfo* OpPerformance::unsafe_arena_release_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpPerformance.session_info)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tensorflow::SessionInfo* temp = _impl_.session_info_;
  _impl_.session_info_ = nullptr;
  return temp;
}
inline ::tensorflow::SessionInfo* OpPerformance::_internal_mutable_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::SessionInfo>(GetArena());
    _impl_.session_info_ = reinterpret_cast<::tensorflow::SessionInfo*>(p);
  }
  return _impl_.session_info_;
}
inline ::tensorflow::SessionInfo* OpPerformance::mutable_session_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tensorflow::SessionInfo* _msg = _internal_mutable_session_info();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpPerformance.session_info)
  return _msg;
}
inline void OpPerformance::set_allocated_session_info(::tensorflow::SessionInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.session_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.session_info_ = reinterpret_cast<::tensorflow::SessionInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpPerformance.session_info)
}

// string node = 5;
inline void OpPerformance::clear_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_.ClearToEmpty();
}
inline const std::string& OpPerformance::node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.node)
  return _internal_node();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpPerformance::set_node(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.node)
}
inline std::string* OpPerformance::mutable_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpPerformance.node)
  return _s;
}
inline const std::string& OpPerformance::_internal_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_.Get();
}
inline void OpPerformance::_internal_set_node(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_.Set(value, GetArena());
}
inline std::string* OpPerformance::_internal_mutable_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_.Mutable( GetArena());
}
inline std::string* OpPerformance::release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpPerformance.node)
  return _impl_.node_.Release();
}
inline void OpPerformance::set_allocated_node(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_.IsDefault()) {
          _impl_.node_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpPerformance.node)
}

// int64 temporary_memory_size = 2;
inline void OpPerformance::clear_temporary_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temporary_memory_size_ = ::int64_t{0};
}
inline ::int64_t OpPerformance::temporary_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.temporary_memory_size)
  return _internal_temporary_memory_size();
}
inline void OpPerformance::set_temporary_memory_size(::int64_t value) {
  _internal_set_temporary_memory_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.temporary_memory_size)
}
inline ::int64_t OpPerformance::_internal_temporary_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.temporary_memory_size_;
}
inline void OpPerformance::_internal_set_temporary_memory_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temporary_memory_size_ = value;
}

// int64 compute_cost = 3;
inline void OpPerformance::clear_compute_cost() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_cost_ = ::int64_t{0};
}
inline ::int64_t OpPerformance::compute_cost() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.compute_cost)
  return _internal_compute_cost();
}
inline void OpPerformance::set_compute_cost(::int64_t value) {
  _internal_set_compute_cost(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.compute_cost)
}
inline ::int64_t OpPerformance::_internal_compute_cost() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compute_cost_;
}
inline void OpPerformance::_internal_set_compute_cost(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_cost_ = value;
}

// int64 compute_time = 6;
inline void OpPerformance::clear_compute_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_time_ = ::int64_t{0};
}
inline ::int64_t OpPerformance::compute_time() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.compute_time)
  return _internal_compute_time();
}
inline void OpPerformance::set_compute_time(::int64_t value) {
  _internal_set_compute_time(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.compute_time)
}
inline ::int64_t OpPerformance::_internal_compute_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compute_time_;
}
inline void OpPerformance::_internal_set_compute_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_time_ = value;
}

// int64 memory_time = 7;
inline void OpPerformance::clear_memory_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_time_ = ::int64_t{0};
}
inline ::int64_t OpPerformance::memory_time() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.memory_time)
  return _internal_memory_time();
}
inline void OpPerformance::set_memory_time(::int64_t value) {
  _internal_set_memory_time(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.memory_time)
}
inline ::int64_t OpPerformance::_internal_memory_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_time_;
}
inline void OpPerformance::_internal_set_memory_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_time_ = value;
}

// double compute_efficiency = 4;
inline void OpPerformance::clear_compute_efficiency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_efficiency_ = 0;
}
inline double OpPerformance::compute_efficiency() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.compute_efficiency)
  return _internal_compute_efficiency();
}
inline void OpPerformance::set_compute_efficiency(double value) {
  _internal_set_compute_efficiency(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.compute_efficiency)
}
inline double OpPerformance::_internal_compute_efficiency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compute_efficiency_;
}
inline void OpPerformance::_internal_set_compute_efficiency(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compute_efficiency_ = value;
}

// double memory_efficiency = 8;
inline void OpPerformance::clear_memory_efficiency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_efficiency_ = 0;
}
inline double OpPerformance::memory_efficiency() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.memory_efficiency)
  return _internal_memory_efficiency();
}
inline void OpPerformance::set_memory_efficiency(double value) {
  _internal_set_memory_efficiency(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpPerformance.memory_efficiency)
}
inline double OpPerformance::_internal_memory_efficiency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_efficiency_;
}
inline void OpPerformance::_internal_set_memory_efficiency(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_efficiency_ = value;
}

// .tensorflow.NormalDistribution execution_time_normal = 10;
inline bool OpPerformance::has_execution_time_normal() const {
  return execution_time_case() == kExecutionTimeNormal;
}
inline bool OpPerformance::_internal_has_execution_time_normal() const {
  return execution_time_case() == kExecutionTimeNormal;
}
inline void OpPerformance::set_has_execution_time_normal() {
  _impl_._oneof_case_[0] = kExecutionTimeNormal;
}
inline void OpPerformance::clear_execution_time_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (execution_time_case() == kExecutionTimeNormal) {
    if (GetArena() == nullptr) {
      delete _impl_.execution_time_.execution_time_normal_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.execution_time_.execution_time_normal_);
    }
    clear_has_execution_time();
  }
}
inline ::tensorflow::NormalDistribution* OpPerformance::release_execution_time_normal() {
  // @@protoc_insertion_point(field_release:tensorflow.OpPerformance.execution_time_normal)
  if (execution_time_case() == kExecutionTimeNormal) {
    clear_has_execution_time();
    auto* temp = _impl_.execution_time_.execution_time_normal_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.execution_time_.execution_time_normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::NormalDistribution& OpPerformance::_internal_execution_time_normal() const {
  return execution_time_case() == kExecutionTimeNormal ? *_impl_.execution_time_.execution_time_normal_ : reinterpret_cast<::tensorflow::NormalDistribution&>(::tensorflow::_NormalDistribution_default_instance_);
}
inline const ::tensorflow::NormalDistribution& OpPerformance::execution_time_normal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.execution_time_normal)
  return _internal_execution_time_normal();
}
inline ::tensorflow::NormalDistribution* OpPerformance::unsafe_arena_release_execution_time_normal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.OpPerformance.execution_time_normal)
  if (execution_time_case() == kExecutionTimeNormal) {
    clear_has_execution_time();
    auto* temp = _impl_.execution_time_.execution_time_normal_;
    _impl_.execution_time_.execution_time_normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OpPerformance::unsafe_arena_set_allocated_execution_time_normal(::tensorflow::NormalDistribution* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_execution_time();
  if (value) {
    set_has_execution_time_normal();
    _impl_.execution_time_.execution_time_normal_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpPerformance.execution_time_normal)
}
inline ::tensorflow::NormalDistribution* OpPerformance::_internal_mutable_execution_time_normal() {
  if (execution_time_case() != kExecutionTimeNormal) {
    clear_execution_time();
    set_has_execution_time_normal();
    _impl_.execution_time_.execution_time_normal_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::NormalDistribution>(GetArena());
  }
  return _impl_.execution_time_.execution_time_normal_;
}
inline ::tensorflow::NormalDistribution* OpPerformance::mutable_execution_time_normal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::NormalDistribution* _msg = _internal_mutable_execution_time_normal();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpPerformance.execution_time_normal)
  return _msg;
}

// .tensorflow.LogNormalDistribution execution_time_log_normal = 11;
inline bool OpPerformance::has_execution_time_log_normal() const {
  return execution_time_case() == kExecutionTimeLogNormal;
}
inline bool OpPerformance::_internal_has_execution_time_log_normal() const {
  return execution_time_case() == kExecutionTimeLogNormal;
}
inline void OpPerformance::set_has_execution_time_log_normal() {
  _impl_._oneof_case_[0] = kExecutionTimeLogNormal;
}
inline void OpPerformance::clear_execution_time_log_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (execution_time_case() == kExecutionTimeLogNormal) {
    if (GetArena() == nullptr) {
      delete _impl_.execution_time_.execution_time_log_normal_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.execution_time_.execution_time_log_normal_);
    }
    clear_has_execution_time();
  }
}
inline ::tensorflow::LogNormalDistribution* OpPerformance::release_execution_time_log_normal() {
  // @@protoc_insertion_point(field_release:tensorflow.OpPerformance.execution_time_log_normal)
  if (execution_time_case() == kExecutionTimeLogNormal) {
    clear_has_execution_time();
    auto* temp = _impl_.execution_time_.execution_time_log_normal_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.execution_time_.execution_time_log_normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::LogNormalDistribution& OpPerformance::_internal_execution_time_log_normal() const {
  return execution_time_case() == kExecutionTimeLogNormal ? *_impl_.execution_time_.execution_time_log_normal_ : reinterpret_cast<::tensorflow::LogNormalDistribution&>(::tensorflow::_LogNormalDistribution_default_instance_);
}
inline const ::tensorflow::LogNormalDistribution& OpPerformance::execution_time_log_normal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.execution_time_log_normal)
  return _internal_execution_time_log_normal();
}
inline ::tensorflow::LogNormalDistribution* OpPerformance::unsafe_arena_release_execution_time_log_normal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.OpPerformance.execution_time_log_normal)
  if (execution_time_case() == kExecutionTimeLogNormal) {
    clear_has_execution_time();
    auto* temp = _impl_.execution_time_.execution_time_log_normal_;
    _impl_.execution_time_.execution_time_log_normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OpPerformance::unsafe_arena_set_allocated_execution_time_log_normal(::tensorflow::LogNormalDistribution* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_execution_time();
  if (value) {
    set_has_execution_time_log_normal();
    _impl_.execution_time_.execution_time_log_normal_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpPerformance.execution_time_log_normal)
}
inline ::tensorflow::LogNormalDistribution* OpPerformance::_internal_mutable_execution_time_log_normal() {
  if (execution_time_case() != kExecutionTimeLogNormal) {
    clear_execution_time();
    set_has_execution_time_log_normal();
    _impl_.execution_time_.execution_time_log_normal_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::LogNormalDistribution>(GetArena());
  }
  return _impl_.execution_time_.execution_time_log_normal_;
}
inline ::tensorflow::LogNormalDistribution* OpPerformance::mutable_execution_time_log_normal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::LogNormalDistribution* _msg = _internal_mutable_execution_time_log_normal();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpPerformance.execution_time_log_normal)
  return _msg;
}

// .tensorflow.OpPerformance.OpMemory op_memory = 9;
inline bool OpPerformance::has_op_memory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.op_memory_ != nullptr);
  return value;
}
inline void OpPerformance::clear_op_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.op_memory_ != nullptr) _impl_.op_memory_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::tensorflow::OpPerformance_OpMemory& OpPerformance::_internal_op_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::OpPerformance_OpMemory* p = _impl_.op_memory_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::OpPerformance_OpMemory&>(::tensorflow::_OpPerformance_OpMemory_default_instance_);
}
inline const ::tensorflow::OpPerformance_OpMemory& OpPerformance::op_memory() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformance.op_memory)
  return _internal_op_memory();
}
inline void OpPerformance::unsafe_arena_set_allocated_op_memory(::tensorflow::OpPerformance_OpMemory* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.op_memory_);
  }
  _impl_.op_memory_ = reinterpret_cast<::tensorflow::OpPerformance_OpMemory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpPerformance.op_memory)
}
inline ::tensorflow::OpPerformance_OpMemory* OpPerformance::release_op_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::OpPerformance_OpMemory* released = _impl_.op_memory_;
  _impl_.op_memory_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::OpPerformance_OpMemory* OpPerformance::unsafe_arena_release_op_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpPerformance.op_memory)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::OpPerformance_OpMemory* temp = _impl_.op_memory_;
  _impl_.op_memory_ = nullptr;
  return temp;
}
inline ::tensorflow::OpPerformance_OpMemory* OpPerformance::_internal_mutable_op_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.op_memory_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::OpPerformance_OpMemory>(GetArena());
    _impl_.op_memory_ = reinterpret_cast<::tensorflow::OpPerformance_OpMemory*>(p);
  }
  return _impl_.op_memory_;
}
inline ::tensorflow::OpPerformance_OpMemory* OpPerformance::mutable_op_memory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::OpPerformance_OpMemory* _msg = _internal_mutable_op_memory();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpPerformance.op_memory)
  return _msg;
}
inline void OpPerformance::set_allocated_op_memory(::tensorflow::OpPerformance_OpMemory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.op_memory_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.op_memory_ = reinterpret_cast<::tensorflow::OpPerformance_OpMemory*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpPerformance.op_memory)
}

inline bool OpPerformance::has_execution_time() const {
  return execution_time_case() != EXECUTION_TIME_NOT_SET;
}
inline void OpPerformance::clear_has_execution_time() {
  _impl_._oneof_case_[0] = EXECUTION_TIME_NOT_SET;
}
inline OpPerformance::ExecutionTimeCase OpPerformance::execution_time_case() const {
  return OpPerformance::ExecutionTimeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// OpPerformanceList

// repeated .tensorflow.OpPerformance op_performance = 1;
inline int OpPerformanceList::_internal_op_performance_size() const {
  return _internal_op_performance().size();
}
inline int OpPerformanceList::op_performance_size() const {
  return _internal_op_performance_size();
}
inline void OpPerformanceList::clear_op_performance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_performance_.Clear();
}
inline ::tensorflow::OpPerformance* OpPerformanceList::mutable_op_performance(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.OpPerformanceList.op_performance)
  return _internal_mutable_op_performance()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::OpPerformance>* OpPerformanceList::mutable_op_performance()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.OpPerformanceList.op_performance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_op_performance();
}
inline const ::tensorflow::OpPerformance& OpPerformanceList::op_performance(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpPerformanceList.op_performance)
  return _internal_op_performance().Get(index);
}
inline ::tensorflow::OpPerformance* OpPerformanceList::add_op_performance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::OpPerformance* _add = _internal_mutable_op_performance()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.OpPerformanceList.op_performance)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::OpPerformance>& OpPerformanceList::op_performance() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.OpPerformanceList.op_performance)
  return _internal_op_performance();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::OpPerformance>&
OpPerformanceList::_internal_op_performance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_performance_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::OpPerformance>*
OpPerformanceList::_internal_mutable_op_performance() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.op_performance_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fgrappler_2fcosts_2fop_5fperformance_5fdata_2eproto_2epb_2eh
