// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/profiler/tfprof_options.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto;
namespace tensorflow {
namespace tfprof {
class AdvisorOptionsProto;
struct AdvisorOptionsProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern AdvisorOptionsProtoDefaultTypeInternal _AdvisorOptionsProto_default_instance_;
class AdvisorOptionsProto_CheckerOption;
struct AdvisorOptionsProto_CheckerOptionDefaultTypeInternal;
PROTOBUF_EXPORT extern AdvisorOptionsProto_CheckerOptionDefaultTypeInternal _AdvisorOptionsProto_CheckerOption_default_instance_;
class AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse;
struct AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUseDefaultTypeInternal _AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse_default_instance_;
class AdvisorOptionsProto_CheckersEntry_DoNotUse;
struct AdvisorOptionsProto_CheckersEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern AdvisorOptionsProto_CheckersEntry_DoNotUseDefaultTypeInternal _AdvisorOptionsProto_CheckersEntry_DoNotUse_default_instance_;
class OptionsProto;
struct OptionsProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern OptionsProtoDefaultTypeInternal _OptionsProto_default_instance_;
}  // namespace tfprof
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace tfprof {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT OptionsProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tfprof.OptionsProto) */ {
 public:
  inline OptionsProto() : OptionsProto(nullptr) {}
  ~OptionsProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OptionsProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline OptionsProto(const OptionsProto& from) : OptionsProto(nullptr, from) {}
  inline OptionsProto(OptionsProto&& from) noexcept
      : OptionsProto(nullptr, std::move(from)) {}
  inline OptionsProto& operator=(const OptionsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptionsProto& operator=(OptionsProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OptionsProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const OptionsProto* internal_default_instance() {
    return reinterpret_cast<const OptionsProto*>(
        &_OptionsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OptionsProto& a, OptionsProto& b) { a.Swap(&b); }
  inline void Swap(OptionsProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptionsProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OptionsProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OptionsProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OptionsProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OptionsProto& from) { OptionsProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OptionsProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tfprof.OptionsProto"; }

 protected:
  explicit OptionsProto(::google::protobuf::Arena* arena);
  OptionsProto(::google::protobuf::Arena* arena, const OptionsProto& from);
  OptionsProto(::google::protobuf::Arena* arena, OptionsProto&& from) noexcept
      : OptionsProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountTypeRegexesFieldNumber = 8,
    kStartNameRegexesFieldNumber = 9,
    kTrimNameRegexesFieldNumber = 10,
    kShowNameRegexesFieldNumber = 11,
    kHideNameRegexesFieldNumber = 12,
    kSelectFieldNumber = 14,
    kOrderByFieldNumber = 7,
    kOutputFieldNumber = 15,
    kDumpToFileFieldNumber = 16,
    kMaxDepthFieldNumber = 1,
    kMinBytesFieldNumber = 2,
    kMinMicrosFieldNumber = 3,
    kMinParamsFieldNumber = 4,
    kMinFloatOpsFieldNumber = 5,
    kMinOccurrenceFieldNumber = 17,
    kStepFieldNumber = 18,
    kMinPeakBytesFieldNumber = 19,
    kMinResidualBytesFieldNumber = 20,
    kMinOutputBytesFieldNumber = 21,
    kMinAcceleratorMicrosFieldNumber = 22,
    kMinCpuMicrosFieldNumber = 23,
    kAccountDisplayedOpOnlyFieldNumber = 13,
  };
  // repeated string account_type_regexes = 8;
  int account_type_regexes_size() const;
  private:
  int _internal_account_type_regexes_size() const;

  public:
  void clear_account_type_regexes() ;
  const std::string& account_type_regexes(int index) const;
  std::string* mutable_account_type_regexes(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_type_regexes(int index, Arg_&& value, Args_... args);
  std::string* add_account_type_regexes();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_account_type_regexes(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& account_type_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_account_type_regexes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_account_type_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_account_type_regexes();

  public:
  // repeated string start_name_regexes = 9;
  int start_name_regexes_size() const;
  private:
  int _internal_start_name_regexes_size() const;

  public:
  void clear_start_name_regexes() ;
  const std::string& start_name_regexes(int index) const;
  std::string* mutable_start_name_regexes(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_start_name_regexes(int index, Arg_&& value, Args_... args);
  std::string* add_start_name_regexes();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_start_name_regexes(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& start_name_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_start_name_regexes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_start_name_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_start_name_regexes();

  public:
  // repeated string trim_name_regexes = 10;
  int trim_name_regexes_size() const;
  private:
  int _internal_trim_name_regexes_size() const;

  public:
  void clear_trim_name_regexes() ;
  const std::string& trim_name_regexes(int index) const;
  std::string* mutable_trim_name_regexes(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trim_name_regexes(int index, Arg_&& value, Args_... args);
  std::string* add_trim_name_regexes();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_trim_name_regexes(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& trim_name_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_trim_name_regexes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_trim_name_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_trim_name_regexes();

  public:
  // repeated string show_name_regexes = 11;
  int show_name_regexes_size() const;
  private:
  int _internal_show_name_regexes_size() const;

  public:
  void clear_show_name_regexes() ;
  const std::string& show_name_regexes(int index) const;
  std::string* mutable_show_name_regexes(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_show_name_regexes(int index, Arg_&& value, Args_... args);
  std::string* add_show_name_regexes();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_show_name_regexes(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& show_name_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_show_name_regexes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_show_name_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_show_name_regexes();

  public:
  // repeated string hide_name_regexes = 12;
  int hide_name_regexes_size() const;
  private:
  int _internal_hide_name_regexes_size() const;

  public:
  void clear_hide_name_regexes() ;
  const std::string& hide_name_regexes(int index) const;
  std::string* mutable_hide_name_regexes(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hide_name_regexes(int index, Arg_&& value, Args_... args);
  std::string* add_hide_name_regexes();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_hide_name_regexes(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& hide_name_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_hide_name_regexes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_hide_name_regexes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_hide_name_regexes();

  public:
  // repeated string select = 14;
  int select_size() const;
  private:
  int _internal_select_size() const;

  public:
  void clear_select() ;
  const std::string& select(int index) const;
  std::string* mutable_select(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_select(int index, Arg_&& value, Args_... args);
  std::string* add_select();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_select(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& select() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_select();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_select() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_select();

  public:
  // string order_by = 7;
  void clear_order_by() ;
  const std::string& order_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_by(Arg_&& arg, Args_... args);
  std::string* mutable_order_by();
  PROTOBUF_NODISCARD std::string* release_order_by();
  void set_allocated_order_by(std::string* value);

  private:
  const std::string& _internal_order_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_by(
      const std::string& value);
  std::string* _internal_mutable_order_by();

  public:
  // string output = 15;
  void clear_output() ;
  const std::string& output() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_output(Arg_&& arg, Args_... args);
  std::string* mutable_output();
  PROTOBUF_NODISCARD std::string* release_output();
  void set_allocated_output(std::string* value);

  private:
  const std::string& _internal_output() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_output(
      const std::string& value);
  std::string* _internal_mutable_output();

  public:
  // string dump_to_file = 16;
  void clear_dump_to_file() ;
  const std::string& dump_to_file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dump_to_file(Arg_&& arg, Args_... args);
  std::string* mutable_dump_to_file();
  PROTOBUF_NODISCARD std::string* release_dump_to_file();
  void set_allocated_dump_to_file(std::string* value);

  private:
  const std::string& _internal_dump_to_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dump_to_file(
      const std::string& value);
  std::string* _internal_mutable_dump_to_file();

  public:
  // int64 max_depth = 1;
  void clear_max_depth() ;
  ::int64_t max_depth() const;
  void set_max_depth(::int64_t value);

  private:
  ::int64_t _internal_max_depth() const;
  void _internal_set_max_depth(::int64_t value);

  public:
  // int64 min_bytes = 2;
  void clear_min_bytes() ;
  ::int64_t min_bytes() const;
  void set_min_bytes(::int64_t value);

  private:
  ::int64_t _internal_min_bytes() const;
  void _internal_set_min_bytes(::int64_t value);

  public:
  // int64 min_micros = 3;
  void clear_min_micros() ;
  ::int64_t min_micros() const;
  void set_min_micros(::int64_t value);

  private:
  ::int64_t _internal_min_micros() const;
  void _internal_set_min_micros(::int64_t value);

  public:
  // int64 min_params = 4;
  void clear_min_params() ;
  ::int64_t min_params() const;
  void set_min_params(::int64_t value);

  private:
  ::int64_t _internal_min_params() const;
  void _internal_set_min_params(::int64_t value);

  public:
  // int64 min_float_ops = 5;
  void clear_min_float_ops() ;
  ::int64_t min_float_ops() const;
  void set_min_float_ops(::int64_t value);

  private:
  ::int64_t _internal_min_float_ops() const;
  void _internal_set_min_float_ops(::int64_t value);

  public:
  // int64 min_occurrence = 17;
  void clear_min_occurrence() ;
  ::int64_t min_occurrence() const;
  void set_min_occurrence(::int64_t value);

  private:
  ::int64_t _internal_min_occurrence() const;
  void _internal_set_min_occurrence(::int64_t value);

  public:
  // int64 step = 18;
  void clear_step() ;
  ::int64_t step() const;
  void set_step(::int64_t value);

  private:
  ::int64_t _internal_step() const;
  void _internal_set_step(::int64_t value);

  public:
  // int64 min_peak_bytes = 19;
  void clear_min_peak_bytes() ;
  ::int64_t min_peak_bytes() const;
  void set_min_peak_bytes(::int64_t value);

  private:
  ::int64_t _internal_min_peak_bytes() const;
  void _internal_set_min_peak_bytes(::int64_t value);

  public:
  // int64 min_residual_bytes = 20;
  void clear_min_residual_bytes() ;
  ::int64_t min_residual_bytes() const;
  void set_min_residual_bytes(::int64_t value);

  private:
  ::int64_t _internal_min_residual_bytes() const;
  void _internal_set_min_residual_bytes(::int64_t value);

  public:
  // int64 min_output_bytes = 21;
  void clear_min_output_bytes() ;
  ::int64_t min_output_bytes() const;
  void set_min_output_bytes(::int64_t value);

  private:
  ::int64_t _internal_min_output_bytes() const;
  void _internal_set_min_output_bytes(::int64_t value);

  public:
  // int64 min_accelerator_micros = 22;
  void clear_min_accelerator_micros() ;
  ::int64_t min_accelerator_micros() const;
  void set_min_accelerator_micros(::int64_t value);

  private:
  ::int64_t _internal_min_accelerator_micros() const;
  void _internal_set_min_accelerator_micros(::int64_t value);

  public:
  // int64 min_cpu_micros = 23;
  void clear_min_cpu_micros() ;
  ::int64_t min_cpu_micros() const;
  void set_min_cpu_micros(::int64_t value);

  private:
  ::int64_t _internal_min_cpu_micros() const;
  void _internal_set_min_cpu_micros(::int64_t value);

  public:
  // bool account_displayed_op_only = 13;
  void clear_account_displayed_op_only() ;
  bool account_displayed_op_only() const;
  void set_account_displayed_op_only(bool value);

  private:
  bool _internal_account_displayed_op_only() const;
  void _internal_set_account_displayed_op_only(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.OptionsProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 22, 0,
      176, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OptionsProto& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> account_type_regexes_;
    ::google::protobuf::RepeatedPtrField<std::string> start_name_regexes_;
    ::google::protobuf::RepeatedPtrField<std::string> trim_name_regexes_;
    ::google::protobuf::RepeatedPtrField<std::string> show_name_regexes_;
    ::google::protobuf::RepeatedPtrField<std::string> hide_name_regexes_;
    ::google::protobuf::RepeatedPtrField<std::string> select_;
    ::google::protobuf::internal::ArenaStringPtr order_by_;
    ::google::protobuf::internal::ArenaStringPtr output_;
    ::google::protobuf::internal::ArenaStringPtr dump_to_file_;
    ::int64_t max_depth_;
    ::int64_t min_bytes_;
    ::int64_t min_micros_;
    ::int64_t min_params_;
    ::int64_t min_float_ops_;
    ::int64_t min_occurrence_;
    ::int64_t step_;
    ::int64_t min_peak_bytes_;
    ::int64_t min_residual_bytes_;
    ::int64_t min_output_bytes_;
    ::int64_t min_accelerator_micros_;
    ::int64_t min_cpu_micros_;
    bool account_displayed_op_only_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto;
};
// -------------------------------------------------------------------

class AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse*>(
        &_AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      81, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AdvisorOptionsProto_CheckerOption final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tfprof.AdvisorOptionsProto.CheckerOption) */ {
 public:
  inline AdvisorOptionsProto_CheckerOption() : AdvisorOptionsProto_CheckerOption(nullptr) {}
  ~AdvisorOptionsProto_CheckerOption() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdvisorOptionsProto_CheckerOption(
      ::google::protobuf::internal::ConstantInitialized);

  inline AdvisorOptionsProto_CheckerOption(const AdvisorOptionsProto_CheckerOption& from) : AdvisorOptionsProto_CheckerOption(nullptr, from) {}
  inline AdvisorOptionsProto_CheckerOption(AdvisorOptionsProto_CheckerOption&& from) noexcept
      : AdvisorOptionsProto_CheckerOption(nullptr, std::move(from)) {}
  inline AdvisorOptionsProto_CheckerOption& operator=(const AdvisorOptionsProto_CheckerOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdvisorOptionsProto_CheckerOption& operator=(AdvisorOptionsProto_CheckerOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdvisorOptionsProto_CheckerOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const AdvisorOptionsProto_CheckerOption* internal_default_instance() {
    return reinterpret_cast<const AdvisorOptionsProto_CheckerOption*>(
        &_AdvisorOptionsProto_CheckerOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AdvisorOptionsProto_CheckerOption& a, AdvisorOptionsProto_CheckerOption& b) { a.Swap(&b); }
  inline void Swap(AdvisorOptionsProto_CheckerOption* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdvisorOptionsProto_CheckerOption* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdvisorOptionsProto_CheckerOption* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AdvisorOptionsProto_CheckerOption>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AdvisorOptionsProto_CheckerOption& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AdvisorOptionsProto_CheckerOption& from) { AdvisorOptionsProto_CheckerOption::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AdvisorOptionsProto_CheckerOption* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tfprof.AdvisorOptionsProto.CheckerOption"; }

 protected:
  explicit AdvisorOptionsProto_CheckerOption(::google::protobuf::Arena* arena);
  AdvisorOptionsProto_CheckerOption(::google::protobuf::Arena* arena, const AdvisorOptionsProto_CheckerOption& from);
  AdvisorOptionsProto_CheckerOption(::google::protobuf::Arena* arena, AdvisorOptionsProto_CheckerOption&& from) noexcept
      : AdvisorOptionsProto_CheckerOption(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionsFieldNumber = 1,
  };
  // map<string, string> options = 1;
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  const ::google::protobuf::Map<std::string, std::string>& options() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_options();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_options() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_options();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.AdvisorOptionsProto.CheckerOption)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      67, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AdvisorOptionsProto_CheckerOption& from_msg);
    ::google::protobuf::internal::MapField<AdvisorOptionsProto_CheckerOption_OptionsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        options_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto;
};
// -------------------------------------------------------------------

class AdvisorOptionsProto_CheckersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          AdvisorOptionsProto_CheckersEntry_DoNotUse, std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      AdvisorOptionsProto_CheckersEntry_DoNotUse, std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  AdvisorOptionsProto_CheckersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdvisorOptionsProto_CheckersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AdvisorOptionsProto_CheckersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AdvisorOptionsProto_CheckersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AdvisorOptionsProto_CheckersEntry_DoNotUse*>(
        &_AdvisorOptionsProto_CheckersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      63, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AdvisorOptionsProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tfprof.AdvisorOptionsProto) */ {
 public:
  inline AdvisorOptionsProto() : AdvisorOptionsProto(nullptr) {}
  ~AdvisorOptionsProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdvisorOptionsProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline AdvisorOptionsProto(const AdvisorOptionsProto& from) : AdvisorOptionsProto(nullptr, from) {}
  inline AdvisorOptionsProto(AdvisorOptionsProto&& from) noexcept
      : AdvisorOptionsProto(nullptr, std::move(from)) {}
  inline AdvisorOptionsProto& operator=(const AdvisorOptionsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdvisorOptionsProto& operator=(AdvisorOptionsProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdvisorOptionsProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const AdvisorOptionsProto* internal_default_instance() {
    return reinterpret_cast<const AdvisorOptionsProto*>(
        &_AdvisorOptionsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AdvisorOptionsProto& a, AdvisorOptionsProto& b) { a.Swap(&b); }
  inline void Swap(AdvisorOptionsProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdvisorOptionsProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdvisorOptionsProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AdvisorOptionsProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AdvisorOptionsProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AdvisorOptionsProto& from) { AdvisorOptionsProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AdvisorOptionsProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tfprof.AdvisorOptionsProto"; }

 protected:
  explicit AdvisorOptionsProto(::google::protobuf::Arena* arena);
  AdvisorOptionsProto(::google::protobuf::Arena* arena, const AdvisorOptionsProto& from);
  AdvisorOptionsProto(::google::protobuf::Arena* arena, AdvisorOptionsProto&& from) noexcept
      : AdvisorOptionsProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CheckerOption = AdvisorOptionsProto_CheckerOption;

  // accessors -------------------------------------------------------
  enum : int {
    kCheckersFieldNumber = 1,
  };
  // map<string, .tensorflow.tfprof.AdvisorOptionsProto.CheckerOption> checkers = 1;
  int checkers_size() const;
  private:
  int _internal_checkers_size() const;

  public:
  void clear_checkers() ;
  const ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption>& checkers() const;
  ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption>* mutable_checkers();

  private:
  const ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption>& _internal_checkers() const;
  ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption>* _internal_mutable_checkers();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.AdvisorOptionsProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      54, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AdvisorOptionsProto& from_msg);
    ::google::protobuf::internal::MapField<AdvisorOptionsProto_CheckersEntry_DoNotUse, std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        checkers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OptionsProto

// int64 max_depth = 1;
inline void OptionsProto::clear_max_depth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_depth_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::max_depth() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.max_depth)
  return _internal_max_depth();
}
inline void OptionsProto::set_max_depth(::int64_t value) {
  _internal_set_max_depth(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.max_depth)
}
inline ::int64_t OptionsProto::_internal_max_depth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_depth_;
}
inline void OptionsProto::_internal_set_max_depth(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_depth_ = value;
}

// int64 min_bytes = 2;
inline void OptionsProto::clear_min_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_bytes_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_bytes)
  return _internal_min_bytes();
}
inline void OptionsProto::set_min_bytes(::int64_t value) {
  _internal_set_min_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_bytes)
}
inline ::int64_t OptionsProto::_internal_min_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_bytes_;
}
inline void OptionsProto::_internal_set_min_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_bytes_ = value;
}

// int64 min_peak_bytes = 19;
inline void OptionsProto::clear_min_peak_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_peak_bytes_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_peak_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_peak_bytes)
  return _internal_min_peak_bytes();
}
inline void OptionsProto::set_min_peak_bytes(::int64_t value) {
  _internal_set_min_peak_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_peak_bytes)
}
inline ::int64_t OptionsProto::_internal_min_peak_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_peak_bytes_;
}
inline void OptionsProto::_internal_set_min_peak_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_peak_bytes_ = value;
}

// int64 min_residual_bytes = 20;
inline void OptionsProto::clear_min_residual_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_residual_bytes_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_residual_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_residual_bytes)
  return _internal_min_residual_bytes();
}
inline void OptionsProto::set_min_residual_bytes(::int64_t value) {
  _internal_set_min_residual_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_residual_bytes)
}
inline ::int64_t OptionsProto::_internal_min_residual_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_residual_bytes_;
}
inline void OptionsProto::_internal_set_min_residual_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_residual_bytes_ = value;
}

// int64 min_output_bytes = 21;
inline void OptionsProto::clear_min_output_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_output_bytes_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_output_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_output_bytes)
  return _internal_min_output_bytes();
}
inline void OptionsProto::set_min_output_bytes(::int64_t value) {
  _internal_set_min_output_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_output_bytes)
}
inline ::int64_t OptionsProto::_internal_min_output_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_output_bytes_;
}
inline void OptionsProto::_internal_set_min_output_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_output_bytes_ = value;
}

// int64 min_micros = 3;
inline void OptionsProto::clear_min_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_micros_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_micros)
  return _internal_min_micros();
}
inline void OptionsProto::set_min_micros(::int64_t value) {
  _internal_set_min_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_micros)
}
inline ::int64_t OptionsProto::_internal_min_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_micros_;
}
inline void OptionsProto::_internal_set_min_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_micros_ = value;
}

// int64 min_accelerator_micros = 22;
inline void OptionsProto::clear_min_accelerator_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_accelerator_micros_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_accelerator_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_accelerator_micros)
  return _internal_min_accelerator_micros();
}
inline void OptionsProto::set_min_accelerator_micros(::int64_t value) {
  _internal_set_min_accelerator_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_accelerator_micros)
}
inline ::int64_t OptionsProto::_internal_min_accelerator_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_accelerator_micros_;
}
inline void OptionsProto::_internal_set_min_accelerator_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_accelerator_micros_ = value;
}

// int64 min_cpu_micros = 23;
inline void OptionsProto::clear_min_cpu_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_cpu_micros_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_cpu_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_cpu_micros)
  return _internal_min_cpu_micros();
}
inline void OptionsProto::set_min_cpu_micros(::int64_t value) {
  _internal_set_min_cpu_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_cpu_micros)
}
inline ::int64_t OptionsProto::_internal_min_cpu_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_cpu_micros_;
}
inline void OptionsProto::_internal_set_min_cpu_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_cpu_micros_ = value;
}

// int64 min_params = 4;
inline void OptionsProto::clear_min_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_params_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_params() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_params)
  return _internal_min_params();
}
inline void OptionsProto::set_min_params(::int64_t value) {
  _internal_set_min_params(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_params)
}
inline ::int64_t OptionsProto::_internal_min_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_params_;
}
inline void OptionsProto::_internal_set_min_params(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_params_ = value;
}

// int64 min_float_ops = 5;
inline void OptionsProto::clear_min_float_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_float_ops_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_float_ops() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_float_ops)
  return _internal_min_float_ops();
}
inline void OptionsProto::set_min_float_ops(::int64_t value) {
  _internal_set_min_float_ops(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_float_ops)
}
inline ::int64_t OptionsProto::_internal_min_float_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_float_ops_;
}
inline void OptionsProto::_internal_set_min_float_ops(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_float_ops_ = value;
}

// int64 min_occurrence = 17;
inline void OptionsProto::clear_min_occurrence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_occurrence_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::min_occurrence() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.min_occurrence)
  return _internal_min_occurrence();
}
inline void OptionsProto::set_min_occurrence(::int64_t value) {
  _internal_set_min_occurrence(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.min_occurrence)
}
inline ::int64_t OptionsProto::_internal_min_occurrence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_occurrence_;
}
inline void OptionsProto::_internal_set_min_occurrence(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_occurrence_ = value;
}

// int64 step = 18;
inline void OptionsProto::clear_step() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_ = ::int64_t{0};
}
inline ::int64_t OptionsProto::step() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.step)
  return _internal_step();
}
inline void OptionsProto::set_step(::int64_t value) {
  _internal_set_step(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.step)
}
inline ::int64_t OptionsProto::_internal_step() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_;
}
inline void OptionsProto::_internal_set_step(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_ = value;
}

// string order_by = 7;
inline void OptionsProto::clear_order_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_by_.ClearToEmpty();
}
inline const std::string& OptionsProto::order_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.order_by)
  return _internal_order_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OptionsProto::set_order_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.order_by)
}
inline std::string* OptionsProto::mutable_order_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_by();
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OptionsProto.order_by)
  return _s;
}
inline const std::string& OptionsProto::_internal_order_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_by_.Get();
}
inline void OptionsProto::_internal_set_order_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_by_.Set(value, GetArena());
}
inline std::string* OptionsProto::_internal_mutable_order_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_by_.Mutable( GetArena());
}
inline std::string* OptionsProto::release_order_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.OptionsProto.order_by)
  return _impl_.order_by_.Release();
}
inline void OptionsProto::set_allocated_order_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_by_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.order_by_.IsDefault()) {
          _impl_.order_by_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.OptionsProto.order_by)
}

// repeated string account_type_regexes = 8;
inline int OptionsProto::_internal_account_type_regexes_size() const {
  return _internal_account_type_regexes().size();
}
inline int OptionsProto::account_type_regexes_size() const {
  return _internal_account_type_regexes_size();
}
inline void OptionsProto::clear_account_type_regexes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_type_regexes_.Clear();
}
inline std::string* OptionsProto::add_account_type_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_account_type_regexes()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.OptionsProto.account_type_regexes)
  return _s;
}
inline const std::string& OptionsProto::account_type_regexes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.account_type_regexes)
  return _internal_account_type_regexes().Get(index);
}
inline std::string* OptionsProto::mutable_account_type_regexes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OptionsProto.account_type_regexes)
  return _internal_mutable_account_type_regexes()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::set_account_type_regexes(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_account_type_regexes()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.account_type_regexes)
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::add_account_type_regexes(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_account_type_regexes(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.OptionsProto.account_type_regexes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::account_type_regexes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.OptionsProto.account_type_regexes)
  return _internal_account_type_regexes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::mutable_account_type_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.OptionsProto.account_type_regexes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_account_type_regexes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::_internal_account_type_regexes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_type_regexes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::_internal_mutable_account_type_regexes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.account_type_regexes_;
}

// repeated string start_name_regexes = 9;
inline int OptionsProto::_internal_start_name_regexes_size() const {
  return _internal_start_name_regexes().size();
}
inline int OptionsProto::start_name_regexes_size() const {
  return _internal_start_name_regexes_size();
}
inline void OptionsProto::clear_start_name_regexes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_name_regexes_.Clear();
}
inline std::string* OptionsProto::add_start_name_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_start_name_regexes()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.OptionsProto.start_name_regexes)
  return _s;
}
inline const std::string& OptionsProto::start_name_regexes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.start_name_regexes)
  return _internal_start_name_regexes().Get(index);
}
inline std::string* OptionsProto::mutable_start_name_regexes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OptionsProto.start_name_regexes)
  return _internal_mutable_start_name_regexes()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::set_start_name_regexes(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_start_name_regexes()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.start_name_regexes)
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::add_start_name_regexes(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_start_name_regexes(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.OptionsProto.start_name_regexes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::start_name_regexes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.OptionsProto.start_name_regexes)
  return _internal_start_name_regexes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::mutable_start_name_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.OptionsProto.start_name_regexes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_start_name_regexes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::_internal_start_name_regexes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_name_regexes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::_internal_mutable_start_name_regexes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.start_name_regexes_;
}

// repeated string trim_name_regexes = 10;
inline int OptionsProto::_internal_trim_name_regexes_size() const {
  return _internal_trim_name_regexes().size();
}
inline int OptionsProto::trim_name_regexes_size() const {
  return _internal_trim_name_regexes_size();
}
inline void OptionsProto::clear_trim_name_regexes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trim_name_regexes_.Clear();
}
inline std::string* OptionsProto::add_trim_name_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_trim_name_regexes()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.OptionsProto.trim_name_regexes)
  return _s;
}
inline const std::string& OptionsProto::trim_name_regexes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.trim_name_regexes)
  return _internal_trim_name_regexes().Get(index);
}
inline std::string* OptionsProto::mutable_trim_name_regexes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OptionsProto.trim_name_regexes)
  return _internal_mutable_trim_name_regexes()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::set_trim_name_regexes(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_trim_name_regexes()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.trim_name_regexes)
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::add_trim_name_regexes(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_trim_name_regexes(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.OptionsProto.trim_name_regexes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::trim_name_regexes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.OptionsProto.trim_name_regexes)
  return _internal_trim_name_regexes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::mutable_trim_name_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.OptionsProto.trim_name_regexes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_trim_name_regexes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::_internal_trim_name_regexes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trim_name_regexes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::_internal_mutable_trim_name_regexes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.trim_name_regexes_;
}

// repeated string show_name_regexes = 11;
inline int OptionsProto::_internal_show_name_regexes_size() const {
  return _internal_show_name_regexes().size();
}
inline int OptionsProto::show_name_regexes_size() const {
  return _internal_show_name_regexes_size();
}
inline void OptionsProto::clear_show_name_regexes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_name_regexes_.Clear();
}
inline std::string* OptionsProto::add_show_name_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_show_name_regexes()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.OptionsProto.show_name_regexes)
  return _s;
}
inline const std::string& OptionsProto::show_name_regexes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.show_name_regexes)
  return _internal_show_name_regexes().Get(index);
}
inline std::string* OptionsProto::mutable_show_name_regexes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OptionsProto.show_name_regexes)
  return _internal_mutable_show_name_regexes()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::set_show_name_regexes(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_show_name_regexes()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.show_name_regexes)
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::add_show_name_regexes(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_show_name_regexes(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.OptionsProto.show_name_regexes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::show_name_regexes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.OptionsProto.show_name_regexes)
  return _internal_show_name_regexes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::mutable_show_name_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.OptionsProto.show_name_regexes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_show_name_regexes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::_internal_show_name_regexes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_name_regexes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::_internal_mutable_show_name_regexes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.show_name_regexes_;
}

// repeated string hide_name_regexes = 12;
inline int OptionsProto::_internal_hide_name_regexes_size() const {
  return _internal_hide_name_regexes().size();
}
inline int OptionsProto::hide_name_regexes_size() const {
  return _internal_hide_name_regexes_size();
}
inline void OptionsProto::clear_hide_name_regexes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hide_name_regexes_.Clear();
}
inline std::string* OptionsProto::add_hide_name_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_hide_name_regexes()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.OptionsProto.hide_name_regexes)
  return _s;
}
inline const std::string& OptionsProto::hide_name_regexes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.hide_name_regexes)
  return _internal_hide_name_regexes().Get(index);
}
inline std::string* OptionsProto::mutable_hide_name_regexes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OptionsProto.hide_name_regexes)
  return _internal_mutable_hide_name_regexes()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::set_hide_name_regexes(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_hide_name_regexes()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.hide_name_regexes)
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::add_hide_name_regexes(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_hide_name_regexes(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.OptionsProto.hide_name_regexes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::hide_name_regexes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.OptionsProto.hide_name_regexes)
  return _internal_hide_name_regexes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::mutable_hide_name_regexes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.OptionsProto.hide_name_regexes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hide_name_regexes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::_internal_hide_name_regexes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hide_name_regexes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::_internal_mutable_hide_name_regexes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hide_name_regexes_;
}

// bool account_displayed_op_only = 13;
inline void OptionsProto::clear_account_displayed_op_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_displayed_op_only_ = false;
}
inline bool OptionsProto::account_displayed_op_only() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.account_displayed_op_only)
  return _internal_account_displayed_op_only();
}
inline void OptionsProto::set_account_displayed_op_only(bool value) {
  _internal_set_account_displayed_op_only(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.account_displayed_op_only)
}
inline bool OptionsProto::_internal_account_displayed_op_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_displayed_op_only_;
}
inline void OptionsProto::_internal_set_account_displayed_op_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_displayed_op_only_ = value;
}

// repeated string select = 14;
inline int OptionsProto::_internal_select_size() const {
  return _internal_select().size();
}
inline int OptionsProto::select_size() const {
  return _internal_select_size();
}
inline void OptionsProto::clear_select() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.select_.Clear();
}
inline std::string* OptionsProto::add_select() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_select()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.OptionsProto.select)
  return _s;
}
inline const std::string& OptionsProto::select(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.select)
  return _internal_select().Get(index);
}
inline std::string* OptionsProto::mutable_select(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OptionsProto.select)
  return _internal_mutable_select()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::set_select(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_select()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.select)
}
template <typename Arg_, typename... Args_>
inline void OptionsProto::add_select(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_select(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.OptionsProto.select)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::select() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.OptionsProto.select)
  return _internal_select();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::mutable_select() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.OptionsProto.select)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_select();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OptionsProto::_internal_select() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.select_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OptionsProto::_internal_mutable_select() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.select_;
}

// string output = 15;
inline void OptionsProto::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.ClearToEmpty();
}
inline const std::string& OptionsProto::output() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.output)
  return _internal_output();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OptionsProto::set_output(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.output)
}
inline std::string* OptionsProto::mutable_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_output();
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OptionsProto.output)
  return _s;
}
inline const std::string& OptionsProto::_internal_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_.Get();
}
inline void OptionsProto::_internal_set_output(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.Set(value, GetArena());
}
inline std::string* OptionsProto::_internal_mutable_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.output_.Mutable( GetArena());
}
inline std::string* OptionsProto::release_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.OptionsProto.output)
  return _impl_.output_.Release();
}
inline void OptionsProto::set_allocated_output(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.output_.IsDefault()) {
          _impl_.output_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.OptionsProto.output)
}

// string dump_to_file = 16;
inline void OptionsProto::clear_dump_to_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dump_to_file_.ClearToEmpty();
}
inline const std::string& OptionsProto::dump_to_file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.OptionsProto.dump_to_file)
  return _internal_dump_to_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OptionsProto::set_dump_to_file(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dump_to_file_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.OptionsProto.dump_to_file)
}
inline std::string* OptionsProto::mutable_dump_to_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dump_to_file();
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.OptionsProto.dump_to_file)
  return _s;
}
inline const std::string& OptionsProto::_internal_dump_to_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dump_to_file_.Get();
}
inline void OptionsProto::_internal_set_dump_to_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dump_to_file_.Set(value, GetArena());
}
inline std::string* OptionsProto::_internal_mutable_dump_to_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dump_to_file_.Mutable( GetArena());
}
inline std::string* OptionsProto::release_dump_to_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.OptionsProto.dump_to_file)
  return _impl_.dump_to_file_.Release();
}
inline void OptionsProto::set_allocated_dump_to_file(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dump_to_file_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dump_to_file_.IsDefault()) {
          _impl_.dump_to_file_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.OptionsProto.dump_to_file)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AdvisorOptionsProto_CheckerOption

// map<string, string> options = 1;
inline int AdvisorOptionsProto_CheckerOption::_internal_options_size() const {
  return _internal_options().size();
}
inline int AdvisorOptionsProto_CheckerOption::options_size() const {
  return _internal_options_size();
}
inline void AdvisorOptionsProto_CheckerOption::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.options_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AdvisorOptionsProto_CheckerOption::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.options_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AdvisorOptionsProto_CheckerOption::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.AdvisorOptionsProto.CheckerOption.options)
  return _internal_options();
}
inline ::google::protobuf::Map<std::string, std::string>* AdvisorOptionsProto_CheckerOption::_internal_mutable_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.options_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AdvisorOptionsProto_CheckerOption::mutable_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.AdvisorOptionsProto.CheckerOption.options)
  return _internal_mutable_options();
}

// -------------------------------------------------------------------

// AdvisorOptionsProto

// map<string, .tensorflow.tfprof.AdvisorOptionsProto.CheckerOption> checkers = 1;
inline int AdvisorOptionsProto::_internal_checkers_size() const {
  return _internal_checkers().size();
}
inline int AdvisorOptionsProto::checkers_size() const {
  return _internal_checkers_size();
}
inline void AdvisorOptionsProto::clear_checkers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checkers_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption>& AdvisorOptionsProto::_internal_checkers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checkers_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption>& AdvisorOptionsProto::checkers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.AdvisorOptionsProto.checkers)
  return _internal_checkers();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption>* AdvisorOptionsProto::_internal_mutable_checkers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.checkers_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdvisorOptionsProto_CheckerOption>* AdvisorOptionsProto::mutable_checkers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.AdvisorOptionsProto.checkers)
  return _internal_mutable_checkers();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tfprof
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2ftfprof_5foptions_2eproto_2epb_2eh
