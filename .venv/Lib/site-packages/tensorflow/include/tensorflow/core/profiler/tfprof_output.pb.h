// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/profiler/tfprof_output.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto;
namespace tensorflow {
namespace tfprof {
class AdviceProto;
struct AdviceProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern AdviceProtoDefaultTypeInternal _AdviceProto_default_instance_;
class AdviceProto_Checker;
struct AdviceProto_CheckerDefaultTypeInternal;
PROTOBUF_EXPORT extern AdviceProto_CheckerDefaultTypeInternal _AdviceProto_Checker_default_instance_;
class AdviceProto_CheckersEntry_DoNotUse;
struct AdviceProto_CheckersEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern AdviceProto_CheckersEntry_DoNotUseDefaultTypeInternal _AdviceProto_CheckersEntry_DoNotUse_default_instance_;
class GraphNodeProto;
struct GraphNodeProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphNodeProtoDefaultTypeInternal _GraphNodeProto_default_instance_;
class GraphNodeProto_InputShapesEntry_DoNotUse;
struct GraphNodeProto_InputShapesEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern GraphNodeProto_InputShapesEntry_DoNotUseDefaultTypeInternal _GraphNodeProto_InputShapesEntry_DoNotUse_default_instance_;
class MultiGraphNodeProto;
struct MultiGraphNodeProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern MultiGraphNodeProtoDefaultTypeInternal _MultiGraphNodeProto_default_instance_;
class TFProfTensorProto;
struct TFProfTensorProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern TFProfTensorProtoDefaultTypeInternal _TFProfTensorProto_default_instance_;
}  // namespace tfprof
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace tfprof {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT TFProfTensorProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tfprof.TFProfTensorProto) */ {
 public:
  inline TFProfTensorProto() : TFProfTensorProto(nullptr) {}
  ~TFProfTensorProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TFProfTensorProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline TFProfTensorProto(const TFProfTensorProto& from) : TFProfTensorProto(nullptr, from) {}
  inline TFProfTensorProto(TFProfTensorProto&& from) noexcept
      : TFProfTensorProto(nullptr, std::move(from)) {}
  inline TFProfTensorProto& operator=(const TFProfTensorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TFProfTensorProto& operator=(TFProfTensorProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TFProfTensorProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TFProfTensorProto* internal_default_instance() {
    return reinterpret_cast<const TFProfTensorProto*>(
        &_TFProfTensorProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TFProfTensorProto& a, TFProfTensorProto& b) { a.Swap(&b); }
  inline void Swap(TFProfTensorProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TFProfTensorProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TFProfTensorProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TFProfTensorProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TFProfTensorProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TFProfTensorProto& from) { TFProfTensorProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TFProfTensorProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tfprof.TFProfTensorProto"; }

 protected:
  explicit TFProfTensorProto(::google::protobuf::Arena* arena);
  TFProfTensorProto(::google::protobuf::Arena* arena, const TFProfTensorProto& from);
  TFProfTensorProto(::google::protobuf::Arena* arena, TFProfTensorProto&& from) noexcept
      : TFProfTensorProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueDoubleFieldNumber = 2,
    kValueInt64FieldNumber = 3,
    kValueStrFieldNumber = 4,
    kDtypeFieldNumber = 1,
  };
  // repeated double value_double = 2;
  int value_double_size() const;
  private:
  int _internal_value_double_size() const;

  public:
  void clear_value_double() ;
  double value_double(int index) const;
  void set_value_double(int index, double value);
  void add_value_double(double value);
  const ::google::protobuf::RepeatedField<double>& value_double() const;
  ::google::protobuf::RepeatedField<double>* mutable_value_double();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_value_double() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_value_double();

  public:
  // repeated int64 value_int64 = 3;
  int value_int64_size() const;
  private:
  int _internal_value_int64_size() const;

  public:
  void clear_value_int64() ;
  ::int64_t value_int64(int index) const;
  void set_value_int64(int index, ::int64_t value);
  void add_value_int64(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& value_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_value_int64();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_value_int64() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_value_int64();

  public:
  // repeated string value_str = 4;
  int value_str_size() const;
  private:
  int _internal_value_str_size() const;

  public:
  void clear_value_str() ;
  const std::string& value_str(int index) const;
  std::string* mutable_value_str(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value_str(int index, Arg_&& value, Args_... args);
  std::string* add_value_str();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_value_str(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& value_str() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_value_str();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_value_str() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_value_str();

  public:
  // .tensorflow.DataType dtype = 1;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.TFProfTensorProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      53, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TFProfTensorProto& from_msg);
    ::google::protobuf::RepeatedField<double> value_double_;
    ::google::protobuf::RepeatedField<::int64_t> value_int64_;
    mutable ::google::protobuf::internal::CachedSize _value_int64_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> value_str_;
    int dtype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AdviceProto_Checker final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tfprof.AdviceProto.Checker) */ {
 public:
  inline AdviceProto_Checker() : AdviceProto_Checker(nullptr) {}
  ~AdviceProto_Checker() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdviceProto_Checker(
      ::google::protobuf::internal::ConstantInitialized);

  inline AdviceProto_Checker(const AdviceProto_Checker& from) : AdviceProto_Checker(nullptr, from) {}
  inline AdviceProto_Checker(AdviceProto_Checker&& from) noexcept
      : AdviceProto_Checker(nullptr, std::move(from)) {}
  inline AdviceProto_Checker& operator=(const AdviceProto_Checker& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdviceProto_Checker& operator=(AdviceProto_Checker&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdviceProto_Checker& default_instance() {
    return *internal_default_instance();
  }
  static inline const AdviceProto_Checker* internal_default_instance() {
    return reinterpret_cast<const AdviceProto_Checker*>(
        &_AdviceProto_Checker_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(AdviceProto_Checker& a, AdviceProto_Checker& b) { a.Swap(&b); }
  inline void Swap(AdviceProto_Checker* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdviceProto_Checker* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdviceProto_Checker* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AdviceProto_Checker>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AdviceProto_Checker& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AdviceProto_Checker& from) { AdviceProto_Checker::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AdviceProto_Checker* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tfprof.AdviceProto.Checker"; }

 protected:
  explicit AdviceProto_Checker(::google::protobuf::Arena* arena);
  AdviceProto_Checker(::google::protobuf::Arena* arena, const AdviceProto_Checker& from);
  AdviceProto_Checker(::google::protobuf::Arena* arena, AdviceProto_Checker&& from) noexcept
      : AdviceProto_Checker(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReportsFieldNumber = 2,
  };
  // repeated string reports = 2;
  int reports_size() const;
  private:
  int _internal_reports_size() const;

  public:
  void clear_reports() ;
  const std::string& reports(int index) const;
  std::string* mutable_reports(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reports(int index, Arg_&& value, Args_... args);
  std::string* add_reports();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_reports(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& reports() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_reports();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_reports() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_reports();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.AdviceProto.Checker)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      53, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AdviceProto_Checker& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> reports_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto;
};
// -------------------------------------------------------------------

class AdviceProto_CheckersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          AdviceProto_CheckersEntry_DoNotUse, std::string, ::tensorflow::tfprof::AdviceProto_Checker,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      AdviceProto_CheckersEntry_DoNotUse, std::string, ::tensorflow::tfprof::AdviceProto_Checker,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  AdviceProto_CheckersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdviceProto_CheckersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AdviceProto_CheckersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AdviceProto_CheckersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AdviceProto_CheckersEntry_DoNotUse*>(
        &_AdviceProto_CheckersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      55, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto;
};
// -------------------------------------------------------------------

class GraphNodeProto_InputShapesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GraphNodeProto_InputShapesEntry_DoNotUse, ::int32_t, ::tensorflow::TensorShapeProto,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GraphNodeProto_InputShapesEntry_DoNotUse, ::int32_t, ::tensorflow::TensorShapeProto,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GraphNodeProto_InputShapesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphNodeProto_InputShapesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GraphNodeProto_InputShapesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GraphNodeProto_InputShapesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GraphNodeProto_InputShapesEntry_DoNotUse*>(
        &_GraphNodeProto_InputShapesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AdviceProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tfprof.AdviceProto) */ {
 public:
  inline AdviceProto() : AdviceProto(nullptr) {}
  ~AdviceProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdviceProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline AdviceProto(const AdviceProto& from) : AdviceProto(nullptr, from) {}
  inline AdviceProto(AdviceProto&& from) noexcept
      : AdviceProto(nullptr, std::move(from)) {}
  inline AdviceProto& operator=(const AdviceProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdviceProto& operator=(AdviceProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdviceProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const AdviceProto* internal_default_instance() {
    return reinterpret_cast<const AdviceProto*>(
        &_AdviceProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AdviceProto& a, AdviceProto& b) { a.Swap(&b); }
  inline void Swap(AdviceProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdviceProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdviceProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AdviceProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AdviceProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AdviceProto& from) { AdviceProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AdviceProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tfprof.AdviceProto"; }

 protected:
  explicit AdviceProto(::google::protobuf::Arena* arena);
  AdviceProto(::google::protobuf::Arena* arena, const AdviceProto& from);
  AdviceProto(::google::protobuf::Arena* arena, AdviceProto&& from) noexcept
      : AdviceProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Checker = AdviceProto_Checker;

  // accessors -------------------------------------------------------
  enum : int {
    kCheckersFieldNumber = 1,
  };
  // map<string, .tensorflow.tfprof.AdviceProto.Checker> checkers = 1;
  int checkers_size() const;
  private:
  int _internal_checkers_size() const;

  public:
  void clear_checkers() ;
  const ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdviceProto_Checker>& checkers() const;
  ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdviceProto_Checker>* mutable_checkers();

  private:
  const ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdviceProto_Checker>& _internal_checkers() const;
  ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdviceProto_Checker>* _internal_mutable_checkers();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.AdviceProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      46, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AdviceProto& from_msg);
    ::google::protobuf::internal::MapField<AdviceProto_CheckersEntry_DoNotUse, std::string, ::tensorflow::tfprof::AdviceProto_Checker,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        checkers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GraphNodeProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tfprof.GraphNodeProto) */ {
 public:
  inline GraphNodeProto() : GraphNodeProto(nullptr) {}
  ~GraphNodeProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphNodeProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphNodeProto(const GraphNodeProto& from) : GraphNodeProto(nullptr, from) {}
  inline GraphNodeProto(GraphNodeProto&& from) noexcept
      : GraphNodeProto(nullptr, std::move(from)) {}
  inline GraphNodeProto& operator=(const GraphNodeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphNodeProto& operator=(GraphNodeProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphNodeProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphNodeProto* internal_default_instance() {
    return reinterpret_cast<const GraphNodeProto*>(
        &_GraphNodeProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GraphNodeProto& a, GraphNodeProto& b) { a.Swap(&b); }
  inline void Swap(GraphNodeProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphNodeProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphNodeProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphNodeProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphNodeProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphNodeProto& from) { GraphNodeProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphNodeProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tfprof.GraphNodeProto"; }

 protected:
  explicit GraphNodeProto(::google::protobuf::Arena* arena);
  GraphNodeProto(::google::protobuf::Arena* arena, const GraphNodeProto& from);
  GraphNodeProto(::google::protobuf::Arena* arena, GraphNodeProto&& from) noexcept
      : GraphNodeProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevicesFieldNumber = 10,
    kShapesFieldNumber = 11,
    kChildrenFieldNumber = 12,
    kInputShapesFieldNumber = 16,
    kNameFieldNumber = 1,
    kTensorValueFieldNumber = 15,
    kExecMicrosFieldNumber = 2,
    kRequestedBytesFieldNumber = 3,
    kParametersFieldNumber = 4,
    kTotalExecMicrosFieldNumber = 6,
    kTotalRequestedBytesFieldNumber = 7,
    kTotalParametersFieldNumber = 8,
    kFloatOpsFieldNumber = 13,
    kTotalFloatOpsFieldNumber = 14,
    kAcceleratorExecMicrosFieldNumber = 17,
    kCpuExecMicrosFieldNumber = 18,
    kTotalAcceleratorExecMicrosFieldNumber = 19,
    kTotalCpuExecMicrosFieldNumber = 20,
    kRunCountFieldNumber = 21,
    kTotalRunCountFieldNumber = 22,
    kTotalDefinitionCountFieldNumber = 23,
    kPeakBytesFieldNumber = 24,
    kResidualBytesFieldNumber = 25,
    kOutputBytesFieldNumber = 26,
    kTotalPeakBytesFieldNumber = 27,
    kTotalResidualBytesFieldNumber = 28,
    kTotalOutputBytesFieldNumber = 29,
  };
  // repeated string devices = 10;
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  const std::string& devices(int index) const;
  std::string* mutable_devices(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_devices(int index, Arg_&& value, Args_... args);
  std::string* add_devices();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_devices(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_devices();

  public:
  // repeated .tensorflow.TensorShapeProto shapes = 11;
  int shapes_size() const;
  private:
  int _internal_shapes_size() const;

  public:
  void clear_shapes() ;
  ::tensorflow::TensorShapeProto* mutable_shapes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>* mutable_shapes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>& _internal_shapes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>* _internal_mutable_shapes();
  public:
  const ::tensorflow::TensorShapeProto& shapes(int index) const;
  ::tensorflow::TensorShapeProto* add_shapes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>& shapes() const;
  // repeated .tensorflow.tfprof.GraphNodeProto children = 12;
  int children_size() const;
  private:
  int _internal_children_size() const;

  public:
  void clear_children() ;
  ::tensorflow::tfprof::GraphNodeProto* mutable_children(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>* mutable_children();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>& _internal_children() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>* _internal_mutable_children();
  public:
  const ::tensorflow::tfprof::GraphNodeProto& children(int index) const;
  ::tensorflow::tfprof::GraphNodeProto* add_children();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>& children() const;
  // map<int32, .tensorflow.TensorShapeProto> input_shapes = 16;
  int input_shapes_size() const;
  private:
  int _internal_input_shapes_size() const;

  public:
  void clear_input_shapes() ;
  const ::google::protobuf::Map<::int32_t, ::tensorflow::TensorShapeProto>& input_shapes() const;
  ::google::protobuf::Map<::int32_t, ::tensorflow::TensorShapeProto>* mutable_input_shapes();

  private:
  const ::google::protobuf::Map<::int32_t, ::tensorflow::TensorShapeProto>& _internal_input_shapes() const;
  ::google::protobuf::Map<::int32_t, ::tensorflow::TensorShapeProto>* _internal_mutable_input_shapes();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;
  bool has_tensor_value() const;
  void clear_tensor_value() ;
  const ::tensorflow::tfprof::TFProfTensorProto& tensor_value() const;
  PROTOBUF_NODISCARD ::tensorflow::tfprof::TFProfTensorProto* release_tensor_value();
  ::tensorflow::tfprof::TFProfTensorProto* mutable_tensor_value();
  void set_allocated_tensor_value(::tensorflow::tfprof::TFProfTensorProto* value);
  void unsafe_arena_set_allocated_tensor_value(::tensorflow::tfprof::TFProfTensorProto* value);
  ::tensorflow::tfprof::TFProfTensorProto* unsafe_arena_release_tensor_value();

  private:
  const ::tensorflow::tfprof::TFProfTensorProto& _internal_tensor_value() const;
  ::tensorflow::tfprof::TFProfTensorProto* _internal_mutable_tensor_value();

  public:
  // int64 exec_micros = 2;
  void clear_exec_micros() ;
  ::int64_t exec_micros() const;
  void set_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_exec_micros() const;
  void _internal_set_exec_micros(::int64_t value);

  public:
  // int64 requested_bytes = 3;
  void clear_requested_bytes() ;
  ::int64_t requested_bytes() const;
  void set_requested_bytes(::int64_t value);

  private:
  ::int64_t _internal_requested_bytes() const;
  void _internal_set_requested_bytes(::int64_t value);

  public:
  // int64 parameters = 4;
  void clear_parameters() ;
  ::int64_t parameters() const;
  void set_parameters(::int64_t value);

  private:
  ::int64_t _internal_parameters() const;
  void _internal_set_parameters(::int64_t value);

  public:
  // int64 total_exec_micros = 6;
  void clear_total_exec_micros() ;
  ::int64_t total_exec_micros() const;
  void set_total_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_total_exec_micros() const;
  void _internal_set_total_exec_micros(::int64_t value);

  public:
  // int64 total_requested_bytes = 7;
  void clear_total_requested_bytes() ;
  ::int64_t total_requested_bytes() const;
  void set_total_requested_bytes(::int64_t value);

  private:
  ::int64_t _internal_total_requested_bytes() const;
  void _internal_set_total_requested_bytes(::int64_t value);

  public:
  // int64 total_parameters = 8;
  void clear_total_parameters() ;
  ::int64_t total_parameters() const;
  void set_total_parameters(::int64_t value);

  private:
  ::int64_t _internal_total_parameters() const;
  void _internal_set_total_parameters(::int64_t value);

  public:
  // int64 float_ops = 13;
  void clear_float_ops() ;
  ::int64_t float_ops() const;
  void set_float_ops(::int64_t value);

  private:
  ::int64_t _internal_float_ops() const;
  void _internal_set_float_ops(::int64_t value);

  public:
  // int64 total_float_ops = 14;
  void clear_total_float_ops() ;
  ::int64_t total_float_ops() const;
  void set_total_float_ops(::int64_t value);

  private:
  ::int64_t _internal_total_float_ops() const;
  void _internal_set_total_float_ops(::int64_t value);

  public:
  // int64 accelerator_exec_micros = 17;
  void clear_accelerator_exec_micros() ;
  ::int64_t accelerator_exec_micros() const;
  void set_accelerator_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_accelerator_exec_micros() const;
  void _internal_set_accelerator_exec_micros(::int64_t value);

  public:
  // int64 cpu_exec_micros = 18;
  void clear_cpu_exec_micros() ;
  ::int64_t cpu_exec_micros() const;
  void set_cpu_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_cpu_exec_micros() const;
  void _internal_set_cpu_exec_micros(::int64_t value);

  public:
  // int64 total_accelerator_exec_micros = 19;
  void clear_total_accelerator_exec_micros() ;
  ::int64_t total_accelerator_exec_micros() const;
  void set_total_accelerator_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_total_accelerator_exec_micros() const;
  void _internal_set_total_accelerator_exec_micros(::int64_t value);

  public:
  // int64 total_cpu_exec_micros = 20;
  void clear_total_cpu_exec_micros() ;
  ::int64_t total_cpu_exec_micros() const;
  void set_total_cpu_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_total_cpu_exec_micros() const;
  void _internal_set_total_cpu_exec_micros(::int64_t value);

  public:
  // int64 run_count = 21;
  void clear_run_count() ;
  ::int64_t run_count() const;
  void set_run_count(::int64_t value);

  private:
  ::int64_t _internal_run_count() const;
  void _internal_set_run_count(::int64_t value);

  public:
  // int64 total_run_count = 22;
  void clear_total_run_count() ;
  ::int64_t total_run_count() const;
  void set_total_run_count(::int64_t value);

  private:
  ::int64_t _internal_total_run_count() const;
  void _internal_set_total_run_count(::int64_t value);

  public:
  // int64 total_definition_count = 23;
  void clear_total_definition_count() ;
  ::int64_t total_definition_count() const;
  void set_total_definition_count(::int64_t value);

  private:
  ::int64_t _internal_total_definition_count() const;
  void _internal_set_total_definition_count(::int64_t value);

  public:
  // int64 peak_bytes = 24;
  void clear_peak_bytes() ;
  ::int64_t peak_bytes() const;
  void set_peak_bytes(::int64_t value);

  private:
  ::int64_t _internal_peak_bytes() const;
  void _internal_set_peak_bytes(::int64_t value);

  public:
  // int64 residual_bytes = 25;
  void clear_residual_bytes() ;
  ::int64_t residual_bytes() const;
  void set_residual_bytes(::int64_t value);

  private:
  ::int64_t _internal_residual_bytes() const;
  void _internal_set_residual_bytes(::int64_t value);

  public:
  // int64 output_bytes = 26;
  void clear_output_bytes() ;
  ::int64_t output_bytes() const;
  void set_output_bytes(::int64_t value);

  private:
  ::int64_t _internal_output_bytes() const;
  void _internal_set_output_bytes(::int64_t value);

  public:
  // int64 total_peak_bytes = 27;
  void clear_total_peak_bytes() ;
  ::int64_t total_peak_bytes() const;
  void set_total_peak_bytes(::int64_t value);

  private:
  ::int64_t _internal_total_peak_bytes() const;
  void _internal_set_total_peak_bytes(::int64_t value);

  public:
  // int64 total_residual_bytes = 28;
  void clear_total_residual_bytes() ;
  ::int64_t total_residual_bytes() const;
  void set_total_residual_bytes(::int64_t value);

  private:
  ::int64_t _internal_total_residual_bytes() const;
  void _internal_set_total_residual_bytes(::int64_t value);

  public:
  // int64 total_output_bytes = 29;
  void clear_total_output_bytes() ;
  ::int64_t total_output_bytes() const;
  void set_total_output_bytes(::int64_t value);

  private:
  ::int64_t _internal_total_output_bytes() const;
  void _internal_set_total_output_bytes(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.GraphNodeProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 27, 5,
      76, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphNodeProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> devices_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorShapeProto > shapes_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::GraphNodeProto > children_;
    ::google::protobuf::internal::MapField<GraphNodeProto_InputShapesEntry_DoNotUse, ::int32_t, ::tensorflow::TensorShapeProto,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        input_shapes_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::tensorflow::tfprof::TFProfTensorProto* tensor_value_;
    ::int64_t exec_micros_;
    ::int64_t requested_bytes_;
    ::int64_t parameters_;
    ::int64_t total_exec_micros_;
    ::int64_t total_requested_bytes_;
    ::int64_t total_parameters_;
    ::int64_t float_ops_;
    ::int64_t total_float_ops_;
    ::int64_t accelerator_exec_micros_;
    ::int64_t cpu_exec_micros_;
    ::int64_t total_accelerator_exec_micros_;
    ::int64_t total_cpu_exec_micros_;
    ::int64_t run_count_;
    ::int64_t total_run_count_;
    ::int64_t total_definition_count_;
    ::int64_t peak_bytes_;
    ::int64_t residual_bytes_;
    ::int64_t output_bytes_;
    ::int64_t total_peak_bytes_;
    ::int64_t total_residual_bytes_;
    ::int64_t total_output_bytes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT MultiGraphNodeProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tfprof.MultiGraphNodeProto) */ {
 public:
  inline MultiGraphNodeProto() : MultiGraphNodeProto(nullptr) {}
  ~MultiGraphNodeProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MultiGraphNodeProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline MultiGraphNodeProto(const MultiGraphNodeProto& from) : MultiGraphNodeProto(nullptr, from) {}
  inline MultiGraphNodeProto(MultiGraphNodeProto&& from) noexcept
      : MultiGraphNodeProto(nullptr, std::move(from)) {}
  inline MultiGraphNodeProto& operator=(const MultiGraphNodeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiGraphNodeProto& operator=(MultiGraphNodeProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MultiGraphNodeProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const MultiGraphNodeProto* internal_default_instance() {
    return reinterpret_cast<const MultiGraphNodeProto*>(
        &_MultiGraphNodeProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MultiGraphNodeProto& a, MultiGraphNodeProto& b) { a.Swap(&b); }
  inline void Swap(MultiGraphNodeProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultiGraphNodeProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MultiGraphNodeProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MultiGraphNodeProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MultiGraphNodeProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MultiGraphNodeProto& from) { MultiGraphNodeProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MultiGraphNodeProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tfprof.MultiGraphNodeProto"; }

 protected:
  explicit MultiGraphNodeProto(::google::protobuf::Arena* arena);
  MultiGraphNodeProto(::google::protobuf::Arena* arena, const MultiGraphNodeProto& from);
  MultiGraphNodeProto(::google::protobuf::Arena* arena, MultiGraphNodeProto&& from) noexcept
      : MultiGraphNodeProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGraphNodesFieldNumber = 10,
    kChildrenFieldNumber = 11,
    kNameFieldNumber = 1,
    kExecMicrosFieldNumber = 2,
    kRequestedBytesFieldNumber = 3,
    kParametersFieldNumber = 4,
    kFloatOpsFieldNumber = 5,
    kTotalExecMicrosFieldNumber = 6,
    kTotalRequestedBytesFieldNumber = 7,
    kTotalParametersFieldNumber = 8,
    kTotalFloatOpsFieldNumber = 9,
    kAcceleratorExecMicrosFieldNumber = 12,
    kCpuExecMicrosFieldNumber = 13,
    kTotalAcceleratorExecMicrosFieldNumber = 14,
    kTotalCpuExecMicrosFieldNumber = 15,
    kPeakBytesFieldNumber = 16,
    kResidualBytesFieldNumber = 17,
    kOutputBytesFieldNumber = 18,
    kTotalPeakBytesFieldNumber = 19,
    kTotalResidualBytesFieldNumber = 20,
    kTotalOutputBytesFieldNumber = 21,
  };
  // repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;
  int graph_nodes_size() const;
  private:
  int _internal_graph_nodes_size() const;

  public:
  void clear_graph_nodes() ;
  ::tensorflow::tfprof::GraphNodeProto* mutable_graph_nodes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>* mutable_graph_nodes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>& _internal_graph_nodes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>* _internal_mutable_graph_nodes();
  public:
  const ::tensorflow::tfprof::GraphNodeProto& graph_nodes(int index) const;
  ::tensorflow::tfprof::GraphNodeProto* add_graph_nodes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>& graph_nodes() const;
  // repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;
  int children_size() const;
  private:
  int _internal_children_size() const;

  public:
  void clear_children() ;
  ::tensorflow::tfprof::MultiGraphNodeProto* mutable_children(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::MultiGraphNodeProto>* mutable_children();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::MultiGraphNodeProto>& _internal_children() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::MultiGraphNodeProto>* _internal_mutable_children();
  public:
  const ::tensorflow::tfprof::MultiGraphNodeProto& children(int index) const;
  ::tensorflow::tfprof::MultiGraphNodeProto* add_children();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::MultiGraphNodeProto>& children() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int64 exec_micros = 2;
  void clear_exec_micros() ;
  ::int64_t exec_micros() const;
  void set_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_exec_micros() const;
  void _internal_set_exec_micros(::int64_t value);

  public:
  // int64 requested_bytes = 3;
  void clear_requested_bytes() ;
  ::int64_t requested_bytes() const;
  void set_requested_bytes(::int64_t value);

  private:
  ::int64_t _internal_requested_bytes() const;
  void _internal_set_requested_bytes(::int64_t value);

  public:
  // int64 parameters = 4;
  void clear_parameters() ;
  ::int64_t parameters() const;
  void set_parameters(::int64_t value);

  private:
  ::int64_t _internal_parameters() const;
  void _internal_set_parameters(::int64_t value);

  public:
  // int64 float_ops = 5;
  void clear_float_ops() ;
  ::int64_t float_ops() const;
  void set_float_ops(::int64_t value);

  private:
  ::int64_t _internal_float_ops() const;
  void _internal_set_float_ops(::int64_t value);

  public:
  // int64 total_exec_micros = 6;
  void clear_total_exec_micros() ;
  ::int64_t total_exec_micros() const;
  void set_total_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_total_exec_micros() const;
  void _internal_set_total_exec_micros(::int64_t value);

  public:
  // int64 total_requested_bytes = 7;
  void clear_total_requested_bytes() ;
  ::int64_t total_requested_bytes() const;
  void set_total_requested_bytes(::int64_t value);

  private:
  ::int64_t _internal_total_requested_bytes() const;
  void _internal_set_total_requested_bytes(::int64_t value);

  public:
  // int64 total_parameters = 8;
  void clear_total_parameters() ;
  ::int64_t total_parameters() const;
  void set_total_parameters(::int64_t value);

  private:
  ::int64_t _internal_total_parameters() const;
  void _internal_set_total_parameters(::int64_t value);

  public:
  // int64 total_float_ops = 9;
  void clear_total_float_ops() ;
  ::int64_t total_float_ops() const;
  void set_total_float_ops(::int64_t value);

  private:
  ::int64_t _internal_total_float_ops() const;
  void _internal_set_total_float_ops(::int64_t value);

  public:
  // int64 accelerator_exec_micros = 12;
  void clear_accelerator_exec_micros() ;
  ::int64_t accelerator_exec_micros() const;
  void set_accelerator_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_accelerator_exec_micros() const;
  void _internal_set_accelerator_exec_micros(::int64_t value);

  public:
  // int64 cpu_exec_micros = 13;
  void clear_cpu_exec_micros() ;
  ::int64_t cpu_exec_micros() const;
  void set_cpu_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_cpu_exec_micros() const;
  void _internal_set_cpu_exec_micros(::int64_t value);

  public:
  // int64 total_accelerator_exec_micros = 14;
  void clear_total_accelerator_exec_micros() ;
  ::int64_t total_accelerator_exec_micros() const;
  void set_total_accelerator_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_total_accelerator_exec_micros() const;
  void _internal_set_total_accelerator_exec_micros(::int64_t value);

  public:
  // int64 total_cpu_exec_micros = 15;
  void clear_total_cpu_exec_micros() ;
  ::int64_t total_cpu_exec_micros() const;
  void set_total_cpu_exec_micros(::int64_t value);

  private:
  ::int64_t _internal_total_cpu_exec_micros() const;
  void _internal_set_total_cpu_exec_micros(::int64_t value);

  public:
  // int64 peak_bytes = 16;
  void clear_peak_bytes() ;
  ::int64_t peak_bytes() const;
  void set_peak_bytes(::int64_t value);

  private:
  ::int64_t _internal_peak_bytes() const;
  void _internal_set_peak_bytes(::int64_t value);

  public:
  // int64 residual_bytes = 17;
  void clear_residual_bytes() ;
  ::int64_t residual_bytes() const;
  void set_residual_bytes(::int64_t value);

  private:
  ::int64_t _internal_residual_bytes() const;
  void _internal_set_residual_bytes(::int64_t value);

  public:
  // int64 output_bytes = 18;
  void clear_output_bytes() ;
  ::int64_t output_bytes() const;
  void set_output_bytes(::int64_t value);

  private:
  ::int64_t _internal_output_bytes() const;
  void _internal_set_output_bytes(::int64_t value);

  public:
  // int64 total_peak_bytes = 19;
  void clear_total_peak_bytes() ;
  ::int64_t total_peak_bytes() const;
  void set_total_peak_bytes(::int64_t value);

  private:
  ::int64_t _internal_total_peak_bytes() const;
  void _internal_set_total_peak_bytes(::int64_t value);

  public:
  // int64 total_residual_bytes = 20;
  void clear_total_residual_bytes() ;
  ::int64_t total_residual_bytes() const;
  void set_total_residual_bytes(::int64_t value);

  private:
  ::int64_t _internal_total_residual_bytes() const;
  void _internal_set_total_residual_bytes(::int64_t value);

  public:
  // int64 total_output_bytes = 21;
  void clear_total_output_bytes() ;
  ::int64_t total_output_bytes() const;
  void set_total_output_bytes(::int64_t value);

  private:
  ::int64_t _internal_total_output_bytes() const;
  void _internal_set_total_output_bytes(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tfprof.MultiGraphNodeProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 21, 2,
      66, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MultiGraphNodeProto& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::GraphNodeProto > graph_nodes_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::tfprof::MultiGraphNodeProto > children_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int64_t exec_micros_;
    ::int64_t requested_bytes_;
    ::int64_t parameters_;
    ::int64_t float_ops_;
    ::int64_t total_exec_micros_;
    ::int64_t total_requested_bytes_;
    ::int64_t total_parameters_;
    ::int64_t total_float_ops_;
    ::int64_t accelerator_exec_micros_;
    ::int64_t cpu_exec_micros_;
    ::int64_t total_accelerator_exec_micros_;
    ::int64_t total_cpu_exec_micros_;
    ::int64_t peak_bytes_;
    ::int64_t residual_bytes_;
    ::int64_t output_bytes_;
    ::int64_t total_peak_bytes_;
    ::int64_t total_residual_bytes_;
    ::int64_t total_output_bytes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TFProfTensorProto

// .tensorflow.DataType dtype = 1;
inline void TFProfTensorProto::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
}
inline ::tensorflow::DataType TFProfTensorProto::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.TFProfTensorProto.dtype)
  return _internal_dtype();
}
inline void TFProfTensorProto::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.TFProfTensorProto.dtype)
}
inline ::tensorflow::DataType TFProfTensorProto::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void TFProfTensorProto::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// repeated double value_double = 2;
inline int TFProfTensorProto::_internal_value_double_size() const {
  return _internal_value_double().size();
}
inline int TFProfTensorProto::value_double_size() const {
  return _internal_value_double_size();
}
inline void TFProfTensorProto::clear_value_double() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_double_.Clear();
}
inline double TFProfTensorProto::value_double(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.TFProfTensorProto.value_double)
  return _internal_value_double().Get(index);
}
inline void TFProfTensorProto::set_value_double(int index, double value) {
  _internal_mutable_value_double()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.TFProfTensorProto.value_double)
}
inline void TFProfTensorProto::add_value_double(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_value_double()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.TFProfTensorProto.value_double)
}
inline const ::google::protobuf::RepeatedField<double>& TFProfTensorProto::value_double() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.TFProfTensorProto.value_double)
  return _internal_value_double();
}
inline ::google::protobuf::RepeatedField<double>* TFProfTensorProto::mutable_value_double()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.TFProfTensorProto.value_double)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_value_double();
}
inline const ::google::protobuf::RepeatedField<double>&
TFProfTensorProto::_internal_value_double() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_double_;
}
inline ::google::protobuf::RepeatedField<double>* TFProfTensorProto::_internal_mutable_value_double() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.value_double_;
}

// repeated int64 value_int64 = 3;
inline int TFProfTensorProto::_internal_value_int64_size() const {
  return _internal_value_int64().size();
}
inline int TFProfTensorProto::value_int64_size() const {
  return _internal_value_int64_size();
}
inline void TFProfTensorProto::clear_value_int64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_int64_.Clear();
}
inline ::int64_t TFProfTensorProto::value_int64(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.TFProfTensorProto.value_int64)
  return _internal_value_int64().Get(index);
}
inline void TFProfTensorProto::set_value_int64(int index, ::int64_t value) {
  _internal_mutable_value_int64()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.TFProfTensorProto.value_int64)
}
inline void TFProfTensorProto::add_value_int64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_value_int64()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.TFProfTensorProto.value_int64)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TFProfTensorProto::value_int64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.TFProfTensorProto.value_int64)
  return _internal_value_int64();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TFProfTensorProto::mutable_value_int64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.TFProfTensorProto.value_int64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_value_int64();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TFProfTensorProto::_internal_value_int64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_int64_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TFProfTensorProto::_internal_mutable_value_int64() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.value_int64_;
}

// repeated string value_str = 4;
inline int TFProfTensorProto::_internal_value_str_size() const {
  return _internal_value_str().size();
}
inline int TFProfTensorProto::value_str_size() const {
  return _internal_value_str_size();
}
inline void TFProfTensorProto::clear_value_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_str_.Clear();
}
inline std::string* TFProfTensorProto::add_value_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_value_str()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.TFProfTensorProto.value_str)
  return _s;
}
inline const std::string& TFProfTensorProto::value_str(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.TFProfTensorProto.value_str)
  return _internal_value_str().Get(index);
}
inline std::string* TFProfTensorProto::mutable_value_str(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.TFProfTensorProto.value_str)
  return _internal_mutable_value_str()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TFProfTensorProto::set_value_str(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_value_str()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.TFProfTensorProto.value_str)
}
template <typename Arg_, typename... Args_>
inline void TFProfTensorProto::add_value_str(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_value_str(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.TFProfTensorProto.value_str)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TFProfTensorProto::value_str() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.TFProfTensorProto.value_str)
  return _internal_value_str();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TFProfTensorProto::mutable_value_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.TFProfTensorProto.value_str)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_value_str();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TFProfTensorProto::_internal_value_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_str_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TFProfTensorProto::_internal_mutable_value_str() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.value_str_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GraphNodeProto

// string name = 1;
inline void GraphNodeProto::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GraphNodeProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphNodeProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.name)
}
inline std::string* GraphNodeProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.GraphNodeProto.name)
  return _s;
}
inline const std::string& GraphNodeProto::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GraphNodeProto::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GraphNodeProto::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GraphNodeProto::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.GraphNodeProto.name)
  return _impl_.name_.Release();
}
inline void GraphNodeProto::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.GraphNodeProto.name)
}

// .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;
inline bool GraphNodeProto::has_tensor_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tensor_value_ != nullptr);
  return value;
}
inline void GraphNodeProto::clear_tensor_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tensor_value_ != nullptr) _impl_.tensor_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::tfprof::TFProfTensorProto& GraphNodeProto::_internal_tensor_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::tfprof::TFProfTensorProto* p = _impl_.tensor_value_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::tfprof::TFProfTensorProto&>(::tensorflow::tfprof::_TFProfTensorProto_default_instance_);
}
inline const ::tensorflow::tfprof::TFProfTensorProto& GraphNodeProto::tensor_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.tensor_value)
  return _internal_tensor_value();
}
inline void GraphNodeProto::unsafe_arena_set_allocated_tensor_value(::tensorflow::tfprof::TFProfTensorProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_value_);
  }
  _impl_.tensor_value_ = reinterpret_cast<::tensorflow::tfprof::TFProfTensorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tfprof.GraphNodeProto.tensor_value)
}
inline ::tensorflow::tfprof::TFProfTensorProto* GraphNodeProto::release_tensor_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::tfprof::TFProfTensorProto* released = _impl_.tensor_value_;
  _impl_.tensor_value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::tfprof::TFProfTensorProto* GraphNodeProto::unsafe_arena_release_tensor_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.GraphNodeProto.tensor_value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::tfprof::TFProfTensorProto* temp = _impl_.tensor_value_;
  _impl_.tensor_value_ = nullptr;
  return temp;
}
inline ::tensorflow::tfprof::TFProfTensorProto* GraphNodeProto::_internal_mutable_tensor_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tensor_value_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::tfprof::TFProfTensorProto>(GetArena());
    _impl_.tensor_value_ = reinterpret_cast<::tensorflow::tfprof::TFProfTensorProto*>(p);
  }
  return _impl_.tensor_value_;
}
inline ::tensorflow::tfprof::TFProfTensorProto* GraphNodeProto::mutable_tensor_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::tfprof::TFProfTensorProto* _msg = _internal_mutable_tensor_value();
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.GraphNodeProto.tensor_value)
  return _msg;
}
inline void GraphNodeProto::set_allocated_tensor_value(::tensorflow::tfprof::TFProfTensorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.tensor_value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tensor_value_ = reinterpret_cast<::tensorflow::tfprof::TFProfTensorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.GraphNodeProto.tensor_value)
}

// int64 run_count = 21;
inline void GraphNodeProto::clear_run_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.run_count_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::run_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.run_count)
  return _internal_run_count();
}
inline void GraphNodeProto::set_run_count(::int64_t value) {
  _internal_set_run_count(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.run_count)
}
inline ::int64_t GraphNodeProto::_internal_run_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.run_count_;
}
inline void GraphNodeProto::_internal_set_run_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.run_count_ = value;
}

// int64 exec_micros = 2;
inline void GraphNodeProto::clear_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exec_micros_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.exec_micros)
  return _internal_exec_micros();
}
inline void GraphNodeProto::set_exec_micros(::int64_t value) {
  _internal_set_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.exec_micros)
}
inline ::int64_t GraphNodeProto::_internal_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exec_micros_;
}
inline void GraphNodeProto::_internal_set_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exec_micros_ = value;
}

// int64 accelerator_exec_micros = 17;
inline void GraphNodeProto::clear_accelerator_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accelerator_exec_micros_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::accelerator_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.accelerator_exec_micros)
  return _internal_accelerator_exec_micros();
}
inline void GraphNodeProto::set_accelerator_exec_micros(::int64_t value) {
  _internal_set_accelerator_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.accelerator_exec_micros)
}
inline ::int64_t GraphNodeProto::_internal_accelerator_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accelerator_exec_micros_;
}
inline void GraphNodeProto::_internal_set_accelerator_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accelerator_exec_micros_ = value;
}

// int64 cpu_exec_micros = 18;
inline void GraphNodeProto::clear_cpu_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_exec_micros_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::cpu_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.cpu_exec_micros)
  return _internal_cpu_exec_micros();
}
inline void GraphNodeProto::set_cpu_exec_micros(::int64_t value) {
  _internal_set_cpu_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.cpu_exec_micros)
}
inline ::int64_t GraphNodeProto::_internal_cpu_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cpu_exec_micros_;
}
inline void GraphNodeProto::_internal_set_cpu_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_exec_micros_ = value;
}

// int64 requested_bytes = 3;
inline void GraphNodeProto::clear_requested_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_bytes_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::requested_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.requested_bytes)
  return _internal_requested_bytes();
}
inline void GraphNodeProto::set_requested_bytes(::int64_t value) {
  _internal_set_requested_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.requested_bytes)
}
inline ::int64_t GraphNodeProto::_internal_requested_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_bytes_;
}
inline void GraphNodeProto::_internal_set_requested_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_bytes_ = value;
}

// int64 peak_bytes = 24;
inline void GraphNodeProto::clear_peak_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peak_bytes_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::peak_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.peak_bytes)
  return _internal_peak_bytes();
}
inline void GraphNodeProto::set_peak_bytes(::int64_t value) {
  _internal_set_peak_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.peak_bytes)
}
inline ::int64_t GraphNodeProto::_internal_peak_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peak_bytes_;
}
inline void GraphNodeProto::_internal_set_peak_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peak_bytes_ = value;
}

// int64 residual_bytes = 25;
inline void GraphNodeProto::clear_residual_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.residual_bytes_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::residual_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.residual_bytes)
  return _internal_residual_bytes();
}
inline void GraphNodeProto::set_residual_bytes(::int64_t value) {
  _internal_set_residual_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.residual_bytes)
}
inline ::int64_t GraphNodeProto::_internal_residual_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.residual_bytes_;
}
inline void GraphNodeProto::_internal_set_residual_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.residual_bytes_ = value;
}

// int64 output_bytes = 26;
inline void GraphNodeProto::clear_output_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_bytes_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::output_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.output_bytes)
  return _internal_output_bytes();
}
inline void GraphNodeProto::set_output_bytes(::int64_t value) {
  _internal_set_output_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.output_bytes)
}
inline ::int64_t GraphNodeProto::_internal_output_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_bytes_;
}
inline void GraphNodeProto::_internal_set_output_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_bytes_ = value;
}

// int64 parameters = 4;
inline void GraphNodeProto::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::parameters() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.parameters)
  return _internal_parameters();
}
inline void GraphNodeProto::set_parameters(::int64_t value) {
  _internal_set_parameters(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.parameters)
}
inline ::int64_t GraphNodeProto::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_;
}
inline void GraphNodeProto::_internal_set_parameters(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_ = value;
}

// int64 float_ops = 13;
inline void GraphNodeProto::clear_float_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.float_ops_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::float_ops() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.float_ops)
  return _internal_float_ops();
}
inline void GraphNodeProto::set_float_ops(::int64_t value) {
  _internal_set_float_ops(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.float_ops)
}
inline ::int64_t GraphNodeProto::_internal_float_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.float_ops_;
}
inline void GraphNodeProto::_internal_set_float_ops(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.float_ops_ = value;
}

// repeated string devices = 10;
inline int GraphNodeProto::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int GraphNodeProto::devices_size() const {
  return _internal_devices_size();
}
inline void GraphNodeProto::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
inline std::string* GraphNodeProto::add_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.GraphNodeProto.devices)
  return _s;
}
inline const std::string& GraphNodeProto::devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.devices)
  return _internal_devices().Get(index);
}
inline std::string* GraphNodeProto::mutable_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.GraphNodeProto.devices)
  return _internal_mutable_devices()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GraphNodeProto::set_devices(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_devices()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.devices)
}
template <typename Arg_, typename... Args_>
inline void GraphNodeProto::add_devices(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_devices(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.GraphNodeProto.devices)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GraphNodeProto::devices() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.GraphNodeProto.devices)
  return _internal_devices();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GraphNodeProto::mutable_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.GraphNodeProto.devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_devices();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GraphNodeProto::_internal_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GraphNodeProto::_internal_mutable_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.devices_;
}

// int64 total_definition_count = 23;
inline void GraphNodeProto::clear_total_definition_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_definition_count_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_definition_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_definition_count)
  return _internal_total_definition_count();
}
inline void GraphNodeProto::set_total_definition_count(::int64_t value) {
  _internal_set_total_definition_count(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_definition_count)
}
inline ::int64_t GraphNodeProto::_internal_total_definition_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_definition_count_;
}
inline void GraphNodeProto::_internal_set_total_definition_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_definition_count_ = value;
}

// int64 total_run_count = 22;
inline void GraphNodeProto::clear_total_run_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_run_count_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_run_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_run_count)
  return _internal_total_run_count();
}
inline void GraphNodeProto::set_total_run_count(::int64_t value) {
  _internal_set_total_run_count(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_run_count)
}
inline ::int64_t GraphNodeProto::_internal_total_run_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_run_count_;
}
inline void GraphNodeProto::_internal_set_total_run_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_run_count_ = value;
}

// int64 total_exec_micros = 6;
inline void GraphNodeProto::clear_total_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_exec_micros_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_exec_micros)
  return _internal_total_exec_micros();
}
inline void GraphNodeProto::set_total_exec_micros(::int64_t value) {
  _internal_set_total_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_exec_micros)
}
inline ::int64_t GraphNodeProto::_internal_total_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_exec_micros_;
}
inline void GraphNodeProto::_internal_set_total_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_exec_micros_ = value;
}

// int64 total_accelerator_exec_micros = 19;
inline void GraphNodeProto::clear_total_accelerator_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_accelerator_exec_micros_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_accelerator_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_accelerator_exec_micros)
  return _internal_total_accelerator_exec_micros();
}
inline void GraphNodeProto::set_total_accelerator_exec_micros(::int64_t value) {
  _internal_set_total_accelerator_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_accelerator_exec_micros)
}
inline ::int64_t GraphNodeProto::_internal_total_accelerator_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_accelerator_exec_micros_;
}
inline void GraphNodeProto::_internal_set_total_accelerator_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_accelerator_exec_micros_ = value;
}

// int64 total_cpu_exec_micros = 20;
inline void GraphNodeProto::clear_total_cpu_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_cpu_exec_micros_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_cpu_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_cpu_exec_micros)
  return _internal_total_cpu_exec_micros();
}
inline void GraphNodeProto::set_total_cpu_exec_micros(::int64_t value) {
  _internal_set_total_cpu_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_cpu_exec_micros)
}
inline ::int64_t GraphNodeProto::_internal_total_cpu_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_cpu_exec_micros_;
}
inline void GraphNodeProto::_internal_set_total_cpu_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_cpu_exec_micros_ = value;
}

// int64 total_requested_bytes = 7;
inline void GraphNodeProto::clear_total_requested_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requested_bytes_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_requested_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_requested_bytes)
  return _internal_total_requested_bytes();
}
inline void GraphNodeProto::set_total_requested_bytes(::int64_t value) {
  _internal_set_total_requested_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_requested_bytes)
}
inline ::int64_t GraphNodeProto::_internal_total_requested_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_requested_bytes_;
}
inline void GraphNodeProto::_internal_set_total_requested_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requested_bytes_ = value;
}

// int64 total_peak_bytes = 27;
inline void GraphNodeProto::clear_total_peak_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_peak_bytes_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_peak_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_peak_bytes)
  return _internal_total_peak_bytes();
}
inline void GraphNodeProto::set_total_peak_bytes(::int64_t value) {
  _internal_set_total_peak_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_peak_bytes)
}
inline ::int64_t GraphNodeProto::_internal_total_peak_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_peak_bytes_;
}
inline void GraphNodeProto::_internal_set_total_peak_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_peak_bytes_ = value;
}

// int64 total_residual_bytes = 28;
inline void GraphNodeProto::clear_total_residual_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_residual_bytes_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_residual_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_residual_bytes)
  return _internal_total_residual_bytes();
}
inline void GraphNodeProto::set_total_residual_bytes(::int64_t value) {
  _internal_set_total_residual_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_residual_bytes)
}
inline ::int64_t GraphNodeProto::_internal_total_residual_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_residual_bytes_;
}
inline void GraphNodeProto::_internal_set_total_residual_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_residual_bytes_ = value;
}

// int64 total_output_bytes = 29;
inline void GraphNodeProto::clear_total_output_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_output_bytes_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_output_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_output_bytes)
  return _internal_total_output_bytes();
}
inline void GraphNodeProto::set_total_output_bytes(::int64_t value) {
  _internal_set_total_output_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_output_bytes)
}
inline ::int64_t GraphNodeProto::_internal_total_output_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_output_bytes_;
}
inline void GraphNodeProto::_internal_set_total_output_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_output_bytes_ = value;
}

// int64 total_parameters = 8;
inline void GraphNodeProto::clear_total_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_parameters_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_parameters() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_parameters)
  return _internal_total_parameters();
}
inline void GraphNodeProto::set_total_parameters(::int64_t value) {
  _internal_set_total_parameters(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_parameters)
}
inline ::int64_t GraphNodeProto::_internal_total_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_parameters_;
}
inline void GraphNodeProto::_internal_set_total_parameters(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_parameters_ = value;
}

// int64 total_float_ops = 14;
inline void GraphNodeProto::clear_total_float_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_float_ops_ = ::int64_t{0};
}
inline ::int64_t GraphNodeProto::total_float_ops() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.total_float_ops)
  return _internal_total_float_ops();
}
inline void GraphNodeProto::set_total_float_ops(::int64_t value) {
  _internal_set_total_float_ops(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.GraphNodeProto.total_float_ops)
}
inline ::int64_t GraphNodeProto::_internal_total_float_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_float_ops_;
}
inline void GraphNodeProto::_internal_set_total_float_ops(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_float_ops_ = value;
}

// repeated .tensorflow.TensorShapeProto shapes = 11;
inline int GraphNodeProto::_internal_shapes_size() const {
  return _internal_shapes().size();
}
inline int GraphNodeProto::shapes_size() const {
  return _internal_shapes_size();
}
inline ::tensorflow::TensorShapeProto* GraphNodeProto::mutable_shapes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.GraphNodeProto.shapes)
  return _internal_mutable_shapes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>* GraphNodeProto::mutable_shapes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.GraphNodeProto.shapes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shapes();
}
inline const ::tensorflow::TensorShapeProto& GraphNodeProto::shapes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.shapes)
  return _internal_shapes().Get(index);
}
inline ::tensorflow::TensorShapeProto* GraphNodeProto::add_shapes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TensorShapeProto* _add = _internal_mutable_shapes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.GraphNodeProto.shapes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>& GraphNodeProto::shapes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.GraphNodeProto.shapes)
  return _internal_shapes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>&
GraphNodeProto::_internal_shapes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shapes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>*
GraphNodeProto::_internal_mutable_shapes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shapes_;
}

// map<int32, .tensorflow.TensorShapeProto> input_shapes = 16;
inline int GraphNodeProto::_internal_input_shapes_size() const {
  return _internal_input_shapes().size();
}
inline int GraphNodeProto::input_shapes_size() const {
  return _internal_input_shapes_size();
}
inline const ::google::protobuf::Map<::int32_t, ::tensorflow::TensorShapeProto>& GraphNodeProto::_internal_input_shapes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_shapes_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::tensorflow::TensorShapeProto>& GraphNodeProto::input_shapes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.GraphNodeProto.input_shapes)
  return _internal_input_shapes();
}
inline ::google::protobuf::Map<::int32_t, ::tensorflow::TensorShapeProto>* GraphNodeProto::_internal_mutable_input_shapes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.input_shapes_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::tensorflow::TensorShapeProto>* GraphNodeProto::mutable_input_shapes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.GraphNodeProto.input_shapes)
  return _internal_mutable_input_shapes();
}

// repeated .tensorflow.tfprof.GraphNodeProto children = 12;
inline int GraphNodeProto::_internal_children_size() const {
  return _internal_children().size();
}
inline int GraphNodeProto::children_size() const {
  return _internal_children_size();
}
inline void GraphNodeProto::clear_children() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.children_.Clear();
}
inline ::tensorflow::tfprof::GraphNodeProto* GraphNodeProto::mutable_children(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.GraphNodeProto.children)
  return _internal_mutable_children()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>* GraphNodeProto::mutable_children()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.GraphNodeProto.children)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_children();
}
inline const ::tensorflow::tfprof::GraphNodeProto& GraphNodeProto::children(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.GraphNodeProto.children)
  return _internal_children().Get(index);
}
inline ::tensorflow::tfprof::GraphNodeProto* GraphNodeProto::add_children() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::tfprof::GraphNodeProto* _add = _internal_mutable_children()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.GraphNodeProto.children)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>& GraphNodeProto::children() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.GraphNodeProto.children)
  return _internal_children();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>&
GraphNodeProto::_internal_children() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.children_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>*
GraphNodeProto::_internal_mutable_children() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.children_;
}

// -------------------------------------------------------------------

// MultiGraphNodeProto

// string name = 1;
inline void MultiGraphNodeProto::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& MultiGraphNodeProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MultiGraphNodeProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.name)
}
inline std::string* MultiGraphNodeProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.MultiGraphNodeProto.name)
  return _s;
}
inline const std::string& MultiGraphNodeProto::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void MultiGraphNodeProto::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* MultiGraphNodeProto::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* MultiGraphNodeProto::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tfprof.MultiGraphNodeProto.name)
  return _impl_.name_.Release();
}
inline void MultiGraphNodeProto::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tfprof.MultiGraphNodeProto.name)
}

// int64 exec_micros = 2;
inline void MultiGraphNodeProto::clear_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exec_micros_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.exec_micros)
  return _internal_exec_micros();
}
inline void MultiGraphNodeProto::set_exec_micros(::int64_t value) {
  _internal_set_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.exec_micros)
}
inline ::int64_t MultiGraphNodeProto::_internal_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exec_micros_;
}
inline void MultiGraphNodeProto::_internal_set_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exec_micros_ = value;
}

// int64 accelerator_exec_micros = 12;
inline void MultiGraphNodeProto::clear_accelerator_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accelerator_exec_micros_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::accelerator_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.accelerator_exec_micros)
  return _internal_accelerator_exec_micros();
}
inline void MultiGraphNodeProto::set_accelerator_exec_micros(::int64_t value) {
  _internal_set_accelerator_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.accelerator_exec_micros)
}
inline ::int64_t MultiGraphNodeProto::_internal_accelerator_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accelerator_exec_micros_;
}
inline void MultiGraphNodeProto::_internal_set_accelerator_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accelerator_exec_micros_ = value;
}

// int64 cpu_exec_micros = 13;
inline void MultiGraphNodeProto::clear_cpu_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_exec_micros_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::cpu_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.cpu_exec_micros)
  return _internal_cpu_exec_micros();
}
inline void MultiGraphNodeProto::set_cpu_exec_micros(::int64_t value) {
  _internal_set_cpu_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.cpu_exec_micros)
}
inline ::int64_t MultiGraphNodeProto::_internal_cpu_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cpu_exec_micros_;
}
inline void MultiGraphNodeProto::_internal_set_cpu_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_exec_micros_ = value;
}

// int64 requested_bytes = 3;
inline void MultiGraphNodeProto::clear_requested_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_bytes_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::requested_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.requested_bytes)
  return _internal_requested_bytes();
}
inline void MultiGraphNodeProto::set_requested_bytes(::int64_t value) {
  _internal_set_requested_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.requested_bytes)
}
inline ::int64_t MultiGraphNodeProto::_internal_requested_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_bytes_;
}
inline void MultiGraphNodeProto::_internal_set_requested_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_bytes_ = value;
}

// int64 peak_bytes = 16;
inline void MultiGraphNodeProto::clear_peak_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peak_bytes_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::peak_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.peak_bytes)
  return _internal_peak_bytes();
}
inline void MultiGraphNodeProto::set_peak_bytes(::int64_t value) {
  _internal_set_peak_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.peak_bytes)
}
inline ::int64_t MultiGraphNodeProto::_internal_peak_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peak_bytes_;
}
inline void MultiGraphNodeProto::_internal_set_peak_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peak_bytes_ = value;
}

// int64 residual_bytes = 17;
inline void MultiGraphNodeProto::clear_residual_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.residual_bytes_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::residual_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.residual_bytes)
  return _internal_residual_bytes();
}
inline void MultiGraphNodeProto::set_residual_bytes(::int64_t value) {
  _internal_set_residual_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.residual_bytes)
}
inline ::int64_t MultiGraphNodeProto::_internal_residual_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.residual_bytes_;
}
inline void MultiGraphNodeProto::_internal_set_residual_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.residual_bytes_ = value;
}

// int64 output_bytes = 18;
inline void MultiGraphNodeProto::clear_output_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_bytes_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::output_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.output_bytes)
  return _internal_output_bytes();
}
inline void MultiGraphNodeProto::set_output_bytes(::int64_t value) {
  _internal_set_output_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.output_bytes)
}
inline ::int64_t MultiGraphNodeProto::_internal_output_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_bytes_;
}
inline void MultiGraphNodeProto::_internal_set_output_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_bytes_ = value;
}

// int64 parameters = 4;
inline void MultiGraphNodeProto::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::parameters() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.parameters)
  return _internal_parameters();
}
inline void MultiGraphNodeProto::set_parameters(::int64_t value) {
  _internal_set_parameters(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.parameters)
}
inline ::int64_t MultiGraphNodeProto::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_;
}
inline void MultiGraphNodeProto::_internal_set_parameters(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_ = value;
}

// int64 float_ops = 5;
inline void MultiGraphNodeProto::clear_float_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.float_ops_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::float_ops() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.float_ops)
  return _internal_float_ops();
}
inline void MultiGraphNodeProto::set_float_ops(::int64_t value) {
  _internal_set_float_ops(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.float_ops)
}
inline ::int64_t MultiGraphNodeProto::_internal_float_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.float_ops_;
}
inline void MultiGraphNodeProto::_internal_set_float_ops(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.float_ops_ = value;
}

// int64 total_exec_micros = 6;
inline void MultiGraphNodeProto::clear_total_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_exec_micros_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::total_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.total_exec_micros)
  return _internal_total_exec_micros();
}
inline void MultiGraphNodeProto::set_total_exec_micros(::int64_t value) {
  _internal_set_total_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.total_exec_micros)
}
inline ::int64_t MultiGraphNodeProto::_internal_total_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_exec_micros_;
}
inline void MultiGraphNodeProto::_internal_set_total_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_exec_micros_ = value;
}

// int64 total_accelerator_exec_micros = 14;
inline void MultiGraphNodeProto::clear_total_accelerator_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_accelerator_exec_micros_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::total_accelerator_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.total_accelerator_exec_micros)
  return _internal_total_accelerator_exec_micros();
}
inline void MultiGraphNodeProto::set_total_accelerator_exec_micros(::int64_t value) {
  _internal_set_total_accelerator_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.total_accelerator_exec_micros)
}
inline ::int64_t MultiGraphNodeProto::_internal_total_accelerator_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_accelerator_exec_micros_;
}
inline void MultiGraphNodeProto::_internal_set_total_accelerator_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_accelerator_exec_micros_ = value;
}

// int64 total_cpu_exec_micros = 15;
inline void MultiGraphNodeProto::clear_total_cpu_exec_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_cpu_exec_micros_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::total_cpu_exec_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.total_cpu_exec_micros)
  return _internal_total_cpu_exec_micros();
}
inline void MultiGraphNodeProto::set_total_cpu_exec_micros(::int64_t value) {
  _internal_set_total_cpu_exec_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.total_cpu_exec_micros)
}
inline ::int64_t MultiGraphNodeProto::_internal_total_cpu_exec_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_cpu_exec_micros_;
}
inline void MultiGraphNodeProto::_internal_set_total_cpu_exec_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_cpu_exec_micros_ = value;
}

// int64 total_requested_bytes = 7;
inline void MultiGraphNodeProto::clear_total_requested_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requested_bytes_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::total_requested_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.total_requested_bytes)
  return _internal_total_requested_bytes();
}
inline void MultiGraphNodeProto::set_total_requested_bytes(::int64_t value) {
  _internal_set_total_requested_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.total_requested_bytes)
}
inline ::int64_t MultiGraphNodeProto::_internal_total_requested_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_requested_bytes_;
}
inline void MultiGraphNodeProto::_internal_set_total_requested_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requested_bytes_ = value;
}

// int64 total_peak_bytes = 19;
inline void MultiGraphNodeProto::clear_total_peak_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_peak_bytes_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::total_peak_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.total_peak_bytes)
  return _internal_total_peak_bytes();
}
inline void MultiGraphNodeProto::set_total_peak_bytes(::int64_t value) {
  _internal_set_total_peak_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.total_peak_bytes)
}
inline ::int64_t MultiGraphNodeProto::_internal_total_peak_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_peak_bytes_;
}
inline void MultiGraphNodeProto::_internal_set_total_peak_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_peak_bytes_ = value;
}

// int64 total_residual_bytes = 20;
inline void MultiGraphNodeProto::clear_total_residual_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_residual_bytes_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::total_residual_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.total_residual_bytes)
  return _internal_total_residual_bytes();
}
inline void MultiGraphNodeProto::set_total_residual_bytes(::int64_t value) {
  _internal_set_total_residual_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.total_residual_bytes)
}
inline ::int64_t MultiGraphNodeProto::_internal_total_residual_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_residual_bytes_;
}
inline void MultiGraphNodeProto::_internal_set_total_residual_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_residual_bytes_ = value;
}

// int64 total_output_bytes = 21;
inline void MultiGraphNodeProto::clear_total_output_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_output_bytes_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::total_output_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.total_output_bytes)
  return _internal_total_output_bytes();
}
inline void MultiGraphNodeProto::set_total_output_bytes(::int64_t value) {
  _internal_set_total_output_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.total_output_bytes)
}
inline ::int64_t MultiGraphNodeProto::_internal_total_output_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_output_bytes_;
}
inline void MultiGraphNodeProto::_internal_set_total_output_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_output_bytes_ = value;
}

// int64 total_parameters = 8;
inline void MultiGraphNodeProto::clear_total_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_parameters_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::total_parameters() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.total_parameters)
  return _internal_total_parameters();
}
inline void MultiGraphNodeProto::set_total_parameters(::int64_t value) {
  _internal_set_total_parameters(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.total_parameters)
}
inline ::int64_t MultiGraphNodeProto::_internal_total_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_parameters_;
}
inline void MultiGraphNodeProto::_internal_set_total_parameters(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_parameters_ = value;
}

// int64 total_float_ops = 9;
inline void MultiGraphNodeProto::clear_total_float_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_float_ops_ = ::int64_t{0};
}
inline ::int64_t MultiGraphNodeProto::total_float_ops() const {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.total_float_ops)
  return _internal_total_float_ops();
}
inline void MultiGraphNodeProto::set_total_float_ops(::int64_t value) {
  _internal_set_total_float_ops(value);
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.MultiGraphNodeProto.total_float_ops)
}
inline ::int64_t MultiGraphNodeProto::_internal_total_float_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_float_ops_;
}
inline void MultiGraphNodeProto::_internal_set_total_float_ops(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_float_ops_ = value;
}

// repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;
inline int MultiGraphNodeProto::_internal_graph_nodes_size() const {
  return _internal_graph_nodes().size();
}
inline int MultiGraphNodeProto::graph_nodes_size() const {
  return _internal_graph_nodes_size();
}
inline void MultiGraphNodeProto::clear_graph_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_nodes_.Clear();
}
inline ::tensorflow::tfprof::GraphNodeProto* MultiGraphNodeProto::mutable_graph_nodes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.MultiGraphNodeProto.graph_nodes)
  return _internal_mutable_graph_nodes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>* MultiGraphNodeProto::mutable_graph_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.MultiGraphNodeProto.graph_nodes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_graph_nodes();
}
inline const ::tensorflow::tfprof::GraphNodeProto& MultiGraphNodeProto::graph_nodes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.graph_nodes)
  return _internal_graph_nodes().Get(index);
}
inline ::tensorflow::tfprof::GraphNodeProto* MultiGraphNodeProto::add_graph_nodes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::tfprof::GraphNodeProto* _add = _internal_mutable_graph_nodes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.MultiGraphNodeProto.graph_nodes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>& MultiGraphNodeProto::graph_nodes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.MultiGraphNodeProto.graph_nodes)
  return _internal_graph_nodes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>&
MultiGraphNodeProto::_internal_graph_nodes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_nodes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::GraphNodeProto>*
MultiGraphNodeProto::_internal_mutable_graph_nodes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.graph_nodes_;
}

// repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;
inline int MultiGraphNodeProto::_internal_children_size() const {
  return _internal_children().size();
}
inline int MultiGraphNodeProto::children_size() const {
  return _internal_children_size();
}
inline void MultiGraphNodeProto::clear_children() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.children_.Clear();
}
inline ::tensorflow::tfprof::MultiGraphNodeProto* MultiGraphNodeProto::mutable_children(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.MultiGraphNodeProto.children)
  return _internal_mutable_children()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::MultiGraphNodeProto>* MultiGraphNodeProto::mutable_children()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.MultiGraphNodeProto.children)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_children();
}
inline const ::tensorflow::tfprof::MultiGraphNodeProto& MultiGraphNodeProto::children(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.MultiGraphNodeProto.children)
  return _internal_children().Get(index);
}
inline ::tensorflow::tfprof::MultiGraphNodeProto* MultiGraphNodeProto::add_children() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::tfprof::MultiGraphNodeProto* _add = _internal_mutable_children()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.MultiGraphNodeProto.children)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::MultiGraphNodeProto>& MultiGraphNodeProto::children() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.MultiGraphNodeProto.children)
  return _internal_children();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::MultiGraphNodeProto>&
MultiGraphNodeProto::_internal_children() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.children_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tfprof::MultiGraphNodeProto>*
MultiGraphNodeProto::_internal_mutable_children() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.children_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AdviceProto_Checker

// repeated string reports = 2;
inline int AdviceProto_Checker::_internal_reports_size() const {
  return _internal_reports().size();
}
inline int AdviceProto_Checker::reports_size() const {
  return _internal_reports_size();
}
inline void AdviceProto_Checker::clear_reports() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reports_.Clear();
}
inline std::string* AdviceProto_Checker::add_reports() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_reports()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.tfprof.AdviceProto.Checker.reports)
  return _s;
}
inline const std::string& AdviceProto_Checker::reports(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tfprof.AdviceProto.Checker.reports)
  return _internal_reports().Get(index);
}
inline std::string* AdviceProto_Checker::mutable_reports(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tfprof.AdviceProto.Checker.reports)
  return _internal_mutable_reports()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void AdviceProto_Checker::set_reports(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_reports()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.tfprof.AdviceProto.Checker.reports)
}
template <typename Arg_, typename... Args_>
inline void AdviceProto_Checker::add_reports(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_reports(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.tfprof.AdviceProto.Checker.reports)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AdviceProto_Checker::reports() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tfprof.AdviceProto.Checker.reports)
  return _internal_reports();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AdviceProto_Checker::mutable_reports() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tfprof.AdviceProto.Checker.reports)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_reports();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AdviceProto_Checker::_internal_reports() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reports_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AdviceProto_Checker::_internal_mutable_reports() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.reports_;
}

// -------------------------------------------------------------------

// AdviceProto

// map<string, .tensorflow.tfprof.AdviceProto.Checker> checkers = 1;
inline int AdviceProto::_internal_checkers_size() const {
  return _internal_checkers().size();
}
inline int AdviceProto::checkers_size() const {
  return _internal_checkers_size();
}
inline void AdviceProto::clear_checkers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checkers_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdviceProto_Checker>& AdviceProto::_internal_checkers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checkers_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdviceProto_Checker>& AdviceProto::checkers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.tfprof.AdviceProto.checkers)
  return _internal_checkers();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdviceProto_Checker>* AdviceProto::_internal_mutable_checkers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.checkers_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::tfprof::AdviceProto_Checker>* AdviceProto::mutable_checkers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.tfprof.AdviceProto.checkers)
  return _internal_mutable_checkers();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tfprof
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprofiler_2ftfprof_5foutput_2eproto_2epb_2eh
