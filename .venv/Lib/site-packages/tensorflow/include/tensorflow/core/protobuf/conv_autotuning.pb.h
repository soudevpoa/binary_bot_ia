// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/conv_autotuning.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "xla/tsl/protobuf/dnn.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto;
namespace tensorflow {
class ConvolutionProto;
struct ConvolutionProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern ConvolutionProtoDefaultTypeInternal _ConvolutionProto_default_instance_;
class MatmulProto;
struct MatmulProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern MatmulProtoDefaultTypeInternal _MatmulProto_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT MatmulProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.MatmulProto) */ {
 public:
  inline MatmulProto() : MatmulProto(nullptr) {}
  ~MatmulProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MatmulProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline MatmulProto(const MatmulProto& from) : MatmulProto(nullptr, from) {}
  inline MatmulProto(MatmulProto&& from) noexcept
      : MatmulProto(nullptr, std::move(from)) {}
  inline MatmulProto& operator=(const MatmulProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatmulProto& operator=(MatmulProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MatmulProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const MatmulProto* internal_default_instance() {
    return reinterpret_cast<const MatmulProto*>(
        &_MatmulProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MatmulProto& a, MatmulProto& b) { a.Swap(&b); }
  inline void Swap(MatmulProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MatmulProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MatmulProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MatmulProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MatmulProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MatmulProto& from) { MatmulProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MatmulProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.MatmulProto"; }

 protected:
  explicit MatmulProto(::google::protobuf::Arena* arena);
  MatmulProto(::google::protobuf::Arena* arena, const MatmulProto& from);
  MatmulProto(::google::protobuf::Arena* arena, MatmulProto&& from) noexcept
      : MatmulProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAbDtypeFieldNumber = 1,
    kCDtypeFieldNumber = 2,
    kMFieldNumber = 5,
    kNFieldNumber = 6,
    kTransAFieldNumber = 3,
    kTransBFieldNumber = 4,
    kActivationFieldNumber = 11,
    kKFieldNumber = 7,
    kLdaFieldNumber = 8,
    kLdbFieldNumber = 9,
    kLdcFieldNumber = 10,
    kAAddressFieldNumber = 12,
    kBAddressFieldNumber = 13,
    kCAddressFieldNumber = 14,
    kBiasAddressFieldNumber = 15,
  };
  // .stream_executor.dnn.DataType ab_dtype = 1;
  void clear_ab_dtype() ;
  ::stream_executor::dnn::DataType ab_dtype() const;
  void set_ab_dtype(::stream_executor::dnn::DataType value);

  private:
  ::stream_executor::dnn::DataType _internal_ab_dtype() const;
  void _internal_set_ab_dtype(::stream_executor::dnn::DataType value);

  public:
  // .stream_executor.dnn.DataType c_dtype = 2;
  void clear_c_dtype() ;
  ::stream_executor::dnn::DataType c_dtype() const;
  void set_c_dtype(::stream_executor::dnn::DataType value);

  private:
  ::stream_executor::dnn::DataType _internal_c_dtype() const;
  void _internal_set_c_dtype(::stream_executor::dnn::DataType value);

  public:
  // uint64 m = 5;
  void clear_m() ;
  ::uint64_t m() const;
  void set_m(::uint64_t value);

  private:
  ::uint64_t _internal_m() const;
  void _internal_set_m(::uint64_t value);

  public:
  // uint64 n = 6;
  void clear_n() ;
  ::uint64_t n() const;
  void set_n(::uint64_t value);

  private:
  ::uint64_t _internal_n() const;
  void _internal_set_n(::uint64_t value);

  public:
  // bool trans_a = 3;
  void clear_trans_a() ;
  bool trans_a() const;
  void set_trans_a(bool value);

  private:
  bool _internal_trans_a() const;
  void _internal_set_trans_a(bool value);

  public:
  // bool trans_b = 4;
  void clear_trans_b() ;
  bool trans_b() const;
  void set_trans_b(bool value);

  private:
  bool _internal_trans_b() const;
  void _internal_set_trans_b(bool value);

  public:
  // .stream_executor.dnn.ActivationMode activation = 11;
  void clear_activation() ;
  ::stream_executor::dnn::ActivationMode activation() const;
  void set_activation(::stream_executor::dnn::ActivationMode value);

  private:
  ::stream_executor::dnn::ActivationMode _internal_activation() const;
  void _internal_set_activation(::stream_executor::dnn::ActivationMode value);

  public:
  // uint64 k = 7;
  void clear_k() ;
  ::uint64_t k() const;
  void set_k(::uint64_t value);

  private:
  ::uint64_t _internal_k() const;
  void _internal_set_k(::uint64_t value);

  public:
  // int64 lda = 8;
  void clear_lda() ;
  ::int64_t lda() const;
  void set_lda(::int64_t value);

  private:
  ::int64_t _internal_lda() const;
  void _internal_set_lda(::int64_t value);

  public:
  // int64 ldb = 9;
  void clear_ldb() ;
  ::int64_t ldb() const;
  void set_ldb(::int64_t value);

  private:
  ::int64_t _internal_ldb() const;
  void _internal_set_ldb(::int64_t value);

  public:
  // int64 ldc = 10;
  void clear_ldc() ;
  ::int64_t ldc() const;
  void set_ldc(::int64_t value);

  private:
  ::int64_t _internal_ldc() const;
  void _internal_set_ldc(::int64_t value);

  public:
  // int64 a_address = 12;
  void clear_a_address() ;
  ::int64_t a_address() const;
  void set_a_address(::int64_t value);

  private:
  ::int64_t _internal_a_address() const;
  void _internal_set_a_address(::int64_t value);

  public:
  // int64 b_address = 13;
  void clear_b_address() ;
  ::int64_t b_address() const;
  void set_b_address(::int64_t value);

  private:
  ::int64_t _internal_b_address() const;
  void _internal_set_b_address(::int64_t value);

  public:
  // int64 c_address = 14;
  void clear_c_address() ;
  ::int64_t c_address() const;
  void set_c_address(::int64_t value);

  private:
  ::int64_t _internal_c_address() const;
  void _internal_set_c_address(::int64_t value);

  public:
  // int64 bias_address = 15;
  void clear_bias_address() ;
  ::int64_t bias_address() const;
  void set_bias_address(::int64_t value);

  private:
  ::int64_t _internal_bias_address() const;
  void _internal_set_bias_address(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.MatmulProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MatmulProto& from_msg);
    int ab_dtype_;
    int c_dtype_;
    ::uint64_t m_;
    ::uint64_t n_;
    bool trans_a_;
    bool trans_b_;
    int activation_;
    ::uint64_t k_;
    ::int64_t lda_;
    ::int64_t ldb_;
    ::int64_t ldc_;
    ::int64_t a_address_;
    ::int64_t b_address_;
    ::int64_t c_address_;
    ::int64_t bias_address_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ConvolutionProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ConvolutionProto) */ {
 public:
  inline ConvolutionProto() : ConvolutionProto(nullptr) {}
  ~ConvolutionProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConvolutionProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConvolutionProto(const ConvolutionProto& from) : ConvolutionProto(nullptr, from) {}
  inline ConvolutionProto(ConvolutionProto&& from) noexcept
      : ConvolutionProto(nullptr, std::move(from)) {}
  inline ConvolutionProto& operator=(const ConvolutionProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConvolutionProto& operator=(ConvolutionProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConvolutionProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConvolutionProto* internal_default_instance() {
    return reinterpret_cast<const ConvolutionProto*>(
        &_ConvolutionProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ConvolutionProto& a, ConvolutionProto& b) { a.Swap(&b); }
  inline void Swap(ConvolutionProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConvolutionProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConvolutionProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ConvolutionProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConvolutionProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConvolutionProto& from) { ConvolutionProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConvolutionProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.ConvolutionProto"; }

 protected:
  explicit ConvolutionProto(::google::protobuf::Arena* arena);
  ConvolutionProto(::google::protobuf::Arena* arena, const ConvolutionProto& from);
  ConvolutionProto(::google::protobuf::Arena* arena, ConvolutionProto&& from) noexcept
      : ConvolutionProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputFieldNumber = 2,
    kFilterFieldNumber = 3,
    kOutputFieldNumber = 4,
    kConvDescFieldNumber = 5,
    kKindFieldNumber = 1,
    kActivationFieldNumber = 8,
    kConvScaleFieldNumber = 6,
    kSideValueScaleFieldNumber = 7,
    kInputAddressFieldNumber = 9,
    kFilterAddressFieldNumber = 10,
    kOutputAddressFieldNumber = 11,
    kBiasAddressFieldNumber = 12,
    kSideInputAddressFieldNumber = 13,
  };
  // .stream_executor.dnn.TensorDescriptorProto input = 2;
  bool has_input() const;
  void clear_input() ;
  const ::stream_executor::dnn::TensorDescriptorProto& input() const;
  PROTOBUF_NODISCARD ::stream_executor::dnn::TensorDescriptorProto* release_input();
  ::stream_executor::dnn::TensorDescriptorProto* mutable_input();
  void set_allocated_input(::stream_executor::dnn::TensorDescriptorProto* value);
  void unsafe_arena_set_allocated_input(::stream_executor::dnn::TensorDescriptorProto* value);
  ::stream_executor::dnn::TensorDescriptorProto* unsafe_arena_release_input();

  private:
  const ::stream_executor::dnn::TensorDescriptorProto& _internal_input() const;
  ::stream_executor::dnn::TensorDescriptorProto* _internal_mutable_input();

  public:
  // .stream_executor.dnn.TensorDescriptorProto filter = 3;
  bool has_filter() const;
  void clear_filter() ;
  const ::stream_executor::dnn::TensorDescriptorProto& filter() const;
  PROTOBUF_NODISCARD ::stream_executor::dnn::TensorDescriptorProto* release_filter();
  ::stream_executor::dnn::TensorDescriptorProto* mutable_filter();
  void set_allocated_filter(::stream_executor::dnn::TensorDescriptorProto* value);
  void unsafe_arena_set_allocated_filter(::stream_executor::dnn::TensorDescriptorProto* value);
  ::stream_executor::dnn::TensorDescriptorProto* unsafe_arena_release_filter();

  private:
  const ::stream_executor::dnn::TensorDescriptorProto& _internal_filter() const;
  ::stream_executor::dnn::TensorDescriptorProto* _internal_mutable_filter();

  public:
  // .stream_executor.dnn.TensorDescriptorProto output = 4;
  bool has_output() const;
  void clear_output() ;
  const ::stream_executor::dnn::TensorDescriptorProto& output() const;
  PROTOBUF_NODISCARD ::stream_executor::dnn::TensorDescriptorProto* release_output();
  ::stream_executor::dnn::TensorDescriptorProto* mutable_output();
  void set_allocated_output(::stream_executor::dnn::TensorDescriptorProto* value);
  void unsafe_arena_set_allocated_output(::stream_executor::dnn::TensorDescriptorProto* value);
  ::stream_executor::dnn::TensorDescriptorProto* unsafe_arena_release_output();

  private:
  const ::stream_executor::dnn::TensorDescriptorProto& _internal_output() const;
  ::stream_executor::dnn::TensorDescriptorProto* _internal_mutable_output();

  public:
  // .stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;
  bool has_conv_desc() const;
  void clear_conv_desc() ;
  const ::stream_executor::dnn::ConvolutionDescriptorProto& conv_desc() const;
  PROTOBUF_NODISCARD ::stream_executor::dnn::ConvolutionDescriptorProto* release_conv_desc();
  ::stream_executor::dnn::ConvolutionDescriptorProto* mutable_conv_desc();
  void set_allocated_conv_desc(::stream_executor::dnn::ConvolutionDescriptorProto* value);
  void unsafe_arena_set_allocated_conv_desc(::stream_executor::dnn::ConvolutionDescriptorProto* value);
  ::stream_executor::dnn::ConvolutionDescriptorProto* unsafe_arena_release_conv_desc();

  private:
  const ::stream_executor::dnn::ConvolutionDescriptorProto& _internal_conv_desc() const;
  ::stream_executor::dnn::ConvolutionDescriptorProto* _internal_mutable_conv_desc();

  public:
  // .stream_executor.dnn.ConvolutionKind kind = 1;
  void clear_kind() ;
  ::stream_executor::dnn::ConvolutionKind kind() const;
  void set_kind(::stream_executor::dnn::ConvolutionKind value);

  private:
  ::stream_executor::dnn::ConvolutionKind _internal_kind() const;
  void _internal_set_kind(::stream_executor::dnn::ConvolutionKind value);

  public:
  // .stream_executor.dnn.ActivationMode activation = 8;
  void clear_activation() ;
  ::stream_executor::dnn::ActivationMode activation() const;
  void set_activation(::stream_executor::dnn::ActivationMode value);

  private:
  ::stream_executor::dnn::ActivationMode _internal_activation() const;
  void _internal_set_activation(::stream_executor::dnn::ActivationMode value);

  public:
  // double conv_scale = 6;
  void clear_conv_scale() ;
  double conv_scale() const;
  void set_conv_scale(double value);

  private:
  double _internal_conv_scale() const;
  void _internal_set_conv_scale(double value);

  public:
  // double side_value_scale = 7;
  void clear_side_value_scale() ;
  double side_value_scale() const;
  void set_side_value_scale(double value);

  private:
  double _internal_side_value_scale() const;
  void _internal_set_side_value_scale(double value);

  public:
  // int64 input_address = 9;
  void clear_input_address() ;
  ::int64_t input_address() const;
  void set_input_address(::int64_t value);

  private:
  ::int64_t _internal_input_address() const;
  void _internal_set_input_address(::int64_t value);

  public:
  // int64 filter_address = 10;
  void clear_filter_address() ;
  ::int64_t filter_address() const;
  void set_filter_address(::int64_t value);

  private:
  ::int64_t _internal_filter_address() const;
  void _internal_set_filter_address(::int64_t value);

  public:
  // int64 output_address = 11;
  void clear_output_address() ;
  ::int64_t output_address() const;
  void set_output_address(::int64_t value);

  private:
  ::int64_t _internal_output_address() const;
  void _internal_set_output_address(::int64_t value);

  public:
  // int64 bias_address = 12;
  void clear_bias_address() ;
  ::int64_t bias_address() const;
  void set_bias_address(::int64_t value);

  private:
  ::int64_t _internal_bias_address() const;
  void _internal_set_bias_address(::int64_t value);

  public:
  // int64 side_input_address = 13;
  void clear_side_input_address() ;
  ::int64_t side_input_address() const;
  void set_side_input_address(::int64_t value);

  private:
  ::int64_t _internal_side_input_address() const;
  void _internal_set_side_input_address(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ConvolutionProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 4,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConvolutionProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::stream_executor::dnn::TensorDescriptorProto* input_;
    ::stream_executor::dnn::TensorDescriptorProto* filter_;
    ::stream_executor::dnn::TensorDescriptorProto* output_;
    ::stream_executor::dnn::ConvolutionDescriptorProto* conv_desc_;
    int kind_;
    int activation_;
    double conv_scale_;
    double side_value_scale_;
    ::int64_t input_address_;
    ::int64_t filter_address_;
    ::int64_t output_address_;
    ::int64_t bias_address_;
    ::int64_t side_input_address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ConvolutionProto

// .stream_executor.dnn.ConvolutionKind kind = 1;
inline void ConvolutionProto::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
}
inline ::stream_executor::dnn::ConvolutionKind ConvolutionProto::kind() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.kind)
  return _internal_kind();
}
inline void ConvolutionProto::set_kind(::stream_executor::dnn::ConvolutionKind value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvolutionProto.kind)
}
inline ::stream_executor::dnn::ConvolutionKind ConvolutionProto::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stream_executor::dnn::ConvolutionKind>(_impl_.kind_);
}
inline void ConvolutionProto::_internal_set_kind(::stream_executor::dnn::ConvolutionKind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// .stream_executor.dnn.TensorDescriptorProto input = 2;
inline bool ConvolutionProto::has_input() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.input_ != nullptr);
  return value;
}
inline const ::stream_executor::dnn::TensorDescriptorProto& ConvolutionProto::_internal_input() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stream_executor::dnn::TensorDescriptorProto* p = _impl_.input_;
  return p != nullptr ? *p : reinterpret_cast<const ::stream_executor::dnn::TensorDescriptorProto&>(::stream_executor::dnn::_TensorDescriptorProto_default_instance_);
}
inline const ::stream_executor::dnn::TensorDescriptorProto& ConvolutionProto::input() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.input)
  return _internal_input();
}
inline void ConvolutionProto::unsafe_arena_set_allocated_input(::stream_executor::dnn::TensorDescriptorProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.input_);
  }
  _impl_.input_ = reinterpret_cast<::stream_executor::dnn::TensorDescriptorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.ConvolutionProto.input)
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::release_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stream_executor::dnn::TensorDescriptorProto* released = _impl_.input_;
  _impl_.input_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::unsafe_arena_release_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ConvolutionProto.input)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stream_executor::dnn::TensorDescriptorProto* temp = _impl_.input_;
  _impl_.input_ = nullptr;
  return temp;
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::_internal_mutable_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.input_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stream_executor::dnn::TensorDescriptorProto>(GetArena());
    _impl_.input_ = reinterpret_cast<::stream_executor::dnn::TensorDescriptorProto*>(p);
  }
  return _impl_.input_;
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::mutable_input() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::stream_executor::dnn::TensorDescriptorProto* _msg = _internal_mutable_input();
  // @@protoc_insertion_point(field_mutable:tensorflow.ConvolutionProto.input)
  return _msg;
}
inline void ConvolutionProto::set_allocated_input(::stream_executor::dnn::TensorDescriptorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.input_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.input_ = reinterpret_cast<::stream_executor::dnn::TensorDescriptorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ConvolutionProto.input)
}

// .stream_executor.dnn.TensorDescriptorProto filter = 3;
inline bool ConvolutionProto::has_filter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filter_ != nullptr);
  return value;
}
inline const ::stream_executor::dnn::TensorDescriptorProto& ConvolutionProto::_internal_filter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stream_executor::dnn::TensorDescriptorProto* p = _impl_.filter_;
  return p != nullptr ? *p : reinterpret_cast<const ::stream_executor::dnn::TensorDescriptorProto&>(::stream_executor::dnn::_TensorDescriptorProto_default_instance_);
}
inline const ::stream_executor::dnn::TensorDescriptorProto& ConvolutionProto::filter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.filter)
  return _internal_filter();
}
inline void ConvolutionProto::unsafe_arena_set_allocated_filter(::stream_executor::dnn::TensorDescriptorProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filter_);
  }
  _impl_.filter_ = reinterpret_cast<::stream_executor::dnn::TensorDescriptorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.ConvolutionProto.filter)
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::release_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::stream_executor::dnn::TensorDescriptorProto* released = _impl_.filter_;
  _impl_.filter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::unsafe_arena_release_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ConvolutionProto.filter)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::stream_executor::dnn::TensorDescriptorProto* temp = _impl_.filter_;
  _impl_.filter_ = nullptr;
  return temp;
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::_internal_mutable_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stream_executor::dnn::TensorDescriptorProto>(GetArena());
    _impl_.filter_ = reinterpret_cast<::stream_executor::dnn::TensorDescriptorProto*>(p);
  }
  return _impl_.filter_;
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::mutable_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::stream_executor::dnn::TensorDescriptorProto* _msg = _internal_mutable_filter();
  // @@protoc_insertion_point(field_mutable:tensorflow.ConvolutionProto.filter)
  return _msg;
}
inline void ConvolutionProto::set_allocated_filter(::stream_executor::dnn::TensorDescriptorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.filter_ = reinterpret_cast<::stream_executor::dnn::TensorDescriptorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ConvolutionProto.filter)
}

// .stream_executor.dnn.TensorDescriptorProto output = 4;
inline bool ConvolutionProto::has_output() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.output_ != nullptr);
  return value;
}
inline const ::stream_executor::dnn::TensorDescriptorProto& ConvolutionProto::_internal_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stream_executor::dnn::TensorDescriptorProto* p = _impl_.output_;
  return p != nullptr ? *p : reinterpret_cast<const ::stream_executor::dnn::TensorDescriptorProto&>(::stream_executor::dnn::_TensorDescriptorProto_default_instance_);
}
inline const ::stream_executor::dnn::TensorDescriptorProto& ConvolutionProto::output() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.output)
  return _internal_output();
}
inline void ConvolutionProto::unsafe_arena_set_allocated_output(::stream_executor::dnn::TensorDescriptorProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.output_);
  }
  _impl_.output_ = reinterpret_cast<::stream_executor::dnn::TensorDescriptorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.ConvolutionProto.output)
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::release_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::stream_executor::dnn::TensorDescriptorProto* released = _impl_.output_;
  _impl_.output_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::unsafe_arena_release_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ConvolutionProto.output)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::stream_executor::dnn::TensorDescriptorProto* temp = _impl_.output_;
  _impl_.output_ = nullptr;
  return temp;
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::_internal_mutable_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stream_executor::dnn::TensorDescriptorProto>(GetArena());
    _impl_.output_ = reinterpret_cast<::stream_executor::dnn::TensorDescriptorProto*>(p);
  }
  return _impl_.output_;
}
inline ::stream_executor::dnn::TensorDescriptorProto* ConvolutionProto::mutable_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::stream_executor::dnn::TensorDescriptorProto* _msg = _internal_mutable_output();
  // @@protoc_insertion_point(field_mutable:tensorflow.ConvolutionProto.output)
  return _msg;
}
inline void ConvolutionProto::set_allocated_output(::stream_executor::dnn::TensorDescriptorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.output_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.output_ = reinterpret_cast<::stream_executor::dnn::TensorDescriptorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ConvolutionProto.output)
}

// .stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;
inline bool ConvolutionProto::has_conv_desc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.conv_desc_ != nullptr);
  return value;
}
inline const ::stream_executor::dnn::ConvolutionDescriptorProto& ConvolutionProto::_internal_conv_desc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stream_executor::dnn::ConvolutionDescriptorProto* p = _impl_.conv_desc_;
  return p != nullptr ? *p : reinterpret_cast<const ::stream_executor::dnn::ConvolutionDescriptorProto&>(::stream_executor::dnn::_ConvolutionDescriptorProto_default_instance_);
}
inline const ::stream_executor::dnn::ConvolutionDescriptorProto& ConvolutionProto::conv_desc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.conv_desc)
  return _internal_conv_desc();
}
inline void ConvolutionProto::unsafe_arena_set_allocated_conv_desc(::stream_executor::dnn::ConvolutionDescriptorProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conv_desc_);
  }
  _impl_.conv_desc_ = reinterpret_cast<::stream_executor::dnn::ConvolutionDescriptorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.ConvolutionProto.conv_desc)
}
inline ::stream_executor::dnn::ConvolutionDescriptorProto* ConvolutionProto::release_conv_desc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::stream_executor::dnn::ConvolutionDescriptorProto* released = _impl_.conv_desc_;
  _impl_.conv_desc_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::stream_executor::dnn::ConvolutionDescriptorProto* ConvolutionProto::unsafe_arena_release_conv_desc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ConvolutionProto.conv_desc)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::stream_executor::dnn::ConvolutionDescriptorProto* temp = _impl_.conv_desc_;
  _impl_.conv_desc_ = nullptr;
  return temp;
}
inline ::stream_executor::dnn::ConvolutionDescriptorProto* ConvolutionProto::_internal_mutable_conv_desc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conv_desc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stream_executor::dnn::ConvolutionDescriptorProto>(GetArena());
    _impl_.conv_desc_ = reinterpret_cast<::stream_executor::dnn::ConvolutionDescriptorProto*>(p);
  }
  return _impl_.conv_desc_;
}
inline ::stream_executor::dnn::ConvolutionDescriptorProto* ConvolutionProto::mutable_conv_desc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::stream_executor::dnn::ConvolutionDescriptorProto* _msg = _internal_mutable_conv_desc();
  // @@protoc_insertion_point(field_mutable:tensorflow.ConvolutionProto.conv_desc)
  return _msg;
}
inline void ConvolutionProto::set_allocated_conv_desc(::stream_executor::dnn::ConvolutionDescriptorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conv_desc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.conv_desc_ = reinterpret_cast<::stream_executor::dnn::ConvolutionDescriptorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ConvolutionProto.conv_desc)
}

// double conv_scale = 6;
inline void ConvolutionProto::clear_conv_scale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conv_scale_ = 0;
}
inline double ConvolutionProto::conv_scale() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.conv_scale)
  return _internal_conv_scale();
}
inline void ConvolutionProto::set_conv_scale(double value) {
  _internal_set_conv_scale(value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvolutionProto.conv_scale)
}
inline double ConvolutionProto::_internal_conv_scale() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conv_scale_;
}
inline void ConvolutionProto::_internal_set_conv_scale(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conv_scale_ = value;
}

// double side_value_scale = 7;
inline void ConvolutionProto::clear_side_value_scale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_value_scale_ = 0;
}
inline double ConvolutionProto::side_value_scale() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.side_value_scale)
  return _internal_side_value_scale();
}
inline void ConvolutionProto::set_side_value_scale(double value) {
  _internal_set_side_value_scale(value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvolutionProto.side_value_scale)
}
inline double ConvolutionProto::_internal_side_value_scale() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.side_value_scale_;
}
inline void ConvolutionProto::_internal_set_side_value_scale(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_value_scale_ = value;
}

// .stream_executor.dnn.ActivationMode activation = 8;
inline void ConvolutionProto::clear_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activation_ = 0;
}
inline ::stream_executor::dnn::ActivationMode ConvolutionProto::activation() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.activation)
  return _internal_activation();
}
inline void ConvolutionProto::set_activation(::stream_executor::dnn::ActivationMode value) {
  _internal_set_activation(value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvolutionProto.activation)
}
inline ::stream_executor::dnn::ActivationMode ConvolutionProto::_internal_activation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stream_executor::dnn::ActivationMode>(_impl_.activation_);
}
inline void ConvolutionProto::_internal_set_activation(::stream_executor::dnn::ActivationMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activation_ = value;
}

// int64 input_address = 9;
inline void ConvolutionProto::clear_input_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_address_ = ::int64_t{0};
}
inline ::int64_t ConvolutionProto::input_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.input_address)
  return _internal_input_address();
}
inline void ConvolutionProto::set_input_address(::int64_t value) {
  _internal_set_input_address(value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvolutionProto.input_address)
}
inline ::int64_t ConvolutionProto::_internal_input_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_address_;
}
inline void ConvolutionProto::_internal_set_input_address(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_address_ = value;
}

// int64 filter_address = 10;
inline void ConvolutionProto::clear_filter_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filter_address_ = ::int64_t{0};
}
inline ::int64_t ConvolutionProto::filter_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.filter_address)
  return _internal_filter_address();
}
inline void ConvolutionProto::set_filter_address(::int64_t value) {
  _internal_set_filter_address(value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvolutionProto.filter_address)
}
inline ::int64_t ConvolutionProto::_internal_filter_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filter_address_;
}
inline void ConvolutionProto::_internal_set_filter_address(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filter_address_ = value;
}

// int64 output_address = 11;
inline void ConvolutionProto::clear_output_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_address_ = ::int64_t{0};
}
inline ::int64_t ConvolutionProto::output_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.output_address)
  return _internal_output_address();
}
inline void ConvolutionProto::set_output_address(::int64_t value) {
  _internal_set_output_address(value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvolutionProto.output_address)
}
inline ::int64_t ConvolutionProto::_internal_output_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_address_;
}
inline void ConvolutionProto::_internal_set_output_address(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_address_ = value;
}

// int64 bias_address = 12;
inline void ConvolutionProto::clear_bias_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bias_address_ = ::int64_t{0};
}
inline ::int64_t ConvolutionProto::bias_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.bias_address)
  return _internal_bias_address();
}
inline void ConvolutionProto::set_bias_address(::int64_t value) {
  _internal_set_bias_address(value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvolutionProto.bias_address)
}
inline ::int64_t ConvolutionProto::_internal_bias_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bias_address_;
}
inline void ConvolutionProto::_internal_set_bias_address(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bias_address_ = value;
}

// int64 side_input_address = 13;
inline void ConvolutionProto::clear_side_input_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_input_address_ = ::int64_t{0};
}
inline ::int64_t ConvolutionProto::side_input_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvolutionProto.side_input_address)
  return _internal_side_input_address();
}
inline void ConvolutionProto::set_side_input_address(::int64_t value) {
  _internal_set_side_input_address(value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvolutionProto.side_input_address)
}
inline ::int64_t ConvolutionProto::_internal_side_input_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.side_input_address_;
}
inline void ConvolutionProto::_internal_set_side_input_address(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_input_address_ = value;
}

// -------------------------------------------------------------------

// MatmulProto

// .stream_executor.dnn.DataType ab_dtype = 1;
inline void MatmulProto::clear_ab_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ab_dtype_ = 0;
}
inline ::stream_executor::dnn::DataType MatmulProto::ab_dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.ab_dtype)
  return _internal_ab_dtype();
}
inline void MatmulProto::set_ab_dtype(::stream_executor::dnn::DataType value) {
  _internal_set_ab_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.ab_dtype)
}
inline ::stream_executor::dnn::DataType MatmulProto::_internal_ab_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stream_executor::dnn::DataType>(_impl_.ab_dtype_);
}
inline void MatmulProto::_internal_set_ab_dtype(::stream_executor::dnn::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ab_dtype_ = value;
}

// .stream_executor.dnn.DataType c_dtype = 2;
inline void MatmulProto::clear_c_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_dtype_ = 0;
}
inline ::stream_executor::dnn::DataType MatmulProto::c_dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.c_dtype)
  return _internal_c_dtype();
}
inline void MatmulProto::set_c_dtype(::stream_executor::dnn::DataType value) {
  _internal_set_c_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.c_dtype)
}
inline ::stream_executor::dnn::DataType MatmulProto::_internal_c_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stream_executor::dnn::DataType>(_impl_.c_dtype_);
}
inline void MatmulProto::_internal_set_c_dtype(::stream_executor::dnn::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_dtype_ = value;
}

// bool trans_a = 3;
inline void MatmulProto::clear_trans_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trans_a_ = false;
}
inline bool MatmulProto::trans_a() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.trans_a)
  return _internal_trans_a();
}
inline void MatmulProto::set_trans_a(bool value) {
  _internal_set_trans_a(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.trans_a)
}
inline bool MatmulProto::_internal_trans_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trans_a_;
}
inline void MatmulProto::_internal_set_trans_a(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trans_a_ = value;
}

// bool trans_b = 4;
inline void MatmulProto::clear_trans_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trans_b_ = false;
}
inline bool MatmulProto::trans_b() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.trans_b)
  return _internal_trans_b();
}
inline void MatmulProto::set_trans_b(bool value) {
  _internal_set_trans_b(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.trans_b)
}
inline bool MatmulProto::_internal_trans_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trans_b_;
}
inline void MatmulProto::_internal_set_trans_b(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trans_b_ = value;
}

// uint64 m = 5;
inline void MatmulProto::clear_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m_ = ::uint64_t{0u};
}
inline ::uint64_t MatmulProto::m() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.m)
  return _internal_m();
}
inline void MatmulProto::set_m(::uint64_t value) {
  _internal_set_m(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.m)
}
inline ::uint64_t MatmulProto::_internal_m() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m_;
}
inline void MatmulProto::_internal_set_m(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m_ = value;
}

// uint64 n = 6;
inline void MatmulProto::clear_n() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.n_ = ::uint64_t{0u};
}
inline ::uint64_t MatmulProto::n() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.n)
  return _internal_n();
}
inline void MatmulProto::set_n(::uint64_t value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.n)
}
inline ::uint64_t MatmulProto::_internal_n() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.n_;
}
inline void MatmulProto::_internal_set_n(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.n_ = value;
}

// uint64 k = 7;
inline void MatmulProto::clear_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_ = ::uint64_t{0u};
}
inline ::uint64_t MatmulProto::k() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.k)
  return _internal_k();
}
inline void MatmulProto::set_k(::uint64_t value) {
  _internal_set_k(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.k)
}
inline ::uint64_t MatmulProto::_internal_k() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.k_;
}
inline void MatmulProto::_internal_set_k(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_ = value;
}

// int64 lda = 8;
inline void MatmulProto::clear_lda() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lda_ = ::int64_t{0};
}
inline ::int64_t MatmulProto::lda() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.lda)
  return _internal_lda();
}
inline void MatmulProto::set_lda(::int64_t value) {
  _internal_set_lda(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.lda)
}
inline ::int64_t MatmulProto::_internal_lda() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lda_;
}
inline void MatmulProto::_internal_set_lda(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lda_ = value;
}

// int64 ldb = 9;
inline void MatmulProto::clear_ldb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ldb_ = ::int64_t{0};
}
inline ::int64_t MatmulProto::ldb() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.ldb)
  return _internal_ldb();
}
inline void MatmulProto::set_ldb(::int64_t value) {
  _internal_set_ldb(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.ldb)
}
inline ::int64_t MatmulProto::_internal_ldb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ldb_;
}
inline void MatmulProto::_internal_set_ldb(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ldb_ = value;
}

// int64 ldc = 10;
inline void MatmulProto::clear_ldc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ldc_ = ::int64_t{0};
}
inline ::int64_t MatmulProto::ldc() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.ldc)
  return _internal_ldc();
}
inline void MatmulProto::set_ldc(::int64_t value) {
  _internal_set_ldc(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.ldc)
}
inline ::int64_t MatmulProto::_internal_ldc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ldc_;
}
inline void MatmulProto::_internal_set_ldc(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ldc_ = value;
}

// .stream_executor.dnn.ActivationMode activation = 11;
inline void MatmulProto::clear_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activation_ = 0;
}
inline ::stream_executor::dnn::ActivationMode MatmulProto::activation() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.activation)
  return _internal_activation();
}
inline void MatmulProto::set_activation(::stream_executor::dnn::ActivationMode value) {
  _internal_set_activation(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.activation)
}
inline ::stream_executor::dnn::ActivationMode MatmulProto::_internal_activation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::stream_executor::dnn::ActivationMode>(_impl_.activation_);
}
inline void MatmulProto::_internal_set_activation(::stream_executor::dnn::ActivationMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activation_ = value;
}

// int64 a_address = 12;
inline void MatmulProto::clear_a_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_address_ = ::int64_t{0};
}
inline ::int64_t MatmulProto::a_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.a_address)
  return _internal_a_address();
}
inline void MatmulProto::set_a_address(::int64_t value) {
  _internal_set_a_address(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.a_address)
}
inline ::int64_t MatmulProto::_internal_a_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_address_;
}
inline void MatmulProto::_internal_set_a_address(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_address_ = value;
}

// int64 b_address = 13;
inline void MatmulProto::clear_b_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_address_ = ::int64_t{0};
}
inline ::int64_t MatmulProto::b_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.b_address)
  return _internal_b_address();
}
inline void MatmulProto::set_b_address(::int64_t value) {
  _internal_set_b_address(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.b_address)
}
inline ::int64_t MatmulProto::_internal_b_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_address_;
}
inline void MatmulProto::_internal_set_b_address(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_address_ = value;
}

// int64 c_address = 14;
inline void MatmulProto::clear_c_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_address_ = ::int64_t{0};
}
inline ::int64_t MatmulProto::c_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.c_address)
  return _internal_c_address();
}
inline void MatmulProto::set_c_address(::int64_t value) {
  _internal_set_c_address(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.c_address)
}
inline ::int64_t MatmulProto::_internal_c_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c_address_;
}
inline void MatmulProto::_internal_set_c_address(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c_address_ = value;
}

// int64 bias_address = 15;
inline void MatmulProto::clear_bias_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bias_address_ = ::int64_t{0};
}
inline ::int64_t MatmulProto::bias_address() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulProto.bias_address)
  return _internal_bias_address();
}
inline void MatmulProto::set_bias_address(::int64_t value) {
  _internal_set_bias_address(value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulProto.bias_address)
}
inline ::int64_t MatmulProto::_internal_bias_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bias_address_;
}
inline void MatmulProto::_internal_set_bias_address(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bias_address_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto_2epb_2eh
