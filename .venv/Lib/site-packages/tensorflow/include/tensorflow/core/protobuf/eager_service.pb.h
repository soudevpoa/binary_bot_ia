// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/eager_service.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/attr_value.pb.h"
#include "tensorflow/core/framework/device_attributes.pb.h"
#include "tensorflow/core/framework/function.pb.h"
#include "tensorflow/core/framework/tensor.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/versions.pb.h"
#include "tensorflow/core/protobuf/remote_tensor_handle.pb.h"
#include "tensorflow/core/protobuf/tensorflow_server.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
namespace tensorflow {
namespace eager {
class CleanupFunctionOp;
struct CleanupFunctionOpDefaultTypeInternal;
PROTOBUF_EXPORT extern CleanupFunctionOpDefaultTypeInternal _CleanupFunctionOp_default_instance_;
class CloseContextRequest;
struct CloseContextRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern CloseContextRequestDefaultTypeInternal _CloseContextRequest_default_instance_;
class CloseContextResponse;
struct CloseContextResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern CloseContextResponseDefaultTypeInternal _CloseContextResponse_default_instance_;
class CreateContextRequest;
struct CreateContextRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern CreateContextRequestDefaultTypeInternal _CreateContextRequest_default_instance_;
class CreateContextResponse;
struct CreateContextResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern CreateContextResponseDefaultTypeInternal _CreateContextResponse_default_instance_;
class EnqueueRequest;
struct EnqueueRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern EnqueueRequestDefaultTypeInternal _EnqueueRequest_default_instance_;
class EnqueueResponse;
struct EnqueueResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern EnqueueResponseDefaultTypeInternal _EnqueueResponse_default_instance_;
class KeepAliveRequest;
struct KeepAliveRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern KeepAliveRequestDefaultTypeInternal _KeepAliveRequest_default_instance_;
class KeepAliveResponse;
struct KeepAliveResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern KeepAliveResponseDefaultTypeInternal _KeepAliveResponse_default_instance_;
class Operation;
struct OperationDefaultTypeInternal;
PROTOBUF_EXPORT extern OperationDefaultTypeInternal _Operation_default_instance_;
class Operation_AttrsEntry_DoNotUse;
struct Operation_AttrsEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern Operation_AttrsEntry_DoNotUseDefaultTypeInternal _Operation_AttrsEntry_DoNotUse_default_instance_;
class Operation_Input;
struct Operation_InputDefaultTypeInternal;
PROTOBUF_EXPORT extern Operation_InputDefaultTypeInternal _Operation_Input_default_instance_;
class QueueItem;
struct QueueItemDefaultTypeInternal;
PROTOBUF_EXPORT extern QueueItemDefaultTypeInternal _QueueItem_default_instance_;
class QueueResponse;
struct QueueResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern QueueResponseDefaultTypeInternal _QueueResponse_default_instance_;
class RegisterFunctionOp;
struct RegisterFunctionOpDefaultTypeInternal;
PROTOBUF_EXPORT extern RegisterFunctionOpDefaultTypeInternal _RegisterFunctionOp_default_instance_;
class RemoveFunctionOp;
struct RemoveFunctionOpDefaultTypeInternal;
PROTOBUF_EXPORT extern RemoveFunctionOpDefaultTypeInternal _RemoveFunctionOp_default_instance_;
class RunComponentFunctionRequest;
struct RunComponentFunctionRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern RunComponentFunctionRequestDefaultTypeInternal _RunComponentFunctionRequest_default_instance_;
class RunComponentFunctionResponse;
struct RunComponentFunctionResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern RunComponentFunctionResponseDefaultTypeInternal _RunComponentFunctionResponse_default_instance_;
class SendPackedHandleOp;
struct SendPackedHandleOpDefaultTypeInternal;
PROTOBUF_EXPORT extern SendPackedHandleOpDefaultTypeInternal _SendPackedHandleOp_default_instance_;
class SendPackedHandleOp_Handle;
struct SendPackedHandleOp_HandleDefaultTypeInternal;
PROTOBUF_EXPORT extern SendPackedHandleOp_HandleDefaultTypeInternal _SendPackedHandleOp_Handle_default_instance_;
class SendPackedHandleOp_LocalTensorHandle;
struct SendPackedHandleOp_LocalTensorHandleDefaultTypeInternal;
PROTOBUF_EXPORT extern SendPackedHandleOp_LocalTensorHandleDefaultTypeInternal _SendPackedHandleOp_LocalTensorHandle_default_instance_;
class SendTensorOp;
struct SendTensorOpDefaultTypeInternal;
PROTOBUF_EXPORT extern SendTensorOpDefaultTypeInternal _SendTensorOp_default_instance_;
class SyncRemoteExecutorForStream;
struct SyncRemoteExecutorForStreamDefaultTypeInternal;
PROTOBUF_EXPORT extern SyncRemoteExecutorForStreamDefaultTypeInternal _SyncRemoteExecutorForStream_default_instance_;
class UpdateContextRequest;
struct UpdateContextRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern UpdateContextRequestDefaultTypeInternal _UpdateContextRequest_default_instance_;
class UpdateContextResponse;
struct UpdateContextResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern UpdateContextResponseDefaultTypeInternal _UpdateContextResponse_default_instance_;
class WaitQueueDoneRequest;
struct WaitQueueDoneRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern WaitQueueDoneRequestDefaultTypeInternal _WaitQueueDoneRequest_default_instance_;
class WaitQueueDoneResponse;
struct WaitQueueDoneResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern WaitQueueDoneResponseDefaultTypeInternal _WaitQueueDoneResponse_default_instance_;
}  // namespace eager
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace eager {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT WaitQueueDoneResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.eager.WaitQueueDoneResponse) */ {
 public:
  inline WaitQueueDoneResponse() : WaitQueueDoneResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WaitQueueDoneResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline WaitQueueDoneResponse(const WaitQueueDoneResponse& from) : WaitQueueDoneResponse(nullptr, from) {}
  inline WaitQueueDoneResponse(WaitQueueDoneResponse&& from) noexcept
      : WaitQueueDoneResponse(nullptr, std::move(from)) {}
  inline WaitQueueDoneResponse& operator=(const WaitQueueDoneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WaitQueueDoneResponse& operator=(WaitQueueDoneResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WaitQueueDoneResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WaitQueueDoneResponse* internal_default_instance() {
    return reinterpret_cast<const WaitQueueDoneResponse*>(
        &_WaitQueueDoneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(WaitQueueDoneResponse& a, WaitQueueDoneResponse& b) { a.Swap(&b); }
  inline void Swap(WaitQueueDoneResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WaitQueueDoneResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WaitQueueDoneResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<WaitQueueDoneResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const WaitQueueDoneResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const WaitQueueDoneResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.WaitQueueDoneResponse"; }

 protected:
  explicit WaitQueueDoneResponse(::google::protobuf::Arena* arena);
  WaitQueueDoneResponse(::google::protobuf::Arena* arena, const WaitQueueDoneResponse& from);
  WaitQueueDoneResponse(::google::protobuf::Arena* arena, WaitQueueDoneResponse&& from) noexcept
      : WaitQueueDoneResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.eager.WaitQueueDoneResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WaitQueueDoneResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT WaitQueueDoneRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.WaitQueueDoneRequest) */ {
 public:
  inline WaitQueueDoneRequest() : WaitQueueDoneRequest(nullptr) {}
  ~WaitQueueDoneRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WaitQueueDoneRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline WaitQueueDoneRequest(const WaitQueueDoneRequest& from) : WaitQueueDoneRequest(nullptr, from) {}
  inline WaitQueueDoneRequest(WaitQueueDoneRequest&& from) noexcept
      : WaitQueueDoneRequest(nullptr, std::move(from)) {}
  inline WaitQueueDoneRequest& operator=(const WaitQueueDoneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WaitQueueDoneRequest& operator=(WaitQueueDoneRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WaitQueueDoneRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WaitQueueDoneRequest* internal_default_instance() {
    return reinterpret_cast<const WaitQueueDoneRequest*>(
        &_WaitQueueDoneRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(WaitQueueDoneRequest& a, WaitQueueDoneRequest& b) { a.Swap(&b); }
  inline void Swap(WaitQueueDoneRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WaitQueueDoneRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WaitQueueDoneRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<WaitQueueDoneRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WaitQueueDoneRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WaitQueueDoneRequest& from) { WaitQueueDoneRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WaitQueueDoneRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.WaitQueueDoneRequest"; }

 protected:
  explicit WaitQueueDoneRequest(::google::protobuf::Arena* arena);
  WaitQueueDoneRequest(::google::protobuf::Arena* arena, const WaitQueueDoneRequest& from);
  WaitQueueDoneRequest(::google::protobuf::Arena* arena, WaitQueueDoneRequest&& from) noexcept
      : WaitQueueDoneRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOpIdFieldNumber = 2,
    kContextIdFieldNumber = 1,
  };
  // repeated int64 op_id = 2;
  int op_id_size() const;
  private:
  int _internal_op_id_size() const;

  public:
  void clear_op_id() ;
  ::int64_t op_id(int index) const;
  void set_op_id(int index, ::int64_t value);
  void add_op_id(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& op_id() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_op_id();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_op_id() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_op_id();

  public:
  // fixed64 context_id = 1;
  void clear_context_id() ;
  ::uint64_t context_id() const;
  void set_context_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_id() const;
  void _internal_set_context_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.WaitQueueDoneRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WaitQueueDoneRequest& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> op_id_;
    mutable ::google::protobuf::internal::CachedSize _op_id_cached_byte_size_;
    ::uint64_t context_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT SyncRemoteExecutorForStream final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.eager.SyncRemoteExecutorForStream) */ {
 public:
  inline SyncRemoteExecutorForStream() : SyncRemoteExecutorForStream(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SyncRemoteExecutorForStream(
      ::google::protobuf::internal::ConstantInitialized);

  inline SyncRemoteExecutorForStream(const SyncRemoteExecutorForStream& from) : SyncRemoteExecutorForStream(nullptr, from) {}
  inline SyncRemoteExecutorForStream(SyncRemoteExecutorForStream&& from) noexcept
      : SyncRemoteExecutorForStream(nullptr, std::move(from)) {}
  inline SyncRemoteExecutorForStream& operator=(const SyncRemoteExecutorForStream& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncRemoteExecutorForStream& operator=(SyncRemoteExecutorForStream&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncRemoteExecutorForStream& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncRemoteExecutorForStream* internal_default_instance() {
    return reinterpret_cast<const SyncRemoteExecutorForStream*>(
        &_SyncRemoteExecutorForStream_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(SyncRemoteExecutorForStream& a, SyncRemoteExecutorForStream& b) { a.Swap(&b); }
  inline void Swap(SyncRemoteExecutorForStream* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncRemoteExecutorForStream* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncRemoteExecutorForStream* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SyncRemoteExecutorForStream>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SyncRemoteExecutorForStream& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SyncRemoteExecutorForStream& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.SyncRemoteExecutorForStream"; }

 protected:
  explicit SyncRemoteExecutorForStream(::google::protobuf::Arena* arena);
  SyncRemoteExecutorForStream(::google::protobuf::Arena* arena, const SyncRemoteExecutorForStream& from);
  SyncRemoteExecutorForStream(::google::protobuf::Arena* arena, SyncRemoteExecutorForStream&& from) noexcept
      : SyncRemoteExecutorForStream(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.eager.SyncRemoteExecutorForStream)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SyncRemoteExecutorForStream& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RemoveFunctionOp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.RemoveFunctionOp) */ {
 public:
  inline RemoveFunctionOp() : RemoveFunctionOp(nullptr) {}
  ~RemoveFunctionOp() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveFunctionOp(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoveFunctionOp(const RemoveFunctionOp& from) : RemoveFunctionOp(nullptr, from) {}
  inline RemoveFunctionOp(RemoveFunctionOp&& from) noexcept
      : RemoveFunctionOp(nullptr, std::move(from)) {}
  inline RemoveFunctionOp& operator=(const RemoveFunctionOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveFunctionOp& operator=(RemoveFunctionOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveFunctionOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveFunctionOp* internal_default_instance() {
    return reinterpret_cast<const RemoveFunctionOp*>(
        &_RemoveFunctionOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(RemoveFunctionOp& a, RemoveFunctionOp& b) { a.Swap(&b); }
  inline void Swap(RemoveFunctionOp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveFunctionOp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveFunctionOp* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RemoveFunctionOp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveFunctionOp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveFunctionOp& from) { RemoveFunctionOp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveFunctionOp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.RemoveFunctionOp"; }

 protected:
  explicit RemoveFunctionOp(::google::protobuf::Arena* arena);
  RemoveFunctionOp(::google::protobuf::Arena* arena, const RemoveFunctionOp& from);
  RemoveFunctionOp(::google::protobuf::Arena* arena, RemoveFunctionOp&& from) noexcept
      : RemoveFunctionOp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFunctionNameFieldNumber = 1,
  };
  // string function_name = 1;
  void clear_function_name() ;
  const std::string& function_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_function_name(Arg_&& arg, Args_... args);
  std::string* mutable_function_name();
  PROTOBUF_NODISCARD std::string* release_function_name();
  void set_allocated_function_name(std::string* value);

  private:
  const std::string& _internal_function_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_function_name(
      const std::string& value);
  std::string* _internal_mutable_function_name();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.RemoveFunctionOp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      55, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoveFunctionOp& from_msg);
    ::google::protobuf::internal::ArenaStringPtr function_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT KeepAliveResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.KeepAliveResponse) */ {
 public:
  inline KeepAliveResponse() : KeepAliveResponse(nullptr) {}
  ~KeepAliveResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KeepAliveResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline KeepAliveResponse(const KeepAliveResponse& from) : KeepAliveResponse(nullptr, from) {}
  inline KeepAliveResponse(KeepAliveResponse&& from) noexcept
      : KeepAliveResponse(nullptr, std::move(from)) {}
  inline KeepAliveResponse& operator=(const KeepAliveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeepAliveResponse& operator=(KeepAliveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeepAliveResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeepAliveResponse* internal_default_instance() {
    return reinterpret_cast<const KeepAliveResponse*>(
        &_KeepAliveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(KeepAliveResponse& a, KeepAliveResponse& b) { a.Swap(&b); }
  inline void Swap(KeepAliveResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeepAliveResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeepAliveResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KeepAliveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KeepAliveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KeepAliveResponse& from) { KeepAliveResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KeepAliveResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.KeepAliveResponse"; }

 protected:
  explicit KeepAliveResponse(::google::protobuf::Arena* arena);
  KeepAliveResponse(::google::protobuf::Arena* arena, const KeepAliveResponse& from);
  KeepAliveResponse(::google::protobuf::Arena* arena, KeepAliveResponse&& from) noexcept
      : KeepAliveResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContextViewIdFieldNumber = 1,
  };
  // fixed64 context_view_id = 1;
  void clear_context_view_id() ;
  ::uint64_t context_view_id() const;
  void set_context_view_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_view_id() const;
  void _internal_set_context_view_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.KeepAliveResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KeepAliveResponse& from_msg);
    ::uint64_t context_view_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT KeepAliveRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.KeepAliveRequest) */ {
 public:
  inline KeepAliveRequest() : KeepAliveRequest(nullptr) {}
  ~KeepAliveRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KeepAliveRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline KeepAliveRequest(const KeepAliveRequest& from) : KeepAliveRequest(nullptr, from) {}
  inline KeepAliveRequest(KeepAliveRequest&& from) noexcept
      : KeepAliveRequest(nullptr, std::move(from)) {}
  inline KeepAliveRequest& operator=(const KeepAliveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeepAliveRequest& operator=(KeepAliveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeepAliveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeepAliveRequest* internal_default_instance() {
    return reinterpret_cast<const KeepAliveRequest*>(
        &_KeepAliveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(KeepAliveRequest& a, KeepAliveRequest& b) { a.Swap(&b); }
  inline void Swap(KeepAliveRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeepAliveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeepAliveRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KeepAliveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KeepAliveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KeepAliveRequest& from) { KeepAliveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KeepAliveRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.KeepAliveRequest"; }

 protected:
  explicit KeepAliveRequest(::google::protobuf::Arena* arena);
  KeepAliveRequest(::google::protobuf::Arena* arena, const KeepAliveRequest& from);
  KeepAliveRequest(::google::protobuf::Arena* arena, KeepAliveRequest&& from) noexcept
      : KeepAliveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContextIdFieldNumber = 1,
  };
  // fixed64 context_id = 1;
  void clear_context_id() ;
  ::uint64_t context_id() const;
  void set_context_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_id() const;
  void _internal_set_context_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.KeepAliveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KeepAliveRequest& from_msg);
    ::uint64_t context_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CloseContextResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.eager.CloseContextResponse) */ {
 public:
  inline CloseContextResponse() : CloseContextResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CloseContextResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CloseContextResponse(const CloseContextResponse& from) : CloseContextResponse(nullptr, from) {}
  inline CloseContextResponse(CloseContextResponse&& from) noexcept
      : CloseContextResponse(nullptr, std::move(from)) {}
  inline CloseContextResponse& operator=(const CloseContextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloseContextResponse& operator=(CloseContextResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CloseContextResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloseContextResponse* internal_default_instance() {
    return reinterpret_cast<const CloseContextResponse*>(
        &_CloseContextResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(CloseContextResponse& a, CloseContextResponse& b) { a.Swap(&b); }
  inline void Swap(CloseContextResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloseContextResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloseContextResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CloseContextResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CloseContextResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CloseContextResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.CloseContextResponse"; }

 protected:
  explicit CloseContextResponse(::google::protobuf::Arena* arena);
  CloseContextResponse(::google::protobuf::Arena* arena, const CloseContextResponse& from);
  CloseContextResponse(::google::protobuf::Arena* arena, CloseContextResponse&& from) noexcept
      : CloseContextResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.eager.CloseContextResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CloseContextResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CloseContextRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.CloseContextRequest) */ {
 public:
  inline CloseContextRequest() : CloseContextRequest(nullptr) {}
  ~CloseContextRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CloseContextRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CloseContextRequest(const CloseContextRequest& from) : CloseContextRequest(nullptr, from) {}
  inline CloseContextRequest(CloseContextRequest&& from) noexcept
      : CloseContextRequest(nullptr, std::move(from)) {}
  inline CloseContextRequest& operator=(const CloseContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloseContextRequest& operator=(CloseContextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CloseContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloseContextRequest* internal_default_instance() {
    return reinterpret_cast<const CloseContextRequest*>(
        &_CloseContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(CloseContextRequest& a, CloseContextRequest& b) { a.Swap(&b); }
  inline void Swap(CloseContextRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloseContextRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloseContextRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CloseContextRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CloseContextRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CloseContextRequest& from) { CloseContextRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CloseContextRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.CloseContextRequest"; }

 protected:
  explicit CloseContextRequest(::google::protobuf::Arena* arena);
  CloseContextRequest(::google::protobuf::Arena* arena, const CloseContextRequest& from);
  CloseContextRequest(::google::protobuf::Arena* arena, CloseContextRequest&& from) noexcept
      : CloseContextRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContextIdFieldNumber = 1,
    kContextViewIdFieldNumber = 2,
  };
  // fixed64 context_id = 1;
  void clear_context_id() ;
  ::uint64_t context_id() const;
  void set_context_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_id() const;
  void _internal_set_context_id(::uint64_t value);

  public:
  // fixed64 context_view_id = 2;
  void clear_context_view_id() ;
  ::uint64_t context_view_id() const;
  void set_context_view_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_view_id() const;
  void _internal_set_context_view_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.CloseContextRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CloseContextRequest& from_msg);
    ::uint64_t context_id_;
    ::uint64_t context_view_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CleanupFunctionOp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.CleanupFunctionOp) */ {
 public:
  inline CleanupFunctionOp() : CleanupFunctionOp(nullptr) {}
  ~CleanupFunctionOp() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CleanupFunctionOp(
      ::google::protobuf::internal::ConstantInitialized);

  inline CleanupFunctionOp(const CleanupFunctionOp& from) : CleanupFunctionOp(nullptr, from) {}
  inline CleanupFunctionOp(CleanupFunctionOp&& from) noexcept
      : CleanupFunctionOp(nullptr, std::move(from)) {}
  inline CleanupFunctionOp& operator=(const CleanupFunctionOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CleanupFunctionOp& operator=(CleanupFunctionOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CleanupFunctionOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CleanupFunctionOp* internal_default_instance() {
    return reinterpret_cast<const CleanupFunctionOp*>(
        &_CleanupFunctionOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CleanupFunctionOp& a, CleanupFunctionOp& b) { a.Swap(&b); }
  inline void Swap(CleanupFunctionOp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CleanupFunctionOp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CleanupFunctionOp* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CleanupFunctionOp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CleanupFunctionOp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CleanupFunctionOp& from) { CleanupFunctionOp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CleanupFunctionOp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.CleanupFunctionOp"; }

 protected:
  explicit CleanupFunctionOp(::google::protobuf::Arena* arena);
  CleanupFunctionOp(::google::protobuf::Arena* arena, const CleanupFunctionOp& from);
  CleanupFunctionOp(::google::protobuf::Arena* arena, CleanupFunctionOp&& from) noexcept
      : CleanupFunctionOp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStepIdFieldNumber = 1,
  };
  // int64 step_id = 1;
  void clear_step_id() ;
  ::int64_t step_id() const;
  void set_step_id(::int64_t value);

  private:
  ::int64_t _internal_step_id() const;
  void _internal_set_step_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.CleanupFunctionOp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CleanupFunctionOp& from_msg);
    ::int64_t step_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT UpdateContextResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.UpdateContextResponse) */ {
 public:
  inline UpdateContextResponse() : UpdateContextResponse(nullptr) {}
  ~UpdateContextResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateContextResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateContextResponse(const UpdateContextResponse& from) : UpdateContextResponse(nullptr, from) {}
  inline UpdateContextResponse(UpdateContextResponse&& from) noexcept
      : UpdateContextResponse(nullptr, std::move(from)) {}
  inline UpdateContextResponse& operator=(const UpdateContextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateContextResponse& operator=(UpdateContextResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateContextResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateContextResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateContextResponse*>(
        &_UpdateContextResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(UpdateContextResponse& a, UpdateContextResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateContextResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateContextResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateContextResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateContextResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateContextResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateContextResponse& from) { UpdateContextResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateContextResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.UpdateContextResponse"; }

 protected:
  explicit UpdateContextResponse(::google::protobuf::Arena* arena);
  UpdateContextResponse(::google::protobuf::Arena* arena, const UpdateContextResponse& from);
  UpdateContextResponse(::google::protobuf::Arena* arena, UpdateContextResponse&& from) noexcept
      : UpdateContextResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceAttributesFieldNumber = 1,
  };
  // repeated .tensorflow.DeviceAttributes device_attributes = 1;
  int device_attributes_size() const;
  private:
  int _internal_device_attributes_size() const;

  public:
  void clear_device_attributes() ;
  ::tensorflow::DeviceAttributes* mutable_device_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* mutable_device_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& _internal_device_attributes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* _internal_mutable_device_attributes();
  public:
  const ::tensorflow::DeviceAttributes& device_attributes(int index) const;
  ::tensorflow::DeviceAttributes* add_device_attributes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& device_attributes() const;
  // @@protoc_insertion_point(class_scope:tensorflow.eager.UpdateContextResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateContextResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceAttributes > device_attributes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CreateContextResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.CreateContextResponse) */ {
 public:
  inline CreateContextResponse() : CreateContextResponse(nullptr) {}
  ~CreateContextResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateContextResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateContextResponse(const CreateContextResponse& from) : CreateContextResponse(nullptr, from) {}
  inline CreateContextResponse(CreateContextResponse&& from) noexcept
      : CreateContextResponse(nullptr, std::move(from)) {}
  inline CreateContextResponse& operator=(const CreateContextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateContextResponse& operator=(CreateContextResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateContextResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateContextResponse* internal_default_instance() {
    return reinterpret_cast<const CreateContextResponse*>(
        &_CreateContextResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CreateContextResponse& a, CreateContextResponse& b) { a.Swap(&b); }
  inline void Swap(CreateContextResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateContextResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateContextResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CreateContextResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateContextResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateContextResponse& from) { CreateContextResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateContextResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.CreateContextResponse"; }

 protected:
  explicit CreateContextResponse(::google::protobuf::Arena* arena);
  CreateContextResponse(::google::protobuf::Arena* arena, const CreateContextResponse& from);
  CreateContextResponse(::google::protobuf::Arena* arena, CreateContextResponse&& from) noexcept
      : CreateContextResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceAttributesFieldNumber = 2,
  };
  // repeated .tensorflow.DeviceAttributes device_attributes = 2;
  int device_attributes_size() const;
  private:
  int _internal_device_attributes_size() const;

  public:
  void clear_device_attributes() ;
  ::tensorflow::DeviceAttributes* mutable_device_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* mutable_device_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& _internal_device_attributes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* _internal_mutable_device_attributes();
  public:
  const ::tensorflow::DeviceAttributes& device_attributes(int index) const;
  ::tensorflow::DeviceAttributes* add_device_attributes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& device_attributes() const;
  // @@protoc_insertion_point(class_scope:tensorflow.eager.CreateContextResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateContextResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceAttributes > device_attributes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT SendTensorOp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.SendTensorOp) */ {
 public:
  inline SendTensorOp() : SendTensorOp(nullptr) {}
  ~SendTensorOp() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendTensorOp(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendTensorOp(const SendTensorOp& from) : SendTensorOp(nullptr, from) {}
  inline SendTensorOp(SendTensorOp&& from) noexcept
      : SendTensorOp(nullptr, std::move(from)) {}
  inline SendTensorOp& operator=(const SendTensorOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendTensorOp& operator=(SendTensorOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendTensorOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendTensorOp* internal_default_instance() {
    return reinterpret_cast<const SendTensorOp*>(
        &_SendTensorOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(SendTensorOp& a, SendTensorOp& b) { a.Swap(&b); }
  inline void Swap(SendTensorOp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendTensorOp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendTensorOp* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendTensorOp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendTensorOp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendTensorOp& from) { SendTensorOp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendTensorOp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.SendTensorOp"; }

 protected:
  explicit SendTensorOp(::google::protobuf::Arena* arena);
  SendTensorOp(::google::protobuf::Arena* arena, const SendTensorOp& from);
  SendTensorOp(::google::protobuf::Arena* arena, SendTensorOp&& from) noexcept
      : SendTensorOp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTensorsFieldNumber = 2,
    kDeviceNameFieldNumber = 3,
    kOpIdFieldNumber = 1,
  };
  // repeated .tensorflow.TensorProto tensors = 2;
  int tensors_size() const;
  private:
  int _internal_tensors_size() const;

  public:
  void clear_tensors() ;
  ::tensorflow::TensorProto* mutable_tensors(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* mutable_tensors();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& _internal_tensors() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* _internal_mutable_tensors();
  public:
  const ::tensorflow::TensorProto& tensors(int index) const;
  ::tensorflow::TensorProto* add_tensors();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& tensors() const;
  // string device_name = 3;
  void clear_device_name() ;
  const std::string& device_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_name(Arg_&& arg, Args_... args);
  std::string* mutable_device_name();
  PROTOBUF_NODISCARD std::string* release_device_name();
  void set_allocated_device_name(std::string* value);

  private:
  const std::string& _internal_device_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_name(
      const std::string& value);
  std::string* _internal_mutable_device_name();

  public:
  // int64 op_id = 1;
  void clear_op_id() ;
  ::int64_t op_id() const;
  void set_op_id(::int64_t value);

  private:
  ::int64_t _internal_op_id() const;
  void _internal_set_op_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.SendTensorOp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      49, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendTensorOp& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto > tensors_;
    ::google::protobuf::internal::ArenaStringPtr device_name_;
    ::int64_t op_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT SendPackedHandleOp_LocalTensorHandle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle) */ {
 public:
  inline SendPackedHandleOp_LocalTensorHandle() : SendPackedHandleOp_LocalTensorHandle(nullptr) {}
  ~SendPackedHandleOp_LocalTensorHandle() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendPackedHandleOp_LocalTensorHandle(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendPackedHandleOp_LocalTensorHandle(const SendPackedHandleOp_LocalTensorHandle& from) : SendPackedHandleOp_LocalTensorHandle(nullptr, from) {}
  inline SendPackedHandleOp_LocalTensorHandle(SendPackedHandleOp_LocalTensorHandle&& from) noexcept
      : SendPackedHandleOp_LocalTensorHandle(nullptr, std::move(from)) {}
  inline SendPackedHandleOp_LocalTensorHandle& operator=(const SendPackedHandleOp_LocalTensorHandle& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendPackedHandleOp_LocalTensorHandle& operator=(SendPackedHandleOp_LocalTensorHandle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendPackedHandleOp_LocalTensorHandle& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendPackedHandleOp_LocalTensorHandle* internal_default_instance() {
    return reinterpret_cast<const SendPackedHandleOp_LocalTensorHandle*>(
        &_SendPackedHandleOp_LocalTensorHandle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(SendPackedHandleOp_LocalTensorHandle& a, SendPackedHandleOp_LocalTensorHandle& b) { a.Swap(&b); }
  inline void Swap(SendPackedHandleOp_LocalTensorHandle* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendPackedHandleOp_LocalTensorHandle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendPackedHandleOp_LocalTensorHandle* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendPackedHandleOp_LocalTensorHandle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendPackedHandleOp_LocalTensorHandle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendPackedHandleOp_LocalTensorHandle& from) { SendPackedHandleOp_LocalTensorHandle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendPackedHandleOp_LocalTensorHandle* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.SendPackedHandleOp.LocalTensorHandle"; }

 protected:
  explicit SendPackedHandleOp_LocalTensorHandle(::google::protobuf::Arena* arena);
  SendPackedHandleOp_LocalTensorHandle(::google::protobuf::Arena* arena, const SendPackedHandleOp_LocalTensorHandle& from);
  SendPackedHandleOp_LocalTensorHandle(::google::protobuf::Arena* arena, SendPackedHandleOp_LocalTensorHandle&& from) noexcept
      : SendPackedHandleOp_LocalTensorHandle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceFieldNumber = 2,
    kTensorFieldNumber = 1,
  };
  // string device = 2;
  void clear_device() ;
  const std::string& device() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device(Arg_&& arg, Args_... args);
  std::string* mutable_device();
  PROTOBUF_NODISCARD std::string* release_device();
  void set_allocated_device(std::string* value);

  private:
  const std::string& _internal_device() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device(
      const std::string& value);
  std::string* _internal_mutable_device();

  public:
  // .tensorflow.TensorProto tensor = 1;
  bool has_tensor() const;
  void clear_tensor() ;
  const ::tensorflow::TensorProto& tensor() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorProto* release_tensor();
  ::tensorflow::TensorProto* mutable_tensor();
  void set_allocated_tensor(::tensorflow::TensorProto* value);
  void unsafe_arena_set_allocated_tensor(::tensorflow::TensorProto* value);
  ::tensorflow::TensorProto* unsafe_arena_release_tensor();

  private:
  const ::tensorflow::TensorProto& _internal_tensor() const;
  ::tensorflow::TensorProto* _internal_mutable_tensor();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      68, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendPackedHandleOp_LocalTensorHandle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr device_;
    ::tensorflow::TensorProto* tensor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RunComponentFunctionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.RunComponentFunctionResponse) */ {
 public:
  inline RunComponentFunctionResponse() : RunComponentFunctionResponse(nullptr) {}
  ~RunComponentFunctionResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RunComponentFunctionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RunComponentFunctionResponse(const RunComponentFunctionResponse& from) : RunComponentFunctionResponse(nullptr, from) {}
  inline RunComponentFunctionResponse(RunComponentFunctionResponse&& from) noexcept
      : RunComponentFunctionResponse(nullptr, std::move(from)) {}
  inline RunComponentFunctionResponse& operator=(const RunComponentFunctionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RunComponentFunctionResponse& operator=(RunComponentFunctionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RunComponentFunctionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RunComponentFunctionResponse* internal_default_instance() {
    return reinterpret_cast<const RunComponentFunctionResponse*>(
        &_RunComponentFunctionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(RunComponentFunctionResponse& a, RunComponentFunctionResponse& b) { a.Swap(&b); }
  inline void Swap(RunComponentFunctionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RunComponentFunctionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RunComponentFunctionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RunComponentFunctionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RunComponentFunctionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RunComponentFunctionResponse& from) { RunComponentFunctionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RunComponentFunctionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.RunComponentFunctionResponse"; }

 protected:
  explicit RunComponentFunctionResponse(::google::protobuf::Arena* arena);
  RunComponentFunctionResponse(::google::protobuf::Arena* arena, const RunComponentFunctionResponse& from);
  RunComponentFunctionResponse(::google::protobuf::Arena* arena, RunComponentFunctionResponse&& from) noexcept
      : RunComponentFunctionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShapeFieldNumber = 1,
    kTensorFieldNumber = 2,
  };
  // repeated .tensorflow.TensorShapeProto shape = 1;
  int shape_size() const;
  private:
  int _internal_shape_size() const;

  public:
  void clear_shape() ;
  ::tensorflow::TensorShapeProto* mutable_shape(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>* mutable_shape();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>& _internal_shape() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>* _internal_mutable_shape();
  public:
  const ::tensorflow::TensorShapeProto& shape(int index) const;
  ::tensorflow::TensorShapeProto* add_shape();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>& shape() const;
  // repeated .tensorflow.TensorProto tensor = 2;
  int tensor_size() const;
  private:
  int _internal_tensor_size() const;

  public:
  void clear_tensor() ;
  ::tensorflow::TensorProto* mutable_tensor(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* mutable_tensor();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& _internal_tensor() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* _internal_mutable_tensor();
  public:
  const ::tensorflow::TensorProto& tensor(int index) const;
  ::tensorflow::TensorProto* add_tensor();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& tensor() const;
  // @@protoc_insertion_point(class_scope:tensorflow.eager.RunComponentFunctionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RunComponentFunctionResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorShapeProto > shape_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto > tensor_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QueueResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.QueueResponse) */ {
 public:
  inline QueueResponse() : QueueResponse(nullptr) {}
  ~QueueResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueueResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueueResponse(const QueueResponse& from) : QueueResponse(nullptr, from) {}
  inline QueueResponse(QueueResponse&& from) noexcept
      : QueueResponse(nullptr, std::move(from)) {}
  inline QueueResponse& operator=(const QueueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueResponse& operator=(QueueResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueueResponse* internal_default_instance() {
    return reinterpret_cast<const QueueResponse*>(
        &_QueueResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueueResponse& a, QueueResponse& b) { a.Swap(&b); }
  inline void Swap(QueueResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QueueResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueueResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueueResponse& from) { QueueResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueueResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.QueueResponse"; }

 protected:
  explicit QueueResponse(::google::protobuf::Arena* arena);
  QueueResponse(::google::protobuf::Arena* arena, const QueueResponse& from);
  QueueResponse(::google::protobuf::Arena* arena, QueueResponse&& from) noexcept
      : QueueResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShapeFieldNumber = 1,
    kTensorFieldNumber = 2,
    kDeviceFieldNumber = 3,
  };
  // repeated .tensorflow.TensorShapeProto shape = 1;
  int shape_size() const;
  private:
  int _internal_shape_size() const;

  public:
  void clear_shape() ;
  ::tensorflow::TensorShapeProto* mutable_shape(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>* mutable_shape();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>& _internal_shape() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>* _internal_mutable_shape();
  public:
  const ::tensorflow::TensorShapeProto& shape(int index) const;
  ::tensorflow::TensorShapeProto* add_shape();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>& shape() const;
  // repeated .tensorflow.TensorProto tensor = 2;
  int tensor_size() const;
  private:
  int _internal_tensor_size() const;

  public:
  void clear_tensor() ;
  ::tensorflow::TensorProto* mutable_tensor(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* mutable_tensor();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& _internal_tensor() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* _internal_mutable_tensor();
  public:
  const ::tensorflow::TensorProto& tensor(int index) const;
  ::tensorflow::TensorProto* add_tensor();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& tensor() const;
  // repeated string device = 3;
  int device_size() const;
  private:
  int _internal_device_size() const;

  public:
  void clear_device() ;
  const std::string& device(int index) const;
  std::string* mutable_device(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device(int index, Arg_&& value, Args_... args);
  std::string* add_device();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.QueueResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      45, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueueResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorShapeProto > shape_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto > tensor_;
    ::google::protobuf::RepeatedPtrField<std::string> device_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT Operation_Input final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.Operation.Input) */ {
 public:
  inline Operation_Input() : Operation_Input(nullptr) {}
  ~Operation_Input() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operation_Input(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operation_Input(const Operation_Input& from) : Operation_Input(nullptr, from) {}
  inline Operation_Input(Operation_Input&& from) noexcept
      : Operation_Input(nullptr, std::move(from)) {}
  inline Operation_Input& operator=(const Operation_Input& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operation_Input& operator=(Operation_Input&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operation_Input& default_instance() {
    return *internal_default_instance();
  }
  enum ItemCase {
    kRemoteHandle = 1,
    kTensor = 2,
    ITEM_NOT_SET = 0,
  };
  static inline const Operation_Input* internal_default_instance() {
    return reinterpret_cast<const Operation_Input*>(
        &_Operation_Input_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Operation_Input& a, Operation_Input& b) { a.Swap(&b); }
  inline void Swap(Operation_Input* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operation_Input* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operation_Input* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operation_Input>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operation_Input& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operation_Input& from) { Operation_Input::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operation_Input* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.Operation.Input"; }

 protected:
  explicit Operation_Input(::google::protobuf::Arena* arena);
  Operation_Input(::google::protobuf::Arena* arena, const Operation_Input& from);
  Operation_Input(::google::protobuf::Arena* arena, Operation_Input&& from) noexcept
      : Operation_Input(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRemoteHandleFieldNumber = 1,
    kTensorFieldNumber = 2,
  };
  // .tensorflow.eager.RemoteTensorHandle remote_handle = 1;
  bool has_remote_handle() const;
  private:
  bool _internal_has_remote_handle() const;

  public:
  void clear_remote_handle() ;
  const ::tensorflow::eager::RemoteTensorHandle& remote_handle() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::RemoteTensorHandle* release_remote_handle();
  ::tensorflow::eager::RemoteTensorHandle* mutable_remote_handle();
  void set_allocated_remote_handle(::tensorflow::eager::RemoteTensorHandle* value);
  void unsafe_arena_set_allocated_remote_handle(::tensorflow::eager::RemoteTensorHandle* value);
  ::tensorflow::eager::RemoteTensorHandle* unsafe_arena_release_remote_handle();

  private:
  const ::tensorflow::eager::RemoteTensorHandle& _internal_remote_handle() const;
  ::tensorflow::eager::RemoteTensorHandle* _internal_mutable_remote_handle();

  public:
  // .tensorflow.TensorProto tensor = 2;
  bool has_tensor() const;
  private:
  bool _internal_has_tensor() const;

  public:
  void clear_tensor() ;
  const ::tensorflow::TensorProto& tensor() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorProto* release_tensor();
  ::tensorflow::TensorProto* mutable_tensor();
  void set_allocated_tensor(::tensorflow::TensorProto* value);
  void unsafe_arena_set_allocated_tensor(::tensorflow::TensorProto* value);
  ::tensorflow::TensorProto* unsafe_arena_release_tensor();

  private:
  const ::tensorflow::TensorProto& _internal_tensor() const;
  ::tensorflow::TensorProto* _internal_mutable_tensor();

  public:
  void clear_item();
  ItemCase item_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.eager.Operation.Input)
 private:
  class _Internal;
  void set_has_remote_handle();
  void set_has_tensor();
  inline bool has_item() const;
  inline void clear_has_item();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operation_Input& from_msg);
    union ItemUnion {
      constexpr ItemUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tensorflow::eager::RemoteTensorHandle* remote_handle_;
      ::tensorflow::TensorProto* tensor_;
    } item_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT SendPackedHandleOp_Handle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.SendPackedHandleOp.Handle) */ {
 public:
  inline SendPackedHandleOp_Handle() : SendPackedHandleOp_Handle(nullptr) {}
  ~SendPackedHandleOp_Handle() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendPackedHandleOp_Handle(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendPackedHandleOp_Handle(const SendPackedHandleOp_Handle& from) : SendPackedHandleOp_Handle(nullptr, from) {}
  inline SendPackedHandleOp_Handle(SendPackedHandleOp_Handle&& from) noexcept
      : SendPackedHandleOp_Handle(nullptr, std::move(from)) {}
  inline SendPackedHandleOp_Handle& operator=(const SendPackedHandleOp_Handle& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendPackedHandleOp_Handle& operator=(SendPackedHandleOp_Handle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendPackedHandleOp_Handle& default_instance() {
    return *internal_default_instance();
  }
  enum ItemCase {
    kLocalHandle = 1,
    kRemoteHandle = 2,
    ITEM_NOT_SET = 0,
  };
  static inline const SendPackedHandleOp_Handle* internal_default_instance() {
    return reinterpret_cast<const SendPackedHandleOp_Handle*>(
        &_SendPackedHandleOp_Handle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(SendPackedHandleOp_Handle& a, SendPackedHandleOp_Handle& b) { a.Swap(&b); }
  inline void Swap(SendPackedHandleOp_Handle* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendPackedHandleOp_Handle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendPackedHandleOp_Handle* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendPackedHandleOp_Handle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendPackedHandleOp_Handle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendPackedHandleOp_Handle& from) { SendPackedHandleOp_Handle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendPackedHandleOp_Handle* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.SendPackedHandleOp.Handle"; }

 protected:
  explicit SendPackedHandleOp_Handle(::google::protobuf::Arena* arena);
  SendPackedHandleOp_Handle(::google::protobuf::Arena* arena, const SendPackedHandleOp_Handle& from);
  SendPackedHandleOp_Handle(::google::protobuf::Arena* arena, SendPackedHandleOp_Handle&& from) noexcept
      : SendPackedHandleOp_Handle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocalHandleFieldNumber = 1,
    kRemoteHandleFieldNumber = 2,
  };
  // .tensorflow.eager.SendPackedHandleOp.LocalTensorHandle local_handle = 1;
  bool has_local_handle() const;
  private:
  bool _internal_has_local_handle() const;

  public:
  void clear_local_handle() ;
  const ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle& local_handle() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* release_local_handle();
  ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* mutable_local_handle();
  void set_allocated_local_handle(::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* value);
  void unsafe_arena_set_allocated_local_handle(::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* value);
  ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* unsafe_arena_release_local_handle();

  private:
  const ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle& _internal_local_handle() const;
  ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* _internal_mutable_local_handle();

  public:
  // .tensorflow.eager.RemoteTensorHandle remote_handle = 2;
  bool has_remote_handle() const;
  private:
  bool _internal_has_remote_handle() const;

  public:
  void clear_remote_handle() ;
  const ::tensorflow::eager::RemoteTensorHandle& remote_handle() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::RemoteTensorHandle* release_remote_handle();
  ::tensorflow::eager::RemoteTensorHandle* mutable_remote_handle();
  void set_allocated_remote_handle(::tensorflow::eager::RemoteTensorHandle* value);
  void unsafe_arena_set_allocated_remote_handle(::tensorflow::eager::RemoteTensorHandle* value);
  ::tensorflow::eager::RemoteTensorHandle* unsafe_arena_release_remote_handle();

  private:
  const ::tensorflow::eager::RemoteTensorHandle& _internal_remote_handle() const;
  ::tensorflow::eager::RemoteTensorHandle* _internal_mutable_remote_handle();

  public:
  void clear_item();
  ItemCase item_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.eager.SendPackedHandleOp.Handle)
 private:
  class _Internal;
  void set_has_local_handle();
  void set_has_remote_handle();
  inline bool has_item() const;
  inline void clear_has_item();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendPackedHandleOp_Handle& from_msg);
    union ItemUnion {
      constexpr ItemUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* local_handle_;
      ::tensorflow::eager::RemoteTensorHandle* remote_handle_;
    } item_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class Operation_AttrsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Operation_AttrsEntry_DoNotUse, std::string, ::tensorflow::AttrValue,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Operation_AttrsEntry_DoNotUse, std::string, ::tensorflow::AttrValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Operation_AttrsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operation_AttrsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Operation_AttrsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Operation_AttrsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Operation_AttrsEntry_DoNotUse*>(
        &_Operation_AttrsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      49, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT EnqueueResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.EnqueueResponse) */ {
 public:
  inline EnqueueResponse() : EnqueueResponse(nullptr) {}
  ~EnqueueResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnqueueResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnqueueResponse(const EnqueueResponse& from) : EnqueueResponse(nullptr, from) {}
  inline EnqueueResponse(EnqueueResponse&& from) noexcept
      : EnqueueResponse(nullptr, std::move(from)) {}
  inline EnqueueResponse& operator=(const EnqueueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnqueueResponse& operator=(EnqueueResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnqueueResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnqueueResponse* internal_default_instance() {
    return reinterpret_cast<const EnqueueResponse*>(
        &_EnqueueResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(EnqueueResponse& a, EnqueueResponse& b) { a.Swap(&b); }
  inline void Swap(EnqueueResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnqueueResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnqueueResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EnqueueResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnqueueResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnqueueResponse& from) { EnqueueResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EnqueueResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.EnqueueResponse"; }

 protected:
  explicit EnqueueResponse(::google::protobuf::Arena* arena);
  EnqueueResponse(::google::protobuf::Arena* arena, const EnqueueResponse& from);
  EnqueueResponse(::google::protobuf::Arena* arena, EnqueueResponse&& from) noexcept
      : EnqueueResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQueueResponseFieldNumber = 1,
  };
  // repeated .tensorflow.eager.QueueResponse queue_response = 1;
  int queue_response_size() const;
  private:
  int _internal_queue_response_size() const;

  public:
  void clear_queue_response() ;
  ::tensorflow::eager::QueueResponse* mutable_queue_response(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueResponse>* mutable_queue_response();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueResponse>& _internal_queue_response() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueResponse>* _internal_mutable_queue_response();
  public:
  const ::tensorflow::eager::QueueResponse& queue_response(int index) const;
  ::tensorflow::eager::QueueResponse* add_queue_response();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueResponse>& queue_response() const;
  // @@protoc_insertion_point(class_scope:tensorflow.eager.EnqueueResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnqueueResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::eager::QueueResponse > queue_response_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT SendPackedHandleOp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.SendPackedHandleOp) */ {
 public:
  inline SendPackedHandleOp() : SendPackedHandleOp(nullptr) {}
  ~SendPackedHandleOp() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendPackedHandleOp(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendPackedHandleOp(const SendPackedHandleOp& from) : SendPackedHandleOp(nullptr, from) {}
  inline SendPackedHandleOp(SendPackedHandleOp&& from) noexcept
      : SendPackedHandleOp(nullptr, std::move(from)) {}
  inline SendPackedHandleOp& operator=(const SendPackedHandleOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendPackedHandleOp& operator=(SendPackedHandleOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendPackedHandleOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendPackedHandleOp* internal_default_instance() {
    return reinterpret_cast<const SendPackedHandleOp*>(
        &_SendPackedHandleOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SendPackedHandleOp& a, SendPackedHandleOp& b) { a.Swap(&b); }
  inline void Swap(SendPackedHandleOp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendPackedHandleOp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendPackedHandleOp* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendPackedHandleOp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendPackedHandleOp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendPackedHandleOp& from) { SendPackedHandleOp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendPackedHandleOp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.SendPackedHandleOp"; }

 protected:
  explicit SendPackedHandleOp(::google::protobuf::Arena* arena);
  SendPackedHandleOp(::google::protobuf::Arena* arena, const SendPackedHandleOp& from);
  SendPackedHandleOp(::google::protobuf::Arena* arena, SendPackedHandleOp&& from) noexcept
      : SendPackedHandleOp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using LocalTensorHandle = SendPackedHandleOp_LocalTensorHandle;
  using Handle = SendPackedHandleOp_Handle;

  // accessors -------------------------------------------------------
  enum : int {
    kHandlesFieldNumber = 2,
    kDeviceNameFieldNumber = 3,
    kOpIdFieldNumber = 1,
  };
  // repeated .tensorflow.eager.SendPackedHandleOp.Handle handles = 2;
  int handles_size() const;
  private:
  int _internal_handles_size() const;

  public:
  void clear_handles() ;
  ::tensorflow::eager::SendPackedHandleOp_Handle* mutable_handles(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::eager::SendPackedHandleOp_Handle>* mutable_handles();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::SendPackedHandleOp_Handle>& _internal_handles() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::eager::SendPackedHandleOp_Handle>* _internal_mutable_handles();
  public:
  const ::tensorflow::eager::SendPackedHandleOp_Handle& handles(int index) const;
  ::tensorflow::eager::SendPackedHandleOp_Handle* add_handles();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::SendPackedHandleOp_Handle>& handles() const;
  // string device_name = 3;
  void clear_device_name() ;
  const std::string& device_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_name(Arg_&& arg, Args_... args);
  std::string* mutable_device_name();
  PROTOBUF_NODISCARD std::string* release_device_name();
  void set_allocated_device_name(std::string* value);

  private:
  const std::string& _internal_device_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_name(
      const std::string& value);
  std::string* _internal_mutable_device_name();

  public:
  // int64 op_id = 1;
  void clear_op_id() ;
  ::int64_t op_id() const;
  void set_op_id(::int64_t value);

  private:
  ::int64_t _internal_op_id() const;
  void _internal_set_op_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.SendPackedHandleOp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      55, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendPackedHandleOp& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::eager::SendPackedHandleOp_Handle > handles_;
    ::google::protobuf::internal::ArenaStringPtr device_name_;
    ::int64_t op_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT Operation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.Operation) */ {
 public:
  inline Operation() : Operation(nullptr) {}
  ~Operation() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Operation(
      ::google::protobuf::internal::ConstantInitialized);

  inline Operation(const Operation& from) : Operation(nullptr, from) {}
  inline Operation(Operation&& from) noexcept
      : Operation(nullptr, std::move(from)) {}
  inline Operation& operator=(const Operation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operation& operator=(Operation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operation* internal_default_instance() {
    return reinterpret_cast<const Operation*>(
        &_Operation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Operation& a, Operation& b) { a.Swap(&b); }
  inline void Swap(Operation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operation* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Operation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Operation& from) { Operation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.Operation"; }

 protected:
  explicit Operation(::google::protobuf::Arena* arena);
  Operation(::google::protobuf::Arena* arena, const Operation& from);
  Operation(::google::protobuf::Arena* arena, Operation&& from) noexcept
      : Operation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Input = Operation_Input;

  // accessors -------------------------------------------------------
  enum : int {
    kControlOpIdsFieldNumber = 4,
    kAttrsFieldNumber = 5,
    kOpInputsFieldNumber = 10,
    kNameFieldNumber = 2,
    kDeviceFieldNumber = 6,
    kIdFieldNumber = 1,
    kFuncStepIdFieldNumber = 8,
    kIsComponentFunctionFieldNumber = 7,
    kIsFunctionFieldNumber = 9,
  };
  // repeated int64 control_op_ids = 4;
  int control_op_ids_size() const;
  private:
  int _internal_control_op_ids_size() const;

  public:
  void clear_control_op_ids() ;
  ::int64_t control_op_ids(int index) const;
  void set_control_op_ids(int index, ::int64_t value);
  void add_control_op_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& control_op_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_control_op_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_control_op_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_control_op_ids();

  public:
  // map<string, .tensorflow.AttrValue> attrs = 5;
  int attrs_size() const;
  private:
  int _internal_attrs_size() const;

  public:
  void clear_attrs() ;
  const ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>& attrs() const;
  ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>* mutable_attrs();

  private:
  const ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>& _internal_attrs() const;
  ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>* _internal_mutable_attrs();

  public:
  // repeated .tensorflow.eager.Operation.Input op_inputs = 10;
  int op_inputs_size() const;
  private:
  int _internal_op_inputs_size() const;

  public:
  void clear_op_inputs() ;
  ::tensorflow::eager::Operation_Input* mutable_op_inputs(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::eager::Operation_Input>* mutable_op_inputs();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::Operation_Input>& _internal_op_inputs() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::eager::Operation_Input>* _internal_mutable_op_inputs();
  public:
  const ::tensorflow::eager::Operation_Input& op_inputs(int index) const;
  ::tensorflow::eager::Operation_Input* add_op_inputs();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::Operation_Input>& op_inputs() const;
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string device = 6;
  void clear_device() ;
  const std::string& device() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device(Arg_&& arg, Args_... args);
  std::string* mutable_device();
  PROTOBUF_NODISCARD std::string* release_device();
  void set_allocated_device(std::string* value);

  private:
  const std::string& _internal_device() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device(
      const std::string& value);
  std::string* _internal_mutable_device();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 func_step_id = 8;
  void clear_func_step_id() ;
  ::int64_t func_step_id() const;
  void set_func_step_id(::int64_t value);

  private:
  ::int64_t _internal_func_step_id() const;
  void _internal_set_func_step_id(::int64_t value);

  public:
  // bool is_component_function = 7;
  void clear_is_component_function() ;
  bool is_component_function() const;
  void set_is_component_function(bool value);

  private:
  bool _internal_is_component_function() const;
  void _internal_set_is_component_function(bool value);

  public:
  // bool is_function = 9;
  void clear_is_function() ;
  bool is_function() const;
  void set_is_function(bool value);

  private:
  bool _internal_is_function() const;
  void _internal_set_is_function(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.Operation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 3,
      58, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Operation& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> control_op_ids_;
    mutable ::google::protobuf::internal::CachedSize _control_op_ids_cached_byte_size_;
    ::google::protobuf::internal::MapField<Operation_AttrsEntry_DoNotUse, std::string, ::tensorflow::AttrValue,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        attrs_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::eager::Operation_Input > op_inputs_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr device_;
    ::int64_t id_;
    ::int64_t func_step_id_;
    bool is_component_function_;
    bool is_function_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RunComponentFunctionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.RunComponentFunctionRequest) */ {
 public:
  inline RunComponentFunctionRequest() : RunComponentFunctionRequest(nullptr) {}
  ~RunComponentFunctionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RunComponentFunctionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RunComponentFunctionRequest(const RunComponentFunctionRequest& from) : RunComponentFunctionRequest(nullptr, from) {}
  inline RunComponentFunctionRequest(RunComponentFunctionRequest&& from) noexcept
      : RunComponentFunctionRequest(nullptr, std::move(from)) {}
  inline RunComponentFunctionRequest& operator=(const RunComponentFunctionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RunComponentFunctionRequest& operator=(RunComponentFunctionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RunComponentFunctionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RunComponentFunctionRequest* internal_default_instance() {
    return reinterpret_cast<const RunComponentFunctionRequest*>(
        &_RunComponentFunctionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(RunComponentFunctionRequest& a, RunComponentFunctionRequest& b) { a.Swap(&b); }
  inline void Swap(RunComponentFunctionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RunComponentFunctionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RunComponentFunctionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RunComponentFunctionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RunComponentFunctionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RunComponentFunctionRequest& from) { RunComponentFunctionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RunComponentFunctionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.RunComponentFunctionRequest"; }

 protected:
  explicit RunComponentFunctionRequest(::google::protobuf::Arena* arena);
  RunComponentFunctionRequest(::google::protobuf::Arena* arena, const RunComponentFunctionRequest& from);
  RunComponentFunctionRequest(::google::protobuf::Arena* arena, RunComponentFunctionRequest&& from) noexcept
      : RunComponentFunctionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputNumFieldNumber = 3,
    kOperationFieldNumber = 2,
    kContextIdFieldNumber = 1,
  };
  // repeated int32 output_num = 3;
  int output_num_size() const;
  private:
  int _internal_output_num_size() const;

  public:
  void clear_output_num() ;
  ::int32_t output_num(int index) const;
  void set_output_num(int index, ::int32_t value);
  void add_output_num(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& output_num() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_output_num();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_output_num() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_output_num();

  public:
  // .tensorflow.eager.Operation operation = 2;
  bool has_operation() const;
  void clear_operation() ;
  const ::tensorflow::eager::Operation& operation() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::Operation* release_operation();
  ::tensorflow::eager::Operation* mutable_operation();
  void set_allocated_operation(::tensorflow::eager::Operation* value);
  void unsafe_arena_set_allocated_operation(::tensorflow::eager::Operation* value);
  ::tensorflow::eager::Operation* unsafe_arena_release_operation();

  private:
  const ::tensorflow::eager::Operation& _internal_operation() const;
  ::tensorflow::eager::Operation* _internal_mutable_operation();

  public:
  // fixed64 context_id = 1;
  void clear_context_id() ;
  ::uint64_t context_id() const;
  void set_context_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_id() const;
  void _internal_set_context_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.RunComponentFunctionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RunComponentFunctionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> output_num_;
    mutable ::google::protobuf::internal::CachedSize _output_num_cached_byte_size_;
    ::tensorflow::eager::Operation* operation_;
    ::uint64_t context_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RegisterFunctionOp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.RegisterFunctionOp) */ {
 public:
  inline RegisterFunctionOp() : RegisterFunctionOp(nullptr) {}
  ~RegisterFunctionOp() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterFunctionOp(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterFunctionOp(const RegisterFunctionOp& from) : RegisterFunctionOp(nullptr, from) {}
  inline RegisterFunctionOp(RegisterFunctionOp&& from) noexcept
      : RegisterFunctionOp(nullptr, std::move(from)) {}
  inline RegisterFunctionOp& operator=(const RegisterFunctionOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterFunctionOp& operator=(RegisterFunctionOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterFunctionOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterFunctionOp* internal_default_instance() {
    return reinterpret_cast<const RegisterFunctionOp*>(
        &_RegisterFunctionOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(RegisterFunctionOp& a, RegisterFunctionOp& b) { a.Swap(&b); }
  inline void Swap(RegisterFunctionOp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterFunctionOp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterFunctionOp* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RegisterFunctionOp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterFunctionOp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterFunctionOp& from) { RegisterFunctionOp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterFunctionOp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.RegisterFunctionOp"; }

 protected:
  explicit RegisterFunctionOp(::google::protobuf::Arena* arena);
  RegisterFunctionOp(::google::protobuf::Arena* arena, const RegisterFunctionOp& from);
  RegisterFunctionOp(::google::protobuf::Arena* arena, RegisterFunctionOp&& from) noexcept
      : RegisterFunctionOp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFunctionDefFieldNumber = 1,
    kLibraryFieldNumber = 3,
    kIsComponentFunctionFieldNumber = 2,
  };
  // .tensorflow.FunctionDef function_def = 1;
  bool has_function_def() const;
  void clear_function_def() ;
  const ::tensorflow::FunctionDef& function_def() const;
  PROTOBUF_NODISCARD ::tensorflow::FunctionDef* release_function_def();
  ::tensorflow::FunctionDef* mutable_function_def();
  void set_allocated_function_def(::tensorflow::FunctionDef* value);
  void unsafe_arena_set_allocated_function_def(::tensorflow::FunctionDef* value);
  ::tensorflow::FunctionDef* unsafe_arena_release_function_def();

  private:
  const ::tensorflow::FunctionDef& _internal_function_def() const;
  ::tensorflow::FunctionDef* _internal_mutable_function_def();

  public:
  // .tensorflow.FunctionDefLibrary library = 3;
  bool has_library() const;
  void clear_library() ;
  const ::tensorflow::FunctionDefLibrary& library() const;
  PROTOBUF_NODISCARD ::tensorflow::FunctionDefLibrary* release_library();
  ::tensorflow::FunctionDefLibrary* mutable_library();
  void set_allocated_library(::tensorflow::FunctionDefLibrary* value);
  void unsafe_arena_set_allocated_library(::tensorflow::FunctionDefLibrary* value);
  ::tensorflow::FunctionDefLibrary* unsafe_arena_release_library();

  private:
  const ::tensorflow::FunctionDefLibrary& _internal_library() const;
  ::tensorflow::FunctionDefLibrary* _internal_mutable_library();

  public:
  // bool is_component_function = 2;
  void clear_is_component_function() ;
  bool is_component_function() const;
  void set_is_component_function(bool value);

  private:
  bool _internal_is_component_function() const;
  void _internal_set_is_component_function(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.RegisterFunctionOp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterFunctionOp& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::FunctionDef* function_def_;
    ::tensorflow::FunctionDefLibrary* library_;
    bool is_component_function_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT UpdateContextRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.UpdateContextRequest) */ {
 public:
  inline UpdateContextRequest() : UpdateContextRequest(nullptr) {}
  ~UpdateContextRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateContextRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateContextRequest(const UpdateContextRequest& from) : UpdateContextRequest(nullptr, from) {}
  inline UpdateContextRequest(UpdateContextRequest&& from) noexcept
      : UpdateContextRequest(nullptr, std::move(from)) {}
  inline UpdateContextRequest& operator=(const UpdateContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateContextRequest& operator=(UpdateContextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateContextRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateContextRequest*>(
        &_UpdateContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(UpdateContextRequest& a, UpdateContextRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateContextRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateContextRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateContextRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateContextRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateContextRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateContextRequest& from) { UpdateContextRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateContextRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.UpdateContextRequest"; }

 protected:
  explicit UpdateContextRequest(::google::protobuf::Arena* arena);
  UpdateContextRequest(::google::protobuf::Arena* arena, const UpdateContextRequest& from);
  UpdateContextRequest(::google::protobuf::Arena* arena, UpdateContextRequest&& from) noexcept
      : UpdateContextRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClusterDeviceAttributesFieldNumber = 2,
    kServerDefFieldNumber = 1,
    kContextIdFieldNumber = 3,
    kContextViewIdFieldNumber = 4,
  };
  // repeated .tensorflow.DeviceAttributes cluster_device_attributes = 2;
  int cluster_device_attributes_size() const;
  private:
  int _internal_cluster_device_attributes_size() const;

  public:
  void clear_cluster_device_attributes() ;
  ::tensorflow::DeviceAttributes* mutable_cluster_device_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* mutable_cluster_device_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& _internal_cluster_device_attributes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* _internal_mutable_cluster_device_attributes();
  public:
  const ::tensorflow::DeviceAttributes& cluster_device_attributes(int index) const;
  ::tensorflow::DeviceAttributes* add_cluster_device_attributes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& cluster_device_attributes() const;
  // .tensorflow.ServerDef server_def = 1;
  bool has_server_def() const;
  void clear_server_def() ;
  const ::tensorflow::ServerDef& server_def() const;
  PROTOBUF_NODISCARD ::tensorflow::ServerDef* release_server_def();
  ::tensorflow::ServerDef* mutable_server_def();
  void set_allocated_server_def(::tensorflow::ServerDef* value);
  void unsafe_arena_set_allocated_server_def(::tensorflow::ServerDef* value);
  ::tensorflow::ServerDef* unsafe_arena_release_server_def();

  private:
  const ::tensorflow::ServerDef& _internal_server_def() const;
  ::tensorflow::ServerDef* _internal_mutable_server_def();

  public:
  // fixed64 context_id = 3;
  void clear_context_id() ;
  ::uint64_t context_id() const;
  void set_context_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_id() const;
  void _internal_set_context_id(::uint64_t value);

  public:
  // fixed64 context_view_id = 4;
  void clear_context_view_id() ;
  ::uint64_t context_view_id() const;
  void set_context_view_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_view_id() const;
  void _internal_set_context_view_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.UpdateContextRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateContextRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceAttributes > cluster_device_attributes_;
    ::tensorflow::ServerDef* server_def_;
    ::uint64_t context_id_;
    ::uint64_t context_view_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT QueueItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.QueueItem) */ {
 public:
  inline QueueItem() : QueueItem(nullptr) {}
  ~QueueItem() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueueItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueueItem(const QueueItem& from) : QueueItem(nullptr, from) {}
  inline QueueItem(QueueItem&& from) noexcept
      : QueueItem(nullptr, std::move(from)) {}
  inline QueueItem& operator=(const QueueItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueItem& operator=(QueueItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueItem& default_instance() {
    return *internal_default_instance();
  }
  enum ItemCase {
    kHandleToDecref = 1,
    kOperation = 2,
    kSendTensor = 3,
    kRegisterFunction = 4,
    kCleanupFunction = 5,
    kSyncRemoteExecutorForStream = 6,
    kSendPackedHandle = 7,
    kRemoveFunction = 8,
    ITEM_NOT_SET = 0,
  };
  static inline const QueueItem* internal_default_instance() {
    return reinterpret_cast<const QueueItem*>(
        &_QueueItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueueItem& a, QueueItem& b) { a.Swap(&b); }
  inline void Swap(QueueItem* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueItem* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QueueItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueueItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueueItem& from) { QueueItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueueItem* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.QueueItem"; }

 protected:
  explicit QueueItem(::google::protobuf::Arena* arena);
  QueueItem(::google::protobuf::Arena* arena, const QueueItem& from);
  QueueItem(::google::protobuf::Arena* arena, QueueItem&& from) noexcept
      : QueueItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHandleToDecrefFieldNumber = 1,
    kOperationFieldNumber = 2,
    kSendTensorFieldNumber = 3,
    kRegisterFunctionFieldNumber = 4,
    kCleanupFunctionFieldNumber = 5,
    kSyncRemoteExecutorForStreamFieldNumber = 6,
    kSendPackedHandleFieldNumber = 7,
    kRemoveFunctionFieldNumber = 8,
  };
  // .tensorflow.eager.RemoteTensorHandle handle_to_decref = 1;
  bool has_handle_to_decref() const;
  private:
  bool _internal_has_handle_to_decref() const;

  public:
  void clear_handle_to_decref() ;
  const ::tensorflow::eager::RemoteTensorHandle& handle_to_decref() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::RemoteTensorHandle* release_handle_to_decref();
  ::tensorflow::eager::RemoteTensorHandle* mutable_handle_to_decref();
  void set_allocated_handle_to_decref(::tensorflow::eager::RemoteTensorHandle* value);
  void unsafe_arena_set_allocated_handle_to_decref(::tensorflow::eager::RemoteTensorHandle* value);
  ::tensorflow::eager::RemoteTensorHandle* unsafe_arena_release_handle_to_decref();

  private:
  const ::tensorflow::eager::RemoteTensorHandle& _internal_handle_to_decref() const;
  ::tensorflow::eager::RemoteTensorHandle* _internal_mutable_handle_to_decref();

  public:
  // .tensorflow.eager.Operation operation = 2;
  bool has_operation() const;
  private:
  bool _internal_has_operation() const;

  public:
  void clear_operation() ;
  const ::tensorflow::eager::Operation& operation() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::Operation* release_operation();
  ::tensorflow::eager::Operation* mutable_operation();
  void set_allocated_operation(::tensorflow::eager::Operation* value);
  void unsafe_arena_set_allocated_operation(::tensorflow::eager::Operation* value);
  ::tensorflow::eager::Operation* unsafe_arena_release_operation();

  private:
  const ::tensorflow::eager::Operation& _internal_operation() const;
  ::tensorflow::eager::Operation* _internal_mutable_operation();

  public:
  // .tensorflow.eager.SendTensorOp send_tensor = 3;
  bool has_send_tensor() const;
  private:
  bool _internal_has_send_tensor() const;

  public:
  void clear_send_tensor() ;
  const ::tensorflow::eager::SendTensorOp& send_tensor() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::SendTensorOp* release_send_tensor();
  ::tensorflow::eager::SendTensorOp* mutable_send_tensor();
  void set_allocated_send_tensor(::tensorflow::eager::SendTensorOp* value);
  void unsafe_arena_set_allocated_send_tensor(::tensorflow::eager::SendTensorOp* value);
  ::tensorflow::eager::SendTensorOp* unsafe_arena_release_send_tensor();

  private:
  const ::tensorflow::eager::SendTensorOp& _internal_send_tensor() const;
  ::tensorflow::eager::SendTensorOp* _internal_mutable_send_tensor();

  public:
  // .tensorflow.eager.RegisterFunctionOp register_function = 4;
  bool has_register_function() const;
  private:
  bool _internal_has_register_function() const;

  public:
  void clear_register_function() ;
  const ::tensorflow::eager::RegisterFunctionOp& register_function() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::RegisterFunctionOp* release_register_function();
  ::tensorflow::eager::RegisterFunctionOp* mutable_register_function();
  void set_allocated_register_function(::tensorflow::eager::RegisterFunctionOp* value);
  void unsafe_arena_set_allocated_register_function(::tensorflow::eager::RegisterFunctionOp* value);
  ::tensorflow::eager::RegisterFunctionOp* unsafe_arena_release_register_function();

  private:
  const ::tensorflow::eager::RegisterFunctionOp& _internal_register_function() const;
  ::tensorflow::eager::RegisterFunctionOp* _internal_mutable_register_function();

  public:
  // .tensorflow.eager.CleanupFunctionOp cleanup_function = 5;
  bool has_cleanup_function() const;
  private:
  bool _internal_has_cleanup_function() const;

  public:
  void clear_cleanup_function() ;
  const ::tensorflow::eager::CleanupFunctionOp& cleanup_function() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::CleanupFunctionOp* release_cleanup_function();
  ::tensorflow::eager::CleanupFunctionOp* mutable_cleanup_function();
  void set_allocated_cleanup_function(::tensorflow::eager::CleanupFunctionOp* value);
  void unsafe_arena_set_allocated_cleanup_function(::tensorflow::eager::CleanupFunctionOp* value);
  ::tensorflow::eager::CleanupFunctionOp* unsafe_arena_release_cleanup_function();

  private:
  const ::tensorflow::eager::CleanupFunctionOp& _internal_cleanup_function() const;
  ::tensorflow::eager::CleanupFunctionOp* _internal_mutable_cleanup_function();

  public:
  // .tensorflow.eager.SyncRemoteExecutorForStream sync_remote_executor_for_stream = 6;
  bool has_sync_remote_executor_for_stream() const;
  private:
  bool _internal_has_sync_remote_executor_for_stream() const;

  public:
  void clear_sync_remote_executor_for_stream() ;
  const ::tensorflow::eager::SyncRemoteExecutorForStream& sync_remote_executor_for_stream() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::SyncRemoteExecutorForStream* release_sync_remote_executor_for_stream();
  ::tensorflow::eager::SyncRemoteExecutorForStream* mutable_sync_remote_executor_for_stream();
  void set_allocated_sync_remote_executor_for_stream(::tensorflow::eager::SyncRemoteExecutorForStream* value);
  void unsafe_arena_set_allocated_sync_remote_executor_for_stream(::tensorflow::eager::SyncRemoteExecutorForStream* value);
  ::tensorflow::eager::SyncRemoteExecutorForStream* unsafe_arena_release_sync_remote_executor_for_stream();

  private:
  const ::tensorflow::eager::SyncRemoteExecutorForStream& _internal_sync_remote_executor_for_stream() const;
  ::tensorflow::eager::SyncRemoteExecutorForStream* _internal_mutable_sync_remote_executor_for_stream();

  public:
  // .tensorflow.eager.SendPackedHandleOp send_packed_handle = 7;
  bool has_send_packed_handle() const;
  private:
  bool _internal_has_send_packed_handle() const;

  public:
  void clear_send_packed_handle() ;
  const ::tensorflow::eager::SendPackedHandleOp& send_packed_handle() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::SendPackedHandleOp* release_send_packed_handle();
  ::tensorflow::eager::SendPackedHandleOp* mutable_send_packed_handle();
  void set_allocated_send_packed_handle(::tensorflow::eager::SendPackedHandleOp* value);
  void unsafe_arena_set_allocated_send_packed_handle(::tensorflow::eager::SendPackedHandleOp* value);
  ::tensorflow::eager::SendPackedHandleOp* unsafe_arena_release_send_packed_handle();

  private:
  const ::tensorflow::eager::SendPackedHandleOp& _internal_send_packed_handle() const;
  ::tensorflow::eager::SendPackedHandleOp* _internal_mutable_send_packed_handle();

  public:
  // .tensorflow.eager.RemoveFunctionOp remove_function = 8;
  bool has_remove_function() const;
  private:
  bool _internal_has_remove_function() const;

  public:
  void clear_remove_function() ;
  const ::tensorflow::eager::RemoveFunctionOp& remove_function() const;
  PROTOBUF_NODISCARD ::tensorflow::eager::RemoveFunctionOp* release_remove_function();
  ::tensorflow::eager::RemoveFunctionOp* mutable_remove_function();
  void set_allocated_remove_function(::tensorflow::eager::RemoveFunctionOp* value);
  void unsafe_arena_set_allocated_remove_function(::tensorflow::eager::RemoveFunctionOp* value);
  ::tensorflow::eager::RemoveFunctionOp* unsafe_arena_release_remove_function();

  private:
  const ::tensorflow::eager::RemoveFunctionOp& _internal_remove_function() const;
  ::tensorflow::eager::RemoveFunctionOp* _internal_mutable_remove_function();

  public:
  void clear_item();
  ItemCase item_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.eager.QueueItem)
 private:
  class _Internal;
  void set_has_handle_to_decref();
  void set_has_operation();
  void set_has_send_tensor();
  void set_has_register_function();
  void set_has_cleanup_function();
  void set_has_sync_remote_executor_for_stream();
  void set_has_send_packed_handle();
  void set_has_remove_function();
  inline bool has_item() const;
  inline void clear_has_item();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 8, 8,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueueItem& from_msg);
    union ItemUnion {
      constexpr ItemUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tensorflow::eager::RemoteTensorHandle* handle_to_decref_;
      ::tensorflow::eager::Operation* operation_;
      ::tensorflow::eager::SendTensorOp* send_tensor_;
      ::tensorflow::eager::RegisterFunctionOp* register_function_;
      ::tensorflow::eager::CleanupFunctionOp* cleanup_function_;
      ::tensorflow::eager::SyncRemoteExecutorForStream* sync_remote_executor_for_stream_;
      ::tensorflow::eager::SendPackedHandleOp* send_packed_handle_;
      ::tensorflow::eager::RemoveFunctionOp* remove_function_;
    } item_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CreateContextRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.CreateContextRequest) */ {
 public:
  inline CreateContextRequest() : CreateContextRequest(nullptr) {}
  ~CreateContextRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateContextRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateContextRequest(const CreateContextRequest& from) : CreateContextRequest(nullptr, from) {}
  inline CreateContextRequest(CreateContextRequest&& from) noexcept
      : CreateContextRequest(nullptr, std::move(from)) {}
  inline CreateContextRequest& operator=(const CreateContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateContextRequest& operator=(CreateContextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateContextRequest* internal_default_instance() {
    return reinterpret_cast<const CreateContextRequest*>(
        &_CreateContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CreateContextRequest& a, CreateContextRequest& b) { a.Swap(&b); }
  inline void Swap(CreateContextRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateContextRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateContextRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CreateContextRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateContextRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateContextRequest& from) { CreateContextRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateContextRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.CreateContextRequest"; }

 protected:
  explicit CreateContextRequest(::google::protobuf::Arena* arena);
  CreateContextRequest(::google::protobuf::Arena* arena, const CreateContextRequest& from);
  CreateContextRequest(::google::protobuf::Arena* arena, CreateContextRequest&& from) noexcept
      : CreateContextRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClusterDeviceAttributesFieldNumber = 6,
    kServerDefFieldNumber = 1,
    kVersionDefFieldNumber = 4,
    kKeepAliveSecsFieldNumber = 3,
    kContextIdFieldNumber = 7,
    kContextViewIdFieldNumber = 8,
    kAsyncFieldNumber = 2,
    kLazyCopyRemoteFunctionInputsFieldNumber = 9,
    kClearExistingContextsFieldNumber = 10,
  };
  // repeated .tensorflow.DeviceAttributes cluster_device_attributes = 6;
  int cluster_device_attributes_size() const;
  private:
  int _internal_cluster_device_attributes_size() const;

  public:
  void clear_cluster_device_attributes() ;
  ::tensorflow::DeviceAttributes* mutable_cluster_device_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* mutable_cluster_device_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& _internal_cluster_device_attributes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* _internal_mutable_cluster_device_attributes();
  public:
  const ::tensorflow::DeviceAttributes& cluster_device_attributes(int index) const;
  ::tensorflow::DeviceAttributes* add_cluster_device_attributes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& cluster_device_attributes() const;
  // .tensorflow.ServerDef server_def = 1;
  bool has_server_def() const;
  void clear_server_def() ;
  const ::tensorflow::ServerDef& server_def() const;
  PROTOBUF_NODISCARD ::tensorflow::ServerDef* release_server_def();
  ::tensorflow::ServerDef* mutable_server_def();
  void set_allocated_server_def(::tensorflow::ServerDef* value);
  void unsafe_arena_set_allocated_server_def(::tensorflow::ServerDef* value);
  ::tensorflow::ServerDef* unsafe_arena_release_server_def();

  private:
  const ::tensorflow::ServerDef& _internal_server_def() const;
  ::tensorflow::ServerDef* _internal_mutable_server_def();

  public:
  // .tensorflow.VersionDef version_def = 4;
  bool has_version_def() const;
  void clear_version_def() ;
  const ::tensorflow::VersionDef& version_def() const;
  PROTOBUF_NODISCARD ::tensorflow::VersionDef* release_version_def();
  ::tensorflow::VersionDef* mutable_version_def();
  void set_allocated_version_def(::tensorflow::VersionDef* value);
  void unsafe_arena_set_allocated_version_def(::tensorflow::VersionDef* value);
  ::tensorflow::VersionDef* unsafe_arena_release_version_def();

  private:
  const ::tensorflow::VersionDef& _internal_version_def() const;
  ::tensorflow::VersionDef* _internal_mutable_version_def();

  public:
  // int64 keep_alive_secs = 3;
  void clear_keep_alive_secs() ;
  ::int64_t keep_alive_secs() const;
  void set_keep_alive_secs(::int64_t value);

  private:
  ::int64_t _internal_keep_alive_secs() const;
  void _internal_set_keep_alive_secs(::int64_t value);

  public:
  // fixed64 context_id = 7;
  void clear_context_id() ;
  ::uint64_t context_id() const;
  void set_context_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_id() const;
  void _internal_set_context_id(::uint64_t value);

  public:
  // fixed64 context_view_id = 8;
  void clear_context_view_id() ;
  ::uint64_t context_view_id() const;
  void set_context_view_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_view_id() const;
  void _internal_set_context_view_id(::uint64_t value);

  public:
  // bool async = 2;
  void clear_async() ;
  bool async() const;
  void set_async(bool value);

  private:
  bool _internal_async() const;
  void _internal_set_async(bool value);

  public:
  // bool lazy_copy_remote_function_inputs = 9;
  void clear_lazy_copy_remote_function_inputs() ;
  bool lazy_copy_remote_function_inputs() const;
  void set_lazy_copy_remote_function_inputs(bool value);

  private:
  bool _internal_lazy_copy_remote_function_inputs() const;
  void _internal_set_lazy_copy_remote_function_inputs(bool value);

  public:
  // bool clear_existing_contexts = 10;
  void clear_clear_existing_contexts() ;
  bool clear_existing_contexts() const;
  void set_clear_existing_contexts(bool value);

  private:
  bool _internal_clear_existing_contexts() const;
  void _internal_set_clear_existing_contexts(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.CreateContextRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 3,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateContextRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceAttributes > cluster_device_attributes_;
    ::tensorflow::ServerDef* server_def_;
    ::tensorflow::VersionDef* version_def_;
    ::int64_t keep_alive_secs_;
    ::uint64_t context_id_;
    ::uint64_t context_view_id_;
    bool async_;
    bool lazy_copy_remote_function_inputs_;
    bool clear_existing_contexts_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT EnqueueRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.eager.EnqueueRequest) */ {
 public:
  inline EnqueueRequest() : EnqueueRequest(nullptr) {}
  ~EnqueueRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnqueueRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnqueueRequest(const EnqueueRequest& from) : EnqueueRequest(nullptr, from) {}
  inline EnqueueRequest(EnqueueRequest&& from) noexcept
      : EnqueueRequest(nullptr, std::move(from)) {}
  inline EnqueueRequest& operator=(const EnqueueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnqueueRequest& operator=(EnqueueRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnqueueRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnqueueRequest* internal_default_instance() {
    return reinterpret_cast<const EnqueueRequest*>(
        &_EnqueueRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(EnqueueRequest& a, EnqueueRequest& b) { a.Swap(&b); }
  inline void Swap(EnqueueRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnqueueRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnqueueRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EnqueueRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnqueueRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnqueueRequest& from) { EnqueueRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EnqueueRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.eager.EnqueueRequest"; }

 protected:
  explicit EnqueueRequest(::google::protobuf::Arena* arena);
  EnqueueRequest(::google::protobuf::Arena* arena, const EnqueueRequest& from);
  EnqueueRequest(::google::protobuf::Arena* arena, EnqueueRequest&& from) noexcept
      : EnqueueRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQueueFieldNumber = 3,
    kContextIdFieldNumber = 1,
  };
  // repeated .tensorflow.eager.QueueItem queue = 3;
  int queue_size() const;
  private:
  int _internal_queue_size() const;

  public:
  void clear_queue() ;
  ::tensorflow::eager::QueueItem* mutable_queue(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueItem>* mutable_queue();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueItem>& _internal_queue() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueItem>* _internal_mutable_queue();
  public:
  const ::tensorflow::eager::QueueItem& queue(int index) const;
  ::tensorflow::eager::QueueItem* add_queue();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueItem>& queue() const;
  // fixed64 context_id = 1;
  void clear_context_id() ;
  ::uint64_t context_id() const;
  void set_context_id(::uint64_t value);

  private:
  ::uint64_t _internal_context_id() const;
  void _internal_set_context_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.eager.EnqueueRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnqueueRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::eager::QueueItem > queue_;
    ::uint64_t context_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Operation_Input

// .tensorflow.eager.RemoteTensorHandle remote_handle = 1;
inline bool Operation_Input::has_remote_handle() const {
  return item_case() == kRemoteHandle;
}
inline bool Operation_Input::_internal_has_remote_handle() const {
  return item_case() == kRemoteHandle;
}
inline void Operation_Input::set_has_remote_handle() {
  _impl_._oneof_case_[0] = kRemoteHandle;
}
inline ::tensorflow::eager::RemoteTensorHandle* Operation_Input::release_remote_handle() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.Operation.Input.remote_handle)
  if (item_case() == kRemoteHandle) {
    clear_has_item();
    auto* temp = _impl_.item_.remote_handle_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.remote_handle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::RemoteTensorHandle& Operation_Input::_internal_remote_handle() const {
  return item_case() == kRemoteHandle ? *_impl_.item_.remote_handle_ : reinterpret_cast<::tensorflow::eager::RemoteTensorHandle&>(::tensorflow::eager::_RemoteTensorHandle_default_instance_);
}
inline const ::tensorflow::eager::RemoteTensorHandle& Operation_Input::remote_handle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.Input.remote_handle)
  return _internal_remote_handle();
}
inline ::tensorflow::eager::RemoteTensorHandle* Operation_Input::unsafe_arena_release_remote_handle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.Operation.Input.remote_handle)
  if (item_case() == kRemoteHandle) {
    clear_has_item();
    auto* temp = _impl_.item_.remote_handle_;
    _impl_.item_.remote_handle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Operation_Input::unsafe_arena_set_allocated_remote_handle(::tensorflow::eager::RemoteTensorHandle* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_remote_handle();
    _impl_.item_.remote_handle_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.Operation.Input.remote_handle)
}
inline ::tensorflow::eager::RemoteTensorHandle* Operation_Input::_internal_mutable_remote_handle() {
  if (item_case() != kRemoteHandle) {
    clear_item();
    set_has_remote_handle();
    _impl_.item_.remote_handle_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::RemoteTensorHandle>(GetArena());
  }
  return _impl_.item_.remote_handle_;
}
inline ::tensorflow::eager::RemoteTensorHandle* Operation_Input::mutable_remote_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::RemoteTensorHandle* _msg = _internal_mutable_remote_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.Operation.Input.remote_handle)
  return _msg;
}

// .tensorflow.TensorProto tensor = 2;
inline bool Operation_Input::has_tensor() const {
  return item_case() == kTensor;
}
inline bool Operation_Input::_internal_has_tensor() const {
  return item_case() == kTensor;
}
inline void Operation_Input::set_has_tensor() {
  _impl_._oneof_case_[0] = kTensor;
}
inline ::tensorflow::TensorProto* Operation_Input::release_tensor() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.Operation.Input.tensor)
  if (item_case() == kTensor) {
    clear_has_item();
    auto* temp = _impl_.item_.tensor_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.tensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::TensorProto& Operation_Input::_internal_tensor() const {
  return item_case() == kTensor ? *_impl_.item_.tensor_ : reinterpret_cast<::tensorflow::TensorProto&>(::tensorflow::_TensorProto_default_instance_);
}
inline const ::tensorflow::TensorProto& Operation_Input::tensor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.Input.tensor)
  return _internal_tensor();
}
inline ::tensorflow::TensorProto* Operation_Input::unsafe_arena_release_tensor() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.Operation.Input.tensor)
  if (item_case() == kTensor) {
    clear_has_item();
    auto* temp = _impl_.item_.tensor_;
    _impl_.item_.tensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Operation_Input::unsafe_arena_set_allocated_tensor(::tensorflow::TensorProto* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_tensor();
    _impl_.item_.tensor_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.Operation.Input.tensor)
}
inline ::tensorflow::TensorProto* Operation_Input::_internal_mutable_tensor() {
  if (item_case() != kTensor) {
    clear_item();
    set_has_tensor();
    _impl_.item_.tensor_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorProto>(GetArena());
  }
  return _impl_.item_.tensor_;
}
inline ::tensorflow::TensorProto* Operation_Input::mutable_tensor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::TensorProto* _msg = _internal_mutable_tensor();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.Operation.Input.tensor)
  return _msg;
}

inline bool Operation_Input::has_item() const {
  return item_case() != ITEM_NOT_SET;
}
inline void Operation_Input::clear_has_item() {
  _impl_._oneof_case_[0] = ITEM_NOT_SET;
}
inline Operation_Input::ItemCase Operation_Input::item_case() const {
  return Operation_Input::ItemCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Operation

// int64 id = 1;
inline void Operation::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Operation::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.id)
  return _internal_id();
}
inline void Operation::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.id)
}
inline ::int64_t Operation::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Operation::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void Operation::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Operation::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operation::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.name)
}
inline std::string* Operation::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.Operation.name)
  return _s;
}
inline const std::string& Operation::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Operation::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Operation::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Operation::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.Operation.name)
  return _impl_.name_.Release();
}
inline void Operation::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.Operation.name)
}

// repeated .tensorflow.eager.Operation.Input op_inputs = 10;
inline int Operation::_internal_op_inputs_size() const {
  return _internal_op_inputs().size();
}
inline int Operation::op_inputs_size() const {
  return _internal_op_inputs_size();
}
inline void Operation::clear_op_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_inputs_.Clear();
}
inline ::tensorflow::eager::Operation_Input* Operation::mutable_op_inputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.Operation.op_inputs)
  return _internal_mutable_op_inputs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::eager::Operation_Input>* Operation::mutable_op_inputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.Operation.op_inputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_op_inputs();
}
inline const ::tensorflow::eager::Operation_Input& Operation::op_inputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.op_inputs)
  return _internal_op_inputs().Get(index);
}
inline ::tensorflow::eager::Operation_Input* Operation::add_op_inputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::eager::Operation_Input* _add = _internal_mutable_op_inputs()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.Operation.op_inputs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::Operation_Input>& Operation::op_inputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.Operation.op_inputs)
  return _internal_op_inputs();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::Operation_Input>&
Operation::_internal_op_inputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_inputs_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::eager::Operation_Input>*
Operation::_internal_mutable_op_inputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.op_inputs_;
}

// repeated int64 control_op_ids = 4;
inline int Operation::_internal_control_op_ids_size() const {
  return _internal_control_op_ids().size();
}
inline int Operation::control_op_ids_size() const {
  return _internal_control_op_ids_size();
}
inline void Operation::clear_control_op_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_op_ids_.Clear();
}
inline ::int64_t Operation::control_op_ids(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.control_op_ids)
  return _internal_control_op_ids().Get(index);
}
inline void Operation::set_control_op_ids(int index, ::int64_t value) {
  _internal_mutable_control_op_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.control_op_ids)
}
inline void Operation::add_control_op_ids(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_control_op_ids()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.eager.Operation.control_op_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Operation::control_op_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.Operation.control_op_ids)
  return _internal_control_op_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Operation::mutable_control_op_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.Operation.control_op_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_control_op_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Operation::_internal_control_op_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_op_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Operation::_internal_mutable_control_op_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.control_op_ids_;
}

// map<string, .tensorflow.AttrValue> attrs = 5;
inline int Operation::_internal_attrs_size() const {
  return _internal_attrs().size();
}
inline int Operation::attrs_size() const {
  return _internal_attrs_size();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>& Operation::_internal_attrs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attrs_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>& Operation::attrs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.eager.Operation.attrs)
  return _internal_attrs();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>* Operation::_internal_mutable_attrs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attrs_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>* Operation::mutable_attrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.eager.Operation.attrs)
  return _internal_mutable_attrs();
}

// string device = 6;
inline void Operation::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.ClearToEmpty();
}
inline const std::string& Operation::device() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.device)
  return _internal_device();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operation::set_device(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.device)
}
inline std::string* Operation::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.Operation.device)
  return _s;
}
inline const std::string& Operation::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_.Get();
}
inline void Operation::_internal_set_device(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(value, GetArena());
}
inline std::string* Operation::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_.Mutable( GetArena());
}
inline std::string* Operation::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.Operation.device)
  return _impl_.device_.Release();
}
inline void Operation::set_allocated_device(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_.IsDefault()) {
          _impl_.device_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.Operation.device)
}

// bool is_component_function = 7;
inline void Operation::clear_is_component_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_component_function_ = false;
}
inline bool Operation::is_component_function() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.is_component_function)
  return _internal_is_component_function();
}
inline void Operation::set_is_component_function(bool value) {
  _internal_set_is_component_function(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.is_component_function)
}
inline bool Operation::_internal_is_component_function() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_component_function_;
}
inline void Operation::_internal_set_is_component_function(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_component_function_ = value;
}

// int64 func_step_id = 8;
inline void Operation::clear_func_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.func_step_id_ = ::int64_t{0};
}
inline ::int64_t Operation::func_step_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.func_step_id)
  return _internal_func_step_id();
}
inline void Operation::set_func_step_id(::int64_t value) {
  _internal_set_func_step_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.func_step_id)
}
inline ::int64_t Operation::_internal_func_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.func_step_id_;
}
inline void Operation::_internal_set_func_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.func_step_id_ = value;
}

// bool is_function = 9;
inline void Operation::clear_is_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_function_ = false;
}
inline bool Operation::is_function() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.Operation.is_function)
  return _internal_is_function();
}
inline void Operation::set_is_function(bool value) {
  _internal_set_is_function(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.Operation.is_function)
}
inline bool Operation::_internal_is_function() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_function_;
}
inline void Operation::_internal_set_is_function(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_function_ = value;
}

// -------------------------------------------------------------------

// QueueItem

// .tensorflow.eager.RemoteTensorHandle handle_to_decref = 1;
inline bool QueueItem::has_handle_to_decref() const {
  return item_case() == kHandleToDecref;
}
inline bool QueueItem::_internal_has_handle_to_decref() const {
  return item_case() == kHandleToDecref;
}
inline void QueueItem::set_has_handle_to_decref() {
  _impl_._oneof_case_[0] = kHandleToDecref;
}
inline ::tensorflow::eager::RemoteTensorHandle* QueueItem::release_handle_to_decref() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.handle_to_decref)
  if (item_case() == kHandleToDecref) {
    clear_has_item();
    auto* temp = _impl_.item_.handle_to_decref_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.handle_to_decref_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::RemoteTensorHandle& QueueItem::_internal_handle_to_decref() const {
  return item_case() == kHandleToDecref ? *_impl_.item_.handle_to_decref_ : reinterpret_cast<::tensorflow::eager::RemoteTensorHandle&>(::tensorflow::eager::_RemoteTensorHandle_default_instance_);
}
inline const ::tensorflow::eager::RemoteTensorHandle& QueueItem::handle_to_decref() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.handle_to_decref)
  return _internal_handle_to_decref();
}
inline ::tensorflow::eager::RemoteTensorHandle* QueueItem::unsafe_arena_release_handle_to_decref() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.QueueItem.handle_to_decref)
  if (item_case() == kHandleToDecref) {
    clear_has_item();
    auto* temp = _impl_.item_.handle_to_decref_;
    _impl_.item_.handle_to_decref_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueueItem::unsafe_arena_set_allocated_handle_to_decref(::tensorflow::eager::RemoteTensorHandle* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_handle_to_decref();
    _impl_.item_.handle_to_decref_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.QueueItem.handle_to_decref)
}
inline ::tensorflow::eager::RemoteTensorHandle* QueueItem::_internal_mutable_handle_to_decref() {
  if (item_case() != kHandleToDecref) {
    clear_item();
    set_has_handle_to_decref();
    _impl_.item_.handle_to_decref_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::RemoteTensorHandle>(GetArena());
  }
  return _impl_.item_.handle_to_decref_;
}
inline ::tensorflow::eager::RemoteTensorHandle* QueueItem::mutable_handle_to_decref() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::RemoteTensorHandle* _msg = _internal_mutable_handle_to_decref();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.handle_to_decref)
  return _msg;
}

// .tensorflow.eager.Operation operation = 2;
inline bool QueueItem::has_operation() const {
  return item_case() == kOperation;
}
inline bool QueueItem::_internal_has_operation() const {
  return item_case() == kOperation;
}
inline void QueueItem::set_has_operation() {
  _impl_._oneof_case_[0] = kOperation;
}
inline void QueueItem::clear_operation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (item_case() == kOperation) {
    if (GetArena() == nullptr) {
      delete _impl_.item_.operation_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.operation_);
    }
    clear_has_item();
  }
}
inline ::tensorflow::eager::Operation* QueueItem::release_operation() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.operation)
  if (item_case() == kOperation) {
    clear_has_item();
    auto* temp = _impl_.item_.operation_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.operation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::Operation& QueueItem::_internal_operation() const {
  return item_case() == kOperation ? *_impl_.item_.operation_ : reinterpret_cast<::tensorflow::eager::Operation&>(::tensorflow::eager::_Operation_default_instance_);
}
inline const ::tensorflow::eager::Operation& QueueItem::operation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.operation)
  return _internal_operation();
}
inline ::tensorflow::eager::Operation* QueueItem::unsafe_arena_release_operation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.QueueItem.operation)
  if (item_case() == kOperation) {
    clear_has_item();
    auto* temp = _impl_.item_.operation_;
    _impl_.item_.operation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueueItem::unsafe_arena_set_allocated_operation(::tensorflow::eager::Operation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_operation();
    _impl_.item_.operation_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.QueueItem.operation)
}
inline ::tensorflow::eager::Operation* QueueItem::_internal_mutable_operation() {
  if (item_case() != kOperation) {
    clear_item();
    set_has_operation();
    _impl_.item_.operation_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::Operation>(GetArena());
  }
  return _impl_.item_.operation_;
}
inline ::tensorflow::eager::Operation* QueueItem::mutable_operation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::Operation* _msg = _internal_mutable_operation();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.operation)
  return _msg;
}

// .tensorflow.eager.SendTensorOp send_tensor = 3;
inline bool QueueItem::has_send_tensor() const {
  return item_case() == kSendTensor;
}
inline bool QueueItem::_internal_has_send_tensor() const {
  return item_case() == kSendTensor;
}
inline void QueueItem::set_has_send_tensor() {
  _impl_._oneof_case_[0] = kSendTensor;
}
inline void QueueItem::clear_send_tensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (item_case() == kSendTensor) {
    if (GetArena() == nullptr) {
      delete _impl_.item_.send_tensor_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.send_tensor_);
    }
    clear_has_item();
  }
}
inline ::tensorflow::eager::SendTensorOp* QueueItem::release_send_tensor() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.send_tensor)
  if (item_case() == kSendTensor) {
    clear_has_item();
    auto* temp = _impl_.item_.send_tensor_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.send_tensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::SendTensorOp& QueueItem::_internal_send_tensor() const {
  return item_case() == kSendTensor ? *_impl_.item_.send_tensor_ : reinterpret_cast<::tensorflow::eager::SendTensorOp&>(::tensorflow::eager::_SendTensorOp_default_instance_);
}
inline const ::tensorflow::eager::SendTensorOp& QueueItem::send_tensor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.send_tensor)
  return _internal_send_tensor();
}
inline ::tensorflow::eager::SendTensorOp* QueueItem::unsafe_arena_release_send_tensor() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.QueueItem.send_tensor)
  if (item_case() == kSendTensor) {
    clear_has_item();
    auto* temp = _impl_.item_.send_tensor_;
    _impl_.item_.send_tensor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueueItem::unsafe_arena_set_allocated_send_tensor(::tensorflow::eager::SendTensorOp* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_send_tensor();
    _impl_.item_.send_tensor_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.QueueItem.send_tensor)
}
inline ::tensorflow::eager::SendTensorOp* QueueItem::_internal_mutable_send_tensor() {
  if (item_case() != kSendTensor) {
    clear_item();
    set_has_send_tensor();
    _impl_.item_.send_tensor_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::SendTensorOp>(GetArena());
  }
  return _impl_.item_.send_tensor_;
}
inline ::tensorflow::eager::SendTensorOp* QueueItem::mutable_send_tensor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::SendTensorOp* _msg = _internal_mutable_send_tensor();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.send_tensor)
  return _msg;
}

// .tensorflow.eager.RegisterFunctionOp register_function = 4;
inline bool QueueItem::has_register_function() const {
  return item_case() == kRegisterFunction;
}
inline bool QueueItem::_internal_has_register_function() const {
  return item_case() == kRegisterFunction;
}
inline void QueueItem::set_has_register_function() {
  _impl_._oneof_case_[0] = kRegisterFunction;
}
inline void QueueItem::clear_register_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (item_case() == kRegisterFunction) {
    if (GetArena() == nullptr) {
      delete _impl_.item_.register_function_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.register_function_);
    }
    clear_has_item();
  }
}
inline ::tensorflow::eager::RegisterFunctionOp* QueueItem::release_register_function() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.register_function)
  if (item_case() == kRegisterFunction) {
    clear_has_item();
    auto* temp = _impl_.item_.register_function_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.register_function_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::RegisterFunctionOp& QueueItem::_internal_register_function() const {
  return item_case() == kRegisterFunction ? *_impl_.item_.register_function_ : reinterpret_cast<::tensorflow::eager::RegisterFunctionOp&>(::tensorflow::eager::_RegisterFunctionOp_default_instance_);
}
inline const ::tensorflow::eager::RegisterFunctionOp& QueueItem::register_function() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.register_function)
  return _internal_register_function();
}
inline ::tensorflow::eager::RegisterFunctionOp* QueueItem::unsafe_arena_release_register_function() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.QueueItem.register_function)
  if (item_case() == kRegisterFunction) {
    clear_has_item();
    auto* temp = _impl_.item_.register_function_;
    _impl_.item_.register_function_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueueItem::unsafe_arena_set_allocated_register_function(::tensorflow::eager::RegisterFunctionOp* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_register_function();
    _impl_.item_.register_function_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.QueueItem.register_function)
}
inline ::tensorflow::eager::RegisterFunctionOp* QueueItem::_internal_mutable_register_function() {
  if (item_case() != kRegisterFunction) {
    clear_item();
    set_has_register_function();
    _impl_.item_.register_function_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::RegisterFunctionOp>(GetArena());
  }
  return _impl_.item_.register_function_;
}
inline ::tensorflow::eager::RegisterFunctionOp* QueueItem::mutable_register_function() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::RegisterFunctionOp* _msg = _internal_mutable_register_function();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.register_function)
  return _msg;
}

// .tensorflow.eager.CleanupFunctionOp cleanup_function = 5;
inline bool QueueItem::has_cleanup_function() const {
  return item_case() == kCleanupFunction;
}
inline bool QueueItem::_internal_has_cleanup_function() const {
  return item_case() == kCleanupFunction;
}
inline void QueueItem::set_has_cleanup_function() {
  _impl_._oneof_case_[0] = kCleanupFunction;
}
inline void QueueItem::clear_cleanup_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (item_case() == kCleanupFunction) {
    if (GetArena() == nullptr) {
      delete _impl_.item_.cleanup_function_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.cleanup_function_);
    }
    clear_has_item();
  }
}
inline ::tensorflow::eager::CleanupFunctionOp* QueueItem::release_cleanup_function() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.cleanup_function)
  if (item_case() == kCleanupFunction) {
    clear_has_item();
    auto* temp = _impl_.item_.cleanup_function_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.cleanup_function_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::CleanupFunctionOp& QueueItem::_internal_cleanup_function() const {
  return item_case() == kCleanupFunction ? *_impl_.item_.cleanup_function_ : reinterpret_cast<::tensorflow::eager::CleanupFunctionOp&>(::tensorflow::eager::_CleanupFunctionOp_default_instance_);
}
inline const ::tensorflow::eager::CleanupFunctionOp& QueueItem::cleanup_function() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.cleanup_function)
  return _internal_cleanup_function();
}
inline ::tensorflow::eager::CleanupFunctionOp* QueueItem::unsafe_arena_release_cleanup_function() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.QueueItem.cleanup_function)
  if (item_case() == kCleanupFunction) {
    clear_has_item();
    auto* temp = _impl_.item_.cleanup_function_;
    _impl_.item_.cleanup_function_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueueItem::unsafe_arena_set_allocated_cleanup_function(::tensorflow::eager::CleanupFunctionOp* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_cleanup_function();
    _impl_.item_.cleanup_function_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.QueueItem.cleanup_function)
}
inline ::tensorflow::eager::CleanupFunctionOp* QueueItem::_internal_mutable_cleanup_function() {
  if (item_case() != kCleanupFunction) {
    clear_item();
    set_has_cleanup_function();
    _impl_.item_.cleanup_function_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::CleanupFunctionOp>(GetArena());
  }
  return _impl_.item_.cleanup_function_;
}
inline ::tensorflow::eager::CleanupFunctionOp* QueueItem::mutable_cleanup_function() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::CleanupFunctionOp* _msg = _internal_mutable_cleanup_function();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.cleanup_function)
  return _msg;
}

// .tensorflow.eager.SyncRemoteExecutorForStream sync_remote_executor_for_stream = 6;
inline bool QueueItem::has_sync_remote_executor_for_stream() const {
  return item_case() == kSyncRemoteExecutorForStream;
}
inline bool QueueItem::_internal_has_sync_remote_executor_for_stream() const {
  return item_case() == kSyncRemoteExecutorForStream;
}
inline void QueueItem::set_has_sync_remote_executor_for_stream() {
  _impl_._oneof_case_[0] = kSyncRemoteExecutorForStream;
}
inline void QueueItem::clear_sync_remote_executor_for_stream() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (item_case() == kSyncRemoteExecutorForStream) {
    if (GetArena() == nullptr) {
      delete _impl_.item_.sync_remote_executor_for_stream_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.sync_remote_executor_for_stream_);
    }
    clear_has_item();
  }
}
inline ::tensorflow::eager::SyncRemoteExecutorForStream* QueueItem::release_sync_remote_executor_for_stream() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.sync_remote_executor_for_stream)
  if (item_case() == kSyncRemoteExecutorForStream) {
    clear_has_item();
    auto* temp = _impl_.item_.sync_remote_executor_for_stream_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.sync_remote_executor_for_stream_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::SyncRemoteExecutorForStream& QueueItem::_internal_sync_remote_executor_for_stream() const {
  return item_case() == kSyncRemoteExecutorForStream ? *_impl_.item_.sync_remote_executor_for_stream_ : reinterpret_cast<::tensorflow::eager::SyncRemoteExecutorForStream&>(::tensorflow::eager::_SyncRemoteExecutorForStream_default_instance_);
}
inline const ::tensorflow::eager::SyncRemoteExecutorForStream& QueueItem::sync_remote_executor_for_stream() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.sync_remote_executor_for_stream)
  return _internal_sync_remote_executor_for_stream();
}
inline ::tensorflow::eager::SyncRemoteExecutorForStream* QueueItem::unsafe_arena_release_sync_remote_executor_for_stream() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.QueueItem.sync_remote_executor_for_stream)
  if (item_case() == kSyncRemoteExecutorForStream) {
    clear_has_item();
    auto* temp = _impl_.item_.sync_remote_executor_for_stream_;
    _impl_.item_.sync_remote_executor_for_stream_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueueItem::unsafe_arena_set_allocated_sync_remote_executor_for_stream(::tensorflow::eager::SyncRemoteExecutorForStream* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_sync_remote_executor_for_stream();
    _impl_.item_.sync_remote_executor_for_stream_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.QueueItem.sync_remote_executor_for_stream)
}
inline ::tensorflow::eager::SyncRemoteExecutorForStream* QueueItem::_internal_mutable_sync_remote_executor_for_stream() {
  if (item_case() != kSyncRemoteExecutorForStream) {
    clear_item();
    set_has_sync_remote_executor_for_stream();
    _impl_.item_.sync_remote_executor_for_stream_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::SyncRemoteExecutorForStream>(GetArena());
  }
  return _impl_.item_.sync_remote_executor_for_stream_;
}
inline ::tensorflow::eager::SyncRemoteExecutorForStream* QueueItem::mutable_sync_remote_executor_for_stream() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::SyncRemoteExecutorForStream* _msg = _internal_mutable_sync_remote_executor_for_stream();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.sync_remote_executor_for_stream)
  return _msg;
}

// .tensorflow.eager.SendPackedHandleOp send_packed_handle = 7;
inline bool QueueItem::has_send_packed_handle() const {
  return item_case() == kSendPackedHandle;
}
inline bool QueueItem::_internal_has_send_packed_handle() const {
  return item_case() == kSendPackedHandle;
}
inline void QueueItem::set_has_send_packed_handle() {
  _impl_._oneof_case_[0] = kSendPackedHandle;
}
inline void QueueItem::clear_send_packed_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (item_case() == kSendPackedHandle) {
    if (GetArena() == nullptr) {
      delete _impl_.item_.send_packed_handle_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.send_packed_handle_);
    }
    clear_has_item();
  }
}
inline ::tensorflow::eager::SendPackedHandleOp* QueueItem::release_send_packed_handle() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.send_packed_handle)
  if (item_case() == kSendPackedHandle) {
    clear_has_item();
    auto* temp = _impl_.item_.send_packed_handle_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.send_packed_handle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::SendPackedHandleOp& QueueItem::_internal_send_packed_handle() const {
  return item_case() == kSendPackedHandle ? *_impl_.item_.send_packed_handle_ : reinterpret_cast<::tensorflow::eager::SendPackedHandleOp&>(::tensorflow::eager::_SendPackedHandleOp_default_instance_);
}
inline const ::tensorflow::eager::SendPackedHandleOp& QueueItem::send_packed_handle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.send_packed_handle)
  return _internal_send_packed_handle();
}
inline ::tensorflow::eager::SendPackedHandleOp* QueueItem::unsafe_arena_release_send_packed_handle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.QueueItem.send_packed_handle)
  if (item_case() == kSendPackedHandle) {
    clear_has_item();
    auto* temp = _impl_.item_.send_packed_handle_;
    _impl_.item_.send_packed_handle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueueItem::unsafe_arena_set_allocated_send_packed_handle(::tensorflow::eager::SendPackedHandleOp* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_send_packed_handle();
    _impl_.item_.send_packed_handle_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.QueueItem.send_packed_handle)
}
inline ::tensorflow::eager::SendPackedHandleOp* QueueItem::_internal_mutable_send_packed_handle() {
  if (item_case() != kSendPackedHandle) {
    clear_item();
    set_has_send_packed_handle();
    _impl_.item_.send_packed_handle_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::SendPackedHandleOp>(GetArena());
  }
  return _impl_.item_.send_packed_handle_;
}
inline ::tensorflow::eager::SendPackedHandleOp* QueueItem::mutable_send_packed_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::SendPackedHandleOp* _msg = _internal_mutable_send_packed_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.send_packed_handle)
  return _msg;
}

// .tensorflow.eager.RemoveFunctionOp remove_function = 8;
inline bool QueueItem::has_remove_function() const {
  return item_case() == kRemoveFunction;
}
inline bool QueueItem::_internal_has_remove_function() const {
  return item_case() == kRemoveFunction;
}
inline void QueueItem::set_has_remove_function() {
  _impl_._oneof_case_[0] = kRemoveFunction;
}
inline void QueueItem::clear_remove_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (item_case() == kRemoveFunction) {
    if (GetArena() == nullptr) {
      delete _impl_.item_.remove_function_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.remove_function_);
    }
    clear_has_item();
  }
}
inline ::tensorflow::eager::RemoveFunctionOp* QueueItem::release_remove_function() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.QueueItem.remove_function)
  if (item_case() == kRemoveFunction) {
    clear_has_item();
    auto* temp = _impl_.item_.remove_function_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.remove_function_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::RemoveFunctionOp& QueueItem::_internal_remove_function() const {
  return item_case() == kRemoveFunction ? *_impl_.item_.remove_function_ : reinterpret_cast<::tensorflow::eager::RemoveFunctionOp&>(::tensorflow::eager::_RemoveFunctionOp_default_instance_);
}
inline const ::tensorflow::eager::RemoveFunctionOp& QueueItem::remove_function() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueItem.remove_function)
  return _internal_remove_function();
}
inline ::tensorflow::eager::RemoveFunctionOp* QueueItem::unsafe_arena_release_remove_function() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.QueueItem.remove_function)
  if (item_case() == kRemoveFunction) {
    clear_has_item();
    auto* temp = _impl_.item_.remove_function_;
    _impl_.item_.remove_function_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueueItem::unsafe_arena_set_allocated_remove_function(::tensorflow::eager::RemoveFunctionOp* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_remove_function();
    _impl_.item_.remove_function_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.QueueItem.remove_function)
}
inline ::tensorflow::eager::RemoveFunctionOp* QueueItem::_internal_mutable_remove_function() {
  if (item_case() != kRemoveFunction) {
    clear_item();
    set_has_remove_function();
    _impl_.item_.remove_function_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::RemoveFunctionOp>(GetArena());
  }
  return _impl_.item_.remove_function_;
}
inline ::tensorflow::eager::RemoveFunctionOp* QueueItem::mutable_remove_function() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::RemoveFunctionOp* _msg = _internal_mutable_remove_function();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueItem.remove_function)
  return _msg;
}

inline bool QueueItem::has_item() const {
  return item_case() != ITEM_NOT_SET;
}
inline void QueueItem::clear_has_item() {
  _impl_._oneof_case_[0] = ITEM_NOT_SET;
}
inline QueueItem::ItemCase QueueItem::item_case() const {
  return QueueItem::ItemCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueueResponse

// repeated .tensorflow.TensorShapeProto shape = 1;
inline int QueueResponse::_internal_shape_size() const {
  return _internal_shape().size();
}
inline int QueueResponse::shape_size() const {
  return _internal_shape_size();
}
inline ::tensorflow::TensorShapeProto* QueueResponse::mutable_shape(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueResponse.shape)
  return _internal_mutable_shape()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>* QueueResponse::mutable_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.QueueResponse.shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shape();
}
inline const ::tensorflow::TensorShapeProto& QueueResponse::shape(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueResponse.shape)
  return _internal_shape().Get(index);
}
inline ::tensorflow::TensorShapeProto* QueueResponse::add_shape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TensorShapeProto* _add = _internal_mutable_shape()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.QueueResponse.shape)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>& QueueResponse::shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.QueueResponse.shape)
  return _internal_shape();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>&
QueueResponse::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shape_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>*
QueueResponse::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shape_;
}

// repeated string device = 3;
inline int QueueResponse::_internal_device_size() const {
  return _internal_device().size();
}
inline int QueueResponse::device_size() const {
  return _internal_device_size();
}
inline void QueueResponse::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Clear();
}
inline std::string* QueueResponse::add_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.eager.QueueResponse.device)
  return _s;
}
inline const std::string& QueueResponse::device(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueResponse.device)
  return _internal_device().Get(index);
}
inline std::string* QueueResponse::mutable_device(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueResponse.device)
  return _internal_mutable_device()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void QueueResponse::set_device(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.eager.QueueResponse.device)
}
template <typename Arg_, typename... Args_>
inline void QueueResponse::add_device(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.eager.QueueResponse.device)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueueResponse::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.QueueResponse.device)
  return _internal_device();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueueResponse::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.QueueResponse.device)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueueResponse::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueueResponse::_internal_mutable_device() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_;
}

// repeated .tensorflow.TensorProto tensor = 2;
inline int QueueResponse::_internal_tensor_size() const {
  return _internal_tensor().size();
}
inline int QueueResponse::tensor_size() const {
  return _internal_tensor_size();
}
inline ::tensorflow::TensorProto* QueueResponse::mutable_tensor(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.QueueResponse.tensor)
  return _internal_mutable_tensor()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* QueueResponse::mutable_tensor()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.QueueResponse.tensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tensor();
}
inline const ::tensorflow::TensorProto& QueueResponse::tensor(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.QueueResponse.tensor)
  return _internal_tensor().Get(index);
}
inline ::tensorflow::TensorProto* QueueResponse::add_tensor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TensorProto* _add = _internal_mutable_tensor()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.QueueResponse.tensor)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& QueueResponse::tensor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.QueueResponse.tensor)
  return _internal_tensor();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>&
QueueResponse::_internal_tensor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tensor_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>*
QueueResponse::_internal_mutable_tensor() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tensor_;
}

// -------------------------------------------------------------------

// CreateContextRequest

// .tensorflow.ServerDef server_def = 1;
inline bool CreateContextRequest::has_server_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.server_def_ != nullptr);
  return value;
}
inline const ::tensorflow::ServerDef& CreateContextRequest::_internal_server_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ServerDef* p = _impl_.server_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ServerDef&>(::tensorflow::_ServerDef_default_instance_);
}
inline const ::tensorflow::ServerDef& CreateContextRequest::server_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.server_def)
  return _internal_server_def();
}
inline void CreateContextRequest::unsafe_arena_set_allocated_server_def(::tensorflow::ServerDef* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_def_);
  }
  _impl_.server_def_ = reinterpret_cast<::tensorflow::ServerDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.CreateContextRequest.server_def)
}
inline ::tensorflow::ServerDef* CreateContextRequest::release_server_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ServerDef* released = _impl_.server_def_;
  _impl_.server_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::ServerDef* CreateContextRequest::unsafe_arena_release_server_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.CreateContextRequest.server_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ServerDef* temp = _impl_.server_def_;
  _impl_.server_def_ = nullptr;
  return temp;
}
inline ::tensorflow::ServerDef* CreateContextRequest::_internal_mutable_server_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ServerDef>(GetArena());
    _impl_.server_def_ = reinterpret_cast<::tensorflow::ServerDef*>(p);
  }
  return _impl_.server_def_;
}
inline ::tensorflow::ServerDef* CreateContextRequest::mutable_server_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::ServerDef* _msg = _internal_mutable_server_def();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.CreateContextRequest.server_def)
  return _msg;
}
inline void CreateContextRequest::set_allocated_server_def(::tensorflow::ServerDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.server_def_ = reinterpret_cast<::tensorflow::ServerDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.CreateContextRequest.server_def)
}

// bool async = 2;
inline void CreateContextRequest::clear_async() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.async_ = false;
}
inline bool CreateContextRequest::async() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.async)
  return _internal_async();
}
inline void CreateContextRequest::set_async(bool value) {
  _internal_set_async(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.CreateContextRequest.async)
}
inline bool CreateContextRequest::_internal_async() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.async_;
}
inline void CreateContextRequest::_internal_set_async(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.async_ = value;
}

// int64 keep_alive_secs = 3;
inline void CreateContextRequest::clear_keep_alive_secs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keep_alive_secs_ = ::int64_t{0};
}
inline ::int64_t CreateContextRequest::keep_alive_secs() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.keep_alive_secs)
  return _internal_keep_alive_secs();
}
inline void CreateContextRequest::set_keep_alive_secs(::int64_t value) {
  _internal_set_keep_alive_secs(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.CreateContextRequest.keep_alive_secs)
}
inline ::int64_t CreateContextRequest::_internal_keep_alive_secs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.keep_alive_secs_;
}
inline void CreateContextRequest::_internal_set_keep_alive_secs(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keep_alive_secs_ = value;
}

// .tensorflow.VersionDef version_def = 4;
inline bool CreateContextRequest::has_version_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.version_def_ != nullptr);
  return value;
}
inline const ::tensorflow::VersionDef& CreateContextRequest::_internal_version_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::VersionDef* p = _impl_.version_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::VersionDef&>(::tensorflow::_VersionDef_default_instance_);
}
inline const ::tensorflow::VersionDef& CreateContextRequest::version_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.version_def)
  return _internal_version_def();
}
inline void CreateContextRequest::unsafe_arena_set_allocated_version_def(::tensorflow::VersionDef* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_def_);
  }
  _impl_.version_def_ = reinterpret_cast<::tensorflow::VersionDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.CreateContextRequest.version_def)
}
inline ::tensorflow::VersionDef* CreateContextRequest::release_version_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::VersionDef* released = _impl_.version_def_;
  _impl_.version_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::VersionDef* CreateContextRequest::unsafe_arena_release_version_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.CreateContextRequest.version_def)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::VersionDef* temp = _impl_.version_def_;
  _impl_.version_def_ = nullptr;
  return temp;
}
inline ::tensorflow::VersionDef* CreateContextRequest::_internal_mutable_version_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.version_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::VersionDef>(GetArena());
    _impl_.version_def_ = reinterpret_cast<::tensorflow::VersionDef*>(p);
  }
  return _impl_.version_def_;
}
inline ::tensorflow::VersionDef* CreateContextRequest::mutable_version_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::VersionDef* _msg = _internal_mutable_version_def();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.CreateContextRequest.version_def)
  return _msg;
}
inline void CreateContextRequest::set_allocated_version_def(::tensorflow::VersionDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.version_def_ = reinterpret_cast<::tensorflow::VersionDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.CreateContextRequest.version_def)
}

// repeated .tensorflow.DeviceAttributes cluster_device_attributes = 6;
inline int CreateContextRequest::_internal_cluster_device_attributes_size() const {
  return _internal_cluster_device_attributes().size();
}
inline int CreateContextRequest::cluster_device_attributes_size() const {
  return _internal_cluster_device_attributes_size();
}
inline ::tensorflow::DeviceAttributes* CreateContextRequest::mutable_cluster_device_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.CreateContextRequest.cluster_device_attributes)
  return _internal_mutable_cluster_device_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* CreateContextRequest::mutable_cluster_device_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.CreateContextRequest.cluster_device_attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cluster_device_attributes();
}
inline const ::tensorflow::DeviceAttributes& CreateContextRequest::cluster_device_attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.cluster_device_attributes)
  return _internal_cluster_device_attributes().Get(index);
}
inline ::tensorflow::DeviceAttributes* CreateContextRequest::add_cluster_device_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::DeviceAttributes* _add = _internal_mutable_cluster_device_attributes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.CreateContextRequest.cluster_device_attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& CreateContextRequest::cluster_device_attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.CreateContextRequest.cluster_device_attributes)
  return _internal_cluster_device_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>&
CreateContextRequest::_internal_cluster_device_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_device_attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>*
CreateContextRequest::_internal_mutable_cluster_device_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cluster_device_attributes_;
}

// fixed64 context_id = 7;
inline void CreateContextRequest::clear_context_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = ::uint64_t{0u};
}
inline ::uint64_t CreateContextRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.context_id)
  return _internal_context_id();
}
inline void CreateContextRequest::set_context_id(::uint64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.CreateContextRequest.context_id)
}
inline ::uint64_t CreateContextRequest::_internal_context_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_id_;
}
inline void CreateContextRequest::_internal_set_context_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = value;
}

// fixed64 context_view_id = 8;
inline void CreateContextRequest::clear_context_view_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_view_id_ = ::uint64_t{0u};
}
inline ::uint64_t CreateContextRequest::context_view_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.context_view_id)
  return _internal_context_view_id();
}
inline void CreateContextRequest::set_context_view_id(::uint64_t value) {
  _internal_set_context_view_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.CreateContextRequest.context_view_id)
}
inline ::uint64_t CreateContextRequest::_internal_context_view_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_view_id_;
}
inline void CreateContextRequest::_internal_set_context_view_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_view_id_ = value;
}

// bool lazy_copy_remote_function_inputs = 9;
inline void CreateContextRequest::clear_lazy_copy_remote_function_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lazy_copy_remote_function_inputs_ = false;
}
inline bool CreateContextRequest::lazy_copy_remote_function_inputs() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.lazy_copy_remote_function_inputs)
  return _internal_lazy_copy_remote_function_inputs();
}
inline void CreateContextRequest::set_lazy_copy_remote_function_inputs(bool value) {
  _internal_set_lazy_copy_remote_function_inputs(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.CreateContextRequest.lazy_copy_remote_function_inputs)
}
inline bool CreateContextRequest::_internal_lazy_copy_remote_function_inputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lazy_copy_remote_function_inputs_;
}
inline void CreateContextRequest::_internal_set_lazy_copy_remote_function_inputs(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lazy_copy_remote_function_inputs_ = value;
}

// bool clear_existing_contexts = 10;
inline void CreateContextRequest::clear_clear_existing_contexts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_existing_contexts_ = false;
}
inline bool CreateContextRequest::clear_existing_contexts() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextRequest.clear_existing_contexts)
  return _internal_clear_existing_contexts();
}
inline void CreateContextRequest::set_clear_existing_contexts(bool value) {
  _internal_set_clear_existing_contexts(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.CreateContextRequest.clear_existing_contexts)
}
inline bool CreateContextRequest::_internal_clear_existing_contexts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clear_existing_contexts_;
}
inline void CreateContextRequest::_internal_set_clear_existing_contexts(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_existing_contexts_ = value;
}

// -------------------------------------------------------------------

// CreateContextResponse

// repeated .tensorflow.DeviceAttributes device_attributes = 2;
inline int CreateContextResponse::_internal_device_attributes_size() const {
  return _internal_device_attributes().size();
}
inline int CreateContextResponse::device_attributes_size() const {
  return _internal_device_attributes_size();
}
inline ::tensorflow::DeviceAttributes* CreateContextResponse::mutable_device_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.CreateContextResponse.device_attributes)
  return _internal_mutable_device_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* CreateContextResponse::mutable_device_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.CreateContextResponse.device_attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_attributes();
}
inline const ::tensorflow::DeviceAttributes& CreateContextResponse::device_attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CreateContextResponse.device_attributes)
  return _internal_device_attributes().Get(index);
}
inline ::tensorflow::DeviceAttributes* CreateContextResponse::add_device_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::DeviceAttributes* _add = _internal_mutable_device_attributes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.CreateContextResponse.device_attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& CreateContextResponse::device_attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.CreateContextResponse.device_attributes)
  return _internal_device_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>&
CreateContextResponse::_internal_device_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>*
CreateContextResponse::_internal_mutable_device_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_attributes_;
}

// -------------------------------------------------------------------

// UpdateContextRequest

// .tensorflow.ServerDef server_def = 1;
inline bool UpdateContextRequest::has_server_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.server_def_ != nullptr);
  return value;
}
inline const ::tensorflow::ServerDef& UpdateContextRequest::_internal_server_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ServerDef* p = _impl_.server_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ServerDef&>(::tensorflow::_ServerDef_default_instance_);
}
inline const ::tensorflow::ServerDef& UpdateContextRequest::server_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.UpdateContextRequest.server_def)
  return _internal_server_def();
}
inline void UpdateContextRequest::unsafe_arena_set_allocated_server_def(::tensorflow::ServerDef* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_def_);
  }
  _impl_.server_def_ = reinterpret_cast<::tensorflow::ServerDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.UpdateContextRequest.server_def)
}
inline ::tensorflow::ServerDef* UpdateContextRequest::release_server_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ServerDef* released = _impl_.server_def_;
  _impl_.server_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::ServerDef* UpdateContextRequest::unsafe_arena_release_server_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.UpdateContextRequest.server_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ServerDef* temp = _impl_.server_def_;
  _impl_.server_def_ = nullptr;
  return temp;
}
inline ::tensorflow::ServerDef* UpdateContextRequest::_internal_mutable_server_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ServerDef>(GetArena());
    _impl_.server_def_ = reinterpret_cast<::tensorflow::ServerDef*>(p);
  }
  return _impl_.server_def_;
}
inline ::tensorflow::ServerDef* UpdateContextRequest::mutable_server_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::ServerDef* _msg = _internal_mutable_server_def();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.UpdateContextRequest.server_def)
  return _msg;
}
inline void UpdateContextRequest::set_allocated_server_def(::tensorflow::ServerDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.server_def_ = reinterpret_cast<::tensorflow::ServerDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.UpdateContextRequest.server_def)
}

// repeated .tensorflow.DeviceAttributes cluster_device_attributes = 2;
inline int UpdateContextRequest::_internal_cluster_device_attributes_size() const {
  return _internal_cluster_device_attributes().size();
}
inline int UpdateContextRequest::cluster_device_attributes_size() const {
  return _internal_cluster_device_attributes_size();
}
inline ::tensorflow::DeviceAttributes* UpdateContextRequest::mutable_cluster_device_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.UpdateContextRequest.cluster_device_attributes)
  return _internal_mutable_cluster_device_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* UpdateContextRequest::mutable_cluster_device_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.UpdateContextRequest.cluster_device_attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cluster_device_attributes();
}
inline const ::tensorflow::DeviceAttributes& UpdateContextRequest::cluster_device_attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.UpdateContextRequest.cluster_device_attributes)
  return _internal_cluster_device_attributes().Get(index);
}
inline ::tensorflow::DeviceAttributes* UpdateContextRequest::add_cluster_device_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::DeviceAttributes* _add = _internal_mutable_cluster_device_attributes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.UpdateContextRequest.cluster_device_attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& UpdateContextRequest::cluster_device_attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.UpdateContextRequest.cluster_device_attributes)
  return _internal_cluster_device_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>&
UpdateContextRequest::_internal_cluster_device_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_device_attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>*
UpdateContextRequest::_internal_mutable_cluster_device_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cluster_device_attributes_;
}

// fixed64 context_id = 3;
inline void UpdateContextRequest::clear_context_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = ::uint64_t{0u};
}
inline ::uint64_t UpdateContextRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.UpdateContextRequest.context_id)
  return _internal_context_id();
}
inline void UpdateContextRequest::set_context_id(::uint64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.UpdateContextRequest.context_id)
}
inline ::uint64_t UpdateContextRequest::_internal_context_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_id_;
}
inline void UpdateContextRequest::_internal_set_context_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = value;
}

// fixed64 context_view_id = 4;
inline void UpdateContextRequest::clear_context_view_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_view_id_ = ::uint64_t{0u};
}
inline ::uint64_t UpdateContextRequest::context_view_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.UpdateContextRequest.context_view_id)
  return _internal_context_view_id();
}
inline void UpdateContextRequest::set_context_view_id(::uint64_t value) {
  _internal_set_context_view_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.UpdateContextRequest.context_view_id)
}
inline ::uint64_t UpdateContextRequest::_internal_context_view_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_view_id_;
}
inline void UpdateContextRequest::_internal_set_context_view_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_view_id_ = value;
}

// -------------------------------------------------------------------

// UpdateContextResponse

// repeated .tensorflow.DeviceAttributes device_attributes = 1;
inline int UpdateContextResponse::_internal_device_attributes_size() const {
  return _internal_device_attributes().size();
}
inline int UpdateContextResponse::device_attributes_size() const {
  return _internal_device_attributes_size();
}
inline ::tensorflow::DeviceAttributes* UpdateContextResponse::mutable_device_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.UpdateContextResponse.device_attributes)
  return _internal_mutable_device_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* UpdateContextResponse::mutable_device_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.UpdateContextResponse.device_attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_attributes();
}
inline const ::tensorflow::DeviceAttributes& UpdateContextResponse::device_attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.UpdateContextResponse.device_attributes)
  return _internal_device_attributes().Get(index);
}
inline ::tensorflow::DeviceAttributes* UpdateContextResponse::add_device_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::DeviceAttributes* _add = _internal_mutable_device_attributes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.UpdateContextResponse.device_attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& UpdateContextResponse::device_attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.UpdateContextResponse.device_attributes)
  return _internal_device_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>&
UpdateContextResponse::_internal_device_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>*
UpdateContextResponse::_internal_mutable_device_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_attributes_;
}

// -------------------------------------------------------------------

// EnqueueRequest

// fixed64 context_id = 1;
inline void EnqueueRequest::clear_context_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = ::uint64_t{0u};
}
inline ::uint64_t EnqueueRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.EnqueueRequest.context_id)
  return _internal_context_id();
}
inline void EnqueueRequest::set_context_id(::uint64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.EnqueueRequest.context_id)
}
inline ::uint64_t EnqueueRequest::_internal_context_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_id_;
}
inline void EnqueueRequest::_internal_set_context_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = value;
}

// repeated .tensorflow.eager.QueueItem queue = 3;
inline int EnqueueRequest::_internal_queue_size() const {
  return _internal_queue().size();
}
inline int EnqueueRequest::queue_size() const {
  return _internal_queue_size();
}
inline void EnqueueRequest::clear_queue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.queue_.Clear();
}
inline ::tensorflow::eager::QueueItem* EnqueueRequest::mutable_queue(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.EnqueueRequest.queue)
  return _internal_mutable_queue()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueItem>* EnqueueRequest::mutable_queue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.EnqueueRequest.queue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_queue();
}
inline const ::tensorflow::eager::QueueItem& EnqueueRequest::queue(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.EnqueueRequest.queue)
  return _internal_queue().Get(index);
}
inline ::tensorflow::eager::QueueItem* EnqueueRequest::add_queue() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::eager::QueueItem* _add = _internal_mutable_queue()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.EnqueueRequest.queue)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueItem>& EnqueueRequest::queue() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.EnqueueRequest.queue)
  return _internal_queue();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueItem>&
EnqueueRequest::_internal_queue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.queue_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueItem>*
EnqueueRequest::_internal_mutable_queue() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.queue_;
}

// -------------------------------------------------------------------

// EnqueueResponse

// repeated .tensorflow.eager.QueueResponse queue_response = 1;
inline int EnqueueResponse::_internal_queue_response_size() const {
  return _internal_queue_response().size();
}
inline int EnqueueResponse::queue_response_size() const {
  return _internal_queue_response_size();
}
inline void EnqueueResponse::clear_queue_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.queue_response_.Clear();
}
inline ::tensorflow::eager::QueueResponse* EnqueueResponse::mutable_queue_response(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.EnqueueResponse.queue_response)
  return _internal_mutable_queue_response()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueResponse>* EnqueueResponse::mutable_queue_response()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.EnqueueResponse.queue_response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_queue_response();
}
inline const ::tensorflow::eager::QueueResponse& EnqueueResponse::queue_response(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.EnqueueResponse.queue_response)
  return _internal_queue_response().Get(index);
}
inline ::tensorflow::eager::QueueResponse* EnqueueResponse::add_queue_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::eager::QueueResponse* _add = _internal_mutable_queue_response()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.EnqueueResponse.queue_response)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueResponse>& EnqueueResponse::queue_response() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.EnqueueResponse.queue_response)
  return _internal_queue_response();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueResponse>&
EnqueueResponse::_internal_queue_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.queue_response_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::eager::QueueResponse>*
EnqueueResponse::_internal_mutable_queue_response() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.queue_response_;
}

// -------------------------------------------------------------------

// WaitQueueDoneRequest

// fixed64 context_id = 1;
inline void WaitQueueDoneRequest::clear_context_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = ::uint64_t{0u};
}
inline ::uint64_t WaitQueueDoneRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.WaitQueueDoneRequest.context_id)
  return _internal_context_id();
}
inline void WaitQueueDoneRequest::set_context_id(::uint64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.WaitQueueDoneRequest.context_id)
}
inline ::uint64_t WaitQueueDoneRequest::_internal_context_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_id_;
}
inline void WaitQueueDoneRequest::_internal_set_context_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = value;
}

// repeated int64 op_id = 2;
inline int WaitQueueDoneRequest::_internal_op_id_size() const {
  return _internal_op_id().size();
}
inline int WaitQueueDoneRequest::op_id_size() const {
  return _internal_op_id_size();
}
inline void WaitQueueDoneRequest::clear_op_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_id_.Clear();
}
inline ::int64_t WaitQueueDoneRequest::op_id(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.WaitQueueDoneRequest.op_id)
  return _internal_op_id().Get(index);
}
inline void WaitQueueDoneRequest::set_op_id(int index, ::int64_t value) {
  _internal_mutable_op_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.WaitQueueDoneRequest.op_id)
}
inline void WaitQueueDoneRequest::add_op_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_op_id()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.eager.WaitQueueDoneRequest.op_id)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& WaitQueueDoneRequest::op_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.WaitQueueDoneRequest.op_id)
  return _internal_op_id();
}
inline ::google::protobuf::RepeatedField<::int64_t>* WaitQueueDoneRequest::mutable_op_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.WaitQueueDoneRequest.op_id)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_op_id();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
WaitQueueDoneRequest::_internal_op_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_id_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* WaitQueueDoneRequest::_internal_mutable_op_id() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.op_id_;
}

// -------------------------------------------------------------------

// WaitQueueDoneResponse

// -------------------------------------------------------------------

// RunComponentFunctionRequest

// fixed64 context_id = 1;
inline void RunComponentFunctionRequest::clear_context_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = ::uint64_t{0u};
}
inline ::uint64_t RunComponentFunctionRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RunComponentFunctionRequest.context_id)
  return _internal_context_id();
}
inline void RunComponentFunctionRequest::set_context_id(::uint64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.RunComponentFunctionRequest.context_id)
}
inline ::uint64_t RunComponentFunctionRequest::_internal_context_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_id_;
}
inline void RunComponentFunctionRequest::_internal_set_context_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = value;
}

// .tensorflow.eager.Operation operation = 2;
inline bool RunComponentFunctionRequest::has_operation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.operation_ != nullptr);
  return value;
}
inline void RunComponentFunctionRequest::clear_operation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.operation_ != nullptr) _impl_.operation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::eager::Operation& RunComponentFunctionRequest::_internal_operation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::eager::Operation* p = _impl_.operation_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::eager::Operation&>(::tensorflow::eager::_Operation_default_instance_);
}
inline const ::tensorflow::eager::Operation& RunComponentFunctionRequest::operation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RunComponentFunctionRequest.operation)
  return _internal_operation();
}
inline void RunComponentFunctionRequest::unsafe_arena_set_allocated_operation(::tensorflow::eager::Operation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.operation_);
  }
  _impl_.operation_ = reinterpret_cast<::tensorflow::eager::Operation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.RunComponentFunctionRequest.operation)
}
inline ::tensorflow::eager::Operation* RunComponentFunctionRequest::release_operation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::eager::Operation* released = _impl_.operation_;
  _impl_.operation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::eager::Operation* RunComponentFunctionRequest::unsafe_arena_release_operation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.RunComponentFunctionRequest.operation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::eager::Operation* temp = _impl_.operation_;
  _impl_.operation_ = nullptr;
  return temp;
}
inline ::tensorflow::eager::Operation* RunComponentFunctionRequest::_internal_mutable_operation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.operation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::Operation>(GetArena());
    _impl_.operation_ = reinterpret_cast<::tensorflow::eager::Operation*>(p);
  }
  return _impl_.operation_;
}
inline ::tensorflow::eager::Operation* RunComponentFunctionRequest::mutable_operation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::eager::Operation* _msg = _internal_mutable_operation();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.RunComponentFunctionRequest.operation)
  return _msg;
}
inline void RunComponentFunctionRequest::set_allocated_operation(::tensorflow::eager::Operation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.operation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.operation_ = reinterpret_cast<::tensorflow::eager::Operation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.RunComponentFunctionRequest.operation)
}

// repeated int32 output_num = 3;
inline int RunComponentFunctionRequest::_internal_output_num_size() const {
  return _internal_output_num().size();
}
inline int RunComponentFunctionRequest::output_num_size() const {
  return _internal_output_num_size();
}
inline void RunComponentFunctionRequest::clear_output_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_num_.Clear();
}
inline ::int32_t RunComponentFunctionRequest::output_num(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RunComponentFunctionRequest.output_num)
  return _internal_output_num().Get(index);
}
inline void RunComponentFunctionRequest::set_output_num(int index, ::int32_t value) {
  _internal_mutable_output_num()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.RunComponentFunctionRequest.output_num)
}
inline void RunComponentFunctionRequest::add_output_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_output_num()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.eager.RunComponentFunctionRequest.output_num)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& RunComponentFunctionRequest::output_num() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.RunComponentFunctionRequest.output_num)
  return _internal_output_num();
}
inline ::google::protobuf::RepeatedField<::int32_t>* RunComponentFunctionRequest::mutable_output_num()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.RunComponentFunctionRequest.output_num)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_output_num();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
RunComponentFunctionRequest::_internal_output_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_num_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* RunComponentFunctionRequest::_internal_mutable_output_num() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.output_num_;
}

// -------------------------------------------------------------------

// RunComponentFunctionResponse

// repeated .tensorflow.TensorShapeProto shape = 1;
inline int RunComponentFunctionResponse::_internal_shape_size() const {
  return _internal_shape().size();
}
inline int RunComponentFunctionResponse::shape_size() const {
  return _internal_shape_size();
}
inline ::tensorflow::TensorShapeProto* RunComponentFunctionResponse::mutable_shape(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.RunComponentFunctionResponse.shape)
  return _internal_mutable_shape()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>* RunComponentFunctionResponse::mutable_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.RunComponentFunctionResponse.shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shape();
}
inline const ::tensorflow::TensorShapeProto& RunComponentFunctionResponse::shape(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RunComponentFunctionResponse.shape)
  return _internal_shape().Get(index);
}
inline ::tensorflow::TensorShapeProto* RunComponentFunctionResponse::add_shape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TensorShapeProto* _add = _internal_mutable_shape()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.RunComponentFunctionResponse.shape)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>& RunComponentFunctionResponse::shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.RunComponentFunctionResponse.shape)
  return _internal_shape();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>&
RunComponentFunctionResponse::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shape_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorShapeProto>*
RunComponentFunctionResponse::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shape_;
}

// repeated .tensorflow.TensorProto tensor = 2;
inline int RunComponentFunctionResponse::_internal_tensor_size() const {
  return _internal_tensor().size();
}
inline int RunComponentFunctionResponse::tensor_size() const {
  return _internal_tensor_size();
}
inline ::tensorflow::TensorProto* RunComponentFunctionResponse::mutable_tensor(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.RunComponentFunctionResponse.tensor)
  return _internal_mutable_tensor()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* RunComponentFunctionResponse::mutable_tensor()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.RunComponentFunctionResponse.tensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tensor();
}
inline const ::tensorflow::TensorProto& RunComponentFunctionResponse::tensor(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RunComponentFunctionResponse.tensor)
  return _internal_tensor().Get(index);
}
inline ::tensorflow::TensorProto* RunComponentFunctionResponse::add_tensor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TensorProto* _add = _internal_mutable_tensor()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.RunComponentFunctionResponse.tensor)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& RunComponentFunctionResponse::tensor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.RunComponentFunctionResponse.tensor)
  return _internal_tensor();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>&
RunComponentFunctionResponse::_internal_tensor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tensor_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>*
RunComponentFunctionResponse::_internal_mutable_tensor() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tensor_;
}

// -------------------------------------------------------------------

// KeepAliveRequest

// fixed64 context_id = 1;
inline void KeepAliveRequest::clear_context_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = ::uint64_t{0u};
}
inline ::uint64_t KeepAliveRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.KeepAliveRequest.context_id)
  return _internal_context_id();
}
inline void KeepAliveRequest::set_context_id(::uint64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.KeepAliveRequest.context_id)
}
inline ::uint64_t KeepAliveRequest::_internal_context_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_id_;
}
inline void KeepAliveRequest::_internal_set_context_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = value;
}

// -------------------------------------------------------------------

// KeepAliveResponse

// fixed64 context_view_id = 1;
inline void KeepAliveResponse::clear_context_view_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_view_id_ = ::uint64_t{0u};
}
inline ::uint64_t KeepAliveResponse::context_view_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.KeepAliveResponse.context_view_id)
  return _internal_context_view_id();
}
inline void KeepAliveResponse::set_context_view_id(::uint64_t value) {
  _internal_set_context_view_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.KeepAliveResponse.context_view_id)
}
inline ::uint64_t KeepAliveResponse::_internal_context_view_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_view_id_;
}
inline void KeepAliveResponse::_internal_set_context_view_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_view_id_ = value;
}

// -------------------------------------------------------------------

// CloseContextRequest

// fixed64 context_id = 1;
inline void CloseContextRequest::clear_context_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = ::uint64_t{0u};
}
inline ::uint64_t CloseContextRequest::context_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CloseContextRequest.context_id)
  return _internal_context_id();
}
inline void CloseContextRequest::set_context_id(::uint64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.CloseContextRequest.context_id)
}
inline ::uint64_t CloseContextRequest::_internal_context_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_id_;
}
inline void CloseContextRequest::_internal_set_context_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_id_ = value;
}

// fixed64 context_view_id = 2;
inline void CloseContextRequest::clear_context_view_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_view_id_ = ::uint64_t{0u};
}
inline ::uint64_t CloseContextRequest::context_view_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CloseContextRequest.context_view_id)
  return _internal_context_view_id();
}
inline void CloseContextRequest::set_context_view_id(::uint64_t value) {
  _internal_set_context_view_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.CloseContextRequest.context_view_id)
}
inline ::uint64_t CloseContextRequest::_internal_context_view_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_view_id_;
}
inline void CloseContextRequest::_internal_set_context_view_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_view_id_ = value;
}

// -------------------------------------------------------------------

// CloseContextResponse

// -------------------------------------------------------------------

// RegisterFunctionOp

// .tensorflow.FunctionDef function_def = 1;
inline bool RegisterFunctionOp::has_function_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.function_def_ != nullptr);
  return value;
}
inline const ::tensorflow::FunctionDef& RegisterFunctionOp::_internal_function_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::FunctionDef* p = _impl_.function_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::FunctionDef&>(::tensorflow::_FunctionDef_default_instance_);
}
inline const ::tensorflow::FunctionDef& RegisterFunctionOp::function_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RegisterFunctionOp.function_def)
  return _internal_function_def();
}
inline void RegisterFunctionOp::unsafe_arena_set_allocated_function_def(::tensorflow::FunctionDef* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.function_def_);
  }
  _impl_.function_def_ = reinterpret_cast<::tensorflow::FunctionDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.RegisterFunctionOp.function_def)
}
inline ::tensorflow::FunctionDef* RegisterFunctionOp::release_function_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::FunctionDef* released = _impl_.function_def_;
  _impl_.function_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::FunctionDef* RegisterFunctionOp::unsafe_arena_release_function_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.RegisterFunctionOp.function_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::FunctionDef* temp = _impl_.function_def_;
  _impl_.function_def_ = nullptr;
  return temp;
}
inline ::tensorflow::FunctionDef* RegisterFunctionOp::_internal_mutable_function_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.function_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::FunctionDef>(GetArena());
    _impl_.function_def_ = reinterpret_cast<::tensorflow::FunctionDef*>(p);
  }
  return _impl_.function_def_;
}
inline ::tensorflow::FunctionDef* RegisterFunctionOp::mutable_function_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::FunctionDef* _msg = _internal_mutable_function_def();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.RegisterFunctionOp.function_def)
  return _msg;
}
inline void RegisterFunctionOp::set_allocated_function_def(::tensorflow::FunctionDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.function_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.function_def_ = reinterpret_cast<::tensorflow::FunctionDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.RegisterFunctionOp.function_def)
}

// bool is_component_function = 2;
inline void RegisterFunctionOp::clear_is_component_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_component_function_ = false;
}
inline bool RegisterFunctionOp::is_component_function() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RegisterFunctionOp.is_component_function)
  return _internal_is_component_function();
}
inline void RegisterFunctionOp::set_is_component_function(bool value) {
  _internal_set_is_component_function(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.RegisterFunctionOp.is_component_function)
}
inline bool RegisterFunctionOp::_internal_is_component_function() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_component_function_;
}
inline void RegisterFunctionOp::_internal_set_is_component_function(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_component_function_ = value;
}

// .tensorflow.FunctionDefLibrary library = 3;
inline bool RegisterFunctionOp::has_library() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.library_ != nullptr);
  return value;
}
inline const ::tensorflow::FunctionDefLibrary& RegisterFunctionOp::_internal_library() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::FunctionDefLibrary* p = _impl_.library_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::FunctionDefLibrary&>(::tensorflow::_FunctionDefLibrary_default_instance_);
}
inline const ::tensorflow::FunctionDefLibrary& RegisterFunctionOp::library() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RegisterFunctionOp.library)
  return _internal_library();
}
inline void RegisterFunctionOp::unsafe_arena_set_allocated_library(::tensorflow::FunctionDefLibrary* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.library_);
  }
  _impl_.library_ = reinterpret_cast<::tensorflow::FunctionDefLibrary*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.RegisterFunctionOp.library)
}
inline ::tensorflow::FunctionDefLibrary* RegisterFunctionOp::release_library() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::FunctionDefLibrary* released = _impl_.library_;
  _impl_.library_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::FunctionDefLibrary* RegisterFunctionOp::unsafe_arena_release_library() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.RegisterFunctionOp.library)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::FunctionDefLibrary* temp = _impl_.library_;
  _impl_.library_ = nullptr;
  return temp;
}
inline ::tensorflow::FunctionDefLibrary* RegisterFunctionOp::_internal_mutable_library() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.library_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::FunctionDefLibrary>(GetArena());
    _impl_.library_ = reinterpret_cast<::tensorflow::FunctionDefLibrary*>(p);
  }
  return _impl_.library_;
}
inline ::tensorflow::FunctionDefLibrary* RegisterFunctionOp::mutable_library() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::FunctionDefLibrary* _msg = _internal_mutable_library();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.RegisterFunctionOp.library)
  return _msg;
}
inline void RegisterFunctionOp::set_allocated_library(::tensorflow::FunctionDefLibrary* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.library_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.library_ = reinterpret_cast<::tensorflow::FunctionDefLibrary*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.RegisterFunctionOp.library)
}

// -------------------------------------------------------------------

// RemoveFunctionOp

// string function_name = 1;
inline void RemoveFunctionOp::clear_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.function_name_.ClearToEmpty();
}
inline const std::string& RemoveFunctionOp::function_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.RemoveFunctionOp.function_name)
  return _internal_function_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveFunctionOp::set_function_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.function_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.eager.RemoveFunctionOp.function_name)
}
inline std::string* RemoveFunctionOp::mutable_function_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_function_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.RemoveFunctionOp.function_name)
  return _s;
}
inline const std::string& RemoveFunctionOp::_internal_function_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.function_name_.Get();
}
inline void RemoveFunctionOp::_internal_set_function_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.function_name_.Set(value, GetArena());
}
inline std::string* RemoveFunctionOp::_internal_mutable_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.function_name_.Mutable( GetArena());
}
inline std::string* RemoveFunctionOp::release_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.RemoveFunctionOp.function_name)
  return _impl_.function_name_.Release();
}
inline void RemoveFunctionOp::set_allocated_function_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.function_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.function_name_.IsDefault()) {
          _impl_.function_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.RemoveFunctionOp.function_name)
}

// -------------------------------------------------------------------

// CleanupFunctionOp

// int64 step_id = 1;
inline void CleanupFunctionOp::clear_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = ::int64_t{0};
}
inline ::int64_t CleanupFunctionOp::step_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.CleanupFunctionOp.step_id)
  return _internal_step_id();
}
inline void CleanupFunctionOp::set_step_id(::int64_t value) {
  _internal_set_step_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.CleanupFunctionOp.step_id)
}
inline ::int64_t CleanupFunctionOp::_internal_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_id_;
}
inline void CleanupFunctionOp::_internal_set_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = value;
}

// -------------------------------------------------------------------

// SyncRemoteExecutorForStream

// -------------------------------------------------------------------

// SendTensorOp

// int64 op_id = 1;
inline void SendTensorOp::clear_op_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_id_ = ::int64_t{0};
}
inline ::int64_t SendTensorOp::op_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendTensorOp.op_id)
  return _internal_op_id();
}
inline void SendTensorOp::set_op_id(::int64_t value) {
  _internal_set_op_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.SendTensorOp.op_id)
}
inline ::int64_t SendTensorOp::_internal_op_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_id_;
}
inline void SendTensorOp::_internal_set_op_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_id_ = value;
}

// repeated .tensorflow.TensorProto tensors = 2;
inline int SendTensorOp::_internal_tensors_size() const {
  return _internal_tensors().size();
}
inline int SendTensorOp::tensors_size() const {
  return _internal_tensors_size();
}
inline ::tensorflow::TensorProto* SendTensorOp::mutable_tensors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.SendTensorOp.tensors)
  return _internal_mutable_tensors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* SendTensorOp::mutable_tensors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.SendTensorOp.tensors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tensors();
}
inline const ::tensorflow::TensorProto& SendTensorOp::tensors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendTensorOp.tensors)
  return _internal_tensors().Get(index);
}
inline ::tensorflow::TensorProto* SendTensorOp::add_tensors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TensorProto* _add = _internal_mutable_tensors()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.SendTensorOp.tensors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& SendTensorOp::tensors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.SendTensorOp.tensors)
  return _internal_tensors();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>&
SendTensorOp::_internal_tensors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tensors_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>*
SendTensorOp::_internal_mutable_tensors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tensors_;
}

// string device_name = 3;
inline void SendTensorOp::clear_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.ClearToEmpty();
}
inline const std::string& SendTensorOp::device_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendTensorOp.device_name)
  return _internal_device_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendTensorOp::set_device_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.eager.SendTensorOp.device_name)
}
inline std::string* SendTensorOp::mutable_device_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.SendTensorOp.device_name)
  return _s;
}
inline const std::string& SendTensorOp::_internal_device_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_name_.Get();
}
inline void SendTensorOp::_internal_set_device_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(value, GetArena());
}
inline std::string* SendTensorOp::_internal_mutable_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_name_.Mutable( GetArena());
}
inline std::string* SendTensorOp::release_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.SendTensorOp.device_name)
  return _impl_.device_name_.Release();
}
inline void SendTensorOp::set_allocated_device_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_name_.IsDefault()) {
          _impl_.device_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.SendTensorOp.device_name)
}

// -------------------------------------------------------------------

// SendPackedHandleOp_LocalTensorHandle

// .tensorflow.TensorProto tensor = 1;
inline bool SendPackedHandleOp_LocalTensorHandle::has_tensor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tensor_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorProto& SendPackedHandleOp_LocalTensorHandle::_internal_tensor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorProto* p = _impl_.tensor_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorProto&>(::tensorflow::_TensorProto_default_instance_);
}
inline const ::tensorflow::TensorProto& SendPackedHandleOp_LocalTensorHandle::tensor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.tensor)
  return _internal_tensor();
}
inline void SendPackedHandleOp_LocalTensorHandle::unsafe_arena_set_allocated_tensor(::tensorflow::TensorProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_);
  }
  _impl_.tensor_ = reinterpret_cast<::tensorflow::TensorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.tensor)
}
inline ::tensorflow::TensorProto* SendPackedHandleOp_LocalTensorHandle::release_tensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorProto* released = _impl_.tensor_;
  _impl_.tensor_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TensorProto* SendPackedHandleOp_LocalTensorHandle::unsafe_arena_release_tensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.tensor)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorProto* temp = _impl_.tensor_;
  _impl_.tensor_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorProto* SendPackedHandleOp_LocalTensorHandle::_internal_mutable_tensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tensor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorProto>(GetArena());
    _impl_.tensor_ = reinterpret_cast<::tensorflow::TensorProto*>(p);
  }
  return _impl_.tensor_;
}
inline ::tensorflow::TensorProto* SendPackedHandleOp_LocalTensorHandle::mutable_tensor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TensorProto* _msg = _internal_mutable_tensor();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.tensor)
  return _msg;
}
inline void SendPackedHandleOp_LocalTensorHandle::set_allocated_tensor(::tensorflow::TensorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tensor_ = reinterpret_cast<::tensorflow::TensorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.tensor)
}

// string device = 2;
inline void SendPackedHandleOp_LocalTensorHandle::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.ClearToEmpty();
}
inline const std::string& SendPackedHandleOp_LocalTensorHandle::device() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.device)
  return _internal_device();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendPackedHandleOp_LocalTensorHandle::set_device(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.device)
}
inline std::string* SendPackedHandleOp_LocalTensorHandle::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.device)
  return _s;
}
inline const std::string& SendPackedHandleOp_LocalTensorHandle::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_.Get();
}
inline void SendPackedHandleOp_LocalTensorHandle::_internal_set_device(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(value, GetArena());
}
inline std::string* SendPackedHandleOp_LocalTensorHandle::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_.Mutable( GetArena());
}
inline std::string* SendPackedHandleOp_LocalTensorHandle::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.device)
  return _impl_.device_.Release();
}
inline void SendPackedHandleOp_LocalTensorHandle::set_allocated_device(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_.IsDefault()) {
          _impl_.device_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.SendPackedHandleOp.LocalTensorHandle.device)
}

// -------------------------------------------------------------------

// SendPackedHandleOp_Handle

// .tensorflow.eager.SendPackedHandleOp.LocalTensorHandle local_handle = 1;
inline bool SendPackedHandleOp_Handle::has_local_handle() const {
  return item_case() == kLocalHandle;
}
inline bool SendPackedHandleOp_Handle::_internal_has_local_handle() const {
  return item_case() == kLocalHandle;
}
inline void SendPackedHandleOp_Handle::set_has_local_handle() {
  _impl_._oneof_case_[0] = kLocalHandle;
}
inline void SendPackedHandleOp_Handle::clear_local_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (item_case() == kLocalHandle) {
    if (GetArena() == nullptr) {
      delete _impl_.item_.local_handle_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.local_handle_);
    }
    clear_has_item();
  }
}
inline ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* SendPackedHandleOp_Handle::release_local_handle() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.SendPackedHandleOp.Handle.local_handle)
  if (item_case() == kLocalHandle) {
    clear_has_item();
    auto* temp = _impl_.item_.local_handle_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.local_handle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle& SendPackedHandleOp_Handle::_internal_local_handle() const {
  return item_case() == kLocalHandle ? *_impl_.item_.local_handle_ : reinterpret_cast<::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle&>(::tensorflow::eager::_SendPackedHandleOp_LocalTensorHandle_default_instance_);
}
inline const ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle& SendPackedHandleOp_Handle::local_handle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendPackedHandleOp.Handle.local_handle)
  return _internal_local_handle();
}
inline ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* SendPackedHandleOp_Handle::unsafe_arena_release_local_handle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.SendPackedHandleOp.Handle.local_handle)
  if (item_case() == kLocalHandle) {
    clear_has_item();
    auto* temp = _impl_.item_.local_handle_;
    _impl_.item_.local_handle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SendPackedHandleOp_Handle::unsafe_arena_set_allocated_local_handle(::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_local_handle();
    _impl_.item_.local_handle_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.SendPackedHandleOp.Handle.local_handle)
}
inline ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* SendPackedHandleOp_Handle::_internal_mutable_local_handle() {
  if (item_case() != kLocalHandle) {
    clear_item();
    set_has_local_handle();
    _impl_.item_.local_handle_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle>(GetArena());
  }
  return _impl_.item_.local_handle_;
}
inline ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* SendPackedHandleOp_Handle::mutable_local_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::SendPackedHandleOp_LocalTensorHandle* _msg = _internal_mutable_local_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.SendPackedHandleOp.Handle.local_handle)
  return _msg;
}

// .tensorflow.eager.RemoteTensorHandle remote_handle = 2;
inline bool SendPackedHandleOp_Handle::has_remote_handle() const {
  return item_case() == kRemoteHandle;
}
inline bool SendPackedHandleOp_Handle::_internal_has_remote_handle() const {
  return item_case() == kRemoteHandle;
}
inline void SendPackedHandleOp_Handle::set_has_remote_handle() {
  _impl_._oneof_case_[0] = kRemoteHandle;
}
inline ::tensorflow::eager::RemoteTensorHandle* SendPackedHandleOp_Handle::release_remote_handle() {
  // @@protoc_insertion_point(field_release:tensorflow.eager.SendPackedHandleOp.Handle.remote_handle)
  if (item_case() == kRemoteHandle) {
    clear_has_item();
    auto* temp = _impl_.item_.remote_handle_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.item_.remote_handle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::eager::RemoteTensorHandle& SendPackedHandleOp_Handle::_internal_remote_handle() const {
  return item_case() == kRemoteHandle ? *_impl_.item_.remote_handle_ : reinterpret_cast<::tensorflow::eager::RemoteTensorHandle&>(::tensorflow::eager::_RemoteTensorHandle_default_instance_);
}
inline const ::tensorflow::eager::RemoteTensorHandle& SendPackedHandleOp_Handle::remote_handle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendPackedHandleOp.Handle.remote_handle)
  return _internal_remote_handle();
}
inline ::tensorflow::eager::RemoteTensorHandle* SendPackedHandleOp_Handle::unsafe_arena_release_remote_handle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.eager.SendPackedHandleOp.Handle.remote_handle)
  if (item_case() == kRemoteHandle) {
    clear_has_item();
    auto* temp = _impl_.item_.remote_handle_;
    _impl_.item_.remote_handle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SendPackedHandleOp_Handle::unsafe_arena_set_allocated_remote_handle(::tensorflow::eager::RemoteTensorHandle* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_item();
  if (value) {
    set_has_remote_handle();
    _impl_.item_.remote_handle_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.eager.SendPackedHandleOp.Handle.remote_handle)
}
inline ::tensorflow::eager::RemoteTensorHandle* SendPackedHandleOp_Handle::_internal_mutable_remote_handle() {
  if (item_case() != kRemoteHandle) {
    clear_item();
    set_has_remote_handle();
    _impl_.item_.remote_handle_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::eager::RemoteTensorHandle>(GetArena());
  }
  return _impl_.item_.remote_handle_;
}
inline ::tensorflow::eager::RemoteTensorHandle* SendPackedHandleOp_Handle::mutable_remote_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::eager::RemoteTensorHandle* _msg = _internal_mutable_remote_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.SendPackedHandleOp.Handle.remote_handle)
  return _msg;
}

inline bool SendPackedHandleOp_Handle::has_item() const {
  return item_case() != ITEM_NOT_SET;
}
inline void SendPackedHandleOp_Handle::clear_has_item() {
  _impl_._oneof_case_[0] = ITEM_NOT_SET;
}
inline SendPackedHandleOp_Handle::ItemCase SendPackedHandleOp_Handle::item_case() const {
  return SendPackedHandleOp_Handle::ItemCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// SendPackedHandleOp

// int64 op_id = 1;
inline void SendPackedHandleOp::clear_op_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_id_ = ::int64_t{0};
}
inline ::int64_t SendPackedHandleOp::op_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendPackedHandleOp.op_id)
  return _internal_op_id();
}
inline void SendPackedHandleOp::set_op_id(::int64_t value) {
  _internal_set_op_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.eager.SendPackedHandleOp.op_id)
}
inline ::int64_t SendPackedHandleOp::_internal_op_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_id_;
}
inline void SendPackedHandleOp::_internal_set_op_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_id_ = value;
}

// repeated .tensorflow.eager.SendPackedHandleOp.Handle handles = 2;
inline int SendPackedHandleOp::_internal_handles_size() const {
  return _internal_handles().size();
}
inline int SendPackedHandleOp::handles_size() const {
  return _internal_handles_size();
}
inline void SendPackedHandleOp::clear_handles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.handles_.Clear();
}
inline ::tensorflow::eager::SendPackedHandleOp_Handle* SendPackedHandleOp::mutable_handles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.SendPackedHandleOp.handles)
  return _internal_mutable_handles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::eager::SendPackedHandleOp_Handle>* SendPackedHandleOp::mutable_handles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.eager.SendPackedHandleOp.handles)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_handles();
}
inline const ::tensorflow::eager::SendPackedHandleOp_Handle& SendPackedHandleOp::handles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendPackedHandleOp.handles)
  return _internal_handles().Get(index);
}
inline ::tensorflow::eager::SendPackedHandleOp_Handle* SendPackedHandleOp::add_handles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::eager::SendPackedHandleOp_Handle* _add = _internal_mutable_handles()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.eager.SendPackedHandleOp.handles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::SendPackedHandleOp_Handle>& SendPackedHandleOp::handles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.eager.SendPackedHandleOp.handles)
  return _internal_handles();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::eager::SendPackedHandleOp_Handle>&
SendPackedHandleOp::_internal_handles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.handles_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::eager::SendPackedHandleOp_Handle>*
SendPackedHandleOp::_internal_mutable_handles() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.handles_;
}

// string device_name = 3;
inline void SendPackedHandleOp::clear_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.ClearToEmpty();
}
inline const std::string& SendPackedHandleOp::device_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.eager.SendPackedHandleOp.device_name)
  return _internal_device_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendPackedHandleOp::set_device_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.eager.SendPackedHandleOp.device_name)
}
inline std::string* SendPackedHandleOp::mutable_device_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.eager.SendPackedHandleOp.device_name)
  return _s;
}
inline const std::string& SendPackedHandleOp::_internal_device_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_name_.Get();
}
inline void SendPackedHandleOp::_internal_set_device_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(value, GetArena());
}
inline std::string* SendPackedHandleOp::_internal_mutable_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_name_.Mutable( GetArena());
}
inline std::string* SendPackedHandleOp::release_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.eager.SendPackedHandleOp.device_name)
  return _impl_.device_name_.Release();
}
inline void SendPackedHandleOp::set_allocated_device_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_name_.IsDefault()) {
          _impl_.device_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.eager.SendPackedHandleOp.device_name)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace eager
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2feager_5fservice_2eproto_2epb_2eh
