// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/tpu/compile_metadata.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "xla/xla.pb.h"
#include "xla/xla_data.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/types.pb.h"
#include "tensorflow/core/protobuf/tpu/dynamic_padding.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto;
namespace tensorflow {
namespace tpu {
class TPUCompileMetadataProto;
struct TPUCompileMetadataProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern TPUCompileMetadataProtoDefaultTypeInternal _TPUCompileMetadataProto_default_instance_;
class TPUCompileMetadataProto_Arg;
struct TPUCompileMetadataProto_ArgDefaultTypeInternal;
PROTOBUF_EXPORT extern TPUCompileMetadataProto_ArgDefaultTypeInternal _TPUCompileMetadataProto_Arg_default_instance_;
class TPUCompileMetadataProto_Retval;
struct TPUCompileMetadataProto_RetvalDefaultTypeInternal;
PROTOBUF_EXPORT extern TPUCompileMetadataProto_RetvalDefaultTypeInternal _TPUCompileMetadataProto_Retval_default_instance_;
class TPUCompileOptions;
struct TPUCompileOptionsDefaultTypeInternal;
PROTOBUF_EXPORT extern TPUCompileOptionsDefaultTypeInternal _TPUCompileOptions_default_instance_;
}  // namespace tpu
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace tpu {
enum TPUCompileMetadataProto_Arg_Kind : int {
  TPUCompileMetadataProto_Arg_Kind_INVALID = 0,
  TPUCompileMetadataProto_Arg_Kind_PARAMETER = 1,
  TPUCompileMetadataProto_Arg_Kind_VARIABLE = 2,
  TPUCompileMetadataProto_Arg_Kind_GUARANTEED_CONSTANT = 3,
  TPUCompileMetadataProto_Arg_Kind_TPUCompileMetadataProto_Arg_Kind_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TPUCompileMetadataProto_Arg_Kind_TPUCompileMetadataProto_Arg_Kind_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool TPUCompileMetadataProto_Arg_Kind_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t TPUCompileMetadataProto_Arg_Kind_internal_data_[];
constexpr TPUCompileMetadataProto_Arg_Kind TPUCompileMetadataProto_Arg_Kind_Kind_MIN = static_cast<TPUCompileMetadataProto_Arg_Kind>(0);
constexpr TPUCompileMetadataProto_Arg_Kind TPUCompileMetadataProto_Arg_Kind_Kind_MAX = static_cast<TPUCompileMetadataProto_Arg_Kind>(3);
constexpr int TPUCompileMetadataProto_Arg_Kind_Kind_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
TPUCompileMetadataProto_Arg_Kind_descriptor();
template <typename T>
const std::string& TPUCompileMetadataProto_Arg_Kind_Name(T value) {
  static_assert(std::is_same<T, TPUCompileMetadataProto_Arg_Kind>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Kind_Name().");
  return TPUCompileMetadataProto_Arg_Kind_Name(static_cast<TPUCompileMetadataProto_Arg_Kind>(value));
}
template <>
inline const std::string& TPUCompileMetadataProto_Arg_Kind_Name(TPUCompileMetadataProto_Arg_Kind value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TPUCompileMetadataProto_Arg_Kind_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TPUCompileMetadataProto_Arg_Kind_Parse(absl::string_view name, TPUCompileMetadataProto_Arg_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPUCompileMetadataProto_Arg_Kind>(
      TPUCompileMetadataProto_Arg_Kind_descriptor(), name, value);
}
enum TPUCompileMetadataProto_Arg_EnableXlaSharding : int {
  TPUCompileMetadataProto_Arg_EnableXlaSharding_DISALLOWED = 0,
  TPUCompileMetadataProto_Arg_EnableXlaSharding_TENTATIVE = 1,
  TPUCompileMetadataProto_Arg_EnableXlaSharding_ALLOWED = 2,
  TPUCompileMetadataProto_Arg_EnableXlaSharding_TPUCompileMetadataProto_Arg_EnableXlaSharding_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TPUCompileMetadataProto_Arg_EnableXlaSharding_TPUCompileMetadataProto_Arg_EnableXlaSharding_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool TPUCompileMetadataProto_Arg_EnableXlaSharding_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t TPUCompileMetadataProto_Arg_EnableXlaSharding_internal_data_[];
constexpr TPUCompileMetadataProto_Arg_EnableXlaSharding TPUCompileMetadataProto_Arg_EnableXlaSharding_EnableXlaSharding_MIN = static_cast<TPUCompileMetadataProto_Arg_EnableXlaSharding>(0);
constexpr TPUCompileMetadataProto_Arg_EnableXlaSharding TPUCompileMetadataProto_Arg_EnableXlaSharding_EnableXlaSharding_MAX = static_cast<TPUCompileMetadataProto_Arg_EnableXlaSharding>(2);
constexpr int TPUCompileMetadataProto_Arg_EnableXlaSharding_EnableXlaSharding_ARRAYSIZE = 2 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
TPUCompileMetadataProto_Arg_EnableXlaSharding_descriptor();
template <typename T>
const std::string& TPUCompileMetadataProto_Arg_EnableXlaSharding_Name(T value) {
  static_assert(std::is_same<T, TPUCompileMetadataProto_Arg_EnableXlaSharding>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EnableXlaSharding_Name().");
  return TPUCompileMetadataProto_Arg_EnableXlaSharding_Name(static_cast<TPUCompileMetadataProto_Arg_EnableXlaSharding>(value));
}
template <>
inline const std::string& TPUCompileMetadataProto_Arg_EnableXlaSharding_Name(TPUCompileMetadataProto_Arg_EnableXlaSharding value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TPUCompileMetadataProto_Arg_EnableXlaSharding_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool TPUCompileMetadataProto_Arg_EnableXlaSharding_Parse(absl::string_view name, TPUCompileMetadataProto_Arg_EnableXlaSharding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPUCompileMetadataProto_Arg_EnableXlaSharding>(
      TPUCompileMetadataProto_Arg_EnableXlaSharding_descriptor(), name, value);
}
enum TPUCompileOptions_Precision : int {
  TPUCompileOptions_Precision_DEFAULT = 0,
  TPUCompileOptions_Precision_BFLOAT16 = 1,
  TPUCompileOptions_Precision_FLOAT32 = 2,
  TPUCompileOptions_Precision_TENSOR_FLOAT32 = 3,
  TPUCompileOptions_Precision_TPUCompileOptions_Precision_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TPUCompileOptions_Precision_TPUCompileOptions_Precision_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool TPUCompileOptions_Precision_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t TPUCompileOptions_Precision_internal_data_[];
constexpr TPUCompileOptions_Precision TPUCompileOptions_Precision_Precision_MIN = static_cast<TPUCompileOptions_Precision>(0);
constexpr TPUCompileOptions_Precision TPUCompileOptions_Precision_Precision_MAX = static_cast<TPUCompileOptions_Precision>(3);
constexpr int TPUCompileOptions_Precision_Precision_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
TPUCompileOptions_Precision_descriptor();
template <typename T>
const std::string& TPUCompileOptions_Precision_Name(T value) {
  static_assert(std::is_same<T, TPUCompileOptions_Precision>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Precision_Name().");
  return TPUCompileOptions_Precision_Name(static_cast<TPUCompileOptions_Precision>(value));
}
template <>
inline const std::string& TPUCompileOptions_Precision_Name(TPUCompileOptions_Precision value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TPUCompileOptions_Precision_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TPUCompileOptions_Precision_Parse(absl::string_view name, TPUCompileOptions_Precision* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPUCompileOptions_Precision>(
      TPUCompileOptions_Precision_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT TPUCompileOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tpu.TPUCompileOptions) */ {
 public:
  inline TPUCompileOptions() : TPUCompileOptions(nullptr) {}
  ~TPUCompileOptions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TPUCompileOptions(
      ::google::protobuf::internal::ConstantInitialized);

  inline TPUCompileOptions(const TPUCompileOptions& from) : TPUCompileOptions(nullptr, from) {}
  inline TPUCompileOptions(TPUCompileOptions&& from) noexcept
      : TPUCompileOptions(nullptr, std::move(from)) {}
  inline TPUCompileOptions& operator=(const TPUCompileOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPUCompileOptions& operator=(TPUCompileOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPUCompileOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPUCompileOptions* internal_default_instance() {
    return reinterpret_cast<const TPUCompileOptions*>(
        &_TPUCompileOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TPUCompileOptions& a, TPUCompileOptions& b) { a.Swap(&b); }
  inline void Swap(TPUCompileOptions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPUCompileOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPUCompileOptions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TPUCompileOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TPUCompileOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TPUCompileOptions& from) { TPUCompileOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TPUCompileOptions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tpu.TPUCompileOptions"; }

 protected:
  explicit TPUCompileOptions(::google::protobuf::Arena* arena);
  TPUCompileOptions(::google::protobuf::Arena* arena, const TPUCompileOptions& from);
  TPUCompileOptions(::google::protobuf::Arena* arena, TPUCompileOptions&& from) noexcept
      : TPUCompileOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Precision = TPUCompileOptions_Precision;
  static constexpr Precision DEFAULT = TPUCompileOptions_Precision_DEFAULT;
  static constexpr Precision BFLOAT16 = TPUCompileOptions_Precision_BFLOAT16;
  static constexpr Precision FLOAT32 = TPUCompileOptions_Precision_FLOAT32;
  static constexpr Precision TENSOR_FLOAT32 = TPUCompileOptions_Precision_TENSOR_FLOAT32;
  static inline bool Precision_IsValid(int value) {
    return TPUCompileOptions_Precision_IsValid(value);
  }
  static constexpr Precision Precision_MIN = TPUCompileOptions_Precision_Precision_MIN;
  static constexpr Precision Precision_MAX = TPUCompileOptions_Precision_Precision_MAX;
  static constexpr int Precision_ARRAYSIZE = TPUCompileOptions_Precision_Precision_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Precision_descriptor() {
    return TPUCompileOptions_Precision_descriptor();
  }
  template <typename T>
  static inline const std::string& Precision_Name(T value) {
    return TPUCompileOptions_Precision_Name(value);
  }
  static inline bool Precision_Parse(absl::string_view name, Precision* value) {
    return TPUCompileOptions_Precision_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kMatrixUnitOperandPrecisionFieldNumber = 1,
  };
  // .tensorflow.tpu.TPUCompileOptions.Precision matrix_unit_operand_precision = 1;
  void clear_matrix_unit_operand_precision() ;
  ::tensorflow::tpu::TPUCompileOptions_Precision matrix_unit_operand_precision() const;
  void set_matrix_unit_operand_precision(::tensorflow::tpu::TPUCompileOptions_Precision value);

  private:
  ::tensorflow::tpu::TPUCompileOptions_Precision _internal_matrix_unit_operand_precision() const;
  void _internal_set_matrix_unit_operand_precision(::tensorflow::tpu::TPUCompileOptions_Precision value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUCompileOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TPUCompileOptions& from_msg);
    int matrix_unit_operand_precision_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TPUCompileMetadataProto_Retval final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tpu.TPUCompileMetadataProto.Retval) */ {
 public:
  inline TPUCompileMetadataProto_Retval() : TPUCompileMetadataProto_Retval(nullptr) {}
  ~TPUCompileMetadataProto_Retval() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TPUCompileMetadataProto_Retval(
      ::google::protobuf::internal::ConstantInitialized);

  inline TPUCompileMetadataProto_Retval(const TPUCompileMetadataProto_Retval& from) : TPUCompileMetadataProto_Retval(nullptr, from) {}
  inline TPUCompileMetadataProto_Retval(TPUCompileMetadataProto_Retval&& from) noexcept
      : TPUCompileMetadataProto_Retval(nullptr, std::move(from)) {}
  inline TPUCompileMetadataProto_Retval& operator=(const TPUCompileMetadataProto_Retval& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPUCompileMetadataProto_Retval& operator=(TPUCompileMetadataProto_Retval&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPUCompileMetadataProto_Retval& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPUCompileMetadataProto_Retval* internal_default_instance() {
    return reinterpret_cast<const TPUCompileMetadataProto_Retval*>(
        &_TPUCompileMetadataProto_Retval_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TPUCompileMetadataProto_Retval& a, TPUCompileMetadataProto_Retval& b) { a.Swap(&b); }
  inline void Swap(TPUCompileMetadataProto_Retval* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPUCompileMetadataProto_Retval* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPUCompileMetadataProto_Retval* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TPUCompileMetadataProto_Retval>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TPUCompileMetadataProto_Retval& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TPUCompileMetadataProto_Retval& from) { TPUCompileMetadataProto_Retval::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TPUCompileMetadataProto_Retval* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tpu.TPUCompileMetadataProto.Retval"; }

 protected:
  explicit TPUCompileMetadataProto_Retval(::google::protobuf::Arena* arena);
  TPUCompileMetadataProto_Retval(::google::protobuf::Arena* arena, const TPUCompileMetadataProto_Retval& from);
  TPUCompileMetadataProto_Retval(::google::protobuf::Arena* arena, TPUCompileMetadataProto_Retval&& from) noexcept
      : TPUCompileMetadataProto_Retval(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShardingFieldNumber = 1,
  };
  // .xla.OpSharding sharding = 1;
  bool has_sharding() const;
  void clear_sharding() ;
  const ::xla::OpSharding& sharding() const;
  PROTOBUF_NODISCARD ::xla::OpSharding* release_sharding();
  ::xla::OpSharding* mutable_sharding();
  void set_allocated_sharding(::xla::OpSharding* value);
  void unsafe_arena_set_allocated_sharding(::xla::OpSharding* value);
  ::xla::OpSharding* unsafe_arena_release_sharding();

  private:
  const ::xla::OpSharding& _internal_sharding() const;
  ::xla::OpSharding* _internal_mutable_sharding();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUCompileMetadataProto.Retval)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TPUCompileMetadataProto_Retval& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::xla::OpSharding* sharding_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TPUCompileMetadataProto_Arg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tpu.TPUCompileMetadataProto.Arg) */ {
 public:
  inline TPUCompileMetadataProto_Arg() : TPUCompileMetadataProto_Arg(nullptr) {}
  ~TPUCompileMetadataProto_Arg() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TPUCompileMetadataProto_Arg(
      ::google::protobuf::internal::ConstantInitialized);

  inline TPUCompileMetadataProto_Arg(const TPUCompileMetadataProto_Arg& from) : TPUCompileMetadataProto_Arg(nullptr, from) {}
  inline TPUCompileMetadataProto_Arg(TPUCompileMetadataProto_Arg&& from) noexcept
      : TPUCompileMetadataProto_Arg(nullptr, std::move(from)) {}
  inline TPUCompileMetadataProto_Arg& operator=(const TPUCompileMetadataProto_Arg& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPUCompileMetadataProto_Arg& operator=(TPUCompileMetadataProto_Arg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPUCompileMetadataProto_Arg& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPUCompileMetadataProto_Arg* internal_default_instance() {
    return reinterpret_cast<const TPUCompileMetadataProto_Arg*>(
        &_TPUCompileMetadataProto_Arg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TPUCompileMetadataProto_Arg& a, TPUCompileMetadataProto_Arg& b) { a.Swap(&b); }
  inline void Swap(TPUCompileMetadataProto_Arg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPUCompileMetadataProto_Arg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPUCompileMetadataProto_Arg* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TPUCompileMetadataProto_Arg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TPUCompileMetadataProto_Arg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TPUCompileMetadataProto_Arg& from) { TPUCompileMetadataProto_Arg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TPUCompileMetadataProto_Arg* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tpu.TPUCompileMetadataProto.Arg"; }

 protected:
  explicit TPUCompileMetadataProto_Arg(::google::protobuf::Arena* arena);
  TPUCompileMetadataProto_Arg(::google::protobuf::Arena* arena, const TPUCompileMetadataProto_Arg& from);
  TPUCompileMetadataProto_Arg(::google::protobuf::Arena* arena, TPUCompileMetadataProto_Arg&& from) noexcept
      : TPUCompileMetadataProto_Arg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Kind = TPUCompileMetadataProto_Arg_Kind;
  static constexpr Kind INVALID = TPUCompileMetadataProto_Arg_Kind_INVALID;
  static constexpr Kind PARAMETER = TPUCompileMetadataProto_Arg_Kind_PARAMETER;
  static constexpr Kind VARIABLE = TPUCompileMetadataProto_Arg_Kind_VARIABLE;
  static constexpr Kind GUARANTEED_CONSTANT = TPUCompileMetadataProto_Arg_Kind_GUARANTEED_CONSTANT;
  static inline bool Kind_IsValid(int value) {
    return TPUCompileMetadataProto_Arg_Kind_IsValid(value);
  }
  static constexpr Kind Kind_MIN = TPUCompileMetadataProto_Arg_Kind_Kind_MIN;
  static constexpr Kind Kind_MAX = TPUCompileMetadataProto_Arg_Kind_Kind_MAX;
  static constexpr int Kind_ARRAYSIZE = TPUCompileMetadataProto_Arg_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Kind_descriptor() {
    return TPUCompileMetadataProto_Arg_Kind_descriptor();
  }
  template <typename T>
  static inline const std::string& Kind_Name(T value) {
    return TPUCompileMetadataProto_Arg_Kind_Name(value);
  }
  static inline bool Kind_Parse(absl::string_view name, Kind* value) {
    return TPUCompileMetadataProto_Arg_Kind_Parse(name, value);
  }
  using EnableXlaSharding = TPUCompileMetadataProto_Arg_EnableXlaSharding;
  static constexpr EnableXlaSharding DISALLOWED = TPUCompileMetadataProto_Arg_EnableXlaSharding_DISALLOWED;
  static constexpr EnableXlaSharding TENTATIVE = TPUCompileMetadataProto_Arg_EnableXlaSharding_TENTATIVE;
  static constexpr EnableXlaSharding ALLOWED = TPUCompileMetadataProto_Arg_EnableXlaSharding_ALLOWED;
  static inline bool EnableXlaSharding_IsValid(int value) {
    return TPUCompileMetadataProto_Arg_EnableXlaSharding_IsValid(value);
  }
  static constexpr EnableXlaSharding EnableXlaSharding_MIN = TPUCompileMetadataProto_Arg_EnableXlaSharding_EnableXlaSharding_MIN;
  static constexpr EnableXlaSharding EnableXlaSharding_MAX = TPUCompileMetadataProto_Arg_EnableXlaSharding_EnableXlaSharding_MAX;
  static constexpr int EnableXlaSharding_ARRAYSIZE = TPUCompileMetadataProto_Arg_EnableXlaSharding_EnableXlaSharding_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* EnableXlaSharding_descriptor() {
    return TPUCompileMetadataProto_Arg_EnableXlaSharding_descriptor();
  }
  template <typename T>
  static inline const std::string& EnableXlaSharding_Name(T value) {
    return TPUCompileMetadataProto_Arg_EnableXlaSharding_Name(value);
  }
  static inline bool EnableXlaSharding_Parse(absl::string_view name, EnableXlaSharding* value) {
    return TPUCompileMetadataProto_Arg_EnableXlaSharding_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kIsBoundedDynamicDimFieldNumber = 12,
    kNameFieldNumber = 10,
    kShapeFieldNumber = 2,
    kShardingFieldNumber = 4,
    kDtypeFieldNumber = 1,
    kKindFieldNumber = 3,
    kEnableXlaShardingFieldNumber = 6,
    kRetvalIndexForShardingFieldNumber = 8,
    kIsSameDataAcrossReplicasFieldNumber = 5,
    kFastMemFieldNumber = 7,
    kUnrestrictedLayoutFieldNumber = 9,
    kRequiresXlaBroadcastFieldNumber = 11,
  };
  // repeated bool is_bounded_dynamic_dim = 12;
  int is_bounded_dynamic_dim_size() const;
  private:
  int _internal_is_bounded_dynamic_dim_size() const;

  public:
  void clear_is_bounded_dynamic_dim() ;
  bool is_bounded_dynamic_dim(int index) const;
  void set_is_bounded_dynamic_dim(int index, bool value);
  void add_is_bounded_dynamic_dim(bool value);
  const ::google::protobuf::RepeatedField<bool>& is_bounded_dynamic_dim() const;
  ::google::protobuf::RepeatedField<bool>* mutable_is_bounded_dynamic_dim();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_is_bounded_dynamic_dim() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_is_bounded_dynamic_dim();

  public:
  // string name = 10;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .tensorflow.TensorShapeProto shape = 2;
  bool has_shape() const;
  void clear_shape() ;
  const ::tensorflow::TensorShapeProto& shape() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorShapeProto* release_shape();
  ::tensorflow::TensorShapeProto* mutable_shape();
  void set_allocated_shape(::tensorflow::TensorShapeProto* value);
  void unsafe_arena_set_allocated_shape(::tensorflow::TensorShapeProto* value);
  ::tensorflow::TensorShapeProto* unsafe_arena_release_shape();

  private:
  const ::tensorflow::TensorShapeProto& _internal_shape() const;
  ::tensorflow::TensorShapeProto* _internal_mutable_shape();

  public:
  // .xla.OpSharding sharding = 4;
  bool has_sharding() const;
  void clear_sharding() ;
  const ::xla::OpSharding& sharding() const;
  PROTOBUF_NODISCARD ::xla::OpSharding* release_sharding();
  ::xla::OpSharding* mutable_sharding();
  void set_allocated_sharding(::xla::OpSharding* value);
  void unsafe_arena_set_allocated_sharding(::xla::OpSharding* value);
  ::xla::OpSharding* unsafe_arena_release_sharding();

  private:
  const ::xla::OpSharding& _internal_sharding() const;
  ::xla::OpSharding* _internal_mutable_sharding();

  public:
  // .tensorflow.DataType dtype = 1;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // .tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;
  void clear_kind() ;
  ::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind kind() const;
  void set_kind(::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind value);

  private:
  ::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind _internal_kind() const;
  void _internal_set_kind(::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind value);

  public:
  // .tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;
  void clear_enable_xla_sharding() ;
  ::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding enable_xla_sharding() const;
  void set_enable_xla_sharding(::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding value);

  private:
  ::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding _internal_enable_xla_sharding() const;
  void _internal_set_enable_xla_sharding(::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding value);

  public:
  // int32 retval_index_for_sharding = 8;
  void clear_retval_index_for_sharding() ;
  ::int32_t retval_index_for_sharding() const;
  void set_retval_index_for_sharding(::int32_t value);

  private:
  ::int32_t _internal_retval_index_for_sharding() const;
  void _internal_set_retval_index_for_sharding(::int32_t value);

  public:
  // bool is_same_data_across_replicas = 5;
  void clear_is_same_data_across_replicas() ;
  bool is_same_data_across_replicas() const;
  void set_is_same_data_across_replicas(bool value);

  private:
  bool _internal_is_same_data_across_replicas() const;
  void _internal_set_is_same_data_across_replicas(bool value);

  public:
  // bool fast_mem = 7;
  void clear_fast_mem() ;
  bool fast_mem() const;
  void set_fast_mem(bool value);

  private:
  bool _internal_fast_mem() const;
  void _internal_set_fast_mem(bool value);

  public:
  // bool unrestricted_layout = 9;
  void clear_unrestricted_layout() ;
  bool unrestricted_layout() const;
  void set_unrestricted_layout(bool value);

  private:
  bool _internal_unrestricted_layout() const;
  void _internal_set_unrestricted_layout(bool value);

  public:
  // bool requires_xla_broadcast = 11;
  void clear_requires_xla_broadcast() ;
  bool requires_xla_broadcast() const;
  void set_requires_xla_broadcast(bool value);

  private:
  bool _internal_requires_xla_broadcast() const;
  void _internal_set_requires_xla_broadcast(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUCompileMetadataProto.Arg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 2,
      63, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TPUCompileMetadataProto_Arg& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<bool> is_bounded_dynamic_dim_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::tensorflow::TensorShapeProto* shape_;
    ::xla::OpSharding* sharding_;
    int dtype_;
    int kind_;
    int enable_xla_sharding_;
    ::int32_t retval_index_for_sharding_;
    bool is_same_data_across_replicas_;
    bool fast_mem_;
    bool unrestricted_layout_;
    bool requires_xla_broadcast_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TPUCompileMetadataProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tpu.TPUCompileMetadataProto) */ {
 public:
  inline TPUCompileMetadataProto() : TPUCompileMetadataProto(nullptr) {}
  ~TPUCompileMetadataProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TPUCompileMetadataProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline TPUCompileMetadataProto(const TPUCompileMetadataProto& from) : TPUCompileMetadataProto(nullptr, from) {}
  inline TPUCompileMetadataProto(TPUCompileMetadataProto&& from) noexcept
      : TPUCompileMetadataProto(nullptr, std::move(from)) {}
  inline TPUCompileMetadataProto& operator=(const TPUCompileMetadataProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPUCompileMetadataProto& operator=(TPUCompileMetadataProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPUCompileMetadataProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPUCompileMetadataProto* internal_default_instance() {
    return reinterpret_cast<const TPUCompileMetadataProto*>(
        &_TPUCompileMetadataProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TPUCompileMetadataProto& a, TPUCompileMetadataProto& b) { a.Swap(&b); }
  inline void Swap(TPUCompileMetadataProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPUCompileMetadataProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPUCompileMetadataProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TPUCompileMetadataProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TPUCompileMetadataProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TPUCompileMetadataProto& from) { TPUCompileMetadataProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TPUCompileMetadataProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tpu.TPUCompileMetadataProto"; }

 protected:
  explicit TPUCompileMetadataProto(::google::protobuf::Arena* arena);
  TPUCompileMetadataProto(::google::protobuf::Arena* arena, const TPUCompileMetadataProto& from);
  TPUCompileMetadataProto(::google::protobuf::Arena* arena, TPUCompileMetadataProto&& from) noexcept
      : TPUCompileMetadataProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Arg = TPUCompileMetadataProto_Arg;
  using Retval = TPUCompileMetadataProto_Retval;

  // accessors -------------------------------------------------------
  enum : int {
    kArgsFieldNumber = 1,
    kRetvalsFieldNumber = 2,
    kPaddingMapsFieldNumber = 11,
    kAutoSpmdMeshShapeFieldNumber = 19,
    kAutoSpmdMeshIdsFieldNumber = 20,
    kSessionHandleFieldNumber = 9,
    kGuaranteedConstFingerprintFieldNumber = 10,
    kModuleNameFieldNumber = 22,
    kDeviceAssignmentFieldNumber = 8,
    kCompileOptionsFieldNumber = 21,
    kNumReplicasFieldNumber = 3,
    kNumCoresPerReplicaFieldNumber = 4,
    kFunctionLibraryFingerprintFieldNumber = 6,
    kXlaFusionAutotunerThreshFieldNumber = 13,
    kStepMarkerLocationFieldNumber = 12,
    kEnableAutomaticModelParallelismFieldNumber = 14,
    kUseSpmdForXlaPartitioningFieldNumber = 15,
    kUseShardyPartitionerFieldNumber = 23,
    kUseAutoSpmdForXlaPartitioningFieldNumber = 18,
    kMlirFingerprintFieldNumber = 17,
  };
  // repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;
  int args_size() const;
  private:
  int _internal_args_size() const;

  public:
  void clear_args() ;
  ::tensorflow::tpu::TPUCompileMetadataProto_Arg* mutable_args(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Arg>* mutable_args();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Arg>& _internal_args() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Arg>* _internal_mutable_args();
  public:
  const ::tensorflow::tpu::TPUCompileMetadataProto_Arg& args(int index) const;
  ::tensorflow::tpu::TPUCompileMetadataProto_Arg* add_args();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Arg>& args() const;
  // repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;
  int retvals_size() const;
  private:
  int _internal_retvals_size() const;

  public:
  void clear_retvals() ;
  ::tensorflow::tpu::TPUCompileMetadataProto_Retval* mutable_retvals(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Retval>* mutable_retvals();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Retval>& _internal_retvals() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Retval>* _internal_mutable_retvals();
  public:
  const ::tensorflow::tpu::TPUCompileMetadataProto_Retval& retvals(int index) const;
  ::tensorflow::tpu::TPUCompileMetadataProto_Retval* add_retvals();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Retval>& retvals() const;
  // repeated .tensorflow.tpu.PaddingMap padding_maps = 11;
  int padding_maps_size() const;
  private:
  int _internal_padding_maps_size() const;

  public:
  void clear_padding_maps() ;
  ::tensorflow::tpu::PaddingMap* mutable_padding_maps(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::PaddingMap>* mutable_padding_maps();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::PaddingMap>& _internal_padding_maps() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::PaddingMap>* _internal_mutable_padding_maps();
  public:
  const ::tensorflow::tpu::PaddingMap& padding_maps(int index) const;
  ::tensorflow::tpu::PaddingMap* add_padding_maps();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::PaddingMap>& padding_maps() const;
  // repeated int64 auto_spmd_mesh_shape = 19;
  int auto_spmd_mesh_shape_size() const;
  private:
  int _internal_auto_spmd_mesh_shape_size() const;

  public:
  void clear_auto_spmd_mesh_shape() ;
  ::int64_t auto_spmd_mesh_shape(int index) const;
  void set_auto_spmd_mesh_shape(int index, ::int64_t value);
  void add_auto_spmd_mesh_shape(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& auto_spmd_mesh_shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_auto_spmd_mesh_shape();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_auto_spmd_mesh_shape() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_auto_spmd_mesh_shape();

  public:
  // repeated int64 auto_spmd_mesh_ids = 20;
  int auto_spmd_mesh_ids_size() const;
  private:
  int _internal_auto_spmd_mesh_ids_size() const;

  public:
  void clear_auto_spmd_mesh_ids() ;
  ::int64_t auto_spmd_mesh_ids(int index) const;
  void set_auto_spmd_mesh_ids(int index, ::int64_t value);
  void add_auto_spmd_mesh_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& auto_spmd_mesh_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_auto_spmd_mesh_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_auto_spmd_mesh_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_auto_spmd_mesh_ids();

  public:
  // string session_handle = 9;
  void clear_session_handle() ;
  const std::string& session_handle() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_handle(Arg_&& arg, Args_... args);
  std::string* mutable_session_handle();
  PROTOBUF_NODISCARD std::string* release_session_handle();
  void set_allocated_session_handle(std::string* value);

  private:
  const std::string& _internal_session_handle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_handle(
      const std::string& value);
  std::string* _internal_mutable_session_handle();

  public:
  // string guaranteed_const_fingerprint = 10;
  void clear_guaranteed_const_fingerprint() ;
  const std::string& guaranteed_const_fingerprint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_guaranteed_const_fingerprint(Arg_&& arg, Args_... args);
  std::string* mutable_guaranteed_const_fingerprint();
  PROTOBUF_NODISCARD std::string* release_guaranteed_const_fingerprint();
  void set_allocated_guaranteed_const_fingerprint(std::string* value);

  private:
  const std::string& _internal_guaranteed_const_fingerprint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_guaranteed_const_fingerprint(
      const std::string& value);
  std::string* _internal_mutable_guaranteed_const_fingerprint();

  public:
  // string module_name = 22;
  void clear_module_name() ;
  const std::string& module_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_module_name(Arg_&& arg, Args_... args);
  std::string* mutable_module_name();
  PROTOBUF_NODISCARD std::string* release_module_name();
  void set_allocated_module_name(std::string* value);

  private:
  const std::string& _internal_module_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_module_name(
      const std::string& value);
  std::string* _internal_mutable_module_name();

  public:
  // .xla.DeviceAssignmentProto device_assignment = 8;
  bool has_device_assignment() const;
  void clear_device_assignment() ;
  const ::xla::DeviceAssignmentProto& device_assignment() const;
  PROTOBUF_NODISCARD ::xla::DeviceAssignmentProto* release_device_assignment();
  ::xla::DeviceAssignmentProto* mutable_device_assignment();
  void set_allocated_device_assignment(::xla::DeviceAssignmentProto* value);
  void unsafe_arena_set_allocated_device_assignment(::xla::DeviceAssignmentProto* value);
  ::xla::DeviceAssignmentProto* unsafe_arena_release_device_assignment();

  private:
  const ::xla::DeviceAssignmentProto& _internal_device_assignment() const;
  ::xla::DeviceAssignmentProto* _internal_mutable_device_assignment();

  public:
  // .tensorflow.tpu.TPUCompileOptions compile_options = 21;
  bool has_compile_options() const;
  void clear_compile_options() ;
  const ::tensorflow::tpu::TPUCompileOptions& compile_options() const;
  PROTOBUF_NODISCARD ::tensorflow::tpu::TPUCompileOptions* release_compile_options();
  ::tensorflow::tpu::TPUCompileOptions* mutable_compile_options();
  void set_allocated_compile_options(::tensorflow::tpu::TPUCompileOptions* value);
  void unsafe_arena_set_allocated_compile_options(::tensorflow::tpu::TPUCompileOptions* value);
  ::tensorflow::tpu::TPUCompileOptions* unsafe_arena_release_compile_options();

  private:
  const ::tensorflow::tpu::TPUCompileOptions& _internal_compile_options() const;
  ::tensorflow::tpu::TPUCompileOptions* _internal_mutable_compile_options();

  public:
  // int32 num_replicas = 3;
  void clear_num_replicas() ;
  ::int32_t num_replicas() const;
  void set_num_replicas(::int32_t value);

  private:
  ::int32_t _internal_num_replicas() const;
  void _internal_set_num_replicas(::int32_t value);

  public:
  // int32 num_cores_per_replica = 4;
  void clear_num_cores_per_replica() ;
  ::int32_t num_cores_per_replica() const;
  void set_num_cores_per_replica(::int32_t value);

  private:
  ::int32_t _internal_num_cores_per_replica() const;
  void _internal_set_num_cores_per_replica(::int32_t value);

  public:
  // uint64 function_library_fingerprint = 6;
  void clear_function_library_fingerprint() ;
  ::uint64_t function_library_fingerprint() const;
  void set_function_library_fingerprint(::uint64_t value);

  private:
  ::uint64_t _internal_function_library_fingerprint() const;
  void _internal_set_function_library_fingerprint(::uint64_t value);

  public:
  // int64 xla_fusion_autotuner_thresh = 13;
  void clear_xla_fusion_autotuner_thresh() ;
  ::int64_t xla_fusion_autotuner_thresh() const;
  void set_xla_fusion_autotuner_thresh(::int64_t value);

  private:
  ::int64_t _internal_xla_fusion_autotuner_thresh() const;
  void _internal_set_xla_fusion_autotuner_thresh(::int64_t value);

  public:
  // .xla.DebugOptions.StepMarkerLocation step_marker_location = 12;
  void clear_step_marker_location() ;
  ::xla::DebugOptions_StepMarkerLocation step_marker_location() const;
  void set_step_marker_location(::xla::DebugOptions_StepMarkerLocation value);

  private:
  ::xla::DebugOptions_StepMarkerLocation _internal_step_marker_location() const;
  void _internal_set_step_marker_location(::xla::DebugOptions_StepMarkerLocation value);

  public:
  // bool enable_automatic_model_parallelism = 14;
  void clear_enable_automatic_model_parallelism() ;
  bool enable_automatic_model_parallelism() const;
  void set_enable_automatic_model_parallelism(bool value);

  private:
  bool _internal_enable_automatic_model_parallelism() const;
  void _internal_set_enable_automatic_model_parallelism(bool value);

  public:
  // bool use_spmd_for_xla_partitioning = 15;
  void clear_use_spmd_for_xla_partitioning() ;
  bool use_spmd_for_xla_partitioning() const;
  void set_use_spmd_for_xla_partitioning(bool value);

  private:
  bool _internal_use_spmd_for_xla_partitioning() const;
  void _internal_set_use_spmd_for_xla_partitioning(bool value);

  public:
  // bool use_shardy_partitioner = 23;
  void clear_use_shardy_partitioner() ;
  bool use_shardy_partitioner() const;
  void set_use_shardy_partitioner(bool value);

  private:
  bool _internal_use_shardy_partitioner() const;
  void _internal_set_use_shardy_partitioner(bool value);

  public:
  // bool use_auto_spmd_for_xla_partitioning = 18;
  void clear_use_auto_spmd_for_xla_partitioning() ;
  bool use_auto_spmd_for_xla_partitioning() const;
  void set_use_auto_spmd_for_xla_partitioning(bool value);

  private:
  bool _internal_use_auto_spmd_for_xla_partitioning() const;
  void _internal_set_use_auto_spmd_for_xla_partitioning(bool value);

  public:
  // uint64 mlir_fingerprint = 17;
  void clear_mlir_fingerprint() ;
  ::uint64_t mlir_fingerprint() const;
  void set_mlir_fingerprint(::uint64_t value);

  private:
  ::uint64_t _internal_mlir_fingerprint() const;
  void _internal_set_mlir_fingerprint(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUCompileMetadataProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 20, 5,
      116, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TPUCompileMetadataProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::tpu::TPUCompileMetadataProto_Arg > args_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::tpu::TPUCompileMetadataProto_Retval > retvals_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::tpu::PaddingMap > padding_maps_;
    ::google::protobuf::RepeatedField<::int64_t> auto_spmd_mesh_shape_;
    mutable ::google::protobuf::internal::CachedSize _auto_spmd_mesh_shape_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> auto_spmd_mesh_ids_;
    mutable ::google::protobuf::internal::CachedSize _auto_spmd_mesh_ids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr session_handle_;
    ::google::protobuf::internal::ArenaStringPtr guaranteed_const_fingerprint_;
    ::google::protobuf::internal::ArenaStringPtr module_name_;
    ::xla::DeviceAssignmentProto* device_assignment_;
    ::tensorflow::tpu::TPUCompileOptions* compile_options_;
    ::int32_t num_replicas_;
    ::int32_t num_cores_per_replica_;
    ::uint64_t function_library_fingerprint_;
    ::int64_t xla_fusion_autotuner_thresh_;
    int step_marker_location_;
    bool enable_automatic_model_parallelism_;
    bool use_spmd_for_xla_partitioning_;
    bool use_shardy_partitioner_;
    bool use_auto_spmd_for_xla_partitioning_;
    ::uint64_t mlir_fingerprint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TPUCompileMetadataProto_Arg

// .tensorflow.DataType dtype = 1;
inline void TPUCompileMetadataProto_Arg::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
}
inline ::tensorflow::DataType TPUCompileMetadataProto_Arg::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.dtype)
  return _internal_dtype();
}
inline void TPUCompileMetadataProto_Arg::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.dtype)
}
inline ::tensorflow::DataType TPUCompileMetadataProto_Arg::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void TPUCompileMetadataProto_Arg::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// .tensorflow.TensorShapeProto shape = 2;
inline bool TPUCompileMetadataProto_Arg::has_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shape_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorShapeProto& TPUCompileMetadataProto_Arg::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorShapeProto* p = _impl_.shape_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorShapeProto&>(::tensorflow::_TensorShapeProto_default_instance_);
}
inline const ::tensorflow::TensorShapeProto& TPUCompileMetadataProto_Arg::shape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.shape)
  return _internal_shape();
}
inline void TPUCompileMetadataProto_Arg::unsafe_arena_set_allocated_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }
  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.Arg.shape)
}
inline ::tensorflow::TensorShapeProto* TPUCompileMetadataProto_Arg::release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* released = _impl_.shape_;
  _impl_.shape_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TensorShapeProto* TPUCompileMetadataProto_Arg::unsafe_arena_release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUCompileMetadataProto.Arg.shape)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* temp = _impl_.shape_;
  _impl_.shape_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorShapeProto* TPUCompileMetadataProto_Arg::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorShapeProto>(GetArena());
    _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(p);
  }
  return _impl_.shape_;
}
inline ::tensorflow::TensorShapeProto* TPUCompileMetadataProto_Arg::mutable_shape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TensorShapeProto* _msg = _internal_mutable_shape();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.Arg.shape)
  return _msg;
}
inline void TPUCompileMetadataProto_Arg::set_allocated_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.Arg.shape)
}

// .tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;
inline void TPUCompileMetadataProto_Arg::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
}
inline ::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind TPUCompileMetadataProto_Arg::kind() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.kind)
  return _internal_kind();
}
inline void TPUCompileMetadataProto_Arg::set_kind(::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.kind)
}
inline ::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind TPUCompileMetadataProto_Arg::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind>(_impl_.kind_);
}
inline void TPUCompileMetadataProto_Arg::_internal_set_kind(::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// .xla.OpSharding sharding = 4;
inline bool TPUCompileMetadataProto_Arg::has_sharding() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sharding_ != nullptr);
  return value;
}
inline const ::xla::OpSharding& TPUCompileMetadataProto_Arg::_internal_sharding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::OpSharding* p = _impl_.sharding_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::OpSharding&>(::xla::_OpSharding_default_instance_);
}
inline const ::xla::OpSharding& TPUCompileMetadataProto_Arg::sharding() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.sharding)
  return _internal_sharding();
}
inline void TPUCompileMetadataProto_Arg::unsafe_arena_set_allocated_sharding(::xla::OpSharding* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sharding_);
  }
  _impl_.sharding_ = reinterpret_cast<::xla::OpSharding*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.Arg.sharding)
}
inline ::xla::OpSharding* TPUCompileMetadataProto_Arg::release_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::OpSharding* released = _impl_.sharding_;
  _impl_.sharding_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xla::OpSharding* TPUCompileMetadataProto_Arg::unsafe_arena_release_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUCompileMetadataProto.Arg.sharding)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::OpSharding* temp = _impl_.sharding_;
  _impl_.sharding_ = nullptr;
  return temp;
}
inline ::xla::OpSharding* TPUCompileMetadataProto_Arg::_internal_mutable_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sharding_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::OpSharding>(GetArena());
    _impl_.sharding_ = reinterpret_cast<::xla::OpSharding*>(p);
  }
  return _impl_.sharding_;
}
inline ::xla::OpSharding* TPUCompileMetadataProto_Arg::mutable_sharding() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::xla::OpSharding* _msg = _internal_mutable_sharding();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.Arg.sharding)
  return _msg;
}
inline void TPUCompileMetadataProto_Arg::set_allocated_sharding(::xla::OpSharding* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sharding_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.sharding_ = reinterpret_cast<::xla::OpSharding*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.Arg.sharding)
}

// bool is_same_data_across_replicas = 5;
inline void TPUCompileMetadataProto_Arg::clear_is_same_data_across_replicas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_same_data_across_replicas_ = false;
}
inline bool TPUCompileMetadataProto_Arg::is_same_data_across_replicas() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.is_same_data_across_replicas)
  return _internal_is_same_data_across_replicas();
}
inline void TPUCompileMetadataProto_Arg::set_is_same_data_across_replicas(bool value) {
  _internal_set_is_same_data_across_replicas(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.is_same_data_across_replicas)
}
inline bool TPUCompileMetadataProto_Arg::_internal_is_same_data_across_replicas() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_same_data_across_replicas_;
}
inline void TPUCompileMetadataProto_Arg::_internal_set_is_same_data_across_replicas(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_same_data_across_replicas_ = value;
}

// .tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;
inline void TPUCompileMetadataProto_Arg::clear_enable_xla_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_xla_sharding_ = 0;
}
inline ::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding TPUCompileMetadataProto_Arg::enable_xla_sharding() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.enable_xla_sharding)
  return _internal_enable_xla_sharding();
}
inline void TPUCompileMetadataProto_Arg::set_enable_xla_sharding(::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding value) {
  _internal_set_enable_xla_sharding(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.enable_xla_sharding)
}
inline ::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding TPUCompileMetadataProto_Arg::_internal_enable_xla_sharding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding>(_impl_.enable_xla_sharding_);
}
inline void TPUCompileMetadataProto_Arg::_internal_set_enable_xla_sharding(::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_xla_sharding_ = value;
}

// int32 retval_index_for_sharding = 8;
inline void TPUCompileMetadataProto_Arg::clear_retval_index_for_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retval_index_for_sharding_ = 0;
}
inline ::int32_t TPUCompileMetadataProto_Arg::retval_index_for_sharding() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.retval_index_for_sharding)
  return _internal_retval_index_for_sharding();
}
inline void TPUCompileMetadataProto_Arg::set_retval_index_for_sharding(::int32_t value) {
  _internal_set_retval_index_for_sharding(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.retval_index_for_sharding)
}
inline ::int32_t TPUCompileMetadataProto_Arg::_internal_retval_index_for_sharding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.retval_index_for_sharding_;
}
inline void TPUCompileMetadataProto_Arg::_internal_set_retval_index_for_sharding(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retval_index_for_sharding_ = value;
}

// bool fast_mem = 7;
inline void TPUCompileMetadataProto_Arg::clear_fast_mem() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_mem_ = false;
}
inline bool TPUCompileMetadataProto_Arg::fast_mem() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.fast_mem)
  return _internal_fast_mem();
}
inline void TPUCompileMetadataProto_Arg::set_fast_mem(bool value) {
  _internal_set_fast_mem(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.fast_mem)
}
inline bool TPUCompileMetadataProto_Arg::_internal_fast_mem() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fast_mem_;
}
inline void TPUCompileMetadataProto_Arg::_internal_set_fast_mem(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_mem_ = value;
}

// bool unrestricted_layout = 9;
inline void TPUCompileMetadataProto_Arg::clear_unrestricted_layout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unrestricted_layout_ = false;
}
inline bool TPUCompileMetadataProto_Arg::unrestricted_layout() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.unrestricted_layout)
  return _internal_unrestricted_layout();
}
inline void TPUCompileMetadataProto_Arg::set_unrestricted_layout(bool value) {
  _internal_set_unrestricted_layout(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.unrestricted_layout)
}
inline bool TPUCompileMetadataProto_Arg::_internal_unrestricted_layout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unrestricted_layout_;
}
inline void TPUCompileMetadataProto_Arg::_internal_set_unrestricted_layout(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unrestricted_layout_ = value;
}

// string name = 10;
inline void TPUCompileMetadataProto_Arg::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& TPUCompileMetadataProto_Arg::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TPUCompileMetadataProto_Arg::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.name)
}
inline std::string* TPUCompileMetadataProto_Arg::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.Arg.name)
  return _s;
}
inline const std::string& TPUCompileMetadataProto_Arg::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void TPUCompileMetadataProto_Arg::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* TPUCompileMetadataProto_Arg::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* TPUCompileMetadataProto_Arg::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUCompileMetadataProto.Arg.name)
  return _impl_.name_.Release();
}
inline void TPUCompileMetadataProto_Arg::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.Arg.name)
}

// bool requires_xla_broadcast = 11;
inline void TPUCompileMetadataProto_Arg::clear_requires_xla_broadcast() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requires_xla_broadcast_ = false;
}
inline bool TPUCompileMetadataProto_Arg::requires_xla_broadcast() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.requires_xla_broadcast)
  return _internal_requires_xla_broadcast();
}
inline void TPUCompileMetadataProto_Arg::set_requires_xla_broadcast(bool value) {
  _internal_set_requires_xla_broadcast(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.requires_xla_broadcast)
}
inline bool TPUCompileMetadataProto_Arg::_internal_requires_xla_broadcast() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requires_xla_broadcast_;
}
inline void TPUCompileMetadataProto_Arg::_internal_set_requires_xla_broadcast(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requires_xla_broadcast_ = value;
}

// repeated bool is_bounded_dynamic_dim = 12;
inline int TPUCompileMetadataProto_Arg::_internal_is_bounded_dynamic_dim_size() const {
  return _internal_is_bounded_dynamic_dim().size();
}
inline int TPUCompileMetadataProto_Arg::is_bounded_dynamic_dim_size() const {
  return _internal_is_bounded_dynamic_dim_size();
}
inline void TPUCompileMetadataProto_Arg::clear_is_bounded_dynamic_dim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_bounded_dynamic_dim_.Clear();
}
inline bool TPUCompileMetadataProto_Arg::is_bounded_dynamic_dim(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Arg.is_bounded_dynamic_dim)
  return _internal_is_bounded_dynamic_dim().Get(index);
}
inline void TPUCompileMetadataProto_Arg::set_is_bounded_dynamic_dim(int index, bool value) {
  _internal_mutable_is_bounded_dynamic_dim()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.Arg.is_bounded_dynamic_dim)
}
inline void TPUCompileMetadataProto_Arg::add_is_bounded_dynamic_dim(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_is_bounded_dynamic_dim()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TPUCompileMetadataProto.Arg.is_bounded_dynamic_dim)
}
inline const ::google::protobuf::RepeatedField<bool>& TPUCompileMetadataProto_Arg::is_bounded_dynamic_dim() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TPUCompileMetadataProto.Arg.is_bounded_dynamic_dim)
  return _internal_is_bounded_dynamic_dim();
}
inline ::google::protobuf::RepeatedField<bool>* TPUCompileMetadataProto_Arg::mutable_is_bounded_dynamic_dim()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TPUCompileMetadataProto.Arg.is_bounded_dynamic_dim)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_is_bounded_dynamic_dim();
}
inline const ::google::protobuf::RepeatedField<bool>&
TPUCompileMetadataProto_Arg::_internal_is_bounded_dynamic_dim() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_bounded_dynamic_dim_;
}
inline ::google::protobuf::RepeatedField<bool>* TPUCompileMetadataProto_Arg::_internal_mutable_is_bounded_dynamic_dim() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.is_bounded_dynamic_dim_;
}

// -------------------------------------------------------------------

// TPUCompileMetadataProto_Retval

// .xla.OpSharding sharding = 1;
inline bool TPUCompileMetadataProto_Retval::has_sharding() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sharding_ != nullptr);
  return value;
}
inline const ::xla::OpSharding& TPUCompileMetadataProto_Retval::_internal_sharding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::OpSharding* p = _impl_.sharding_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::OpSharding&>(::xla::_OpSharding_default_instance_);
}
inline const ::xla::OpSharding& TPUCompileMetadataProto_Retval::sharding() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.Retval.sharding)
  return _internal_sharding();
}
inline void TPUCompileMetadataProto_Retval::unsafe_arena_set_allocated_sharding(::xla::OpSharding* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sharding_);
  }
  _impl_.sharding_ = reinterpret_cast<::xla::OpSharding*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.Retval.sharding)
}
inline ::xla::OpSharding* TPUCompileMetadataProto_Retval::release_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::OpSharding* released = _impl_.sharding_;
  _impl_.sharding_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xla::OpSharding* TPUCompileMetadataProto_Retval::unsafe_arena_release_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUCompileMetadataProto.Retval.sharding)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::OpSharding* temp = _impl_.sharding_;
  _impl_.sharding_ = nullptr;
  return temp;
}
inline ::xla::OpSharding* TPUCompileMetadataProto_Retval::_internal_mutable_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sharding_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::OpSharding>(GetArena());
    _impl_.sharding_ = reinterpret_cast<::xla::OpSharding*>(p);
  }
  return _impl_.sharding_;
}
inline ::xla::OpSharding* TPUCompileMetadataProto_Retval::mutable_sharding() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xla::OpSharding* _msg = _internal_mutable_sharding();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.Retval.sharding)
  return _msg;
}
inline void TPUCompileMetadataProto_Retval::set_allocated_sharding(::xla::OpSharding* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sharding_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sharding_ = reinterpret_cast<::xla::OpSharding*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.Retval.sharding)
}

// -------------------------------------------------------------------

// TPUCompileMetadataProto

// repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;
inline int TPUCompileMetadataProto::_internal_args_size() const {
  return _internal_args().size();
}
inline int TPUCompileMetadataProto::args_size() const {
  return _internal_args_size();
}
inline void TPUCompileMetadataProto::clear_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.args_.Clear();
}
inline ::tensorflow::tpu::TPUCompileMetadataProto_Arg* TPUCompileMetadataProto::mutable_args(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.args)
  return _internal_mutable_args()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Arg>* TPUCompileMetadataProto::mutable_args()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TPUCompileMetadataProto.args)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_args();
}
inline const ::tensorflow::tpu::TPUCompileMetadataProto_Arg& TPUCompileMetadataProto::args(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.args)
  return _internal_args().Get(index);
}
inline ::tensorflow::tpu::TPUCompileMetadataProto_Arg* TPUCompileMetadataProto::add_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::tpu::TPUCompileMetadataProto_Arg* _add = _internal_mutable_args()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TPUCompileMetadataProto.args)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Arg>& TPUCompileMetadataProto::args() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TPUCompileMetadataProto.args)
  return _internal_args();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Arg>&
TPUCompileMetadataProto::_internal_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.args_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Arg>*
TPUCompileMetadataProto::_internal_mutable_args() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.args_;
}

// repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;
inline int TPUCompileMetadataProto::_internal_retvals_size() const {
  return _internal_retvals().size();
}
inline int TPUCompileMetadataProto::retvals_size() const {
  return _internal_retvals_size();
}
inline void TPUCompileMetadataProto::clear_retvals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retvals_.Clear();
}
inline ::tensorflow::tpu::TPUCompileMetadataProto_Retval* TPUCompileMetadataProto::mutable_retvals(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.retvals)
  return _internal_mutable_retvals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Retval>* TPUCompileMetadataProto::mutable_retvals()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TPUCompileMetadataProto.retvals)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_retvals();
}
inline const ::tensorflow::tpu::TPUCompileMetadataProto_Retval& TPUCompileMetadataProto::retvals(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.retvals)
  return _internal_retvals().Get(index);
}
inline ::tensorflow::tpu::TPUCompileMetadataProto_Retval* TPUCompileMetadataProto::add_retvals() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::tpu::TPUCompileMetadataProto_Retval* _add = _internal_mutable_retvals()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TPUCompileMetadataProto.retvals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Retval>& TPUCompileMetadataProto::retvals() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TPUCompileMetadataProto.retvals)
  return _internal_retvals();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Retval>&
TPUCompileMetadataProto::_internal_retvals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.retvals_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUCompileMetadataProto_Retval>*
TPUCompileMetadataProto::_internal_mutable_retvals() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.retvals_;
}

// int32 num_replicas = 3;
inline void TPUCompileMetadataProto::clear_num_replicas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_replicas_ = 0;
}
inline ::int32_t TPUCompileMetadataProto::num_replicas() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.num_replicas)
  return _internal_num_replicas();
}
inline void TPUCompileMetadataProto::set_num_replicas(::int32_t value) {
  _internal_set_num_replicas(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.num_replicas)
}
inline ::int32_t TPUCompileMetadataProto::_internal_num_replicas() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_replicas_;
}
inline void TPUCompileMetadataProto::_internal_set_num_replicas(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_replicas_ = value;
}

// int32 num_cores_per_replica = 4;
inline void TPUCompileMetadataProto::clear_num_cores_per_replica() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_cores_per_replica_ = 0;
}
inline ::int32_t TPUCompileMetadataProto::num_cores_per_replica() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.num_cores_per_replica)
  return _internal_num_cores_per_replica();
}
inline void TPUCompileMetadataProto::set_num_cores_per_replica(::int32_t value) {
  _internal_set_num_cores_per_replica(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.num_cores_per_replica)
}
inline ::int32_t TPUCompileMetadataProto::_internal_num_cores_per_replica() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_cores_per_replica_;
}
inline void TPUCompileMetadataProto::_internal_set_num_cores_per_replica(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_cores_per_replica_ = value;
}

// .xla.DeviceAssignmentProto device_assignment = 8;
inline bool TPUCompileMetadataProto::has_device_assignment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_assignment_ != nullptr);
  return value;
}
inline const ::xla::DeviceAssignmentProto& TPUCompileMetadataProto::_internal_device_assignment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::DeviceAssignmentProto* p = _impl_.device_assignment_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::DeviceAssignmentProto&>(::xla::_DeviceAssignmentProto_default_instance_);
}
inline const ::xla::DeviceAssignmentProto& TPUCompileMetadataProto::device_assignment() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.device_assignment)
  return _internal_device_assignment();
}
inline void TPUCompileMetadataProto::unsafe_arena_set_allocated_device_assignment(::xla::DeviceAssignmentProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_assignment_);
  }
  _impl_.device_assignment_ = reinterpret_cast<::xla::DeviceAssignmentProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.device_assignment)
}
inline ::xla::DeviceAssignmentProto* TPUCompileMetadataProto::release_device_assignment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::DeviceAssignmentProto* released = _impl_.device_assignment_;
  _impl_.device_assignment_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xla::DeviceAssignmentProto* TPUCompileMetadataProto::unsafe_arena_release_device_assignment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUCompileMetadataProto.device_assignment)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::DeviceAssignmentProto* temp = _impl_.device_assignment_;
  _impl_.device_assignment_ = nullptr;
  return temp;
}
inline ::xla::DeviceAssignmentProto* TPUCompileMetadataProto::_internal_mutable_device_assignment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_assignment_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::DeviceAssignmentProto>(GetArena());
    _impl_.device_assignment_ = reinterpret_cast<::xla::DeviceAssignmentProto*>(p);
  }
  return _impl_.device_assignment_;
}
inline ::xla::DeviceAssignmentProto* TPUCompileMetadataProto::mutable_device_assignment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xla::DeviceAssignmentProto* _msg = _internal_mutable_device_assignment();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.device_assignment)
  return _msg;
}
inline void TPUCompileMetadataProto::set_allocated_device_assignment(::xla::DeviceAssignmentProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_assignment_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_assignment_ = reinterpret_cast<::xla::DeviceAssignmentProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.device_assignment)
}

// uint64 function_library_fingerprint = 6;
inline void TPUCompileMetadataProto::clear_function_library_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.function_library_fingerprint_ = ::uint64_t{0u};
}
inline ::uint64_t TPUCompileMetadataProto::function_library_fingerprint() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.function_library_fingerprint)
  return _internal_function_library_fingerprint();
}
inline void TPUCompileMetadataProto::set_function_library_fingerprint(::uint64_t value) {
  _internal_set_function_library_fingerprint(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.function_library_fingerprint)
}
inline ::uint64_t TPUCompileMetadataProto::_internal_function_library_fingerprint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.function_library_fingerprint_;
}
inline void TPUCompileMetadataProto::_internal_set_function_library_fingerprint(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.function_library_fingerprint_ = value;
}

// string session_handle = 9;
inline void TPUCompileMetadataProto::clear_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.ClearToEmpty();
}
inline const std::string& TPUCompileMetadataProto::session_handle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.session_handle)
  return _internal_session_handle();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TPUCompileMetadataProto::set_session_handle(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.session_handle)
}
inline std::string* TPUCompileMetadataProto::mutable_session_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.session_handle)
  return _s;
}
inline const std::string& TPUCompileMetadataProto::_internal_session_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_handle_.Get();
}
inline void TPUCompileMetadataProto::_internal_set_session_handle(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(value, GetArena());
}
inline std::string* TPUCompileMetadataProto::_internal_mutable_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_handle_.Mutable( GetArena());
}
inline std::string* TPUCompileMetadataProto::release_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUCompileMetadataProto.session_handle)
  return _impl_.session_handle_.Release();
}
inline void TPUCompileMetadataProto::set_allocated_session_handle(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_handle_.IsDefault()) {
          _impl_.session_handle_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.session_handle)
}

// string guaranteed_const_fingerprint = 10;
inline void TPUCompileMetadataProto::clear_guaranteed_const_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guaranteed_const_fingerprint_.ClearToEmpty();
}
inline const std::string& TPUCompileMetadataProto::guaranteed_const_fingerprint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.guaranteed_const_fingerprint)
  return _internal_guaranteed_const_fingerprint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TPUCompileMetadataProto::set_guaranteed_const_fingerprint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guaranteed_const_fingerprint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.guaranteed_const_fingerprint)
}
inline std::string* TPUCompileMetadataProto::mutable_guaranteed_const_fingerprint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_guaranteed_const_fingerprint();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.guaranteed_const_fingerprint)
  return _s;
}
inline const std::string& TPUCompileMetadataProto::_internal_guaranteed_const_fingerprint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guaranteed_const_fingerprint_.Get();
}
inline void TPUCompileMetadataProto::_internal_set_guaranteed_const_fingerprint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guaranteed_const_fingerprint_.Set(value, GetArena());
}
inline std::string* TPUCompileMetadataProto::_internal_mutable_guaranteed_const_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.guaranteed_const_fingerprint_.Mutable( GetArena());
}
inline std::string* TPUCompileMetadataProto::release_guaranteed_const_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUCompileMetadataProto.guaranteed_const_fingerprint)
  return _impl_.guaranteed_const_fingerprint_.Release();
}
inline void TPUCompileMetadataProto::set_allocated_guaranteed_const_fingerprint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guaranteed_const_fingerprint_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.guaranteed_const_fingerprint_.IsDefault()) {
          _impl_.guaranteed_const_fingerprint_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.guaranteed_const_fingerprint)
}

// repeated .tensorflow.tpu.PaddingMap padding_maps = 11;
inline int TPUCompileMetadataProto::_internal_padding_maps_size() const {
  return _internal_padding_maps().size();
}
inline int TPUCompileMetadataProto::padding_maps_size() const {
  return _internal_padding_maps_size();
}
inline ::tensorflow::tpu::PaddingMap* TPUCompileMetadataProto::mutable_padding_maps(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.padding_maps)
  return _internal_mutable_padding_maps()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::PaddingMap>* TPUCompileMetadataProto::mutable_padding_maps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TPUCompileMetadataProto.padding_maps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_padding_maps();
}
inline const ::tensorflow::tpu::PaddingMap& TPUCompileMetadataProto::padding_maps(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.padding_maps)
  return _internal_padding_maps().Get(index);
}
inline ::tensorflow::tpu::PaddingMap* TPUCompileMetadataProto::add_padding_maps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::tpu::PaddingMap* _add = _internal_mutable_padding_maps()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TPUCompileMetadataProto.padding_maps)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::PaddingMap>& TPUCompileMetadataProto::padding_maps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TPUCompileMetadataProto.padding_maps)
  return _internal_padding_maps();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::PaddingMap>&
TPUCompileMetadataProto::_internal_padding_maps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.padding_maps_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::PaddingMap>*
TPUCompileMetadataProto::_internal_mutable_padding_maps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.padding_maps_;
}

// .xla.DebugOptions.StepMarkerLocation step_marker_location = 12;
inline void TPUCompileMetadataProto::clear_step_marker_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_marker_location_ = 0;
}
inline ::xla::DebugOptions_StepMarkerLocation TPUCompileMetadataProto::step_marker_location() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.step_marker_location)
  return _internal_step_marker_location();
}
inline void TPUCompileMetadataProto::set_step_marker_location(::xla::DebugOptions_StepMarkerLocation value) {
  _internal_set_step_marker_location(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.step_marker_location)
}
inline ::xla::DebugOptions_StepMarkerLocation TPUCompileMetadataProto::_internal_step_marker_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::xla::DebugOptions_StepMarkerLocation>(_impl_.step_marker_location_);
}
inline void TPUCompileMetadataProto::_internal_set_step_marker_location(::xla::DebugOptions_StepMarkerLocation value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_marker_location_ = value;
}

// int64 xla_fusion_autotuner_thresh = 13;
inline void TPUCompileMetadataProto::clear_xla_fusion_autotuner_thresh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xla_fusion_autotuner_thresh_ = ::int64_t{0};
}
inline ::int64_t TPUCompileMetadataProto::xla_fusion_autotuner_thresh() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.xla_fusion_autotuner_thresh)
  return _internal_xla_fusion_autotuner_thresh();
}
inline void TPUCompileMetadataProto::set_xla_fusion_autotuner_thresh(::int64_t value) {
  _internal_set_xla_fusion_autotuner_thresh(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.xla_fusion_autotuner_thresh)
}
inline ::int64_t TPUCompileMetadataProto::_internal_xla_fusion_autotuner_thresh() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xla_fusion_autotuner_thresh_;
}
inline void TPUCompileMetadataProto::_internal_set_xla_fusion_autotuner_thresh(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xla_fusion_autotuner_thresh_ = value;
}

// bool enable_automatic_model_parallelism = 14;
inline void TPUCompileMetadataProto::clear_enable_automatic_model_parallelism() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_automatic_model_parallelism_ = false;
}
inline bool TPUCompileMetadataProto::enable_automatic_model_parallelism() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.enable_automatic_model_parallelism)
  return _internal_enable_automatic_model_parallelism();
}
inline void TPUCompileMetadataProto::set_enable_automatic_model_parallelism(bool value) {
  _internal_set_enable_automatic_model_parallelism(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.enable_automatic_model_parallelism)
}
inline bool TPUCompileMetadataProto::_internal_enable_automatic_model_parallelism() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_automatic_model_parallelism_;
}
inline void TPUCompileMetadataProto::_internal_set_enable_automatic_model_parallelism(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_automatic_model_parallelism_ = value;
}

// bool use_spmd_for_xla_partitioning = 15;
inline void TPUCompileMetadataProto::clear_use_spmd_for_xla_partitioning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_spmd_for_xla_partitioning_ = false;
}
inline bool TPUCompileMetadataProto::use_spmd_for_xla_partitioning() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.use_spmd_for_xla_partitioning)
  return _internal_use_spmd_for_xla_partitioning();
}
inline void TPUCompileMetadataProto::set_use_spmd_for_xla_partitioning(bool value) {
  _internal_set_use_spmd_for_xla_partitioning(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.use_spmd_for_xla_partitioning)
}
inline bool TPUCompileMetadataProto::_internal_use_spmd_for_xla_partitioning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_spmd_for_xla_partitioning_;
}
inline void TPUCompileMetadataProto::_internal_set_use_spmd_for_xla_partitioning(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_spmd_for_xla_partitioning_ = value;
}

// bool use_shardy_partitioner = 23;
inline void TPUCompileMetadataProto::clear_use_shardy_partitioner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_shardy_partitioner_ = false;
}
inline bool TPUCompileMetadataProto::use_shardy_partitioner() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.use_shardy_partitioner)
  return _internal_use_shardy_partitioner();
}
inline void TPUCompileMetadataProto::set_use_shardy_partitioner(bool value) {
  _internal_set_use_shardy_partitioner(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.use_shardy_partitioner)
}
inline bool TPUCompileMetadataProto::_internal_use_shardy_partitioner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_shardy_partitioner_;
}
inline void TPUCompileMetadataProto::_internal_set_use_shardy_partitioner(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_shardy_partitioner_ = value;
}

// bool use_auto_spmd_for_xla_partitioning = 18;
inline void TPUCompileMetadataProto::clear_use_auto_spmd_for_xla_partitioning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_auto_spmd_for_xla_partitioning_ = false;
}
inline bool TPUCompileMetadataProto::use_auto_spmd_for_xla_partitioning() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.use_auto_spmd_for_xla_partitioning)
  return _internal_use_auto_spmd_for_xla_partitioning();
}
inline void TPUCompileMetadataProto::set_use_auto_spmd_for_xla_partitioning(bool value) {
  _internal_set_use_auto_spmd_for_xla_partitioning(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.use_auto_spmd_for_xla_partitioning)
}
inline bool TPUCompileMetadataProto::_internal_use_auto_spmd_for_xla_partitioning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_auto_spmd_for_xla_partitioning_;
}
inline void TPUCompileMetadataProto::_internal_set_use_auto_spmd_for_xla_partitioning(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_auto_spmd_for_xla_partitioning_ = value;
}

// repeated int64 auto_spmd_mesh_shape = 19;
inline int TPUCompileMetadataProto::_internal_auto_spmd_mesh_shape_size() const {
  return _internal_auto_spmd_mesh_shape().size();
}
inline int TPUCompileMetadataProto::auto_spmd_mesh_shape_size() const {
  return _internal_auto_spmd_mesh_shape_size();
}
inline void TPUCompileMetadataProto::clear_auto_spmd_mesh_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_spmd_mesh_shape_.Clear();
}
inline ::int64_t TPUCompileMetadataProto::auto_spmd_mesh_shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_shape)
  return _internal_auto_spmd_mesh_shape().Get(index);
}
inline void TPUCompileMetadataProto::set_auto_spmd_mesh_shape(int index, ::int64_t value) {
  _internal_mutable_auto_spmd_mesh_shape()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_shape)
}
inline void TPUCompileMetadataProto::add_auto_spmd_mesh_shape(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_auto_spmd_mesh_shape()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_shape)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TPUCompileMetadataProto::auto_spmd_mesh_shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_shape)
  return _internal_auto_spmd_mesh_shape();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TPUCompileMetadataProto::mutable_auto_spmd_mesh_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_auto_spmd_mesh_shape();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TPUCompileMetadataProto::_internal_auto_spmd_mesh_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.auto_spmd_mesh_shape_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TPUCompileMetadataProto::_internal_mutable_auto_spmd_mesh_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.auto_spmd_mesh_shape_;
}

// repeated int64 auto_spmd_mesh_ids = 20;
inline int TPUCompileMetadataProto::_internal_auto_spmd_mesh_ids_size() const {
  return _internal_auto_spmd_mesh_ids().size();
}
inline int TPUCompileMetadataProto::auto_spmd_mesh_ids_size() const {
  return _internal_auto_spmd_mesh_ids_size();
}
inline void TPUCompileMetadataProto::clear_auto_spmd_mesh_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_spmd_mesh_ids_.Clear();
}
inline ::int64_t TPUCompileMetadataProto::auto_spmd_mesh_ids(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_ids)
  return _internal_auto_spmd_mesh_ids().Get(index);
}
inline void TPUCompileMetadataProto::set_auto_spmd_mesh_ids(int index, ::int64_t value) {
  _internal_mutable_auto_spmd_mesh_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_ids)
}
inline void TPUCompileMetadataProto::add_auto_spmd_mesh_ids(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_auto_spmd_mesh_ids()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& TPUCompileMetadataProto::auto_spmd_mesh_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_ids)
  return _internal_auto_spmd_mesh_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* TPUCompileMetadataProto::mutable_auto_spmd_mesh_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TPUCompileMetadataProto.auto_spmd_mesh_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_auto_spmd_mesh_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
TPUCompileMetadataProto::_internal_auto_spmd_mesh_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.auto_spmd_mesh_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* TPUCompileMetadataProto::_internal_mutable_auto_spmd_mesh_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.auto_spmd_mesh_ids_;
}

// uint64 mlir_fingerprint = 17;
inline void TPUCompileMetadataProto::clear_mlir_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mlir_fingerprint_ = ::uint64_t{0u};
}
inline ::uint64_t TPUCompileMetadataProto::mlir_fingerprint() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.mlir_fingerprint)
  return _internal_mlir_fingerprint();
}
inline void TPUCompileMetadataProto::set_mlir_fingerprint(::uint64_t value) {
  _internal_set_mlir_fingerprint(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.mlir_fingerprint)
}
inline ::uint64_t TPUCompileMetadataProto::_internal_mlir_fingerprint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mlir_fingerprint_;
}
inline void TPUCompileMetadataProto::_internal_set_mlir_fingerprint(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mlir_fingerprint_ = value;
}

// .tensorflow.tpu.TPUCompileOptions compile_options = 21;
inline bool TPUCompileMetadataProto::has_compile_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.compile_options_ != nullptr);
  return value;
}
inline void TPUCompileMetadataProto::clear_compile_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.compile_options_ != nullptr) _impl_.compile_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::tensorflow::tpu::TPUCompileOptions& TPUCompileMetadataProto::_internal_compile_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::tpu::TPUCompileOptions* p = _impl_.compile_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::tpu::TPUCompileOptions&>(::tensorflow::tpu::_TPUCompileOptions_default_instance_);
}
inline const ::tensorflow::tpu::TPUCompileOptions& TPUCompileMetadataProto::compile_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.compile_options)
  return _internal_compile_options();
}
inline void TPUCompileMetadataProto::unsafe_arena_set_allocated_compile_options(::tensorflow::tpu::TPUCompileOptions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.compile_options_);
  }
  _impl_.compile_options_ = reinterpret_cast<::tensorflow::tpu::TPUCompileOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.compile_options)
}
inline ::tensorflow::tpu::TPUCompileOptions* TPUCompileMetadataProto::release_compile_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::tpu::TPUCompileOptions* released = _impl_.compile_options_;
  _impl_.compile_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::tpu::TPUCompileOptions* TPUCompileMetadataProto::unsafe_arena_release_compile_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUCompileMetadataProto.compile_options)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::tpu::TPUCompileOptions* temp = _impl_.compile_options_;
  _impl_.compile_options_ = nullptr;
  return temp;
}
inline ::tensorflow::tpu::TPUCompileOptions* TPUCompileMetadataProto::_internal_mutable_compile_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.compile_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::tpu::TPUCompileOptions>(GetArena());
    _impl_.compile_options_ = reinterpret_cast<::tensorflow::tpu::TPUCompileOptions*>(p);
  }
  return _impl_.compile_options_;
}
inline ::tensorflow::tpu::TPUCompileOptions* TPUCompileMetadataProto::mutable_compile_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::tpu::TPUCompileOptions* _msg = _internal_mutable_compile_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.compile_options)
  return _msg;
}
inline void TPUCompileMetadataProto::set_allocated_compile_options(::tensorflow::tpu::TPUCompileOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.compile_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.compile_options_ = reinterpret_cast<::tensorflow::tpu::TPUCompileOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.compile_options)
}

// string module_name = 22;
inline void TPUCompileMetadataProto::clear_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.ClearToEmpty();
}
inline const std::string& TPUCompileMetadataProto::module_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileMetadataProto.module_name)
  return _internal_module_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TPUCompileMetadataProto::set_module_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileMetadataProto.module_name)
}
inline std::string* TPUCompileMetadataProto::mutable_module_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_module_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUCompileMetadataProto.module_name)
  return _s;
}
inline const std::string& TPUCompileMetadataProto::_internal_module_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_name_.Get();
}
inline void TPUCompileMetadataProto::_internal_set_module_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.Set(value, GetArena());
}
inline std::string* TPUCompileMetadataProto::_internal_mutable_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.module_name_.Mutable( GetArena());
}
inline std::string* TPUCompileMetadataProto::release_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUCompileMetadataProto.module_name)
  return _impl_.module_name_.Release();
}
inline void TPUCompileMetadataProto::set_allocated_module_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.module_name_.IsDefault()) {
          _impl_.module_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUCompileMetadataProto.module_name)
}

// -------------------------------------------------------------------

// TPUCompileOptions

// .tensorflow.tpu.TPUCompileOptions.Precision matrix_unit_operand_precision = 1;
inline void TPUCompileOptions::clear_matrix_unit_operand_precision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matrix_unit_operand_precision_ = 0;
}
inline ::tensorflow::tpu::TPUCompileOptions_Precision TPUCompileOptions::matrix_unit_operand_precision() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUCompileOptions.matrix_unit_operand_precision)
  return _internal_matrix_unit_operand_precision();
}
inline void TPUCompileOptions::set_matrix_unit_operand_precision(::tensorflow::tpu::TPUCompileOptions_Precision value) {
  _internal_set_matrix_unit_operand_precision(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUCompileOptions.matrix_unit_operand_precision)
}
inline ::tensorflow::tpu::TPUCompileOptions_Precision TPUCompileOptions::_internal_matrix_unit_operand_precision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::tpu::TPUCompileOptions_Precision>(_impl_.matrix_unit_operand_precision_);
}
inline void TPUCompileOptions::_internal_set_matrix_unit_operand_precision(::tensorflow::tpu::TPUCompileOptions_Precision value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matrix_unit_operand_precision_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tpu
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind>() {
  return ::tensorflow::tpu::TPUCompileMetadataProto_Arg_Kind_descriptor();
}
template <>
struct is_proto_enum<::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding>() {
  return ::tensorflow::tpu::TPUCompileMetadataProto_Arg_EnableXlaSharding_descriptor();
}
template <>
struct is_proto_enum<::tensorflow::tpu::TPUCompileOptions_Precision> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::tpu::TPUCompileOptions_Precision>() {
  return ::tensorflow::tpu::TPUCompileOptions_Precision_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2ftpu_2fcompile_5fmetadata_2eproto_2epb_2eh
