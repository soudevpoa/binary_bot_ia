// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/tpu/tpu_embedding_configuration.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/protobuf/tpu/optimization_parameters.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto;
namespace tensorflow {
namespace tpu {
class TPUEmbeddingConfiguration;
struct TPUEmbeddingConfigurationDefaultTypeInternal;
PROTOBUF_EXPORT extern TPUEmbeddingConfigurationDefaultTypeInternal _TPUEmbeddingConfiguration_default_instance_;
class TPUEmbeddingConfiguration_FeatureDescriptor;
struct TPUEmbeddingConfiguration_FeatureDescriptorDefaultTypeInternal;
PROTOBUF_EXPORT extern TPUEmbeddingConfiguration_FeatureDescriptorDefaultTypeInternal _TPUEmbeddingConfiguration_FeatureDescriptor_default_instance_;
class TPUEmbeddingConfiguration_SpmdSharding;
struct TPUEmbeddingConfiguration_SpmdShardingDefaultTypeInternal;
PROTOBUF_EXPORT extern TPUEmbeddingConfiguration_SpmdShardingDefaultTypeInternal _TPUEmbeddingConfiguration_SpmdSharding_default_instance_;
class TPUEmbeddingConfiguration_TableDescriptor;
struct TPUEmbeddingConfiguration_TableDescriptorDefaultTypeInternal;
PROTOBUF_EXPORT extern TPUEmbeddingConfiguration_TableDescriptorDefaultTypeInternal _TPUEmbeddingConfiguration_TableDescriptor_default_instance_;
class TPUEmbeddingError;
struct TPUEmbeddingErrorDefaultTypeInternal;
PROTOBUF_EXPORT extern TPUEmbeddingErrorDefaultTypeInternal _TPUEmbeddingError_default_instance_;
}  // namespace tpu
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace tpu {
enum TPUEmbeddingConfiguration_Mode : int {
  TPUEmbeddingConfiguration_Mode_UNSPECIFIED = 0,
  TPUEmbeddingConfiguration_Mode_INFERENCE = 1,
  TPUEmbeddingConfiguration_Mode_TRAINING = 2,
  TPUEmbeddingConfiguration_Mode_BACKWARD_PASS_ONLY = 3,
  TPUEmbeddingConfiguration_Mode_TPUEmbeddingConfiguration_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TPUEmbeddingConfiguration_Mode_TPUEmbeddingConfiguration_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool TPUEmbeddingConfiguration_Mode_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t TPUEmbeddingConfiguration_Mode_internal_data_[];
constexpr TPUEmbeddingConfiguration_Mode TPUEmbeddingConfiguration_Mode_Mode_MIN = static_cast<TPUEmbeddingConfiguration_Mode>(0);
constexpr TPUEmbeddingConfiguration_Mode TPUEmbeddingConfiguration_Mode_Mode_MAX = static_cast<TPUEmbeddingConfiguration_Mode>(3);
constexpr int TPUEmbeddingConfiguration_Mode_Mode_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
TPUEmbeddingConfiguration_Mode_descriptor();
template <typename T>
const std::string& TPUEmbeddingConfiguration_Mode_Name(T value) {
  static_assert(std::is_same<T, TPUEmbeddingConfiguration_Mode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Mode_Name().");
  return TPUEmbeddingConfiguration_Mode_Name(static_cast<TPUEmbeddingConfiguration_Mode>(value));
}
template <>
inline const std::string& TPUEmbeddingConfiguration_Mode_Name(TPUEmbeddingConfiguration_Mode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TPUEmbeddingConfiguration_Mode_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TPUEmbeddingConfiguration_Mode_Parse(absl::string_view name, TPUEmbeddingConfiguration_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPUEmbeddingConfiguration_Mode>(
      TPUEmbeddingConfiguration_Mode_descriptor(), name, value);
}
enum TPUEmbeddingConfiguration_ShardingStrategy : int {
  TPUEmbeddingConfiguration_ShardingStrategy_DIV_DEFAULT = 0,
  TPUEmbeddingConfiguration_ShardingStrategy_MOD = 1,
  TPUEmbeddingConfiguration_ShardingStrategy_TPUEmbeddingConfiguration_ShardingStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TPUEmbeddingConfiguration_ShardingStrategy_TPUEmbeddingConfiguration_ShardingStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool TPUEmbeddingConfiguration_ShardingStrategy_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t TPUEmbeddingConfiguration_ShardingStrategy_internal_data_[];
constexpr TPUEmbeddingConfiguration_ShardingStrategy TPUEmbeddingConfiguration_ShardingStrategy_ShardingStrategy_MIN = static_cast<TPUEmbeddingConfiguration_ShardingStrategy>(0);
constexpr TPUEmbeddingConfiguration_ShardingStrategy TPUEmbeddingConfiguration_ShardingStrategy_ShardingStrategy_MAX = static_cast<TPUEmbeddingConfiguration_ShardingStrategy>(1);
constexpr int TPUEmbeddingConfiguration_ShardingStrategy_ShardingStrategy_ARRAYSIZE = 1 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
TPUEmbeddingConfiguration_ShardingStrategy_descriptor();
template <typename T>
const std::string& TPUEmbeddingConfiguration_ShardingStrategy_Name(T value) {
  static_assert(std::is_same<T, TPUEmbeddingConfiguration_ShardingStrategy>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ShardingStrategy_Name().");
  return TPUEmbeddingConfiguration_ShardingStrategy_Name(static_cast<TPUEmbeddingConfiguration_ShardingStrategy>(value));
}
template <>
inline const std::string& TPUEmbeddingConfiguration_ShardingStrategy_Name(TPUEmbeddingConfiguration_ShardingStrategy value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TPUEmbeddingConfiguration_ShardingStrategy_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool TPUEmbeddingConfiguration_ShardingStrategy_Parse(absl::string_view name, TPUEmbeddingConfiguration_ShardingStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPUEmbeddingConfiguration_ShardingStrategy>(
      TPUEmbeddingConfiguration_ShardingStrategy_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT TPUEmbeddingError final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.tpu.TPUEmbeddingError) */ {
 public:
  inline TPUEmbeddingError() : TPUEmbeddingError(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TPUEmbeddingError(
      ::google::protobuf::internal::ConstantInitialized);

  inline TPUEmbeddingError(const TPUEmbeddingError& from) : TPUEmbeddingError(nullptr, from) {}
  inline TPUEmbeddingError(TPUEmbeddingError&& from) noexcept
      : TPUEmbeddingError(nullptr, std::move(from)) {}
  inline TPUEmbeddingError& operator=(const TPUEmbeddingError& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPUEmbeddingError& operator=(TPUEmbeddingError&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPUEmbeddingError& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPUEmbeddingError* internal_default_instance() {
    return reinterpret_cast<const TPUEmbeddingError*>(
        &_TPUEmbeddingError_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(TPUEmbeddingError& a, TPUEmbeddingError& b) { a.Swap(&b); }
  inline void Swap(TPUEmbeddingError* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPUEmbeddingError* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPUEmbeddingError* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TPUEmbeddingError>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TPUEmbeddingError& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TPUEmbeddingError& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tpu.TPUEmbeddingError"; }

 protected:
  explicit TPUEmbeddingError(::google::protobuf::Arena* arena);
  TPUEmbeddingError(::google::protobuf::Arena* arena, const TPUEmbeddingError& from);
  TPUEmbeddingError(::google::protobuf::Arena* arena, TPUEmbeddingError&& from) noexcept
      : TPUEmbeddingError(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUEmbeddingError)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TPUEmbeddingError& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TPUEmbeddingConfiguration_SpmdSharding final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding) */ {
 public:
  inline TPUEmbeddingConfiguration_SpmdSharding() : TPUEmbeddingConfiguration_SpmdSharding(nullptr) {}
  ~TPUEmbeddingConfiguration_SpmdSharding() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TPUEmbeddingConfiguration_SpmdSharding(
      ::google::protobuf::internal::ConstantInitialized);

  inline TPUEmbeddingConfiguration_SpmdSharding(const TPUEmbeddingConfiguration_SpmdSharding& from) : TPUEmbeddingConfiguration_SpmdSharding(nullptr, from) {}
  inline TPUEmbeddingConfiguration_SpmdSharding(TPUEmbeddingConfiguration_SpmdSharding&& from) noexcept
      : TPUEmbeddingConfiguration_SpmdSharding(nullptr, std::move(from)) {}
  inline TPUEmbeddingConfiguration_SpmdSharding& operator=(const TPUEmbeddingConfiguration_SpmdSharding& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPUEmbeddingConfiguration_SpmdSharding& operator=(TPUEmbeddingConfiguration_SpmdSharding&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPUEmbeddingConfiguration_SpmdSharding& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPUEmbeddingConfiguration_SpmdSharding* internal_default_instance() {
    return reinterpret_cast<const TPUEmbeddingConfiguration_SpmdSharding*>(
        &_TPUEmbeddingConfiguration_SpmdSharding_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TPUEmbeddingConfiguration_SpmdSharding& a, TPUEmbeddingConfiguration_SpmdSharding& b) { a.Swap(&b); }
  inline void Swap(TPUEmbeddingConfiguration_SpmdSharding* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPUEmbeddingConfiguration_SpmdSharding* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPUEmbeddingConfiguration_SpmdSharding* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TPUEmbeddingConfiguration_SpmdSharding>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TPUEmbeddingConfiguration_SpmdSharding& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TPUEmbeddingConfiguration_SpmdSharding& from) { TPUEmbeddingConfiguration_SpmdSharding::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TPUEmbeddingConfiguration_SpmdSharding* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding"; }

 protected:
  explicit TPUEmbeddingConfiguration_SpmdSharding(::google::protobuf::Arena* arena);
  TPUEmbeddingConfiguration_SpmdSharding(::google::protobuf::Arena* arena, const TPUEmbeddingConfiguration_SpmdSharding& from);
  TPUEmbeddingConfiguration_SpmdSharding(::google::protobuf::Arena* arena, TPUEmbeddingConfiguration_SpmdSharding&& from) noexcept
      : TPUEmbeddingConfiguration_SpmdSharding(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumCoresPerReplicaFieldNumber = 2,
    kEnabledFieldNumber = 1,
    kUseManualPartitioningFieldNumber = 3,
  };
  // int32 num_cores_per_replica = 2;
  void clear_num_cores_per_replica() ;
  ::int32_t num_cores_per_replica() const;
  void set_num_cores_per_replica(::int32_t value);

  private:
  ::int32_t _internal_num_cores_per_replica() const;
  void _internal_set_num_cores_per_replica(::int32_t value);

  public:
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // bool use_manual_partitioning = 3;
  void clear_use_manual_partitioning() ;
  bool use_manual_partitioning() const;
  void set_use_manual_partitioning(bool value);

  private:
  bool _internal_use_manual_partitioning() const;
  void _internal_set_use_manual_partitioning(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TPUEmbeddingConfiguration_SpmdSharding& from_msg);
    ::int32_t num_cores_per_replica_;
    bool enabled_;
    bool use_manual_partitioning_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TPUEmbeddingConfiguration_FeatureDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor) */ {
 public:
  inline TPUEmbeddingConfiguration_FeatureDescriptor() : TPUEmbeddingConfiguration_FeatureDescriptor(nullptr) {}
  ~TPUEmbeddingConfiguration_FeatureDescriptor() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TPUEmbeddingConfiguration_FeatureDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline TPUEmbeddingConfiguration_FeatureDescriptor(const TPUEmbeddingConfiguration_FeatureDescriptor& from) : TPUEmbeddingConfiguration_FeatureDescriptor(nullptr, from) {}
  inline TPUEmbeddingConfiguration_FeatureDescriptor(TPUEmbeddingConfiguration_FeatureDescriptor&& from) noexcept
      : TPUEmbeddingConfiguration_FeatureDescriptor(nullptr, std::move(from)) {}
  inline TPUEmbeddingConfiguration_FeatureDescriptor& operator=(const TPUEmbeddingConfiguration_FeatureDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPUEmbeddingConfiguration_FeatureDescriptor& operator=(TPUEmbeddingConfiguration_FeatureDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPUEmbeddingConfiguration_FeatureDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPUEmbeddingConfiguration_FeatureDescriptor* internal_default_instance() {
    return reinterpret_cast<const TPUEmbeddingConfiguration_FeatureDescriptor*>(
        &_TPUEmbeddingConfiguration_FeatureDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TPUEmbeddingConfiguration_FeatureDescriptor& a, TPUEmbeddingConfiguration_FeatureDescriptor& b) { a.Swap(&b); }
  inline void Swap(TPUEmbeddingConfiguration_FeatureDescriptor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPUEmbeddingConfiguration_FeatureDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPUEmbeddingConfiguration_FeatureDescriptor* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TPUEmbeddingConfiguration_FeatureDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TPUEmbeddingConfiguration_FeatureDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TPUEmbeddingConfiguration_FeatureDescriptor& from) { TPUEmbeddingConfiguration_FeatureDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TPUEmbeddingConfiguration_FeatureDescriptor* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor"; }

 protected:
  explicit TPUEmbeddingConfiguration_FeatureDescriptor(::google::protobuf::Arena* arena);
  TPUEmbeddingConfiguration_FeatureDescriptor(::google::protobuf::Arena* arena, const TPUEmbeddingConfiguration_FeatureDescriptor& from);
  TPUEmbeddingConfiguration_FeatureDescriptor(::google::protobuf::Arena* arena, TPUEmbeddingConfiguration_FeatureDescriptor&& from) noexcept
      : TPUEmbeddingConfiguration_FeatureDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputShapeFieldNumber = 3,
    kNameFieldNumber = 1,
    kTableIdFieldNumber = 2,
  };
  // repeated int32 input_shape = 3;
  int input_shape_size() const;
  private:
  int _internal_input_shape_size() const;

  public:
  void clear_input_shape() ;
  ::int32_t input_shape(int index) const;
  void set_input_shape(int index, ::int32_t value);
  void add_input_shape(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& input_shape() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_input_shape();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_input_shape() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_input_shape();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int32 table_id = 2;
  void clear_table_id() ;
  ::int32_t table_id() const;
  void set_table_id(::int32_t value);

  private:
  ::int32_t _internal_table_id() const;
  void _internal_set_table_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      71, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TPUEmbeddingConfiguration_FeatureDescriptor& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> input_shape_;
    mutable ::google::protobuf::internal::CachedSize _input_shape_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int32_t table_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TPUEmbeddingConfiguration_TableDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor) */ {
 public:
  inline TPUEmbeddingConfiguration_TableDescriptor() : TPUEmbeddingConfiguration_TableDescriptor(nullptr) {}
  ~TPUEmbeddingConfiguration_TableDescriptor() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TPUEmbeddingConfiguration_TableDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline TPUEmbeddingConfiguration_TableDescriptor(const TPUEmbeddingConfiguration_TableDescriptor& from) : TPUEmbeddingConfiguration_TableDescriptor(nullptr, from) {}
  inline TPUEmbeddingConfiguration_TableDescriptor(TPUEmbeddingConfiguration_TableDescriptor&& from) noexcept
      : TPUEmbeddingConfiguration_TableDescriptor(nullptr, std::move(from)) {}
  inline TPUEmbeddingConfiguration_TableDescriptor& operator=(const TPUEmbeddingConfiguration_TableDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPUEmbeddingConfiguration_TableDescriptor& operator=(TPUEmbeddingConfiguration_TableDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPUEmbeddingConfiguration_TableDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPUEmbeddingConfiguration_TableDescriptor* internal_default_instance() {
    return reinterpret_cast<const TPUEmbeddingConfiguration_TableDescriptor*>(
        &_TPUEmbeddingConfiguration_TableDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TPUEmbeddingConfiguration_TableDescriptor& a, TPUEmbeddingConfiguration_TableDescriptor& b) { a.Swap(&b); }
  inline void Swap(TPUEmbeddingConfiguration_TableDescriptor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPUEmbeddingConfiguration_TableDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPUEmbeddingConfiguration_TableDescriptor* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TPUEmbeddingConfiguration_TableDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TPUEmbeddingConfiguration_TableDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TPUEmbeddingConfiguration_TableDescriptor& from) { TPUEmbeddingConfiguration_TableDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TPUEmbeddingConfiguration_TableDescriptor* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor"; }

 protected:
  explicit TPUEmbeddingConfiguration_TableDescriptor(::google::protobuf::Arena* arena);
  TPUEmbeddingConfiguration_TableDescriptor(::google::protobuf::Arena* arena, const TPUEmbeddingConfiguration_TableDescriptor& from);
  TPUEmbeddingConfiguration_TableDescriptor(::google::protobuf::Arena* arena, TPUEmbeddingConfiguration_TableDescriptor&& from) noexcept
      : TPUEmbeddingConfiguration_TableDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kOptimizationParametersFieldNumber = 5,
    kVocabularySizeFieldNumber = 2,
    kDimensionFieldNumber = 3,
    kNumFeaturesFieldNumber = 4,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .tensorflow.tpu.OptimizationParameters optimization_parameters = 5;
  bool has_optimization_parameters() const;
  void clear_optimization_parameters() ;
  const ::tensorflow::tpu::OptimizationParameters& optimization_parameters() const;
  PROTOBUF_NODISCARD ::tensorflow::tpu::OptimizationParameters* release_optimization_parameters();
  ::tensorflow::tpu::OptimizationParameters* mutable_optimization_parameters();
  void set_allocated_optimization_parameters(::tensorflow::tpu::OptimizationParameters* value);
  void unsafe_arena_set_allocated_optimization_parameters(::tensorflow::tpu::OptimizationParameters* value);
  ::tensorflow::tpu::OptimizationParameters* unsafe_arena_release_optimization_parameters();

  private:
  const ::tensorflow::tpu::OptimizationParameters& _internal_optimization_parameters() const;
  ::tensorflow::tpu::OptimizationParameters* _internal_mutable_optimization_parameters();

  public:
  // int64 vocabulary_size = 2;
  void clear_vocabulary_size() ;
  ::int64_t vocabulary_size() const;
  void set_vocabulary_size(::int64_t value);

  private:
  ::int64_t _internal_vocabulary_size() const;
  void _internal_set_vocabulary_size(::int64_t value);

  public:
  // int32 dimension = 3;
  void clear_dimension() ;
  ::int32_t dimension() const;
  void set_dimension(::int32_t value);

  private:
  ::int32_t _internal_dimension() const;
  void _internal_set_dimension(::int32_t value);

  public:
  // int32 num_features = 4;
  void clear_num_features() ;
  ::int32_t num_features() const;
  void set_num_features(::int32_t value);

  private:
  ::int32_t _internal_num_features() const;
  void _internal_set_num_features(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      69, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TPUEmbeddingConfiguration_TableDescriptor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::tensorflow::tpu::OptimizationParameters* optimization_parameters_;
    ::int64_t vocabulary_size_;
    ::int32_t dimension_;
    ::int32_t num_features_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TPUEmbeddingConfiguration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.tpu.TPUEmbeddingConfiguration) */ {
 public:
  inline TPUEmbeddingConfiguration() : TPUEmbeddingConfiguration(nullptr) {}
  ~TPUEmbeddingConfiguration() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TPUEmbeddingConfiguration(
      ::google::protobuf::internal::ConstantInitialized);

  inline TPUEmbeddingConfiguration(const TPUEmbeddingConfiguration& from) : TPUEmbeddingConfiguration(nullptr, from) {}
  inline TPUEmbeddingConfiguration(TPUEmbeddingConfiguration&& from) noexcept
      : TPUEmbeddingConfiguration(nullptr, std::move(from)) {}
  inline TPUEmbeddingConfiguration& operator=(const TPUEmbeddingConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPUEmbeddingConfiguration& operator=(TPUEmbeddingConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPUEmbeddingConfiguration& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPUEmbeddingConfiguration* internal_default_instance() {
    return reinterpret_cast<const TPUEmbeddingConfiguration*>(
        &_TPUEmbeddingConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TPUEmbeddingConfiguration& a, TPUEmbeddingConfiguration& b) { a.Swap(&b); }
  inline void Swap(TPUEmbeddingConfiguration* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPUEmbeddingConfiguration* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPUEmbeddingConfiguration* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TPUEmbeddingConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TPUEmbeddingConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TPUEmbeddingConfiguration& from) { TPUEmbeddingConfiguration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TPUEmbeddingConfiguration* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.tpu.TPUEmbeddingConfiguration"; }

 protected:
  explicit TPUEmbeddingConfiguration(::google::protobuf::Arena* arena);
  TPUEmbeddingConfiguration(::google::protobuf::Arena* arena, const TPUEmbeddingConfiguration& from);
  TPUEmbeddingConfiguration(::google::protobuf::Arena* arena, TPUEmbeddingConfiguration&& from) noexcept
      : TPUEmbeddingConfiguration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TableDescriptor = TPUEmbeddingConfiguration_TableDescriptor;
  using FeatureDescriptor = TPUEmbeddingConfiguration_FeatureDescriptor;
  using SpmdSharding = TPUEmbeddingConfiguration_SpmdSharding;
  using Mode = TPUEmbeddingConfiguration_Mode;
  static constexpr Mode UNSPECIFIED = TPUEmbeddingConfiguration_Mode_UNSPECIFIED;
  static constexpr Mode INFERENCE = TPUEmbeddingConfiguration_Mode_INFERENCE;
  static constexpr Mode TRAINING = TPUEmbeddingConfiguration_Mode_TRAINING;
  static constexpr Mode BACKWARD_PASS_ONLY = TPUEmbeddingConfiguration_Mode_BACKWARD_PASS_ONLY;
  static inline bool Mode_IsValid(int value) {
    return TPUEmbeddingConfiguration_Mode_IsValid(value);
  }
  static constexpr Mode Mode_MIN = TPUEmbeddingConfiguration_Mode_Mode_MIN;
  static constexpr Mode Mode_MAX = TPUEmbeddingConfiguration_Mode_Mode_MAX;
  static constexpr int Mode_ARRAYSIZE = TPUEmbeddingConfiguration_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Mode_descriptor() {
    return TPUEmbeddingConfiguration_Mode_descriptor();
  }
  template <typename T>
  static inline const std::string& Mode_Name(T value) {
    return TPUEmbeddingConfiguration_Mode_Name(value);
  }
  static inline bool Mode_Parse(absl::string_view name, Mode* value) {
    return TPUEmbeddingConfiguration_Mode_Parse(name, value);
  }
  using ShardingStrategy = TPUEmbeddingConfiguration_ShardingStrategy;
  static constexpr ShardingStrategy DIV_DEFAULT = TPUEmbeddingConfiguration_ShardingStrategy_DIV_DEFAULT;
  static constexpr ShardingStrategy MOD = TPUEmbeddingConfiguration_ShardingStrategy_MOD;
  static inline bool ShardingStrategy_IsValid(int value) {
    return TPUEmbeddingConfiguration_ShardingStrategy_IsValid(value);
  }
  static constexpr ShardingStrategy ShardingStrategy_MIN = TPUEmbeddingConfiguration_ShardingStrategy_ShardingStrategy_MIN;
  static constexpr ShardingStrategy ShardingStrategy_MAX = TPUEmbeddingConfiguration_ShardingStrategy_ShardingStrategy_MAX;
  static constexpr int ShardingStrategy_ARRAYSIZE = TPUEmbeddingConfiguration_ShardingStrategy_ShardingStrategy_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ShardingStrategy_descriptor() {
    return TPUEmbeddingConfiguration_ShardingStrategy_descriptor();
  }
  template <typename T>
  static inline const std::string& ShardingStrategy_Name(T value) {
    return TPUEmbeddingConfiguration_ShardingStrategy_Name(value);
  }
  static inline bool ShardingStrategy_Parse(absl::string_view name, ShardingStrategy* value) {
    return TPUEmbeddingConfiguration_ShardingStrategy_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kTableDescriptorFieldNumber = 1,
    kFeatureDescriptorFieldNumber = 10,
    kProfileDataDirectoryFieldNumber = 9,
    kSpmdShardingFieldNumber = 11,
    kModeFieldNumber = 2,
    kBatchSizePerTensorCoreFieldNumber = 3,
    kNumHostsFieldNumber = 4,
    kNumTensorCoresFieldNumber = 5,
    kShardingStrategyFieldNumber = 6,
    kPipelineExecutionWithTensorCoreFieldNumber = 7,
  };
  // repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor table_descriptor = 1;
  int table_descriptor_size() const;
  private:
  int _internal_table_descriptor_size() const;

  public:
  void clear_table_descriptor() ;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor* mutable_table_descriptor(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor>* mutable_table_descriptor();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor>& _internal_table_descriptor() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor>* _internal_mutable_table_descriptor();
  public:
  const ::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor& table_descriptor(int index) const;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor* add_table_descriptor();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor>& table_descriptor() const;
  // repeated .tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor feature_descriptor = 10;
  int feature_descriptor_size() const;
  private:
  int _internal_feature_descriptor_size() const;

  public:
  void clear_feature_descriptor() ;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor* mutable_feature_descriptor(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor>* mutable_feature_descriptor();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor>& _internal_feature_descriptor() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor>* _internal_mutable_feature_descriptor();
  public:
  const ::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor& feature_descriptor(int index) const;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor* add_feature_descriptor();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor>& feature_descriptor() const;
  // string profile_data_directory = 9;
  void clear_profile_data_directory() ;
  const std::string& profile_data_directory() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_profile_data_directory(Arg_&& arg, Args_... args);
  std::string* mutable_profile_data_directory();
  PROTOBUF_NODISCARD std::string* release_profile_data_directory();
  void set_allocated_profile_data_directory(std::string* value);

  private:
  const std::string& _internal_profile_data_directory() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_profile_data_directory(
      const std::string& value);
  std::string* _internal_mutable_profile_data_directory();

  public:
  // .tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding spmd_sharding = 11;
  bool has_spmd_sharding() const;
  void clear_spmd_sharding() ;
  const ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding& spmd_sharding() const;
  PROTOBUF_NODISCARD ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* release_spmd_sharding();
  ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* mutable_spmd_sharding();
  void set_allocated_spmd_sharding(::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* value);
  void unsafe_arena_set_allocated_spmd_sharding(::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* value);
  ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* unsafe_arena_release_spmd_sharding();

  private:
  const ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding& _internal_spmd_sharding() const;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* _internal_mutable_spmd_sharding();

  public:
  // .tensorflow.tpu.TPUEmbeddingConfiguration.Mode mode = 2;
  void clear_mode() ;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_Mode mode() const;
  void set_mode(::tensorflow::tpu::TPUEmbeddingConfiguration_Mode value);

  private:
  ::tensorflow::tpu::TPUEmbeddingConfiguration_Mode _internal_mode() const;
  void _internal_set_mode(::tensorflow::tpu::TPUEmbeddingConfiguration_Mode value);

  public:
  // int32 batch_size_per_tensor_core = 3;
  void clear_batch_size_per_tensor_core() ;
  ::int32_t batch_size_per_tensor_core() const;
  void set_batch_size_per_tensor_core(::int32_t value);

  private:
  ::int32_t _internal_batch_size_per_tensor_core() const;
  void _internal_set_batch_size_per_tensor_core(::int32_t value);

  public:
  // int32 num_hosts = 4;
  void clear_num_hosts() ;
  ::int32_t num_hosts() const;
  void set_num_hosts(::int32_t value);

  private:
  ::int32_t _internal_num_hosts() const;
  void _internal_set_num_hosts(::int32_t value);

  public:
  // int32 num_tensor_cores = 5;
  void clear_num_tensor_cores() ;
  ::int32_t num_tensor_cores() const;
  void set_num_tensor_cores(::int32_t value);

  private:
  ::int32_t _internal_num_tensor_cores() const;
  void _internal_set_num_tensor_cores(::int32_t value);

  public:
  // .tensorflow.tpu.TPUEmbeddingConfiguration.ShardingStrategy sharding_strategy = 6;
  void clear_sharding_strategy() ;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy sharding_strategy() const;
  void set_sharding_strategy(::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy value);

  private:
  ::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy _internal_sharding_strategy() const;
  void _internal_set_sharding_strategy(::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy value);

  public:
  // bool pipeline_execution_with_tensor_core = 7;
  void clear_pipeline_execution_with_tensor_core() ;
  bool pipeline_execution_with_tensor_core() const;
  void set_pipeline_execution_with_tensor_core(bool value);

  private:
  bool _internal_pipeline_execution_with_tensor_core() const;
  void _internal_set_pipeline_execution_with_tensor_core(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUEmbeddingConfiguration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 3,
      79, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TPUEmbeddingConfiguration& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor > table_descriptor_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor > feature_descriptor_;
    ::google::protobuf::internal::ArenaStringPtr profile_data_directory_;
    ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* spmd_sharding_;
    int mode_;
    ::int32_t batch_size_per_tensor_core_;
    ::int32_t num_hosts_;
    ::int32_t num_tensor_cores_;
    int sharding_strategy_;
    bool pipeline_execution_with_tensor_core_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TPUEmbeddingConfiguration_TableDescriptor

// string name = 1;
inline void TPUEmbeddingConfiguration_TableDescriptor::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& TPUEmbeddingConfiguration_TableDescriptor::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TPUEmbeddingConfiguration_TableDescriptor::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.name)
}
inline std::string* TPUEmbeddingConfiguration_TableDescriptor::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.name)
  return _s;
}
inline const std::string& TPUEmbeddingConfiguration_TableDescriptor::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void TPUEmbeddingConfiguration_TableDescriptor::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* TPUEmbeddingConfiguration_TableDescriptor::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* TPUEmbeddingConfiguration_TableDescriptor::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.name)
  return _impl_.name_.Release();
}
inline void TPUEmbeddingConfiguration_TableDescriptor::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.name)
}

// int64 vocabulary_size = 2;
inline void TPUEmbeddingConfiguration_TableDescriptor::clear_vocabulary_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vocabulary_size_ = ::int64_t{0};
}
inline ::int64_t TPUEmbeddingConfiguration_TableDescriptor::vocabulary_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.vocabulary_size)
  return _internal_vocabulary_size();
}
inline void TPUEmbeddingConfiguration_TableDescriptor::set_vocabulary_size(::int64_t value) {
  _internal_set_vocabulary_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.vocabulary_size)
}
inline ::int64_t TPUEmbeddingConfiguration_TableDescriptor::_internal_vocabulary_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vocabulary_size_;
}
inline void TPUEmbeddingConfiguration_TableDescriptor::_internal_set_vocabulary_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vocabulary_size_ = value;
}

// int32 dimension = 3;
inline void TPUEmbeddingConfiguration_TableDescriptor::clear_dimension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimension_ = 0;
}
inline ::int32_t TPUEmbeddingConfiguration_TableDescriptor::dimension() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.dimension)
  return _internal_dimension();
}
inline void TPUEmbeddingConfiguration_TableDescriptor::set_dimension(::int32_t value) {
  _internal_set_dimension(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.dimension)
}
inline ::int32_t TPUEmbeddingConfiguration_TableDescriptor::_internal_dimension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dimension_;
}
inline void TPUEmbeddingConfiguration_TableDescriptor::_internal_set_dimension(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimension_ = value;
}

// int32 num_features = 4;
inline void TPUEmbeddingConfiguration_TableDescriptor::clear_num_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_features_ = 0;
}
inline ::int32_t TPUEmbeddingConfiguration_TableDescriptor::num_features() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.num_features)
  return _internal_num_features();
}
inline void TPUEmbeddingConfiguration_TableDescriptor::set_num_features(::int32_t value) {
  _internal_set_num_features(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.num_features)
}
inline ::int32_t TPUEmbeddingConfiguration_TableDescriptor::_internal_num_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_features_;
}
inline void TPUEmbeddingConfiguration_TableDescriptor::_internal_set_num_features(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_features_ = value;
}

// .tensorflow.tpu.OptimizationParameters optimization_parameters = 5;
inline bool TPUEmbeddingConfiguration_TableDescriptor::has_optimization_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optimization_parameters_ != nullptr);
  return value;
}
inline const ::tensorflow::tpu::OptimizationParameters& TPUEmbeddingConfiguration_TableDescriptor::_internal_optimization_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::tpu::OptimizationParameters* p = _impl_.optimization_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::tpu::OptimizationParameters&>(::tensorflow::tpu::_OptimizationParameters_default_instance_);
}
inline const ::tensorflow::tpu::OptimizationParameters& TPUEmbeddingConfiguration_TableDescriptor::optimization_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.optimization_parameters)
  return _internal_optimization_parameters();
}
inline void TPUEmbeddingConfiguration_TableDescriptor::unsafe_arena_set_allocated_optimization_parameters(::tensorflow::tpu::OptimizationParameters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optimization_parameters_);
  }
  _impl_.optimization_parameters_ = reinterpret_cast<::tensorflow::tpu::OptimizationParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.optimization_parameters)
}
inline ::tensorflow::tpu::OptimizationParameters* TPUEmbeddingConfiguration_TableDescriptor::release_optimization_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::tpu::OptimizationParameters* released = _impl_.optimization_parameters_;
  _impl_.optimization_parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::tpu::OptimizationParameters* TPUEmbeddingConfiguration_TableDescriptor::unsafe_arena_release_optimization_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.optimization_parameters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::tpu::OptimizationParameters* temp = _impl_.optimization_parameters_;
  _impl_.optimization_parameters_ = nullptr;
  return temp;
}
inline ::tensorflow::tpu::OptimizationParameters* TPUEmbeddingConfiguration_TableDescriptor::_internal_mutable_optimization_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optimization_parameters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::tpu::OptimizationParameters>(GetArena());
    _impl_.optimization_parameters_ = reinterpret_cast<::tensorflow::tpu::OptimizationParameters*>(p);
  }
  return _impl_.optimization_parameters_;
}
inline ::tensorflow::tpu::OptimizationParameters* TPUEmbeddingConfiguration_TableDescriptor::mutable_optimization_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::tpu::OptimizationParameters* _msg = _internal_mutable_optimization_parameters();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.optimization_parameters)
  return _msg;
}
inline void TPUEmbeddingConfiguration_TableDescriptor::set_allocated_optimization_parameters(::tensorflow::tpu::OptimizationParameters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optimization_parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optimization_parameters_ = reinterpret_cast<::tensorflow::tpu::OptimizationParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor.optimization_parameters)
}

// -------------------------------------------------------------------

// TPUEmbeddingConfiguration_FeatureDescriptor

// string name = 1;
inline void TPUEmbeddingConfiguration_FeatureDescriptor::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& TPUEmbeddingConfiguration_FeatureDescriptor::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TPUEmbeddingConfiguration_FeatureDescriptor::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.name)
}
inline std::string* TPUEmbeddingConfiguration_FeatureDescriptor::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.name)
  return _s;
}
inline const std::string& TPUEmbeddingConfiguration_FeatureDescriptor::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void TPUEmbeddingConfiguration_FeatureDescriptor::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* TPUEmbeddingConfiguration_FeatureDescriptor::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* TPUEmbeddingConfiguration_FeatureDescriptor::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.name)
  return _impl_.name_.Release();
}
inline void TPUEmbeddingConfiguration_FeatureDescriptor::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.name)
}

// int32 table_id = 2;
inline void TPUEmbeddingConfiguration_FeatureDescriptor::clear_table_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_id_ = 0;
}
inline ::int32_t TPUEmbeddingConfiguration_FeatureDescriptor::table_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.table_id)
  return _internal_table_id();
}
inline void TPUEmbeddingConfiguration_FeatureDescriptor::set_table_id(::int32_t value) {
  _internal_set_table_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.table_id)
}
inline ::int32_t TPUEmbeddingConfiguration_FeatureDescriptor::_internal_table_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_id_;
}
inline void TPUEmbeddingConfiguration_FeatureDescriptor::_internal_set_table_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_id_ = value;
}

// repeated int32 input_shape = 3;
inline int TPUEmbeddingConfiguration_FeatureDescriptor::_internal_input_shape_size() const {
  return _internal_input_shape().size();
}
inline int TPUEmbeddingConfiguration_FeatureDescriptor::input_shape_size() const {
  return _internal_input_shape_size();
}
inline void TPUEmbeddingConfiguration_FeatureDescriptor::clear_input_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_shape_.Clear();
}
inline ::int32_t TPUEmbeddingConfiguration_FeatureDescriptor::input_shape(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.input_shape)
  return _internal_input_shape().Get(index);
}
inline void TPUEmbeddingConfiguration_FeatureDescriptor::set_input_shape(int index, ::int32_t value) {
  _internal_mutable_input_shape()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.input_shape)
}
inline void TPUEmbeddingConfiguration_FeatureDescriptor::add_input_shape(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_input_shape()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.input_shape)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TPUEmbeddingConfiguration_FeatureDescriptor::input_shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.input_shape)
  return _internal_input_shape();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TPUEmbeddingConfiguration_FeatureDescriptor::mutable_input_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor.input_shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_input_shape();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TPUEmbeddingConfiguration_FeatureDescriptor::_internal_input_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_shape_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TPUEmbeddingConfiguration_FeatureDescriptor::_internal_mutable_input_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.input_shape_;
}

// -------------------------------------------------------------------

// TPUEmbeddingConfiguration_SpmdSharding

// bool enabled = 1;
inline void TPUEmbeddingConfiguration_SpmdSharding::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
}
inline bool TPUEmbeddingConfiguration_SpmdSharding::enabled() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding.enabled)
  return _internal_enabled();
}
inline void TPUEmbeddingConfiguration_SpmdSharding::set_enabled(bool value) {
  _internal_set_enabled(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding.enabled)
}
inline bool TPUEmbeddingConfiguration_SpmdSharding::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void TPUEmbeddingConfiguration_SpmdSharding::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// int32 num_cores_per_replica = 2;
inline void TPUEmbeddingConfiguration_SpmdSharding::clear_num_cores_per_replica() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_cores_per_replica_ = 0;
}
inline ::int32_t TPUEmbeddingConfiguration_SpmdSharding::num_cores_per_replica() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding.num_cores_per_replica)
  return _internal_num_cores_per_replica();
}
inline void TPUEmbeddingConfiguration_SpmdSharding::set_num_cores_per_replica(::int32_t value) {
  _internal_set_num_cores_per_replica(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding.num_cores_per_replica)
}
inline ::int32_t TPUEmbeddingConfiguration_SpmdSharding::_internal_num_cores_per_replica() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_cores_per_replica_;
}
inline void TPUEmbeddingConfiguration_SpmdSharding::_internal_set_num_cores_per_replica(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_cores_per_replica_ = value;
}

// bool use_manual_partitioning = 3;
inline void TPUEmbeddingConfiguration_SpmdSharding::clear_use_manual_partitioning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_manual_partitioning_ = false;
}
inline bool TPUEmbeddingConfiguration_SpmdSharding::use_manual_partitioning() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding.use_manual_partitioning)
  return _internal_use_manual_partitioning();
}
inline void TPUEmbeddingConfiguration_SpmdSharding::set_use_manual_partitioning(bool value) {
  _internal_set_use_manual_partitioning(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding.use_manual_partitioning)
}
inline bool TPUEmbeddingConfiguration_SpmdSharding::_internal_use_manual_partitioning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_manual_partitioning_;
}
inline void TPUEmbeddingConfiguration_SpmdSharding::_internal_set_use_manual_partitioning(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_manual_partitioning_ = value;
}

// -------------------------------------------------------------------

// TPUEmbeddingConfiguration

// repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TableDescriptor table_descriptor = 1;
inline int TPUEmbeddingConfiguration::_internal_table_descriptor_size() const {
  return _internal_table_descriptor().size();
}
inline int TPUEmbeddingConfiguration::table_descriptor_size() const {
  return _internal_table_descriptor_size();
}
inline void TPUEmbeddingConfiguration::clear_table_descriptor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_descriptor_.Clear();
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor* TPUEmbeddingConfiguration::mutable_table_descriptor(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUEmbeddingConfiguration.table_descriptor)
  return _internal_mutable_table_descriptor()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor>* TPUEmbeddingConfiguration::mutable_table_descriptor()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TPUEmbeddingConfiguration.table_descriptor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_table_descriptor();
}
inline const ::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor& TPUEmbeddingConfiguration::table_descriptor(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.table_descriptor)
  return _internal_table_descriptor().Get(index);
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor* TPUEmbeddingConfiguration::add_table_descriptor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor* _add = _internal_mutable_table_descriptor()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TPUEmbeddingConfiguration.table_descriptor)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor>& TPUEmbeddingConfiguration::table_descriptor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TPUEmbeddingConfiguration.table_descriptor)
  return _internal_table_descriptor();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor>&
TPUEmbeddingConfiguration::_internal_table_descriptor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_descriptor_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_TableDescriptor>*
TPUEmbeddingConfiguration::_internal_mutable_table_descriptor() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.table_descriptor_;
}

// .tensorflow.tpu.TPUEmbeddingConfiguration.Mode mode = 2;
inline void TPUEmbeddingConfiguration::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_Mode TPUEmbeddingConfiguration::mode() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.mode)
  return _internal_mode();
}
inline void TPUEmbeddingConfiguration::set_mode(::tensorflow::tpu::TPUEmbeddingConfiguration_Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.mode)
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_Mode TPUEmbeddingConfiguration::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::tpu::TPUEmbeddingConfiguration_Mode>(_impl_.mode_);
}
inline void TPUEmbeddingConfiguration::_internal_set_mode(::tensorflow::tpu::TPUEmbeddingConfiguration_Mode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// int32 batch_size_per_tensor_core = 3;
inline void TPUEmbeddingConfiguration::clear_batch_size_per_tensor_core() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.batch_size_per_tensor_core_ = 0;
}
inline ::int32_t TPUEmbeddingConfiguration::batch_size_per_tensor_core() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.batch_size_per_tensor_core)
  return _internal_batch_size_per_tensor_core();
}
inline void TPUEmbeddingConfiguration::set_batch_size_per_tensor_core(::int32_t value) {
  _internal_set_batch_size_per_tensor_core(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.batch_size_per_tensor_core)
}
inline ::int32_t TPUEmbeddingConfiguration::_internal_batch_size_per_tensor_core() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.batch_size_per_tensor_core_;
}
inline void TPUEmbeddingConfiguration::_internal_set_batch_size_per_tensor_core(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.batch_size_per_tensor_core_ = value;
}

// int32 num_hosts = 4;
inline void TPUEmbeddingConfiguration::clear_num_hosts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_hosts_ = 0;
}
inline ::int32_t TPUEmbeddingConfiguration::num_hosts() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.num_hosts)
  return _internal_num_hosts();
}
inline void TPUEmbeddingConfiguration::set_num_hosts(::int32_t value) {
  _internal_set_num_hosts(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.num_hosts)
}
inline ::int32_t TPUEmbeddingConfiguration::_internal_num_hosts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_hosts_;
}
inline void TPUEmbeddingConfiguration::_internal_set_num_hosts(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_hosts_ = value;
}

// int32 num_tensor_cores = 5;
inline void TPUEmbeddingConfiguration::clear_num_tensor_cores() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_tensor_cores_ = 0;
}
inline ::int32_t TPUEmbeddingConfiguration::num_tensor_cores() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.num_tensor_cores)
  return _internal_num_tensor_cores();
}
inline void TPUEmbeddingConfiguration::set_num_tensor_cores(::int32_t value) {
  _internal_set_num_tensor_cores(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.num_tensor_cores)
}
inline ::int32_t TPUEmbeddingConfiguration::_internal_num_tensor_cores() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_tensor_cores_;
}
inline void TPUEmbeddingConfiguration::_internal_set_num_tensor_cores(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_tensor_cores_ = value;
}

// .tensorflow.tpu.TPUEmbeddingConfiguration.ShardingStrategy sharding_strategy = 6;
inline void TPUEmbeddingConfiguration::clear_sharding_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sharding_strategy_ = 0;
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy TPUEmbeddingConfiguration::sharding_strategy() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.sharding_strategy)
  return _internal_sharding_strategy();
}
inline void TPUEmbeddingConfiguration::set_sharding_strategy(::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy value) {
  _internal_set_sharding_strategy(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.sharding_strategy)
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy TPUEmbeddingConfiguration::_internal_sharding_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy>(_impl_.sharding_strategy_);
}
inline void TPUEmbeddingConfiguration::_internal_set_sharding_strategy(::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sharding_strategy_ = value;
}

// bool pipeline_execution_with_tensor_core = 7;
inline void TPUEmbeddingConfiguration::clear_pipeline_execution_with_tensor_core() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pipeline_execution_with_tensor_core_ = false;
}
inline bool TPUEmbeddingConfiguration::pipeline_execution_with_tensor_core() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.pipeline_execution_with_tensor_core)
  return _internal_pipeline_execution_with_tensor_core();
}
inline void TPUEmbeddingConfiguration::set_pipeline_execution_with_tensor_core(bool value) {
  _internal_set_pipeline_execution_with_tensor_core(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.pipeline_execution_with_tensor_core)
}
inline bool TPUEmbeddingConfiguration::_internal_pipeline_execution_with_tensor_core() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pipeline_execution_with_tensor_core_;
}
inline void TPUEmbeddingConfiguration::_internal_set_pipeline_execution_with_tensor_core(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pipeline_execution_with_tensor_core_ = value;
}

// string profile_data_directory = 9;
inline void TPUEmbeddingConfiguration::clear_profile_data_directory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_data_directory_.ClearToEmpty();
}
inline const std::string& TPUEmbeddingConfiguration::profile_data_directory() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.profile_data_directory)
  return _internal_profile_data_directory();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TPUEmbeddingConfiguration::set_profile_data_directory(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_data_directory_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.tpu.TPUEmbeddingConfiguration.profile_data_directory)
}
inline std::string* TPUEmbeddingConfiguration::mutable_profile_data_directory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_profile_data_directory();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUEmbeddingConfiguration.profile_data_directory)
  return _s;
}
inline const std::string& TPUEmbeddingConfiguration::_internal_profile_data_directory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profile_data_directory_.Get();
}
inline void TPUEmbeddingConfiguration::_internal_set_profile_data_directory(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_data_directory_.Set(value, GetArena());
}
inline std::string* TPUEmbeddingConfiguration::_internal_mutable_profile_data_directory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.profile_data_directory_.Mutable( GetArena());
}
inline std::string* TPUEmbeddingConfiguration::release_profile_data_directory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUEmbeddingConfiguration.profile_data_directory)
  return _impl_.profile_data_directory_.Release();
}
inline void TPUEmbeddingConfiguration::set_allocated_profile_data_directory(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_data_directory_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.profile_data_directory_.IsDefault()) {
          _impl_.profile_data_directory_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUEmbeddingConfiguration.profile_data_directory)
}

// repeated .tensorflow.tpu.TPUEmbeddingConfiguration.FeatureDescriptor feature_descriptor = 10;
inline int TPUEmbeddingConfiguration::_internal_feature_descriptor_size() const {
  return _internal_feature_descriptor().size();
}
inline int TPUEmbeddingConfiguration::feature_descriptor_size() const {
  return _internal_feature_descriptor_size();
}
inline void TPUEmbeddingConfiguration::clear_feature_descriptor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feature_descriptor_.Clear();
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor* TPUEmbeddingConfiguration::mutable_feature_descriptor(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUEmbeddingConfiguration.feature_descriptor)
  return _internal_mutable_feature_descriptor()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor>* TPUEmbeddingConfiguration::mutable_feature_descriptor()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.tpu.TPUEmbeddingConfiguration.feature_descriptor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_feature_descriptor();
}
inline const ::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor& TPUEmbeddingConfiguration::feature_descriptor(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.feature_descriptor)
  return _internal_feature_descriptor().Get(index);
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor* TPUEmbeddingConfiguration::add_feature_descriptor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor* _add = _internal_mutable_feature_descriptor()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.tpu.TPUEmbeddingConfiguration.feature_descriptor)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor>& TPUEmbeddingConfiguration::feature_descriptor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.tpu.TPUEmbeddingConfiguration.feature_descriptor)
  return _internal_feature_descriptor();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor>&
TPUEmbeddingConfiguration::_internal_feature_descriptor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.feature_descriptor_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::tpu::TPUEmbeddingConfiguration_FeatureDescriptor>*
TPUEmbeddingConfiguration::_internal_mutable_feature_descriptor() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.feature_descriptor_;
}

// .tensorflow.tpu.TPUEmbeddingConfiguration.SpmdSharding spmd_sharding = 11;
inline bool TPUEmbeddingConfiguration::has_spmd_sharding() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spmd_sharding_ != nullptr);
  return value;
}
inline void TPUEmbeddingConfiguration::clear_spmd_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spmd_sharding_ != nullptr) _impl_.spmd_sharding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding& TPUEmbeddingConfiguration::_internal_spmd_sharding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* p = _impl_.spmd_sharding_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding&>(::tensorflow::tpu::_TPUEmbeddingConfiguration_SpmdSharding_default_instance_);
}
inline const ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding& TPUEmbeddingConfiguration::spmd_sharding() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.TPUEmbeddingConfiguration.spmd_sharding)
  return _internal_spmd_sharding();
}
inline void TPUEmbeddingConfiguration::unsafe_arena_set_allocated_spmd_sharding(::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spmd_sharding_);
  }
  _impl_.spmd_sharding_ = reinterpret_cast<::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.TPUEmbeddingConfiguration.spmd_sharding)
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* TPUEmbeddingConfiguration::release_spmd_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* released = _impl_.spmd_sharding_;
  _impl_.spmd_sharding_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* TPUEmbeddingConfiguration::unsafe_arena_release_spmd_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.tpu.TPUEmbeddingConfiguration.spmd_sharding)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* temp = _impl_.spmd_sharding_;
  _impl_.spmd_sharding_ = nullptr;
  return temp;
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* TPUEmbeddingConfiguration::_internal_mutable_spmd_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spmd_sharding_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding>(GetArena());
    _impl_.spmd_sharding_ = reinterpret_cast<::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding*>(p);
  }
  return _impl_.spmd_sharding_;
}
inline ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* TPUEmbeddingConfiguration::mutable_spmd_sharding() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* _msg = _internal_mutable_spmd_sharding();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.TPUEmbeddingConfiguration.spmd_sharding)
  return _msg;
}
inline void TPUEmbeddingConfiguration::set_allocated_spmd_sharding(::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.spmd_sharding_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.spmd_sharding_ = reinterpret_cast<::tensorflow::tpu::TPUEmbeddingConfiguration_SpmdSharding*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUEmbeddingConfiguration.spmd_sharding)
}

// -------------------------------------------------------------------

// TPUEmbeddingError

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tpu
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::tpu::TPUEmbeddingConfiguration_Mode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::tpu::TPUEmbeddingConfiguration_Mode>() {
  return ::tensorflow::tpu::TPUEmbeddingConfiguration_Mode_descriptor();
}
template <>
struct is_proto_enum<::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy>() {
  return ::tensorflow::tpu::TPUEmbeddingConfiguration_ShardingStrategy_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2ftpu_2ftpu_5fembedding_5fconfiguration_2eproto_2epb_2eh
