// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/worker.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2fworker_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2fworker_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "tensorflow/core/framework/cost_graph.pb.h"
#include "tensorflow/core/framework/device_attributes.pb.h"
#include "tensorflow/core/framework/graph.pb.h"
#include "tensorflow/core/framework/step_stats.pb.h"
#include "tensorflow/core/framework/tensor.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/types.pb.h"
#include "tensorflow/core/protobuf/config.pb.h"
#include "tensorflow/core/protobuf/debug.pb.h"
#include "tensorflow/core/protobuf/error_codes.pb.h"
#include "tensorflow/core/protobuf/named_tensor.pb.h"
#include "tensorflow/core/protobuf/tensorflow_server.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fworker_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
namespace tensorflow {
class CleanupAllRequest;
struct CleanupAllRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern CleanupAllRequestDefaultTypeInternal _CleanupAllRequest_default_instance_;
class CleanupAllResponse;
struct CleanupAllResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern CleanupAllResponseDefaultTypeInternal _CleanupAllResponse_default_instance_;
class CleanupGraphRequest;
struct CleanupGraphRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern CleanupGraphRequestDefaultTypeInternal _CleanupGraphRequest_default_instance_;
class CleanupGraphResponse;
struct CleanupGraphResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern CleanupGraphResponseDefaultTypeInternal _CleanupGraphResponse_default_instance_;
class CompleteGroupRequest;
struct CompleteGroupRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern CompleteGroupRequestDefaultTypeInternal _CompleteGroupRequest_default_instance_;
class CompleteGroupResponse;
struct CompleteGroupResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern CompleteGroupResponseDefaultTypeInternal _CompleteGroupResponse_default_instance_;
class CompleteInstanceRequest;
struct CompleteInstanceRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern CompleteInstanceRequestDefaultTypeInternal _CompleteInstanceRequest_default_instance_;
class CompleteInstanceResponse;
struct CompleteInstanceResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern CompleteInstanceResponseDefaultTypeInternal _CompleteInstanceResponse_default_instance_;
class CreateWorkerSessionRequest;
struct CreateWorkerSessionRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern CreateWorkerSessionRequestDefaultTypeInternal _CreateWorkerSessionRequest_default_instance_;
class CreateWorkerSessionResponse;
struct CreateWorkerSessionResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern CreateWorkerSessionResponseDefaultTypeInternal _CreateWorkerSessionResponse_default_instance_;
class DeleteWorkerSessionRequest;
struct DeleteWorkerSessionRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern DeleteWorkerSessionRequestDefaultTypeInternal _DeleteWorkerSessionRequest_default_instance_;
class DeleteWorkerSessionResponse;
struct DeleteWorkerSessionResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern DeleteWorkerSessionResponseDefaultTypeInternal _DeleteWorkerSessionResponse_default_instance_;
class DeregisterGraphRequest;
struct DeregisterGraphRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern DeregisterGraphRequestDefaultTypeInternal _DeregisterGraphRequest_default_instance_;
class DeregisterGraphResponse;
struct DeregisterGraphResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern DeregisterGraphResponseDefaultTypeInternal _DeregisterGraphResponse_default_instance_;
class ExecutorOpts;
struct ExecutorOptsDefaultTypeInternal;
PROTOBUF_EXPORT extern ExecutorOptsDefaultTypeInternal _ExecutorOpts_default_instance_;
class GetStatusRequest;
struct GetStatusRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern GetStatusRequestDefaultTypeInternal _GetStatusRequest_default_instance_;
class GetStatusResponse;
struct GetStatusResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern GetStatusResponseDefaultTypeInternal _GetStatusResponse_default_instance_;
class GetStepSequenceRequest;
struct GetStepSequenceRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern GetStepSequenceRequestDefaultTypeInternal _GetStepSequenceRequest_default_instance_;
class GetStepSequenceResponse;
struct GetStepSequenceResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern GetStepSequenceResponseDefaultTypeInternal _GetStepSequenceResponse_default_instance_;
class LabeledStepStats;
struct LabeledStepStatsDefaultTypeInternal;
PROTOBUF_EXPORT extern LabeledStepStatsDefaultTypeInternal _LabeledStepStats_default_instance_;
class LoggingRequest;
struct LoggingRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern LoggingRequestDefaultTypeInternal _LoggingRequest_default_instance_;
class LoggingResponse;
struct LoggingResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern LoggingResponseDefaultTypeInternal _LoggingResponse_default_instance_;
class MarkRecvFinishedRequest;
struct MarkRecvFinishedRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern MarkRecvFinishedRequestDefaultTypeInternal _MarkRecvFinishedRequest_default_instance_;
class MarkRecvFinishedResponse;
struct MarkRecvFinishedResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern MarkRecvFinishedResponseDefaultTypeInternal _MarkRecvFinishedResponse_default_instance_;
class RecvBufRequest;
struct RecvBufRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern RecvBufRequestDefaultTypeInternal _RecvBufRequest_default_instance_;
class RecvBufResponse;
struct RecvBufResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern RecvBufResponseDefaultTypeInternal _RecvBufResponse_default_instance_;
class RecvTensorRequest;
struct RecvTensorRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern RecvTensorRequestDefaultTypeInternal _RecvTensorRequest_default_instance_;
class RecvTensorResponse;
struct RecvTensorResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern RecvTensorResponseDefaultTypeInternal _RecvTensorResponse_default_instance_;
class RegisterGraphRequest;
struct RegisterGraphRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern RegisterGraphRequestDefaultTypeInternal _RegisterGraphRequest_default_instance_;
class RegisterGraphResponse;
struct RegisterGraphResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern RegisterGraphResponseDefaultTypeInternal _RegisterGraphResponse_default_instance_;
class RunGraphRequest;
struct RunGraphRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern RunGraphRequestDefaultTypeInternal _RunGraphRequest_default_instance_;
class RunGraphResponse;
struct RunGraphResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern RunGraphResponseDefaultTypeInternal _RunGraphResponse_default_instance_;
class StepSequence;
struct StepSequenceDefaultTypeInternal;
PROTOBUF_EXPORT extern StepSequenceDefaultTypeInternal _StepSequence_default_instance_;
class TraceOpts;
struct TraceOptsDefaultTypeInternal;
PROTOBUF_EXPORT extern TraceOptsDefaultTypeInternal _TraceOpts_default_instance_;
class TracingRequest;
struct TracingRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern TracingRequestDefaultTypeInternal _TracingRequest_default_instance_;
class TracingResponse;
struct TracingResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern TracingResponseDefaultTypeInternal _TracingResponse_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT TracingResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.TracingResponse) */ {
 public:
  inline TracingResponse() : TracingResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TracingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TracingResponse(const TracingResponse& from) : TracingResponse(nullptr, from) {}
  inline TracingResponse(TracingResponse&& from) noexcept
      : TracingResponse(nullptr, std::move(from)) {}
  inline TracingResponse& operator=(const TracingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TracingResponse& operator=(TracingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TracingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TracingResponse* internal_default_instance() {
    return reinterpret_cast<const TracingResponse*>(
        &_TracingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(TracingResponse& a, TracingResponse& b) { a.Swap(&b); }
  inline void Swap(TracingResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TracingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TracingResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TracingResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TracingResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TracingResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.TracingResponse"; }

 protected:
  explicit TracingResponse(::google::protobuf::Arena* arena);
  TracingResponse(::google::protobuf::Arena* arena, const TracingResponse& from);
  TracingResponse(::google::protobuf::Arena* arena, TracingResponse&& from) noexcept
      : TracingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.TracingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TracingResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TraceOpts final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.TraceOpts) */ {
 public:
  inline TraceOpts() : TraceOpts(nullptr) {}
  ~TraceOpts() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TraceOpts(
      ::google::protobuf::internal::ConstantInitialized);

  inline TraceOpts(const TraceOpts& from) : TraceOpts(nullptr, from) {}
  inline TraceOpts(TraceOpts&& from) noexcept
      : TraceOpts(nullptr, std::move(from)) {}
  inline TraceOpts& operator=(const TraceOpts& from) {
    CopyFrom(from);
    return *this;
  }
  inline TraceOpts& operator=(TraceOpts&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TraceOpts& default_instance() {
    return *internal_default_instance();
  }
  static inline const TraceOpts* internal_default_instance() {
    return reinterpret_cast<const TraceOpts*>(
        &_TraceOpts_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(TraceOpts& a, TraceOpts& b) { a.Swap(&b); }
  inline void Swap(TraceOpts* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TraceOpts* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TraceOpts* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TraceOpts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TraceOpts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TraceOpts& from) { TraceOpts::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TraceOpts* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.TraceOpts"; }

 protected:
  explicit TraceOpts(::google::protobuf::Arena* arena);
  TraceOpts(::google::protobuf::Arena* arena, const TraceOpts& from);
  TraceOpts(::google::protobuf::Arena* arena, TraceOpts&& from) noexcept
      : TraceOpts(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDurationFieldNumber = 1,
    kUseStepProfilerFieldNumber = 2,
    kUseKernelProfilerFieldNumber = 3,
    kUseExtendedProfilerFieldNumber = 4,
    kUseGpuProfilerFieldNumber = 5,
    kUseSampleProfilerFieldNumber = 6,
  };
  // double duration = 1;
  void clear_duration() ;
  double duration() const;
  void set_duration(double value);

  private:
  double _internal_duration() const;
  void _internal_set_duration(double value);

  public:
  // bool use_step_profiler = 2;
  void clear_use_step_profiler() ;
  bool use_step_profiler() const;
  void set_use_step_profiler(bool value);

  private:
  bool _internal_use_step_profiler() const;
  void _internal_set_use_step_profiler(bool value);

  public:
  // bool use_kernel_profiler = 3;
  void clear_use_kernel_profiler() ;
  bool use_kernel_profiler() const;
  void set_use_kernel_profiler(bool value);

  private:
  bool _internal_use_kernel_profiler() const;
  void _internal_set_use_kernel_profiler(bool value);

  public:
  // bool use_extended_profiler = 4;
  void clear_use_extended_profiler() ;
  bool use_extended_profiler() const;
  void set_use_extended_profiler(bool value);

  private:
  bool _internal_use_extended_profiler() const;
  void _internal_set_use_extended_profiler(bool value);

  public:
  // bool use_gpu_profiler = 5;
  void clear_use_gpu_profiler() ;
  bool use_gpu_profiler() const;
  void set_use_gpu_profiler(bool value);

  private:
  bool _internal_use_gpu_profiler() const;
  void _internal_set_use_gpu_profiler(bool value);

  public:
  // bool use_sample_profiler = 6;
  void clear_use_sample_profiler() ;
  bool use_sample_profiler() const;
  void set_use_sample_profiler(bool value);

  private:
  bool _internal_use_sample_profiler() const;
  void _internal_set_use_sample_profiler(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.TraceOpts)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TraceOpts& from_msg);
    double duration_;
    bool use_step_profiler_;
    bool use_kernel_profiler_;
    bool use_extended_profiler_;
    bool use_gpu_profiler_;
    bool use_sample_profiler_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT StepSequence final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.StepSequence) */ {
 public:
  inline StepSequence() : StepSequence(nullptr) {}
  ~StepSequence() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepSequence(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepSequence(const StepSequence& from) : StepSequence(nullptr, from) {}
  inline StepSequence(StepSequence&& from) noexcept
      : StepSequence(nullptr, std::move(from)) {}
  inline StepSequence& operator=(const StepSequence& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepSequence& operator=(StepSequence&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepSequence& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepSequence* internal_default_instance() {
    return reinterpret_cast<const StepSequence*>(
        &_StepSequence_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(StepSequence& a, StepSequence& b) { a.Swap(&b); }
  inline void Swap(StepSequence* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepSequence* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepSequence* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StepSequence>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepSequence& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepSequence& from) { StepSequence::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StepSequence* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.StepSequence"; }

 protected:
  explicit StepSequence(::google::protobuf::Arena* arena);
  StepSequence(::google::protobuf::Arena* arena, const StepSequence& from);
  StepSequence(::google::protobuf::Arena* arena, StepSequence&& from) noexcept
      : StepSequence(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGraphKeyFieldNumber = 1,
    kNextStepIdFieldNumber = 2,
  };
  // int64 graph_key = 1;
  void clear_graph_key() ;
  ::int64_t graph_key() const;
  void set_graph_key(::int64_t value);

  private:
  ::int64_t _internal_graph_key() const;
  void _internal_set_graph_key(::int64_t value);

  public:
  // int64 next_step_id = 2;
  void clear_next_step_id() ;
  ::int64_t next_step_id() const;
  void set_next_step_id(::int64_t value);

  private:
  ::int64_t _internal_next_step_id() const;
  void _internal_set_next_step_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.StepSequence)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepSequence& from_msg);
    ::int64_t graph_key_;
    ::int64_t next_step_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RegisterGraphResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RegisterGraphResponse) */ {
 public:
  inline RegisterGraphResponse() : RegisterGraphResponse(nullptr) {}
  ~RegisterGraphResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterGraphResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterGraphResponse(const RegisterGraphResponse& from) : RegisterGraphResponse(nullptr, from) {}
  inline RegisterGraphResponse(RegisterGraphResponse&& from) noexcept
      : RegisterGraphResponse(nullptr, std::move(from)) {}
  inline RegisterGraphResponse& operator=(const RegisterGraphResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterGraphResponse& operator=(RegisterGraphResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterGraphResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterGraphResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterGraphResponse*>(
        &_RegisterGraphResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(RegisterGraphResponse& a, RegisterGraphResponse& b) { a.Swap(&b); }
  inline void Swap(RegisterGraphResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterGraphResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterGraphResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RegisterGraphResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterGraphResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterGraphResponse& from) { RegisterGraphResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterGraphResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.RegisterGraphResponse"; }

 protected:
  explicit RegisterGraphResponse(::google::protobuf::Arena* arena);
  RegisterGraphResponse(::google::protobuf::Arena* arena, const RegisterGraphResponse& from);
  RegisterGraphResponse(::google::protobuf::Arena* arena, RegisterGraphResponse&& from) noexcept
      : RegisterGraphResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGraphHandleFieldNumber = 1,
  };
  // string graph_handle = 1;
  void clear_graph_handle() ;
  const std::string& graph_handle() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_graph_handle(Arg_&& arg, Args_... args);
  std::string* mutable_graph_handle();
  PROTOBUF_NODISCARD std::string* release_graph_handle();
  void set_allocated_graph_handle(std::string* value);

  private:
  const std::string& _internal_graph_handle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_graph_handle(
      const std::string& value);
  std::string* _internal_mutable_graph_handle();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RegisterGraphResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      53, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterGraphResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr graph_handle_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT MarkRecvFinishedResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.MarkRecvFinishedResponse) */ {
 public:
  inline MarkRecvFinishedResponse() : MarkRecvFinishedResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarkRecvFinishedResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MarkRecvFinishedResponse(const MarkRecvFinishedResponse& from) : MarkRecvFinishedResponse(nullptr, from) {}
  inline MarkRecvFinishedResponse(MarkRecvFinishedResponse&& from) noexcept
      : MarkRecvFinishedResponse(nullptr, std::move(from)) {}
  inline MarkRecvFinishedResponse& operator=(const MarkRecvFinishedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarkRecvFinishedResponse& operator=(MarkRecvFinishedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarkRecvFinishedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarkRecvFinishedResponse* internal_default_instance() {
    return reinterpret_cast<const MarkRecvFinishedResponse*>(
        &_MarkRecvFinishedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(MarkRecvFinishedResponse& a, MarkRecvFinishedResponse& b) { a.Swap(&b); }
  inline void Swap(MarkRecvFinishedResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarkRecvFinishedResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarkRecvFinishedResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MarkRecvFinishedResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MarkRecvFinishedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MarkRecvFinishedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.MarkRecvFinishedResponse"; }

 protected:
  explicit MarkRecvFinishedResponse(::google::protobuf::Arena* arena);
  MarkRecvFinishedResponse(::google::protobuf::Arena* arena, const MarkRecvFinishedResponse& from);
  MarkRecvFinishedResponse(::google::protobuf::Arena* arena, MarkRecvFinishedResponse&& from) noexcept
      : MarkRecvFinishedResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.MarkRecvFinishedResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MarkRecvFinishedResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT MarkRecvFinishedRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.MarkRecvFinishedRequest) */ {
 public:
  inline MarkRecvFinishedRequest() : MarkRecvFinishedRequest(nullptr) {}
  ~MarkRecvFinishedRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarkRecvFinishedRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline MarkRecvFinishedRequest(const MarkRecvFinishedRequest& from) : MarkRecvFinishedRequest(nullptr, from) {}
  inline MarkRecvFinishedRequest(MarkRecvFinishedRequest&& from) noexcept
      : MarkRecvFinishedRequest(nullptr, std::move(from)) {}
  inline MarkRecvFinishedRequest& operator=(const MarkRecvFinishedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarkRecvFinishedRequest& operator=(MarkRecvFinishedRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarkRecvFinishedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarkRecvFinishedRequest* internal_default_instance() {
    return reinterpret_cast<const MarkRecvFinishedRequest*>(
        &_MarkRecvFinishedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(MarkRecvFinishedRequest& a, MarkRecvFinishedRequest& b) { a.Swap(&b); }
  inline void Swap(MarkRecvFinishedRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarkRecvFinishedRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarkRecvFinishedRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MarkRecvFinishedRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarkRecvFinishedRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarkRecvFinishedRequest& from) { MarkRecvFinishedRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MarkRecvFinishedRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.MarkRecvFinishedRequest"; }

 protected:
  explicit MarkRecvFinishedRequest(::google::protobuf::Arena* arena);
  MarkRecvFinishedRequest(::google::protobuf::Arena* arena, const MarkRecvFinishedRequest& from);
  MarkRecvFinishedRequest(::google::protobuf::Arena* arena, MarkRecvFinishedRequest&& from) noexcept
      : MarkRecvFinishedRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestIdFieldNumber = 1,
  };
  // int64 request_id = 1;
  void clear_request_id() ;
  ::int64_t request_id() const;
  void set_request_id(::int64_t value);

  private:
  ::int64_t _internal_request_id() const;
  void _internal_set_request_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.MarkRecvFinishedRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MarkRecvFinishedRequest& from_msg);
    ::int64_t request_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT LoggingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.LoggingRequest) */ {
 public:
  inline LoggingRequest() : LoggingRequest(nullptr) {}
  ~LoggingRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoggingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoggingRequest(const LoggingRequest& from) : LoggingRequest(nullptr, from) {}
  inline LoggingRequest(LoggingRequest&& from) noexcept
      : LoggingRequest(nullptr, std::move(from)) {}
  inline LoggingRequest& operator=(const LoggingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoggingRequest& operator=(LoggingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoggingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoggingRequest* internal_default_instance() {
    return reinterpret_cast<const LoggingRequest*>(
        &_LoggingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(LoggingRequest& a, LoggingRequest& b) { a.Swap(&b); }
  inline void Swap(LoggingRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoggingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoggingRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LoggingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoggingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoggingRequest& from) { LoggingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoggingRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.LoggingRequest"; }

 protected:
  explicit LoggingRequest(::google::protobuf::Arena* arena);
  LoggingRequest(::google::protobuf::Arena* arena, const LoggingRequest& from);
  LoggingRequest(::google::protobuf::Arena* arena, LoggingRequest&& from) noexcept
      : LoggingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFetchStepIdFieldNumber = 3,
    kEnableRpcLoggingFieldNumber = 1,
    kDisableRpcLoggingFieldNumber = 4,
    kClearFieldNumber = 2,
  };
  // repeated int64 fetch_step_id = 3;
  int fetch_step_id_size() const;
  private:
  int _internal_fetch_step_id_size() const;

  public:
  void clear_fetch_step_id() ;
  ::int64_t fetch_step_id(int index) const;
  void set_fetch_step_id(int index, ::int64_t value);
  void add_fetch_step_id(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& fetch_step_id() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_fetch_step_id();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_fetch_step_id() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_fetch_step_id();

  public:
  // bool enable_rpc_logging = 1;
  void clear_enable_rpc_logging() ;
  bool enable_rpc_logging() const;
  void set_enable_rpc_logging(bool value);

  private:
  bool _internal_enable_rpc_logging() const;
  void _internal_set_enable_rpc_logging(bool value);

  public:
  // bool disable_rpc_logging = 4;
  void clear_disable_rpc_logging() ;
  bool disable_rpc_logging() const;
  void set_disable_rpc_logging(bool value);

  private:
  bool _internal_disable_rpc_logging() const;
  void _internal_set_disable_rpc_logging(bool value);

  public:
  // bool clear = 2;
  void clear_clear() ;
  bool clear() const;
  void set_clear(bool value);

  private:
  bool _internal_clear() const;
  void _internal_set_clear(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.LoggingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoggingRequest& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> fetch_step_id_;
    mutable ::google::protobuf::internal::CachedSize _fetch_step_id_cached_byte_size_;
    bool enable_rpc_logging_;
    bool disable_rpc_logging_;
    bool clear_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GetStepSequenceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GetStepSequenceRequest) */ {
 public:
  inline GetStepSequenceRequest() : GetStepSequenceRequest(nullptr) {}
  ~GetStepSequenceRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStepSequenceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStepSequenceRequest(const GetStepSequenceRequest& from) : GetStepSequenceRequest(nullptr, from) {}
  inline GetStepSequenceRequest(GetStepSequenceRequest&& from) noexcept
      : GetStepSequenceRequest(nullptr, std::move(from)) {}
  inline GetStepSequenceRequest& operator=(const GetStepSequenceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStepSequenceRequest& operator=(GetStepSequenceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStepSequenceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStepSequenceRequest* internal_default_instance() {
    return reinterpret_cast<const GetStepSequenceRequest*>(
        &_GetStepSequenceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(GetStepSequenceRequest& a, GetStepSequenceRequest& b) { a.Swap(&b); }
  inline void Swap(GetStepSequenceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStepSequenceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStepSequenceRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetStepSequenceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStepSequenceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetStepSequenceRequest& from) { GetStepSequenceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStepSequenceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GetStepSequenceRequest"; }

 protected:
  explicit GetStepSequenceRequest(::google::protobuf::Arena* arena);
  GetStepSequenceRequest(::google::protobuf::Arena* arena, const GetStepSequenceRequest& from);
  GetStepSequenceRequest(::google::protobuf::Arena* arena, GetStepSequenceRequest&& from) noexcept
      : GetStepSequenceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGraphKeyFieldNumber = 1,
  };
  // repeated int64 graph_key = 1;
  int graph_key_size() const;
  private:
  int _internal_graph_key_size() const;

  public:
  void clear_graph_key() ;
  ::int64_t graph_key(int index) const;
  void set_graph_key(int index, ::int64_t value);
  void add_graph_key(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& graph_key() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_graph_key();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_graph_key() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_graph_key();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.GetStepSequenceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetStepSequenceRequest& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> graph_key_;
    mutable ::google::protobuf::internal::CachedSize _graph_key_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GetStatusRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.GetStatusRequest) */ {
 public:
  inline GetStatusRequest() : GetStatusRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStatusRequest(const GetStatusRequest& from) : GetStatusRequest(nullptr, from) {}
  inline GetStatusRequest(GetStatusRequest&& from) noexcept
      : GetStatusRequest(nullptr, std::move(from)) {}
  inline GetStatusRequest& operator=(const GetStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusRequest& operator=(GetStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetStatusRequest*>(
        &_GetStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetStatusRequest& a, GetStatusRequest& b) { a.Swap(&b); }
  inline void Swap(GetStatusRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetStatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GetStatusRequest"; }

 protected:
  explicit GetStatusRequest(::google::protobuf::Arena* arena);
  GetStatusRequest(::google::protobuf::Arena* arena, const GetStatusRequest& from);
  GetStatusRequest(::google::protobuf::Arena* arena, GetStatusRequest&& from) noexcept
      : GetStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.GetStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetStatusRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ExecutorOpts final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ExecutorOpts) */ {
 public:
  inline ExecutorOpts() : ExecutorOpts(nullptr) {}
  ~ExecutorOpts() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExecutorOpts(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExecutorOpts(const ExecutorOpts& from) : ExecutorOpts(nullptr, from) {}
  inline ExecutorOpts(ExecutorOpts&& from) noexcept
      : ExecutorOpts(nullptr, std::move(from)) {}
  inline ExecutorOpts& operator=(const ExecutorOpts& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecutorOpts& operator=(ExecutorOpts&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecutorOpts& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecutorOpts* internal_default_instance() {
    return reinterpret_cast<const ExecutorOpts*>(
        &_ExecutorOpts_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ExecutorOpts& a, ExecutorOpts& b) { a.Swap(&b); }
  inline void Swap(ExecutorOpts* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecutorOpts* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecutorOpts* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ExecutorOpts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExecutorOpts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExecutorOpts& from) { ExecutorOpts::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExecutorOpts* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.ExecutorOpts"; }

 protected:
  explicit ExecutorOpts(::google::protobuf::Arena* arena);
  ExecutorOpts(::google::protobuf::Arena* arena, const ExecutorOpts& from);
  ExecutorOpts(::google::protobuf::Arena* arena, ExecutorOpts&& from) noexcept
      : ExecutorOpts(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecordCostsFieldNumber = 1,
    kRecordTimelineFieldNumber = 3,
    kRecordPartitionGraphsFieldNumber = 4,
    kReportTensorAllocationsUponOomFieldNumber = 5,
  };
  // bool record_costs = 1;
  void clear_record_costs() ;
  bool record_costs() const;
  void set_record_costs(bool value);

  private:
  bool _internal_record_costs() const;
  void _internal_set_record_costs(bool value);

  public:
  // bool record_timeline = 3;
  void clear_record_timeline() ;
  bool record_timeline() const;
  void set_record_timeline(bool value);

  private:
  bool _internal_record_timeline() const;
  void _internal_set_record_timeline(bool value);

  public:
  // bool record_partition_graphs = 4;
  void clear_record_partition_graphs() ;
  bool record_partition_graphs() const;
  void set_record_partition_graphs(bool value);

  private:
  bool _internal_record_partition_graphs() const;
  void _internal_set_record_partition_graphs(bool value);

  public:
  // bool report_tensor_allocations_upon_oom = 5;
  void clear_report_tensor_allocations_upon_oom() ;
  bool report_tensor_allocations_upon_oom() const;
  void set_report_tensor_allocations_upon_oom(bool value);

  private:
  bool _internal_report_tensor_allocations_upon_oom() const;
  void _internal_set_report_tensor_allocations_upon_oom(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ExecutorOpts)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExecutorOpts& from_msg);
    bool record_costs_;
    bool record_timeline_;
    bool record_partition_graphs_;
    bool report_tensor_allocations_upon_oom_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT DeregisterGraphResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.DeregisterGraphResponse) */ {
 public:
  inline DeregisterGraphResponse() : DeregisterGraphResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeregisterGraphResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeregisterGraphResponse(const DeregisterGraphResponse& from) : DeregisterGraphResponse(nullptr, from) {}
  inline DeregisterGraphResponse(DeregisterGraphResponse&& from) noexcept
      : DeregisterGraphResponse(nullptr, std::move(from)) {}
  inline DeregisterGraphResponse& operator=(const DeregisterGraphResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeregisterGraphResponse& operator=(DeregisterGraphResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeregisterGraphResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeregisterGraphResponse* internal_default_instance() {
    return reinterpret_cast<const DeregisterGraphResponse*>(
        &_DeregisterGraphResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(DeregisterGraphResponse& a, DeregisterGraphResponse& b) { a.Swap(&b); }
  inline void Swap(DeregisterGraphResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeregisterGraphResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeregisterGraphResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeregisterGraphResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeregisterGraphResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeregisterGraphResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.DeregisterGraphResponse"; }

 protected:
  explicit DeregisterGraphResponse(::google::protobuf::Arena* arena);
  DeregisterGraphResponse(::google::protobuf::Arena* arena, const DeregisterGraphResponse& from);
  DeregisterGraphResponse(::google::protobuf::Arena* arena, DeregisterGraphResponse&& from) noexcept
      : DeregisterGraphResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.DeregisterGraphResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeregisterGraphResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT DeregisterGraphRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.DeregisterGraphRequest) */ {
 public:
  inline DeregisterGraphRequest() : DeregisterGraphRequest(nullptr) {}
  ~DeregisterGraphRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeregisterGraphRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeregisterGraphRequest(const DeregisterGraphRequest& from) : DeregisterGraphRequest(nullptr, from) {}
  inline DeregisterGraphRequest(DeregisterGraphRequest&& from) noexcept
      : DeregisterGraphRequest(nullptr, std::move(from)) {}
  inline DeregisterGraphRequest& operator=(const DeregisterGraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeregisterGraphRequest& operator=(DeregisterGraphRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeregisterGraphRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeregisterGraphRequest* internal_default_instance() {
    return reinterpret_cast<const DeregisterGraphRequest*>(
        &_DeregisterGraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(DeregisterGraphRequest& a, DeregisterGraphRequest& b) { a.Swap(&b); }
  inline void Swap(DeregisterGraphRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeregisterGraphRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeregisterGraphRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeregisterGraphRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeregisterGraphRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeregisterGraphRequest& from) { DeregisterGraphRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeregisterGraphRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.DeregisterGraphRequest"; }

 protected:
  explicit DeregisterGraphRequest(::google::protobuf::Arena* arena);
  DeregisterGraphRequest(::google::protobuf::Arena* arena, const DeregisterGraphRequest& from);
  DeregisterGraphRequest(::google::protobuf::Arena* arena, DeregisterGraphRequest&& from) noexcept
      : DeregisterGraphRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGraphHandleFieldNumber = 1,
    kSessionHandleFieldNumber = 2,
    kCreateWorkerSessionCalledFieldNumber = 3,
  };
  // string graph_handle = 1;
  void clear_graph_handle() ;
  const std::string& graph_handle() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_graph_handle(Arg_&& arg, Args_... args);
  std::string* mutable_graph_handle();
  PROTOBUF_NODISCARD std::string* release_graph_handle();
  void set_allocated_graph_handle(std::string* value);

  private:
  const std::string& _internal_graph_handle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_graph_handle(
      const std::string& value);
  std::string* _internal_mutable_graph_handle();

  public:
  // string session_handle = 2;
  void clear_session_handle() ;
  const std::string& session_handle() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_handle(Arg_&& arg, Args_... args);
  std::string* mutable_session_handle();
  PROTOBUF_NODISCARD std::string* release_session_handle();
  void set_allocated_session_handle(std::string* value);

  private:
  const std::string& _internal_session_handle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_handle(
      const std::string& value);
  std::string* _internal_mutable_session_handle();

  public:
  // bool create_worker_session_called = 3;
  void clear_create_worker_session_called() ;
  bool create_worker_session_called() const;
  void set_create_worker_session_called(bool value);

  private:
  bool _internal_create_worker_session_called() const;
  void _internal_set_create_worker_session_called(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.DeregisterGraphRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      68, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeregisterGraphRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr graph_handle_;
    ::google::protobuf::internal::ArenaStringPtr session_handle_;
    bool create_worker_session_called_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT DeleteWorkerSessionResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.DeleteWorkerSessionResponse) */ {
 public:
  inline DeleteWorkerSessionResponse() : DeleteWorkerSessionResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteWorkerSessionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteWorkerSessionResponse(const DeleteWorkerSessionResponse& from) : DeleteWorkerSessionResponse(nullptr, from) {}
  inline DeleteWorkerSessionResponse(DeleteWorkerSessionResponse&& from) noexcept
      : DeleteWorkerSessionResponse(nullptr, std::move(from)) {}
  inline DeleteWorkerSessionResponse& operator=(const DeleteWorkerSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteWorkerSessionResponse& operator=(DeleteWorkerSessionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteWorkerSessionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteWorkerSessionResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteWorkerSessionResponse*>(
        &_DeleteWorkerSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DeleteWorkerSessionResponse& a, DeleteWorkerSessionResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteWorkerSessionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteWorkerSessionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteWorkerSessionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteWorkerSessionResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteWorkerSessionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteWorkerSessionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.DeleteWorkerSessionResponse"; }

 protected:
  explicit DeleteWorkerSessionResponse(::google::protobuf::Arena* arena);
  DeleteWorkerSessionResponse(::google::protobuf::Arena* arena, const DeleteWorkerSessionResponse& from);
  DeleteWorkerSessionResponse(::google::protobuf::Arena* arena, DeleteWorkerSessionResponse&& from) noexcept
      : DeleteWorkerSessionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.DeleteWorkerSessionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteWorkerSessionResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT DeleteWorkerSessionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.DeleteWorkerSessionRequest) */ {
 public:
  inline DeleteWorkerSessionRequest() : DeleteWorkerSessionRequest(nullptr) {}
  ~DeleteWorkerSessionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteWorkerSessionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteWorkerSessionRequest(const DeleteWorkerSessionRequest& from) : DeleteWorkerSessionRequest(nullptr, from) {}
  inline DeleteWorkerSessionRequest(DeleteWorkerSessionRequest&& from) noexcept
      : DeleteWorkerSessionRequest(nullptr, std::move(from)) {}
  inline DeleteWorkerSessionRequest& operator=(const DeleteWorkerSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteWorkerSessionRequest& operator=(DeleteWorkerSessionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteWorkerSessionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteWorkerSessionRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteWorkerSessionRequest*>(
        &_DeleteWorkerSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(DeleteWorkerSessionRequest& a, DeleteWorkerSessionRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteWorkerSessionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteWorkerSessionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteWorkerSessionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeleteWorkerSessionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteWorkerSessionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteWorkerSessionRequest& from) { DeleteWorkerSessionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteWorkerSessionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.DeleteWorkerSessionRequest"; }

 protected:
  explicit DeleteWorkerSessionRequest(::google::protobuf::Arena* arena);
  DeleteWorkerSessionRequest(::google::protobuf::Arena* arena, const DeleteWorkerSessionRequest& from);
  DeleteWorkerSessionRequest(::google::protobuf::Arena* arena, DeleteWorkerSessionRequest&& from) noexcept
      : DeleteWorkerSessionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSessionHandleFieldNumber = 1,
  };
  // string session_handle = 1;
  void clear_session_handle() ;
  const std::string& session_handle() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_handle(Arg_&& arg, Args_... args);
  std::string* mutable_session_handle();
  PROTOBUF_NODISCARD std::string* release_session_handle();
  void set_allocated_session_handle(std::string* value);

  private:
  const std::string& _internal_session_handle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_handle(
      const std::string& value);
  std::string* _internal_mutable_session_handle();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.DeleteWorkerSessionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteWorkerSessionRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr session_handle_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CreateWorkerSessionResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.CreateWorkerSessionResponse) */ {
 public:
  inline CreateWorkerSessionResponse() : CreateWorkerSessionResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateWorkerSessionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateWorkerSessionResponse(const CreateWorkerSessionResponse& from) : CreateWorkerSessionResponse(nullptr, from) {}
  inline CreateWorkerSessionResponse(CreateWorkerSessionResponse&& from) noexcept
      : CreateWorkerSessionResponse(nullptr, std::move(from)) {}
  inline CreateWorkerSessionResponse& operator=(const CreateWorkerSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateWorkerSessionResponse& operator=(CreateWorkerSessionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateWorkerSessionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateWorkerSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CreateWorkerSessionResponse*>(
        &_CreateWorkerSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CreateWorkerSessionResponse& a, CreateWorkerSessionResponse& b) { a.Swap(&b); }
  inline void Swap(CreateWorkerSessionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateWorkerSessionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateWorkerSessionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CreateWorkerSessionResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CreateWorkerSessionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CreateWorkerSessionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CreateWorkerSessionResponse"; }

 protected:
  explicit CreateWorkerSessionResponse(::google::protobuf::Arena* arena);
  CreateWorkerSessionResponse(::google::protobuf::Arena* arena, const CreateWorkerSessionResponse& from);
  CreateWorkerSessionResponse(::google::protobuf::Arena* arena, CreateWorkerSessionResponse&& from) noexcept
      : CreateWorkerSessionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.CreateWorkerSessionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateWorkerSessionResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CompleteInstanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CompleteInstanceResponse) */ {
 public:
  inline CompleteInstanceResponse() : CompleteInstanceResponse(nullptr) {}
  ~CompleteInstanceResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompleteInstanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompleteInstanceResponse(const CompleteInstanceResponse& from) : CompleteInstanceResponse(nullptr, from) {}
  inline CompleteInstanceResponse(CompleteInstanceResponse&& from) noexcept
      : CompleteInstanceResponse(nullptr, std::move(from)) {}
  inline CompleteInstanceResponse& operator=(const CompleteInstanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompleteInstanceResponse& operator=(CompleteInstanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompleteInstanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompleteInstanceResponse* internal_default_instance() {
    return reinterpret_cast<const CompleteInstanceResponse*>(
        &_CompleteInstanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(CompleteInstanceResponse& a, CompleteInstanceResponse& b) { a.Swap(&b); }
  inline void Swap(CompleteInstanceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompleteInstanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompleteInstanceResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CompleteInstanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompleteInstanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompleteInstanceResponse& from) { CompleteInstanceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompleteInstanceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CompleteInstanceResponse"; }

 protected:
  explicit CompleteInstanceResponse(::google::protobuf::Arena* arena);
  CompleteInstanceResponse(::google::protobuf::Arena* arena, const CompleteInstanceResponse& from);
  CompleteInstanceResponse(::google::protobuf::Arena* arena, CompleteInstanceResponse&& from) noexcept
      : CompleteInstanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInstanceKeyFieldNumber = 1,
    kSourceRankFieldNumber = 2,
  };
  // int32 instance_key = 1;
  void clear_instance_key() ;
  ::int32_t instance_key() const;
  void set_instance_key(::int32_t value);

  private:
  ::int32_t _internal_instance_key() const;
  void _internal_set_instance_key(::int32_t value);

  public:
  // int32 source_rank = 2;
  void clear_source_rank() ;
  ::int32_t source_rank() const;
  void set_source_rank(::int32_t value);

  private:
  ::int32_t _internal_source_rank() const;
  void _internal_set_source_rank(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CompleteInstanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CompleteInstanceResponse& from_msg);
    ::int32_t instance_key_;
    ::int32_t source_rank_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CleanupGraphResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.CleanupGraphResponse) */ {
 public:
  inline CleanupGraphResponse() : CleanupGraphResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CleanupGraphResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CleanupGraphResponse(const CleanupGraphResponse& from) : CleanupGraphResponse(nullptr, from) {}
  inline CleanupGraphResponse(CleanupGraphResponse&& from) noexcept
      : CleanupGraphResponse(nullptr, std::move(from)) {}
  inline CleanupGraphResponse& operator=(const CleanupGraphResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CleanupGraphResponse& operator=(CleanupGraphResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CleanupGraphResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CleanupGraphResponse* internal_default_instance() {
    return reinterpret_cast<const CleanupGraphResponse*>(
        &_CleanupGraphResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CleanupGraphResponse& a, CleanupGraphResponse& b) { a.Swap(&b); }
  inline void Swap(CleanupGraphResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CleanupGraphResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CleanupGraphResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CleanupGraphResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CleanupGraphResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CleanupGraphResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CleanupGraphResponse"; }

 protected:
  explicit CleanupGraphResponse(::google::protobuf::Arena* arena);
  CleanupGraphResponse(::google::protobuf::Arena* arena, const CleanupGraphResponse& from);
  CleanupGraphResponse(::google::protobuf::Arena* arena, CleanupGraphResponse&& from) noexcept
      : CleanupGraphResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.CleanupGraphResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CleanupGraphResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CleanupGraphRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CleanupGraphRequest) */ {
 public:
  inline CleanupGraphRequest() : CleanupGraphRequest(nullptr) {}
  ~CleanupGraphRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CleanupGraphRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CleanupGraphRequest(const CleanupGraphRequest& from) : CleanupGraphRequest(nullptr, from) {}
  inline CleanupGraphRequest(CleanupGraphRequest&& from) noexcept
      : CleanupGraphRequest(nullptr, std::move(from)) {}
  inline CleanupGraphRequest& operator=(const CleanupGraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CleanupGraphRequest& operator=(CleanupGraphRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CleanupGraphRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CleanupGraphRequest* internal_default_instance() {
    return reinterpret_cast<const CleanupGraphRequest*>(
        &_CleanupGraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(CleanupGraphRequest& a, CleanupGraphRequest& b) { a.Swap(&b); }
  inline void Swap(CleanupGraphRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CleanupGraphRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CleanupGraphRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CleanupGraphRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CleanupGraphRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CleanupGraphRequest& from) { CleanupGraphRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CleanupGraphRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CleanupGraphRequest"; }

 protected:
  explicit CleanupGraphRequest(::google::protobuf::Arena* arena);
  CleanupGraphRequest(::google::protobuf::Arena* arena, const CleanupGraphRequest& from);
  CleanupGraphRequest(::google::protobuf::Arena* arena, CleanupGraphRequest&& from) noexcept
      : CleanupGraphRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStepIdFieldNumber = 1,
  };
  // int64 step_id = 1;
  void clear_step_id() ;
  ::int64_t step_id() const;
  void set_step_id(::int64_t value);

  private:
  ::int64_t _internal_step_id() const;
  void _internal_set_step_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CleanupGraphRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CleanupGraphRequest& from_msg);
    ::int64_t step_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CleanupAllResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tensorflow.CleanupAllResponse) */ {
 public:
  inline CleanupAllResponse() : CleanupAllResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CleanupAllResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CleanupAllResponse(const CleanupAllResponse& from) : CleanupAllResponse(nullptr, from) {}
  inline CleanupAllResponse(CleanupAllResponse&& from) noexcept
      : CleanupAllResponse(nullptr, std::move(from)) {}
  inline CleanupAllResponse& operator=(const CleanupAllResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CleanupAllResponse& operator=(CleanupAllResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CleanupAllResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CleanupAllResponse* internal_default_instance() {
    return reinterpret_cast<const CleanupAllResponse*>(
        &_CleanupAllResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CleanupAllResponse& a, CleanupAllResponse& b) { a.Swap(&b); }
  inline void Swap(CleanupAllResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CleanupAllResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CleanupAllResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CleanupAllResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CleanupAllResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CleanupAllResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CleanupAllResponse"; }

 protected:
  explicit CleanupAllResponse(::google::protobuf::Arena* arena);
  CleanupAllResponse(::google::protobuf::Arena* arena, const CleanupAllResponse& from);
  CleanupAllResponse(::google::protobuf::Arena* arena, CleanupAllResponse&& from) noexcept
      : CleanupAllResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tensorflow.CleanupAllResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CleanupAllResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CleanupAllRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CleanupAllRequest) */ {
 public:
  inline CleanupAllRequest() : CleanupAllRequest(nullptr) {}
  ~CleanupAllRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CleanupAllRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CleanupAllRequest(const CleanupAllRequest& from) : CleanupAllRequest(nullptr, from) {}
  inline CleanupAllRequest(CleanupAllRequest&& from) noexcept
      : CleanupAllRequest(nullptr, std::move(from)) {}
  inline CleanupAllRequest& operator=(const CleanupAllRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CleanupAllRequest& operator=(CleanupAllRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CleanupAllRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CleanupAllRequest* internal_default_instance() {
    return reinterpret_cast<const CleanupAllRequest*>(
        &_CleanupAllRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CleanupAllRequest& a, CleanupAllRequest& b) { a.Swap(&b); }
  inline void Swap(CleanupAllRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CleanupAllRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CleanupAllRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CleanupAllRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CleanupAllRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CleanupAllRequest& from) { CleanupAllRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CleanupAllRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CleanupAllRequest"; }

 protected:
  explicit CleanupAllRequest(::google::protobuf::Arena* arena);
  CleanupAllRequest(::google::protobuf::Arena* arena, const CleanupAllRequest& from);
  CleanupAllRequest(::google::protobuf::Arena* arena, CleanupAllRequest&& from) noexcept
      : CleanupAllRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContainerFieldNumber = 1,
  };
  // repeated string container = 1;
  int container_size() const;
  private:
  int _internal_container_size() const;

  public:
  void clear_container() ;
  const std::string& container(int index) const;
  std::string* mutable_container(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_container(int index, Arg_&& value, Args_... args);
  std::string* add_container();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_container(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& container() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_container();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_container() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_container();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CleanupAllRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      46, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CleanupAllRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> container_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TracingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.TracingRequest) */ {
 public:
  inline TracingRequest() : TracingRequest(nullptr) {}
  ~TracingRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TracingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TracingRequest(const TracingRequest& from) : TracingRequest(nullptr, from) {}
  inline TracingRequest(TracingRequest&& from) noexcept
      : TracingRequest(nullptr, std::move(from)) {}
  inline TracingRequest& operator=(const TracingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TracingRequest& operator=(TracingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TracingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TracingRequest* internal_default_instance() {
    return reinterpret_cast<const TracingRequest*>(
        &_TracingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(TracingRequest& a, TracingRequest& b) { a.Swap(&b); }
  inline void Swap(TracingRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TracingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TracingRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TracingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TracingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TracingRequest& from) { TracingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TracingRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.TracingRequest"; }

 protected:
  explicit TracingRequest(::google::protobuf::Arena* arena);
  TracingRequest(::google::protobuf::Arena* arena, const TracingRequest& from);
  TracingRequest(::google::protobuf::Arena* arena, TracingRequest&& from) noexcept
      : TracingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionsFieldNumber = 1,
  };
  // .tensorflow.TraceOpts options = 1;
  bool has_options() const;
  void clear_options() ;
  const ::tensorflow::TraceOpts& options() const;
  PROTOBUF_NODISCARD ::tensorflow::TraceOpts* release_options();
  ::tensorflow::TraceOpts* mutable_options();
  void set_allocated_options(::tensorflow::TraceOpts* value);
  void unsafe_arena_set_allocated_options(::tensorflow::TraceOpts* value);
  ::tensorflow::TraceOpts* unsafe_arena_release_options();

  private:
  const ::tensorflow::TraceOpts& _internal_options() const;
  ::tensorflow::TraceOpts* _internal_mutable_options();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.TracingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TracingRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::TraceOpts* options_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RecvBufResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RecvBufResponse) */ {
 public:
  inline RecvBufResponse() : RecvBufResponse(nullptr) {}
  ~RecvBufResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecvBufResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RecvBufResponse(const RecvBufResponse& from) : RecvBufResponse(nullptr, from) {}
  inline RecvBufResponse(RecvBufResponse&& from) noexcept
      : RecvBufResponse(nullptr, std::move(from)) {}
  inline RecvBufResponse& operator=(const RecvBufResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecvBufResponse& operator=(RecvBufResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecvBufResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecvBufResponse* internal_default_instance() {
    return reinterpret_cast<const RecvBufResponse*>(
        &_RecvBufResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(RecvBufResponse& a, RecvBufResponse& b) { a.Swap(&b); }
  inline void Swap(RecvBufResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecvBufResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecvBufResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RecvBufResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecvBufResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RecvBufResponse& from) { RecvBufResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RecvBufResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.RecvBufResponse"; }

 protected:
  explicit RecvBufResponse(::google::protobuf::Arena* arena);
  RecvBufResponse(::google::protobuf::Arena* arena, const RecvBufResponse& from);
  RecvBufResponse(::google::protobuf::Arena* arena, RecvBufResponse&& from) noexcept
      : RecvBufResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTransportOptionsFieldNumber = 4,
    kBufPtrFieldNumber = 1,
    kNumBytesFieldNumber = 2,
    kSendStartMicrosFieldNumber = 5,
    kIsDeadFieldNumber = 3,
    kRequireAckFieldNumber = 6,
  };
  // .google.protobuf.Any transport_options = 4;
  bool has_transport_options() const;
  void clear_transport_options() ;
  const ::google::protobuf::Any& transport_options() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_transport_options();
  ::google::protobuf::Any* mutable_transport_options();
  void set_allocated_transport_options(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_transport_options(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_transport_options();

  private:
  const ::google::protobuf::Any& _internal_transport_options() const;
  ::google::protobuf::Any* _internal_mutable_transport_options();

  public:
  // fixed64 buf_ptr = 1;
  void clear_buf_ptr() ;
  ::uint64_t buf_ptr() const;
  void set_buf_ptr(::uint64_t value);

  private:
  ::uint64_t _internal_buf_ptr() const;
  void _internal_set_buf_ptr(::uint64_t value);

  public:
  // int64 num_bytes = 2;
  void clear_num_bytes() ;
  ::int64_t num_bytes() const;
  void set_num_bytes(::int64_t value);

  private:
  ::int64_t _internal_num_bytes() const;
  void _internal_set_num_bytes(::int64_t value);

  public:
  // int64 send_start_micros = 5;
  void clear_send_start_micros() ;
  ::int64_t send_start_micros() const;
  void set_send_start_micros(::int64_t value);

  private:
  ::int64_t _internal_send_start_micros() const;
  void _internal_set_send_start_micros(::int64_t value);

  public:
  // bool is_dead = 3;
  void clear_is_dead() ;
  bool is_dead() const;
  void set_is_dead(bool value);

  private:
  bool _internal_is_dead() const;
  void _internal_set_is_dead(bool value);

  public:
  // bool require_ack = 6;
  void clear_require_ack() ;
  bool require_ack() const;
  void set_require_ack(bool value);

  private:
  bool _internal_require_ack() const;
  void _internal_set_require_ack(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RecvBufResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RecvBufResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Any* transport_options_;
    ::uint64_t buf_ptr_;
    ::int64_t num_bytes_;
    ::int64_t send_start_micros_;
    bool is_dead_;
    bool require_ack_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GetStepSequenceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GetStepSequenceResponse) */ {
 public:
  inline GetStepSequenceResponse() : GetStepSequenceResponse(nullptr) {}
  ~GetStepSequenceResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStepSequenceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStepSequenceResponse(const GetStepSequenceResponse& from) : GetStepSequenceResponse(nullptr, from) {}
  inline GetStepSequenceResponse(GetStepSequenceResponse&& from) noexcept
      : GetStepSequenceResponse(nullptr, std::move(from)) {}
  inline GetStepSequenceResponse& operator=(const GetStepSequenceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStepSequenceResponse& operator=(GetStepSequenceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStepSequenceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStepSequenceResponse* internal_default_instance() {
    return reinterpret_cast<const GetStepSequenceResponse*>(
        &_GetStepSequenceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(GetStepSequenceResponse& a, GetStepSequenceResponse& b) { a.Swap(&b); }
  inline void Swap(GetStepSequenceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStepSequenceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStepSequenceResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetStepSequenceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStepSequenceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetStepSequenceResponse& from) { GetStepSequenceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStepSequenceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GetStepSequenceResponse"; }

 protected:
  explicit GetStepSequenceResponse(::google::protobuf::Arena* arena);
  GetStepSequenceResponse(::google::protobuf::Arena* arena, const GetStepSequenceResponse& from);
  GetStepSequenceResponse(::google::protobuf::Arena* arena, GetStepSequenceResponse&& from) noexcept
      : GetStepSequenceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStepSequenceFieldNumber = 1,
  };
  // repeated .tensorflow.StepSequence step_sequence = 1;
  int step_sequence_size() const;
  private:
  int _internal_step_sequence_size() const;

  public:
  void clear_step_sequence() ;
  ::tensorflow::StepSequence* mutable_step_sequence(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::StepSequence>* mutable_step_sequence();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::StepSequence>& _internal_step_sequence() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::StepSequence>* _internal_mutable_step_sequence();
  public:
  const ::tensorflow::StepSequence& step_sequence(int index) const;
  ::tensorflow::StepSequence* add_step_sequence();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::StepSequence>& step_sequence() const;
  // @@protoc_insertion_point(class_scope:tensorflow.GetStepSequenceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetStepSequenceResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::StepSequence > step_sequence_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CompleteInstanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CompleteInstanceRequest) */ {
 public:
  inline CompleteInstanceRequest() : CompleteInstanceRequest(nullptr) {}
  ~CompleteInstanceRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompleteInstanceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompleteInstanceRequest(const CompleteInstanceRequest& from) : CompleteInstanceRequest(nullptr, from) {}
  inline CompleteInstanceRequest(CompleteInstanceRequest&& from) noexcept
      : CompleteInstanceRequest(nullptr, std::move(from)) {}
  inline CompleteInstanceRequest& operator=(const CompleteInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompleteInstanceRequest& operator=(CompleteInstanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompleteInstanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompleteInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const CompleteInstanceRequest*>(
        &_CompleteInstanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(CompleteInstanceRequest& a, CompleteInstanceRequest& b) { a.Swap(&b); }
  inline void Swap(CompleteInstanceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompleteInstanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompleteInstanceRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CompleteInstanceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompleteInstanceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompleteInstanceRequest& from) { CompleteInstanceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompleteInstanceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CompleteInstanceRequest"; }

 protected:
  explicit CompleteInstanceRequest(::google::protobuf::Arena* arena);
  CompleteInstanceRequest(::google::protobuf::Arena* arena, const CompleteInstanceRequest& from);
  CompleteInstanceRequest(::google::protobuf::Arena* arena, CompleteInstanceRequest&& from) noexcept
      : CompleteInstanceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubdivOffsetFieldNumber = 9,
    kNameFieldNumber = 1,
    kDeviceTypeFieldNumber = 8,
    kDeviceFieldNumber = 10,
    kShapeFieldNumber = 4,
    kTypeFieldNumber = 2,
    kDataTypeFieldNumber = 3,
    kGroupKeyFieldNumber = 5,
    kGroupSizeFieldNumber = 6,
    kInstanceKeyFieldNumber = 7,
    kIsSourceFieldNumber = 11,
    kStepIdFieldNumber = 12,
  };
  // repeated int32 subdiv_offset = 9;
  int subdiv_offset_size() const;
  private:
  int _internal_subdiv_offset_size() const;

  public:
  void clear_subdiv_offset() ;
  ::int32_t subdiv_offset(int index) const;
  void set_subdiv_offset(int index, ::int32_t value);
  void add_subdiv_offset(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& subdiv_offset() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_subdiv_offset();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_subdiv_offset() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_subdiv_offset();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string device_type = 8;
  void clear_device_type() ;
  const std::string& device_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_type();
  PROTOBUF_NODISCARD std::string* release_device_type();
  void set_allocated_device_type(std::string* value);

  private:
  const std::string& _internal_device_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_type(
      const std::string& value);
  std::string* _internal_mutable_device_type();

  public:
  // string device = 10;
  void clear_device() ;
  const std::string& device() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device(Arg_&& arg, Args_... args);
  std::string* mutable_device();
  PROTOBUF_NODISCARD std::string* release_device();
  void set_allocated_device(std::string* value);

  private:
  const std::string& _internal_device() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device(
      const std::string& value);
  std::string* _internal_mutable_device();

  public:
  // .tensorflow.TensorShapeProto shape = 4;
  bool has_shape() const;
  void clear_shape() ;
  const ::tensorflow::TensorShapeProto& shape() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorShapeProto* release_shape();
  ::tensorflow::TensorShapeProto* mutable_shape();
  void set_allocated_shape(::tensorflow::TensorShapeProto* value);
  void unsafe_arena_set_allocated_shape(::tensorflow::TensorShapeProto* value);
  ::tensorflow::TensorShapeProto* unsafe_arena_release_shape();

  private:
  const ::tensorflow::TensorShapeProto& _internal_shape() const;
  ::tensorflow::TensorShapeProto* _internal_mutable_shape();

  public:
  // int32 type = 2;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // .tensorflow.DataType data_type = 3;
  void clear_data_type() ;
  ::tensorflow::DataType data_type() const;
  void set_data_type(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_data_type() const;
  void _internal_set_data_type(::tensorflow::DataType value);

  public:
  // int32 group_key = 5;
  void clear_group_key() ;
  ::int32_t group_key() const;
  void set_group_key(::int32_t value);

  private:
  ::int32_t _internal_group_key() const;
  void _internal_set_group_key(::int32_t value);

  public:
  // int32 group_size = 6;
  void clear_group_size() ;
  ::int32_t group_size() const;
  void set_group_size(::int32_t value);

  private:
  ::int32_t _internal_group_size() const;
  void _internal_set_group_size(::int32_t value);

  public:
  // int32 instance_key = 7;
  void clear_instance_key() ;
  ::int32_t instance_key() const;
  void set_instance_key(::int32_t value);

  private:
  ::int32_t _internal_instance_key() const;
  void _internal_set_instance_key(::int32_t value);

  public:
  // bool is_source = 11;
  void clear_is_source() ;
  bool is_source() const;
  void set_is_source(bool value);

  private:
  bool _internal_is_source() const;
  void _internal_set_is_source(bool value);

  public:
  // int64 step_id = 12;
  void clear_step_id() ;
  ::int64_t step_id() const;
  void set_step_id(::int64_t value);

  private:
  ::int64_t _internal_step_id() const;
  void _internal_set_step_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CompleteInstanceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 1,
      72, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CompleteInstanceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> subdiv_offset_;
    mutable ::google::protobuf::internal::CachedSize _subdiv_offset_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr device_type_;
    ::google::protobuf::internal::ArenaStringPtr device_;
    ::tensorflow::TensorShapeProto* shape_;
    ::int32_t type_;
    int data_type_;
    ::int32_t group_key_;
    ::int32_t group_size_;
    ::int32_t instance_key_;
    bool is_source_;
    ::int64_t step_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RecvTensorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RecvTensorRequest) */ {
 public:
  inline RecvTensorRequest() : RecvTensorRequest(nullptr) {}
  ~RecvTensorRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecvTensorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RecvTensorRequest(const RecvTensorRequest& from) : RecvTensorRequest(nullptr, from) {}
  inline RecvTensorRequest(RecvTensorRequest&& from) noexcept
      : RecvTensorRequest(nullptr, std::move(from)) {}
  inline RecvTensorRequest& operator=(const RecvTensorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecvTensorRequest& operator=(RecvTensorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecvTensorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecvTensorRequest* internal_default_instance() {
    return reinterpret_cast<const RecvTensorRequest*>(
        &_RecvTensorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(RecvTensorRequest& a, RecvTensorRequest& b) { a.Swap(&b); }
  inline void Swap(RecvTensorRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecvTensorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecvTensorRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RecvTensorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecvTensorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RecvTensorRequest& from) { RecvTensorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RecvTensorRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.RecvTensorRequest"; }

 protected:
  explicit RecvTensorRequest(::google::protobuf::Arena* arena);
  RecvTensorRequest(::google::protobuf::Arena* arena, const RecvTensorRequest& from);
  RecvTensorRequest(::google::protobuf::Arena* arena, RecvTensorRequest&& from) noexcept
      : RecvTensorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRendezvousKeyFieldNumber = 2,
    kClientLocalityFieldNumber = 4,
    kServerLocalityFieldNumber = 5,
    kTransportOptionsFieldNumber = 6,
    kStepIdFieldNumber = 1,
    kRequestIdFieldNumber = 7,
    kDmaOkFieldNumber = 3,
  };
  // string rendezvous_key = 2;
  void clear_rendezvous_key() ;
  const std::string& rendezvous_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rendezvous_key(Arg_&& arg, Args_... args);
  std::string* mutable_rendezvous_key();
  PROTOBUF_NODISCARD std::string* release_rendezvous_key();
  void set_allocated_rendezvous_key(std::string* value);

  private:
  const std::string& _internal_rendezvous_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rendezvous_key(
      const std::string& value);
  std::string* _internal_mutable_rendezvous_key();

  public:
  // .tensorflow.DeviceLocality client_locality = 4;
  bool has_client_locality() const;
  void clear_client_locality() ;
  const ::tensorflow::DeviceLocality& client_locality() const;
  PROTOBUF_NODISCARD ::tensorflow::DeviceLocality* release_client_locality();
  ::tensorflow::DeviceLocality* mutable_client_locality();
  void set_allocated_client_locality(::tensorflow::DeviceLocality* value);
  void unsafe_arena_set_allocated_client_locality(::tensorflow::DeviceLocality* value);
  ::tensorflow::DeviceLocality* unsafe_arena_release_client_locality();

  private:
  const ::tensorflow::DeviceLocality& _internal_client_locality() const;
  ::tensorflow::DeviceLocality* _internal_mutable_client_locality();

  public:
  // .tensorflow.DeviceLocality server_locality = 5;
  bool has_server_locality() const;
  void clear_server_locality() ;
  const ::tensorflow::DeviceLocality& server_locality() const;
  PROTOBUF_NODISCARD ::tensorflow::DeviceLocality* release_server_locality();
  ::tensorflow::DeviceLocality* mutable_server_locality();
  void set_allocated_server_locality(::tensorflow::DeviceLocality* value);
  void unsafe_arena_set_allocated_server_locality(::tensorflow::DeviceLocality* value);
  ::tensorflow::DeviceLocality* unsafe_arena_release_server_locality();

  private:
  const ::tensorflow::DeviceLocality& _internal_server_locality() const;
  ::tensorflow::DeviceLocality* _internal_mutable_server_locality();

  public:
  // .google.protobuf.Any transport_options = 6;
  bool has_transport_options() const;
  void clear_transport_options() ;
  const ::google::protobuf::Any& transport_options() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_transport_options();
  ::google::protobuf::Any* mutable_transport_options();
  void set_allocated_transport_options(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_transport_options(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_transport_options();

  private:
  const ::google::protobuf::Any& _internal_transport_options() const;
  ::google::protobuf::Any* _internal_mutable_transport_options();

  public:
  // int64 step_id = 1;
  void clear_step_id() ;
  ::int64_t step_id() const;
  void set_step_id(::int64_t value);

  private:
  ::int64_t _internal_step_id() const;
  void _internal_set_step_id(::int64_t value);

  public:
  // int64 request_id = 7;
  void clear_request_id() ;
  ::int64_t request_id() const;
  void set_request_id(::int64_t value);

  private:
  ::int64_t _internal_request_id() const;
  void _internal_set_request_id(::int64_t value);

  public:
  // bool dma_ok = 3;
  void clear_dma_ok() ;
  bool dma_ok() const;
  void set_dma_ok(bool value);

  private:
  bool _internal_dma_ok() const;
  void _internal_set_dma_ok(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RecvTensorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 3,
      51, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RecvTensorRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr rendezvous_key_;
    ::tensorflow::DeviceLocality* client_locality_;
    ::tensorflow::DeviceLocality* server_locality_;
    ::google::protobuf::Any* transport_options_;
    ::int64_t step_id_;
    ::int64_t request_id_;
    bool dma_ok_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RecvBufRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RecvBufRequest) */ {
 public:
  inline RecvBufRequest() : RecvBufRequest(nullptr) {}
  ~RecvBufRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecvBufRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RecvBufRequest(const RecvBufRequest& from) : RecvBufRequest(nullptr, from) {}
  inline RecvBufRequest(RecvBufRequest&& from) noexcept
      : RecvBufRequest(nullptr, std::move(from)) {}
  inline RecvBufRequest& operator=(const RecvBufRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecvBufRequest& operator=(RecvBufRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecvBufRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecvBufRequest* internal_default_instance() {
    return reinterpret_cast<const RecvBufRequest*>(
        &_RecvBufRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(RecvBufRequest& a, RecvBufRequest& b) { a.Swap(&b); }
  inline void Swap(RecvBufRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecvBufRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecvBufRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RecvBufRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecvBufRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RecvBufRequest& from) { RecvBufRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RecvBufRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.RecvBufRequest"; }

 protected:
  explicit RecvBufRequest(::google::protobuf::Arena* arena);
  RecvBufRequest(::google::protobuf::Arena* arena, const RecvBufRequest& from);
  RecvBufRequest(::google::protobuf::Arena* arena, RecvBufRequest&& from) noexcept
      : RecvBufRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBufRendezvousKeyFieldNumber = 2,
    kSrcDeviceFieldNumber = 8,
    kDstDeviceFieldNumber = 9,
    kClientLocalityFieldNumber = 5,
    kServerLocalityFieldNumber = 6,
    kTransportOptionsFieldNumber = 7,
    kStepIdFieldNumber = 1,
    kNumBytesFieldNumber = 3,
    kBufPtrFieldNumber = 4,
    kRequestIdFieldNumber = 10,
    kSrcIncarnationFieldNumber = 11,
  };
  // string buf_rendezvous_key = 2;
  void clear_buf_rendezvous_key() ;
  const std::string& buf_rendezvous_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_buf_rendezvous_key(Arg_&& arg, Args_... args);
  std::string* mutable_buf_rendezvous_key();
  PROTOBUF_NODISCARD std::string* release_buf_rendezvous_key();
  void set_allocated_buf_rendezvous_key(std::string* value);

  private:
  const std::string& _internal_buf_rendezvous_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_buf_rendezvous_key(
      const std::string& value);
  std::string* _internal_mutable_buf_rendezvous_key();

  public:
  // string src_device = 8;
  void clear_src_device() ;
  const std::string& src_device() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_src_device(Arg_&& arg, Args_... args);
  std::string* mutable_src_device();
  PROTOBUF_NODISCARD std::string* release_src_device();
  void set_allocated_src_device(std::string* value);

  private:
  const std::string& _internal_src_device() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_src_device(
      const std::string& value);
  std::string* _internal_mutable_src_device();

  public:
  // string dst_device = 9;
  void clear_dst_device() ;
  const std::string& dst_device() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dst_device(Arg_&& arg, Args_... args);
  std::string* mutable_dst_device();
  PROTOBUF_NODISCARD std::string* release_dst_device();
  void set_allocated_dst_device(std::string* value);

  private:
  const std::string& _internal_dst_device() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_device(
      const std::string& value);
  std::string* _internal_mutable_dst_device();

  public:
  // .tensorflow.DeviceLocality client_locality = 5;
  bool has_client_locality() const;
  void clear_client_locality() ;
  const ::tensorflow::DeviceLocality& client_locality() const;
  PROTOBUF_NODISCARD ::tensorflow::DeviceLocality* release_client_locality();
  ::tensorflow::DeviceLocality* mutable_client_locality();
  void set_allocated_client_locality(::tensorflow::DeviceLocality* value);
  void unsafe_arena_set_allocated_client_locality(::tensorflow::DeviceLocality* value);
  ::tensorflow::DeviceLocality* unsafe_arena_release_client_locality();

  private:
  const ::tensorflow::DeviceLocality& _internal_client_locality() const;
  ::tensorflow::DeviceLocality* _internal_mutable_client_locality();

  public:
  // .tensorflow.DeviceLocality server_locality = 6;
  bool has_server_locality() const;
  void clear_server_locality() ;
  const ::tensorflow::DeviceLocality& server_locality() const;
  PROTOBUF_NODISCARD ::tensorflow::DeviceLocality* release_server_locality();
  ::tensorflow::DeviceLocality* mutable_server_locality();
  void set_allocated_server_locality(::tensorflow::DeviceLocality* value);
  void unsafe_arena_set_allocated_server_locality(::tensorflow::DeviceLocality* value);
  ::tensorflow::DeviceLocality* unsafe_arena_release_server_locality();

  private:
  const ::tensorflow::DeviceLocality& _internal_server_locality() const;
  ::tensorflow::DeviceLocality* _internal_mutable_server_locality();

  public:
  // .google.protobuf.Any transport_options = 7;
  bool has_transport_options() const;
  void clear_transport_options() ;
  const ::google::protobuf::Any& transport_options() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_transport_options();
  ::google::protobuf::Any* mutable_transport_options();
  void set_allocated_transport_options(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_transport_options(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_transport_options();

  private:
  const ::google::protobuf::Any& _internal_transport_options() const;
  ::google::protobuf::Any* _internal_mutable_transport_options();

  public:
  // int64 step_id = 1;
  void clear_step_id() ;
  ::int64_t step_id() const;
  void set_step_id(::int64_t value);

  private:
  ::int64_t _internal_step_id() const;
  void _internal_set_step_id(::int64_t value);

  public:
  // int64 num_bytes = 3;
  void clear_num_bytes() ;
  ::int64_t num_bytes() const;
  void set_num_bytes(::int64_t value);

  private:
  ::int64_t _internal_num_bytes() const;
  void _internal_set_num_bytes(::int64_t value);

  public:
  // fixed64 buf_ptr = 4;
  void clear_buf_ptr() ;
  ::uint64_t buf_ptr() const;
  void set_buf_ptr(::uint64_t value);

  private:
  ::uint64_t _internal_buf_ptr() const;
  void _internal_set_buf_ptr(::uint64_t value);

  public:
  // int64 request_id = 10;
  void clear_request_id() ;
  ::int64_t request_id() const;
  void set_request_id(::int64_t value);

  private:
  ::int64_t _internal_request_id() const;
  void _internal_set_request_id(::int64_t value);

  public:
  // uint64 src_incarnation = 11;
  void clear_src_incarnation() ;
  ::uint64_t src_incarnation() const;
  void set_src_incarnation(::uint64_t value);

  private:
  ::uint64_t _internal_src_incarnation() const;
  void _internal_set_src_incarnation(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RecvBufRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 3,
      80, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RecvBufRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr buf_rendezvous_key_;
    ::google::protobuf::internal::ArenaStringPtr src_device_;
    ::google::protobuf::internal::ArenaStringPtr dst_device_;
    ::tensorflow::DeviceLocality* client_locality_;
    ::tensorflow::DeviceLocality* server_locality_;
    ::google::protobuf::Any* transport_options_;
    ::int64_t step_id_;
    ::int64_t num_bytes_;
    ::uint64_t buf_ptr_;
    ::int64_t request_id_;
    ::uint64_t src_incarnation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT GetStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.GetStatusResponse) */ {
 public:
  inline GetStatusResponse() : GetStatusResponse(nullptr) {}
  ~GetStatusResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStatusResponse(const GetStatusResponse& from) : GetStatusResponse(nullptr, from) {}
  inline GetStatusResponse(GetStatusResponse&& from) noexcept
      : GetStatusResponse(nullptr, std::move(from)) {}
  inline GetStatusResponse& operator=(const GetStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusResponse& operator=(GetStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetStatusResponse*>(
        &_GetStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetStatusResponse& a, GetStatusResponse& b) { a.Swap(&b); }
  inline void Swap(GetStatusResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetStatusResponse& from) { GetStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStatusResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.GetStatusResponse"; }

 protected:
  explicit GetStatusResponse(::google::protobuf::Arena* arena);
  GetStatusResponse(::google::protobuf::Arena* arena, const GetStatusResponse& from);
  GetStatusResponse(::google::protobuf::Arena* arena, GetStatusResponse&& from) noexcept
      : GetStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceAttributesFieldNumber = 1,
  };
  // repeated .tensorflow.DeviceAttributes device_attributes = 1;
  int device_attributes_size() const;
  private:
  int _internal_device_attributes_size() const;

  public:
  void clear_device_attributes() ;
  ::tensorflow::DeviceAttributes* mutable_device_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* mutable_device_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& _internal_device_attributes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* _internal_mutable_device_attributes();
  public:
  const ::tensorflow::DeviceAttributes& device_attributes(int index) const;
  ::tensorflow::DeviceAttributes* add_device_attributes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& device_attributes() const;
  // @@protoc_insertion_point(class_scope:tensorflow.GetStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetStatusResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceAttributes > device_attributes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CompleteGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CompleteGroupResponse) */ {
 public:
  inline CompleteGroupResponse() : CompleteGroupResponse(nullptr) {}
  ~CompleteGroupResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompleteGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompleteGroupResponse(const CompleteGroupResponse& from) : CompleteGroupResponse(nullptr, from) {}
  inline CompleteGroupResponse(CompleteGroupResponse&& from) noexcept
      : CompleteGroupResponse(nullptr, std::move(from)) {}
  inline CompleteGroupResponse& operator=(const CompleteGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompleteGroupResponse& operator=(CompleteGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompleteGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompleteGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CompleteGroupResponse*>(
        &_CompleteGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(CompleteGroupResponse& a, CompleteGroupResponse& b) { a.Swap(&b); }
  inline void Swap(CompleteGroupResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompleteGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompleteGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CompleteGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompleteGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompleteGroupResponse& from) { CompleteGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompleteGroupResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CompleteGroupResponse"; }

 protected:
  explicit CompleteGroupResponse(::google::protobuf::Arena* arena);
  CompleteGroupResponse(::google::protobuf::Arena* arena, const CompleteGroupResponse& from);
  CompleteGroupResponse(::google::protobuf::Arena* arena, CompleteGroupResponse&& from) noexcept
      : CompleteGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceAttributesFieldNumber = 8,
    kDeviceTypeFieldNumber = 3,
    kCommunicatorKeyFieldNumber = 7,
    kGroupKeyFieldNumber = 1,
    kGroupSizeFieldNumber = 2,
    kNumTasksFieldNumber = 4,
  };
  // repeated .tensorflow.DeviceAttributes device_attributes = 8;
  int device_attributes_size() const;
  private:
  int _internal_device_attributes_size() const;

  public:
  void clear_device_attributes() ;
  ::tensorflow::DeviceAttributes* mutable_device_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* mutable_device_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& _internal_device_attributes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* _internal_mutable_device_attributes();
  public:
  const ::tensorflow::DeviceAttributes& device_attributes(int index) const;
  ::tensorflow::DeviceAttributes* add_device_attributes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& device_attributes() const;
  // string device_type = 3;
  void clear_device_type() ;
  const std::string& device_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_type();
  PROTOBUF_NODISCARD std::string* release_device_type();
  void set_allocated_device_type(std::string* value);

  private:
  const std::string& _internal_device_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_type(
      const std::string& value);
  std::string* _internal_mutable_device_type();

  public:
  // bytes communicator_key = 7;
  void clear_communicator_key() ;
  const std::string& communicator_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_communicator_key(Arg_&& arg, Args_... args);
  std::string* mutable_communicator_key();
  PROTOBUF_NODISCARD std::string* release_communicator_key();
  void set_allocated_communicator_key(std::string* value);

  private:
  const std::string& _internal_communicator_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_communicator_key(
      const std::string& value);
  std::string* _internal_mutable_communicator_key();

  public:
  // int32 group_key = 1;
  void clear_group_key() ;
  ::int32_t group_key() const;
  void set_group_key(::int32_t value);

  private:
  ::int32_t _internal_group_key() const;
  void _internal_set_group_key(::int32_t value);

  public:
  // int32 group_size = 2;
  void clear_group_size() ;
  ::int32_t group_size() const;
  void set_group_size(::int32_t value);

  private:
  ::int32_t _internal_group_size() const;
  void _internal_set_group_size(::int32_t value);

  public:
  // int32 num_tasks = 4;
  void clear_num_tasks() ;
  ::int32_t num_tasks() const;
  void set_num_tasks(::int32_t value);

  private:
  ::int32_t _internal_num_tasks() const;
  void _internal_set_num_tasks(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CompleteGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      52, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CompleteGroupResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceAttributes > device_attributes_;
    ::google::protobuf::internal::ArenaStringPtr device_type_;
    ::google::protobuf::internal::ArenaStringPtr communicator_key_;
    ::int32_t group_key_;
    ::int32_t group_size_;
    ::int32_t num_tasks_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CompleteGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CompleteGroupRequest) */ {
 public:
  inline CompleteGroupRequest() : CompleteGroupRequest(nullptr) {}
  ~CompleteGroupRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompleteGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompleteGroupRequest(const CompleteGroupRequest& from) : CompleteGroupRequest(nullptr, from) {}
  inline CompleteGroupRequest(CompleteGroupRequest&& from) noexcept
      : CompleteGroupRequest(nullptr, std::move(from)) {}
  inline CompleteGroupRequest& operator=(const CompleteGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompleteGroupRequest& operator=(CompleteGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompleteGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompleteGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CompleteGroupRequest*>(
        &_CompleteGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(CompleteGroupRequest& a, CompleteGroupRequest& b) { a.Swap(&b); }
  inline void Swap(CompleteGroupRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompleteGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompleteGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CompleteGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompleteGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompleteGroupRequest& from) { CompleteGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompleteGroupRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CompleteGroupRequest"; }

 protected:
  explicit CompleteGroupRequest(::google::protobuf::Arena* arena);
  CompleteGroupRequest(::google::protobuf::Arena* arena, const CompleteGroupRequest& from);
  CompleteGroupRequest(::google::protobuf::Arena* arena, CompleteGroupRequest&& from) noexcept
      : CompleteGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceTypeFieldNumber = 3,
    kDeviceAttributesFieldNumber = 6,
    kGroupKeyFieldNumber = 1,
    kGroupSizeFieldNumber = 2,
    kCollectiveTypeFieldNumber = 5,
  };
  // string device_type = 3;
  void clear_device_type() ;
  const std::string& device_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_type();
  PROTOBUF_NODISCARD std::string* release_device_type();
  void set_allocated_device_type(std::string* value);

  private:
  const std::string& _internal_device_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_type(
      const std::string& value);
  std::string* _internal_mutable_device_type();

  public:
  // .tensorflow.DeviceAttributes device_attributes = 6;
  bool has_device_attributes() const;
  void clear_device_attributes() ;
  const ::tensorflow::DeviceAttributes& device_attributes() const;
  PROTOBUF_NODISCARD ::tensorflow::DeviceAttributes* release_device_attributes();
  ::tensorflow::DeviceAttributes* mutable_device_attributes();
  void set_allocated_device_attributes(::tensorflow::DeviceAttributes* value);
  void unsafe_arena_set_allocated_device_attributes(::tensorflow::DeviceAttributes* value);
  ::tensorflow::DeviceAttributes* unsafe_arena_release_device_attributes();

  private:
  const ::tensorflow::DeviceAttributes& _internal_device_attributes() const;
  ::tensorflow::DeviceAttributes* _internal_mutable_device_attributes();

  public:
  // int32 group_key = 1;
  void clear_group_key() ;
  ::int32_t group_key() const;
  void set_group_key(::int32_t value);

  private:
  ::int32_t _internal_group_key() const;
  void _internal_set_group_key(::int32_t value);

  public:
  // int32 group_size = 2;
  void clear_group_size() ;
  ::int32_t group_size() const;
  void set_group_size(::int32_t value);

  private:
  ::int32_t _internal_group_size() const;
  void _internal_set_group_size(::int32_t value);

  public:
  // int32 collective_type = 5;
  void clear_collective_type() ;
  ::int32_t collective_type() const;
  void set_collective_type(::int32_t value);

  private:
  ::int32_t _internal_collective_type() const;
  void _internal_set_collective_type(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CompleteGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      51, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CompleteGroupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr device_type_;
    ::tensorflow::DeviceAttributes* device_attributes_;
    ::int32_t group_key_;
    ::int32_t group_size_;
    ::int32_t collective_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RecvTensorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RecvTensorResponse) */ {
 public:
  inline RecvTensorResponse() : RecvTensorResponse(nullptr) {}
  ~RecvTensorResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecvTensorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RecvTensorResponse(const RecvTensorResponse& from) : RecvTensorResponse(nullptr, from) {}
  inline RecvTensorResponse(RecvTensorResponse&& from) noexcept
      : RecvTensorResponse(nullptr, std::move(from)) {}
  inline RecvTensorResponse& operator=(const RecvTensorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecvTensorResponse& operator=(RecvTensorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecvTensorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecvTensorResponse* internal_default_instance() {
    return reinterpret_cast<const RecvTensorResponse*>(
        &_RecvTensorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(RecvTensorResponse& a, RecvTensorResponse& b) { a.Swap(&b); }
  inline void Swap(RecvTensorResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecvTensorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecvTensorResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RecvTensorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecvTensorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RecvTensorResponse& from) { RecvTensorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RecvTensorResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.RecvTensorResponse"; }

 protected:
  explicit RecvTensorResponse(::google::protobuf::Arena* arena);
  RecvTensorResponse(::google::protobuf::Arena* arena, const RecvTensorResponse& from);
  RecvTensorResponse(::google::protobuf::Arena* arena, RecvTensorResponse&& from) noexcept
      : RecvTensorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTensorFieldNumber = 1,
    kTransportOptionsFieldNumber = 4,
    kSendStartMicrosFieldNumber = 3,
    kIsDeadFieldNumber = 2,
    kRequireAckFieldNumber = 5,
  };
  // .tensorflow.TensorProto tensor = 1;
  bool has_tensor() const;
  void clear_tensor() ;
  const ::tensorflow::TensorProto& tensor() const;
  PROTOBUF_NODISCARD ::tensorflow::TensorProto* release_tensor();
  ::tensorflow::TensorProto* mutable_tensor();
  void set_allocated_tensor(::tensorflow::TensorProto* value);
  void unsafe_arena_set_allocated_tensor(::tensorflow::TensorProto* value);
  ::tensorflow::TensorProto* unsafe_arena_release_tensor();

  private:
  const ::tensorflow::TensorProto& _internal_tensor() const;
  ::tensorflow::TensorProto* _internal_mutable_tensor();

  public:
  // .google.protobuf.Any transport_options = 4;
  bool has_transport_options() const;
  void clear_transport_options() ;
  const ::google::protobuf::Any& transport_options() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_transport_options();
  ::google::protobuf::Any* mutable_transport_options();
  void set_allocated_transport_options(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_transport_options(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_transport_options();

  private:
  const ::google::protobuf::Any& _internal_transport_options() const;
  ::google::protobuf::Any* _internal_mutable_transport_options();

  public:
  // int64 send_start_micros = 3;
  void clear_send_start_micros() ;
  ::int64_t send_start_micros() const;
  void set_send_start_micros(::int64_t value);

  private:
  ::int64_t _internal_send_start_micros() const;
  void _internal_set_send_start_micros(::int64_t value);

  public:
  // bool is_dead = 2;
  void clear_is_dead() ;
  bool is_dead() const;
  void set_is_dead(bool value);

  private:
  bool _internal_is_dead() const;
  void _internal_set_is_dead(bool value);

  public:
  // bool require_ack = 5;
  void clear_require_ack() ;
  bool require_ack() const;
  void set_require_ack(bool value);

  private:
  bool _internal_require_ack() const;
  void _internal_set_require_ack(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RecvTensorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RecvTensorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::TensorProto* tensor_;
    ::google::protobuf::Any* transport_options_;
    ::int64_t send_start_micros_;
    bool is_dead_;
    bool require_ack_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RunGraphRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RunGraphRequest) */ {
 public:
  inline RunGraphRequest() : RunGraphRequest(nullptr) {}
  ~RunGraphRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RunGraphRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RunGraphRequest(const RunGraphRequest& from) : RunGraphRequest(nullptr, from) {}
  inline RunGraphRequest(RunGraphRequest&& from) noexcept
      : RunGraphRequest(nullptr, std::move(from)) {}
  inline RunGraphRequest& operator=(const RunGraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RunGraphRequest& operator=(RunGraphRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RunGraphRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RunGraphRequest* internal_default_instance() {
    return reinterpret_cast<const RunGraphRequest*>(
        &_RunGraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(RunGraphRequest& a, RunGraphRequest& b) { a.Swap(&b); }
  inline void Swap(RunGraphRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RunGraphRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RunGraphRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RunGraphRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RunGraphRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RunGraphRequest& from) { RunGraphRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RunGraphRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.RunGraphRequest"; }

 protected:
  explicit RunGraphRequest(::google::protobuf::Arena* arena);
  RunGraphRequest(::google::protobuf::Arena* arena, const RunGraphRequest& from);
  RunGraphRequest(::google::protobuf::Arena* arena, RunGraphRequest&& from) noexcept
      : RunGraphRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSendFieldNumber = 3,
    kRecvKeyFieldNumber = 4,
    kGraphHandleFieldNumber = 1,
    kSessionHandleFieldNumber = 8,
    kExecOptsFieldNumber = 5,
    kStepIdFieldNumber = 2,
    kRequestIdFieldNumber = 11,
    kCreateWorkerSessionCalledFieldNumber = 10,
    kIsPartialFieldNumber = 6,
    kIsLastPartialRunFieldNumber = 7,
    kStoreErrorsInResponseBodyFieldNumber = 9,
  };
  // repeated .tensorflow.NamedTensorProto send = 3;
  int send_size() const;
  private:
  int _internal_send_size() const;

  public:
  void clear_send() ;
  ::tensorflow::NamedTensorProto* mutable_send(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>* mutable_send();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>& _internal_send() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>* _internal_mutable_send();
  public:
  const ::tensorflow::NamedTensorProto& send(int index) const;
  ::tensorflow::NamedTensorProto* add_send();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>& send() const;
  // repeated string recv_key = 4;
  int recv_key_size() const;
  private:
  int _internal_recv_key_size() const;

  public:
  void clear_recv_key() ;
  const std::string& recv_key(int index) const;
  std::string* mutable_recv_key(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recv_key(int index, Arg_&& value, Args_... args);
  std::string* add_recv_key();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_recv_key(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& recv_key() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_recv_key();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_recv_key() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_recv_key();

  public:
  // string graph_handle = 1;
  void clear_graph_handle() ;
  const std::string& graph_handle() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_graph_handle(Arg_&& arg, Args_... args);
  std::string* mutable_graph_handle();
  PROTOBUF_NODISCARD std::string* release_graph_handle();
  void set_allocated_graph_handle(std::string* value);

  private:
  const std::string& _internal_graph_handle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_graph_handle(
      const std::string& value);
  std::string* _internal_mutable_graph_handle();

  public:
  // string session_handle = 8;
  void clear_session_handle() ;
  const std::string& session_handle() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_handle(Arg_&& arg, Args_... args);
  std::string* mutable_session_handle();
  PROTOBUF_NODISCARD std::string* release_session_handle();
  void set_allocated_session_handle(std::string* value);

  private:
  const std::string& _internal_session_handle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_handle(
      const std::string& value);
  std::string* _internal_mutable_session_handle();

  public:
  // .tensorflow.ExecutorOpts exec_opts = 5;
  bool has_exec_opts() const;
  void clear_exec_opts() ;
  const ::tensorflow::ExecutorOpts& exec_opts() const;
  PROTOBUF_NODISCARD ::tensorflow::ExecutorOpts* release_exec_opts();
  ::tensorflow::ExecutorOpts* mutable_exec_opts();
  void set_allocated_exec_opts(::tensorflow::ExecutorOpts* value);
  void unsafe_arena_set_allocated_exec_opts(::tensorflow::ExecutorOpts* value);
  ::tensorflow::ExecutorOpts* unsafe_arena_release_exec_opts();

  private:
  const ::tensorflow::ExecutorOpts& _internal_exec_opts() const;
  ::tensorflow::ExecutorOpts* _internal_mutable_exec_opts();

  public:
  // int64 step_id = 2;
  void clear_step_id() ;
  ::int64_t step_id() const;
  void set_step_id(::int64_t value);

  private:
  ::int64_t _internal_step_id() const;
  void _internal_set_step_id(::int64_t value);

  public:
  // int64 request_id = 11;
  void clear_request_id() ;
  ::int64_t request_id() const;
  void set_request_id(::int64_t value);

  private:
  ::int64_t _internal_request_id() const;
  void _internal_set_request_id(::int64_t value);

  public:
  // bool create_worker_session_called = 10;
  void clear_create_worker_session_called() ;
  bool create_worker_session_called() const;
  void set_create_worker_session_called(bool value);

  private:
  bool _internal_create_worker_session_called() const;
  void _internal_set_create_worker_session_called(bool value);

  public:
  // bool is_partial = 6;
  void clear_is_partial() ;
  bool is_partial() const;
  void set_is_partial(bool value);

  private:
  bool _internal_is_partial() const;
  void _internal_set_is_partial(bool value);

  public:
  // bool is_last_partial_run = 7;
  void clear_is_last_partial_run() ;
  bool is_last_partial_run() const;
  void set_is_last_partial_run(bool value);

  private:
  bool _internal_is_last_partial_run() const;
  void _internal_set_is_last_partial_run(bool value);

  public:
  // bool store_errors_in_response_body = 9;
  void clear_store_errors_in_response_body() ;
  bool store_errors_in_response_body() const;
  void set_store_errors_in_response_body(bool value);

  private:
  bool _internal_store_errors_in_response_body() const;
  void _internal_set_store_errors_in_response_body(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RunGraphRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 2,
      77, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RunGraphRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::NamedTensorProto > send_;
    ::google::protobuf::RepeatedPtrField<std::string> recv_key_;
    ::google::protobuf::internal::ArenaStringPtr graph_handle_;
    ::google::protobuf::internal::ArenaStringPtr session_handle_;
    ::tensorflow::ExecutorOpts* exec_opts_;
    ::int64_t step_id_;
    ::int64_t request_id_;
    bool create_worker_session_called_;
    bool is_partial_;
    bool is_last_partial_run_;
    bool store_errors_in_response_body_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT LabeledStepStats final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.LabeledStepStats) */ {
 public:
  inline LabeledStepStats() : LabeledStepStats(nullptr) {}
  ~LabeledStepStats() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LabeledStepStats(
      ::google::protobuf::internal::ConstantInitialized);

  inline LabeledStepStats(const LabeledStepStats& from) : LabeledStepStats(nullptr, from) {}
  inline LabeledStepStats(LabeledStepStats&& from) noexcept
      : LabeledStepStats(nullptr, std::move(from)) {}
  inline LabeledStepStats& operator=(const LabeledStepStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline LabeledStepStats& operator=(LabeledStepStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LabeledStepStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const LabeledStepStats* internal_default_instance() {
    return reinterpret_cast<const LabeledStepStats*>(
        &_LabeledStepStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(LabeledStepStats& a, LabeledStepStats& b) { a.Swap(&b); }
  inline void Swap(LabeledStepStats* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LabeledStepStats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LabeledStepStats* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LabeledStepStats>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LabeledStepStats& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LabeledStepStats& from) { LabeledStepStats::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LabeledStepStats* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.LabeledStepStats"; }

 protected:
  explicit LabeledStepStats(::google::protobuf::Arena* arena);
  LabeledStepStats(::google::protobuf::Arena* arena, const LabeledStepStats& from);
  LabeledStepStats(::google::protobuf::Arena* arena, LabeledStepStats&& from) noexcept
      : LabeledStepStats(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStepStatsFieldNumber = 2,
    kStepIdFieldNumber = 1,
  };
  // .tensorflow.StepStats step_stats = 2;
  bool has_step_stats() const;
  void clear_step_stats() ;
  const ::tensorflow::StepStats& step_stats() const;
  PROTOBUF_NODISCARD ::tensorflow::StepStats* release_step_stats();
  ::tensorflow::StepStats* mutable_step_stats();
  void set_allocated_step_stats(::tensorflow::StepStats* value);
  void unsafe_arena_set_allocated_step_stats(::tensorflow::StepStats* value);
  ::tensorflow::StepStats* unsafe_arena_release_step_stats();

  private:
  const ::tensorflow::StepStats& _internal_step_stats() const;
  ::tensorflow::StepStats* _internal_mutable_step_stats();

  public:
  // int64 step_id = 1;
  void clear_step_id() ;
  ::int64_t step_id() const;
  void set_step_id(::int64_t value);

  private:
  ::int64_t _internal_step_id() const;
  void _internal_set_step_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.LabeledStepStats)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LabeledStepStats& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::StepStats* step_stats_;
    ::int64_t step_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT LoggingResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.LoggingResponse) */ {
 public:
  inline LoggingResponse() : LoggingResponse(nullptr) {}
  ~LoggingResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoggingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoggingResponse(const LoggingResponse& from) : LoggingResponse(nullptr, from) {}
  inline LoggingResponse(LoggingResponse&& from) noexcept
      : LoggingResponse(nullptr, std::move(from)) {}
  inline LoggingResponse& operator=(const LoggingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoggingResponse& operator=(LoggingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoggingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoggingResponse* internal_default_instance() {
    return reinterpret_cast<const LoggingResponse*>(
        &_LoggingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(LoggingResponse& a, LoggingResponse& b) { a.Swap(&b); }
  inline void Swap(LoggingResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoggingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoggingResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LoggingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoggingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoggingResponse& from) { LoggingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoggingResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.LoggingResponse"; }

 protected:
  explicit LoggingResponse(::google::protobuf::Arena* arena);
  LoggingResponse(::google::protobuf::Arena* arena, const LoggingResponse& from);
  LoggingResponse(::google::protobuf::Arena* arena, LoggingResponse&& from) noexcept
      : LoggingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStepFieldNumber = 1,
  };
  // repeated .tensorflow.LabeledStepStats step = 1;
  int step_size() const;
  private:
  int _internal_step_size() const;

  public:
  void clear_step() ;
  ::tensorflow::LabeledStepStats* mutable_step(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::LabeledStepStats>* mutable_step();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::LabeledStepStats>& _internal_step() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::LabeledStepStats>* _internal_mutable_step();
  public:
  const ::tensorflow::LabeledStepStats& step(int index) const;
  ::tensorflow::LabeledStepStats* add_step();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::LabeledStepStats>& step() const;
  // @@protoc_insertion_point(class_scope:tensorflow.LoggingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoggingResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::LabeledStepStats > step_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RunGraphResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RunGraphResponse) */ {
 public:
  inline RunGraphResponse() : RunGraphResponse(nullptr) {}
  ~RunGraphResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RunGraphResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RunGraphResponse(const RunGraphResponse& from) : RunGraphResponse(nullptr, from) {}
  inline RunGraphResponse(RunGraphResponse&& from) noexcept
      : RunGraphResponse(nullptr, std::move(from)) {}
  inline RunGraphResponse& operator=(const RunGraphResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RunGraphResponse& operator=(RunGraphResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RunGraphResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RunGraphResponse* internal_default_instance() {
    return reinterpret_cast<const RunGraphResponse*>(
        &_RunGraphResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(RunGraphResponse& a, RunGraphResponse& b) { a.Swap(&b); }
  inline void Swap(RunGraphResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RunGraphResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RunGraphResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RunGraphResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RunGraphResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RunGraphResponse& from) { RunGraphResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RunGraphResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.RunGraphResponse"; }

 protected:
  explicit RunGraphResponse(::google::protobuf::Arena* arena);
  RunGraphResponse(::google::protobuf::Arena* arena, const RunGraphResponse& from);
  RunGraphResponse(::google::protobuf::Arena* arena, RunGraphResponse&& from) noexcept
      : RunGraphResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecvFieldNumber = 1,
    kPartitionGraphFieldNumber = 4,
    kStatusErrorMessageFieldNumber = 6,
    kStepStatsFieldNumber = 2,
    kCostGraphFieldNumber = 3,
    kStatusCodeFieldNumber = 5,
  };
  // repeated .tensorflow.NamedTensorProto recv = 1;
  int recv_size() const;
  private:
  int _internal_recv_size() const;

  public:
  void clear_recv() ;
  ::tensorflow::NamedTensorProto* mutable_recv(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>* mutable_recv();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>& _internal_recv() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>* _internal_mutable_recv();
  public:
  const ::tensorflow::NamedTensorProto& recv(int index) const;
  ::tensorflow::NamedTensorProto* add_recv();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>& recv() const;
  // repeated .tensorflow.GraphDef partition_graph = 4;
  int partition_graph_size() const;
  private:
  int _internal_partition_graph_size() const;

  public:
  void clear_partition_graph() ;
  ::tensorflow::GraphDef* mutable_partition_graph(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDef>* mutable_partition_graph();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDef>& _internal_partition_graph() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDef>* _internal_mutable_partition_graph();
  public:
  const ::tensorflow::GraphDef& partition_graph(int index) const;
  ::tensorflow::GraphDef* add_partition_graph();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDef>& partition_graph() const;
  // string status_error_message = 6;
  void clear_status_error_message() ;
  const std::string& status_error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_status_error_message();
  PROTOBUF_NODISCARD std::string* release_status_error_message();
  void set_allocated_status_error_message(std::string* value);

  private:
  const std::string& _internal_status_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status_error_message(
      const std::string& value);
  std::string* _internal_mutable_status_error_message();

  public:
  // .tensorflow.StepStats step_stats = 2;
  bool has_step_stats() const;
  void clear_step_stats() ;
  const ::tensorflow::StepStats& step_stats() const;
  PROTOBUF_NODISCARD ::tensorflow::StepStats* release_step_stats();
  ::tensorflow::StepStats* mutable_step_stats();
  void set_allocated_step_stats(::tensorflow::StepStats* value);
  void unsafe_arena_set_allocated_step_stats(::tensorflow::StepStats* value);
  ::tensorflow::StepStats* unsafe_arena_release_step_stats();

  private:
  const ::tensorflow::StepStats& _internal_step_stats() const;
  ::tensorflow::StepStats* _internal_mutable_step_stats();

  public:
  // .tensorflow.CostGraphDef cost_graph = 3;
  bool has_cost_graph() const;
  void clear_cost_graph() ;
  const ::tensorflow::CostGraphDef& cost_graph() const;
  PROTOBUF_NODISCARD ::tensorflow::CostGraphDef* release_cost_graph();
  ::tensorflow::CostGraphDef* mutable_cost_graph();
  void set_allocated_cost_graph(::tensorflow::CostGraphDef* value);
  void unsafe_arena_set_allocated_cost_graph(::tensorflow::CostGraphDef* value);
  ::tensorflow::CostGraphDef* unsafe_arena_release_cost_graph();

  private:
  const ::tensorflow::CostGraphDef& _internal_cost_graph() const;
  ::tensorflow::CostGraphDef* _internal_mutable_cost_graph();

  public:
  // .tensorflow.error.Code status_code = 5;
  void clear_status_code() ;
  ::tensorflow::error::Code status_code() const;
  void set_status_code(::tensorflow::error::Code value);

  private:
  ::tensorflow::error::Code _internal_status_code() const;
  void _internal_set_status_code(::tensorflow::error::Code value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RunGraphResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 4,
      56, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RunGraphResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::NamedTensorProto > recv_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::GraphDef > partition_graph_;
    ::google::protobuf::internal::ArenaStringPtr status_error_message_;
    ::tensorflow::StepStats* step_stats_;
    ::tensorflow::CostGraphDef* cost_graph_;
    int status_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RegisterGraphRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RegisterGraphRequest) */ {
 public:
  inline RegisterGraphRequest() : RegisterGraphRequest(nullptr) {}
  ~RegisterGraphRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterGraphRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterGraphRequest(const RegisterGraphRequest& from) : RegisterGraphRequest(nullptr, from) {}
  inline RegisterGraphRequest(RegisterGraphRequest&& from) noexcept
      : RegisterGraphRequest(nullptr, std::move(from)) {}
  inline RegisterGraphRequest& operator=(const RegisterGraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterGraphRequest& operator=(RegisterGraphRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterGraphRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterGraphRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterGraphRequest*>(
        &_RegisterGraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(RegisterGraphRequest& a, RegisterGraphRequest& b) { a.Swap(&b); }
  inline void Swap(RegisterGraphRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterGraphRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterGraphRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RegisterGraphRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterGraphRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterGraphRequest& from) { RegisterGraphRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterGraphRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.RegisterGraphRequest"; }

 protected:
  explicit RegisterGraphRequest(::google::protobuf::Arena* arena);
  RegisterGraphRequest(::google::protobuf::Arena* arena, const RegisterGraphRequest& from);
  RegisterGraphRequest(::google::protobuf::Arena* arena, RegisterGraphRequest&& from) noexcept
      : RegisterGraphRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSessionHandleFieldNumber = 1,
    kGraphDefFieldNumber = 2,
    kGraphOptionsFieldNumber = 4,
    kDebugOptionsFieldNumber = 5,
    kConfigProtoFieldNumber = 8,
    kCollectiveGraphKeyFieldNumber = 7,
    kCreateWorkerSessionCalledFieldNumber = 6,
    kHasControlFlowFieldNumber = 3,
  };
  // string session_handle = 1;
  void clear_session_handle() ;
  const std::string& session_handle() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_handle(Arg_&& arg, Args_... args);
  std::string* mutable_session_handle();
  PROTOBUF_NODISCARD std::string* release_session_handle();
  void set_allocated_session_handle(std::string* value);

  private:
  const std::string& _internal_session_handle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_handle(
      const std::string& value);
  std::string* _internal_mutable_session_handle();

  public:
  // .tensorflow.GraphDef graph_def = 2;
  bool has_graph_def() const;
  void clear_graph_def() ;
  const ::tensorflow::GraphDef& graph_def() const;
  PROTOBUF_NODISCARD ::tensorflow::GraphDef* release_graph_def();
  ::tensorflow::GraphDef* mutable_graph_def();
  void set_allocated_graph_def(::tensorflow::GraphDef* value);
  void unsafe_arena_set_allocated_graph_def(::tensorflow::GraphDef* value);
  ::tensorflow::GraphDef* unsafe_arena_release_graph_def();

  private:
  const ::tensorflow::GraphDef& _internal_graph_def() const;
  ::tensorflow::GraphDef* _internal_mutable_graph_def();

  public:
  // .tensorflow.GraphOptions graph_options = 4;
  bool has_graph_options() const;
  void clear_graph_options() ;
  const ::tensorflow::GraphOptions& graph_options() const;
  PROTOBUF_NODISCARD ::tensorflow::GraphOptions* release_graph_options();
  ::tensorflow::GraphOptions* mutable_graph_options();
  void set_allocated_graph_options(::tensorflow::GraphOptions* value);
  void unsafe_arena_set_allocated_graph_options(::tensorflow::GraphOptions* value);
  ::tensorflow::GraphOptions* unsafe_arena_release_graph_options();

  private:
  const ::tensorflow::GraphOptions& _internal_graph_options() const;
  ::tensorflow::GraphOptions* _internal_mutable_graph_options();

  public:
  // .tensorflow.DebugOptions debug_options = 5;
  bool has_debug_options() const;
  void clear_debug_options() ;
  const ::tensorflow::DebugOptions& debug_options() const;
  PROTOBUF_NODISCARD ::tensorflow::DebugOptions* release_debug_options();
  ::tensorflow::DebugOptions* mutable_debug_options();
  void set_allocated_debug_options(::tensorflow::DebugOptions* value);
  void unsafe_arena_set_allocated_debug_options(::tensorflow::DebugOptions* value);
  ::tensorflow::DebugOptions* unsafe_arena_release_debug_options();

  private:
  const ::tensorflow::DebugOptions& _internal_debug_options() const;
  ::tensorflow::DebugOptions* _internal_mutable_debug_options();

  public:
  // .tensorflow.ConfigProto config_proto = 8;
  bool has_config_proto() const;
  void clear_config_proto() ;
  const ::tensorflow::ConfigProto& config_proto() const;
  PROTOBUF_NODISCARD ::tensorflow::ConfigProto* release_config_proto();
  ::tensorflow::ConfigProto* mutable_config_proto();
  void set_allocated_config_proto(::tensorflow::ConfigProto* value);
  void unsafe_arena_set_allocated_config_proto(::tensorflow::ConfigProto* value);
  ::tensorflow::ConfigProto* unsafe_arena_release_config_proto();

  private:
  const ::tensorflow::ConfigProto& _internal_config_proto() const;
  ::tensorflow::ConfigProto* _internal_mutable_config_proto();

  public:
  // int64 collective_graph_key = 7;
  void clear_collective_graph_key() ;
  ::int64_t collective_graph_key() const;
  void set_collective_graph_key(::int64_t value);

  private:
  ::int64_t _internal_collective_graph_key() const;
  void _internal_set_collective_graph_key(::int64_t value);

  public:
  // bool create_worker_session_called = 6;
  void clear_create_worker_session_called() ;
  bool create_worker_session_called() const;
  void set_create_worker_session_called(bool value);

  private:
  bool _internal_create_worker_session_called() const;
  void _internal_set_create_worker_session_called(bool value);

  public:
  // bool has_control_flow = 3 [deprecated = true];
  [[deprecated]]  void clear_has_control_flow() ;
  [[deprecated]] bool has_control_flow() const;
  [[deprecated]] void set_has_control_flow(bool value);

  private:
  bool _internal_has_control_flow() const;
  void _internal_set_has_control_flow(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RegisterGraphRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 4,
      62, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterGraphRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr session_handle_;
    ::tensorflow::GraphDef* graph_def_;
    ::tensorflow::GraphOptions* graph_options_;
    ::tensorflow::DebugOptions* debug_options_;
    ::tensorflow::ConfigProto* config_proto_;
    ::int64_t collective_graph_key_;
    bool create_worker_session_called_;
    bool has_control_flow_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CreateWorkerSessionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CreateWorkerSessionRequest) */ {
 public:
  inline CreateWorkerSessionRequest() : CreateWorkerSessionRequest(nullptr) {}
  ~CreateWorkerSessionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateWorkerSessionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateWorkerSessionRequest(const CreateWorkerSessionRequest& from) : CreateWorkerSessionRequest(nullptr, from) {}
  inline CreateWorkerSessionRequest(CreateWorkerSessionRequest&& from) noexcept
      : CreateWorkerSessionRequest(nullptr, std::move(from)) {}
  inline CreateWorkerSessionRequest& operator=(const CreateWorkerSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateWorkerSessionRequest& operator=(CreateWorkerSessionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateWorkerSessionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateWorkerSessionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateWorkerSessionRequest*>(
        &_CreateWorkerSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CreateWorkerSessionRequest& a, CreateWorkerSessionRequest& b) { a.Swap(&b); }
  inline void Swap(CreateWorkerSessionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateWorkerSessionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateWorkerSessionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CreateWorkerSessionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateWorkerSessionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateWorkerSessionRequest& from) { CreateWorkerSessionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateWorkerSessionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.CreateWorkerSessionRequest"; }

 protected:
  explicit CreateWorkerSessionRequest(::google::protobuf::Arena* arena);
  CreateWorkerSessionRequest(::google::protobuf::Arena* arena, const CreateWorkerSessionRequest& from);
  CreateWorkerSessionRequest(::google::protobuf::Arena* arena, CreateWorkerSessionRequest&& from) noexcept
      : CreateWorkerSessionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClusterDeviceAttributesFieldNumber = 4,
    kSessionHandleFieldNumber = 1,
    kMasterTaskFieldNumber = 5,
    kServerDefFieldNumber = 2,
    kMasterIncarnationFieldNumber = 6,
    kIsolateSessionStateFieldNumber = 3,
  };
  // repeated .tensorflow.DeviceAttributes cluster_device_attributes = 4;
  int cluster_device_attributes_size() const;
  private:
  int _internal_cluster_device_attributes_size() const;

  public:
  void clear_cluster_device_attributes() ;
  ::tensorflow::DeviceAttributes* mutable_cluster_device_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* mutable_cluster_device_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& _internal_cluster_device_attributes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* _internal_mutable_cluster_device_attributes();
  public:
  const ::tensorflow::DeviceAttributes& cluster_device_attributes(int index) const;
  ::tensorflow::DeviceAttributes* add_cluster_device_attributes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& cluster_device_attributes() const;
  // string session_handle = 1;
  void clear_session_handle() ;
  const std::string& session_handle() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_handle(Arg_&& arg, Args_... args);
  std::string* mutable_session_handle();
  PROTOBUF_NODISCARD std::string* release_session_handle();
  void set_allocated_session_handle(std::string* value);

  private:
  const std::string& _internal_session_handle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_handle(
      const std::string& value);
  std::string* _internal_mutable_session_handle();

  public:
  // string master_task = 5;
  void clear_master_task() ;
  const std::string& master_task() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_master_task(Arg_&& arg, Args_... args);
  std::string* mutable_master_task();
  PROTOBUF_NODISCARD std::string* release_master_task();
  void set_allocated_master_task(std::string* value);

  private:
  const std::string& _internal_master_task() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_master_task(
      const std::string& value);
  std::string* _internal_mutable_master_task();

  public:
  // .tensorflow.ServerDef server_def = 2;
  bool has_server_def() const;
  void clear_server_def() ;
  const ::tensorflow::ServerDef& server_def() const;
  PROTOBUF_NODISCARD ::tensorflow::ServerDef* release_server_def();
  ::tensorflow::ServerDef* mutable_server_def();
  void set_allocated_server_def(::tensorflow::ServerDef* value);
  void unsafe_arena_set_allocated_server_def(::tensorflow::ServerDef* value);
  ::tensorflow::ServerDef* unsafe_arena_release_server_def();

  private:
  const ::tensorflow::ServerDef& _internal_server_def() const;
  ::tensorflow::ServerDef* _internal_mutable_server_def();

  public:
  // int64 master_incarnation = 6;
  void clear_master_incarnation() ;
  ::int64_t master_incarnation() const;
  void set_master_incarnation(::int64_t value);

  private:
  ::int64_t _internal_master_incarnation() const;
  void _internal_set_master_incarnation(::int64_t value);

  public:
  // bool isolate_session_state = 3;
  void clear_isolate_session_state() ;
  bool isolate_session_state() const;
  void set_isolate_session_state(bool value);

  private:
  bool _internal_isolate_session_state() const;
  void _internal_set_isolate_session_state(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CreateWorkerSessionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      71, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateWorkerSessionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::DeviceAttributes > cluster_device_attributes_;
    ::google::protobuf::internal::ArenaStringPtr session_handle_;
    ::google::protobuf::internal::ArenaStringPtr master_task_;
    ::tensorflow::ServerDef* server_def_;
    ::int64_t master_incarnation_;
    bool isolate_session_state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fworker_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetStatusRequest

// -------------------------------------------------------------------

// GetStatusResponse

// repeated .tensorflow.DeviceAttributes device_attributes = 1;
inline int GetStatusResponse::_internal_device_attributes_size() const {
  return _internal_device_attributes().size();
}
inline int GetStatusResponse::device_attributes_size() const {
  return _internal_device_attributes_size();
}
inline ::tensorflow::DeviceAttributes* GetStatusResponse::mutable_device_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GetStatusResponse.device_attributes)
  return _internal_mutable_device_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* GetStatusResponse::mutable_device_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GetStatusResponse.device_attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_attributes();
}
inline const ::tensorflow::DeviceAttributes& GetStatusResponse::device_attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GetStatusResponse.device_attributes)
  return _internal_device_attributes().Get(index);
}
inline ::tensorflow::DeviceAttributes* GetStatusResponse::add_device_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::DeviceAttributes* _add = _internal_mutable_device_attributes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GetStatusResponse.device_attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& GetStatusResponse::device_attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GetStatusResponse.device_attributes)
  return _internal_device_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>&
GetStatusResponse::_internal_device_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>*
GetStatusResponse::_internal_mutable_device_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_attributes_;
}

// -------------------------------------------------------------------

// CreateWorkerSessionRequest

// string session_handle = 1;
inline void CreateWorkerSessionRequest::clear_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.ClearToEmpty();
}
inline const std::string& CreateWorkerSessionRequest::session_handle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CreateWorkerSessionRequest.session_handle)
  return _internal_session_handle();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateWorkerSessionRequest::set_session_handle(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CreateWorkerSessionRequest.session_handle)
}
inline std::string* CreateWorkerSessionRequest::mutable_session_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.CreateWorkerSessionRequest.session_handle)
  return _s;
}
inline const std::string& CreateWorkerSessionRequest::_internal_session_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_handle_.Get();
}
inline void CreateWorkerSessionRequest::_internal_set_session_handle(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(value, GetArena());
}
inline std::string* CreateWorkerSessionRequest::_internal_mutable_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_handle_.Mutable( GetArena());
}
inline std::string* CreateWorkerSessionRequest::release_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CreateWorkerSessionRequest.session_handle)
  return _impl_.session_handle_.Release();
}
inline void CreateWorkerSessionRequest::set_allocated_session_handle(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_handle_.IsDefault()) {
          _impl_.session_handle_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CreateWorkerSessionRequest.session_handle)
}

// .tensorflow.ServerDef server_def = 2;
inline bool CreateWorkerSessionRequest::has_server_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.server_def_ != nullptr);
  return value;
}
inline const ::tensorflow::ServerDef& CreateWorkerSessionRequest::_internal_server_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ServerDef* p = _impl_.server_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ServerDef&>(::tensorflow::_ServerDef_default_instance_);
}
inline const ::tensorflow::ServerDef& CreateWorkerSessionRequest::server_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CreateWorkerSessionRequest.server_def)
  return _internal_server_def();
}
inline void CreateWorkerSessionRequest::unsafe_arena_set_allocated_server_def(::tensorflow::ServerDef* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_def_);
  }
  _impl_.server_def_ = reinterpret_cast<::tensorflow::ServerDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CreateWorkerSessionRequest.server_def)
}
inline ::tensorflow::ServerDef* CreateWorkerSessionRequest::release_server_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ServerDef* released = _impl_.server_def_;
  _impl_.server_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::ServerDef* CreateWorkerSessionRequest::unsafe_arena_release_server_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CreateWorkerSessionRequest.server_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ServerDef* temp = _impl_.server_def_;
  _impl_.server_def_ = nullptr;
  return temp;
}
inline ::tensorflow::ServerDef* CreateWorkerSessionRequest::_internal_mutable_server_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ServerDef>(GetArena());
    _impl_.server_def_ = reinterpret_cast<::tensorflow::ServerDef*>(p);
  }
  return _impl_.server_def_;
}
inline ::tensorflow::ServerDef* CreateWorkerSessionRequest::mutable_server_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::ServerDef* _msg = _internal_mutable_server_def();
  // @@protoc_insertion_point(field_mutable:tensorflow.CreateWorkerSessionRequest.server_def)
  return _msg;
}
inline void CreateWorkerSessionRequest::set_allocated_server_def(::tensorflow::ServerDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.server_def_ = reinterpret_cast<::tensorflow::ServerDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CreateWorkerSessionRequest.server_def)
}

// bool isolate_session_state = 3;
inline void CreateWorkerSessionRequest::clear_isolate_session_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isolate_session_state_ = false;
}
inline bool CreateWorkerSessionRequest::isolate_session_state() const {
  // @@protoc_insertion_point(field_get:tensorflow.CreateWorkerSessionRequest.isolate_session_state)
  return _internal_isolate_session_state();
}
inline void CreateWorkerSessionRequest::set_isolate_session_state(bool value) {
  _internal_set_isolate_session_state(value);
  // @@protoc_insertion_point(field_set:tensorflow.CreateWorkerSessionRequest.isolate_session_state)
}
inline bool CreateWorkerSessionRequest::_internal_isolate_session_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isolate_session_state_;
}
inline void CreateWorkerSessionRequest::_internal_set_isolate_session_state(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isolate_session_state_ = value;
}

// repeated .tensorflow.DeviceAttributes cluster_device_attributes = 4;
inline int CreateWorkerSessionRequest::_internal_cluster_device_attributes_size() const {
  return _internal_cluster_device_attributes().size();
}
inline int CreateWorkerSessionRequest::cluster_device_attributes_size() const {
  return _internal_cluster_device_attributes_size();
}
inline ::tensorflow::DeviceAttributes* CreateWorkerSessionRequest::mutable_cluster_device_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.CreateWorkerSessionRequest.cluster_device_attributes)
  return _internal_mutable_cluster_device_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* CreateWorkerSessionRequest::mutable_cluster_device_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CreateWorkerSessionRequest.cluster_device_attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cluster_device_attributes();
}
inline const ::tensorflow::DeviceAttributes& CreateWorkerSessionRequest::cluster_device_attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CreateWorkerSessionRequest.cluster_device_attributes)
  return _internal_cluster_device_attributes().Get(index);
}
inline ::tensorflow::DeviceAttributes* CreateWorkerSessionRequest::add_cluster_device_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::DeviceAttributes* _add = _internal_mutable_cluster_device_attributes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.CreateWorkerSessionRequest.cluster_device_attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& CreateWorkerSessionRequest::cluster_device_attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CreateWorkerSessionRequest.cluster_device_attributes)
  return _internal_cluster_device_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>&
CreateWorkerSessionRequest::_internal_cluster_device_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_device_attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>*
CreateWorkerSessionRequest::_internal_mutable_cluster_device_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cluster_device_attributes_;
}

// string master_task = 5;
inline void CreateWorkerSessionRequest::clear_master_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_task_.ClearToEmpty();
}
inline const std::string& CreateWorkerSessionRequest::master_task() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CreateWorkerSessionRequest.master_task)
  return _internal_master_task();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateWorkerSessionRequest::set_master_task(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_task_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CreateWorkerSessionRequest.master_task)
}
inline std::string* CreateWorkerSessionRequest::mutable_master_task() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_master_task();
  // @@protoc_insertion_point(field_mutable:tensorflow.CreateWorkerSessionRequest.master_task)
  return _s;
}
inline const std::string& CreateWorkerSessionRequest::_internal_master_task() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.master_task_.Get();
}
inline void CreateWorkerSessionRequest::_internal_set_master_task(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_task_.Set(value, GetArena());
}
inline std::string* CreateWorkerSessionRequest::_internal_mutable_master_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.master_task_.Mutable( GetArena());
}
inline std::string* CreateWorkerSessionRequest::release_master_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CreateWorkerSessionRequest.master_task)
  return _impl_.master_task_.Release();
}
inline void CreateWorkerSessionRequest::set_allocated_master_task(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_task_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.master_task_.IsDefault()) {
          _impl_.master_task_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CreateWorkerSessionRequest.master_task)
}

// int64 master_incarnation = 6;
inline void CreateWorkerSessionRequest::clear_master_incarnation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_incarnation_ = ::int64_t{0};
}
inline ::int64_t CreateWorkerSessionRequest::master_incarnation() const {
  // @@protoc_insertion_point(field_get:tensorflow.CreateWorkerSessionRequest.master_incarnation)
  return _internal_master_incarnation();
}
inline void CreateWorkerSessionRequest::set_master_incarnation(::int64_t value) {
  _internal_set_master_incarnation(value);
  // @@protoc_insertion_point(field_set:tensorflow.CreateWorkerSessionRequest.master_incarnation)
}
inline ::int64_t CreateWorkerSessionRequest::_internal_master_incarnation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.master_incarnation_;
}
inline void CreateWorkerSessionRequest::_internal_set_master_incarnation(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_incarnation_ = value;
}

// -------------------------------------------------------------------

// CreateWorkerSessionResponse

// -------------------------------------------------------------------

// DeleteWorkerSessionRequest

// string session_handle = 1;
inline void DeleteWorkerSessionRequest::clear_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.ClearToEmpty();
}
inline const std::string& DeleteWorkerSessionRequest::session_handle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeleteWorkerSessionRequest.session_handle)
  return _internal_session_handle();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteWorkerSessionRequest::set_session_handle(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.DeleteWorkerSessionRequest.session_handle)
}
inline std::string* DeleteWorkerSessionRequest::mutable_session_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.DeleteWorkerSessionRequest.session_handle)
  return _s;
}
inline const std::string& DeleteWorkerSessionRequest::_internal_session_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_handle_.Get();
}
inline void DeleteWorkerSessionRequest::_internal_set_session_handle(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(value, GetArena());
}
inline std::string* DeleteWorkerSessionRequest::_internal_mutable_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_handle_.Mutable( GetArena());
}
inline std::string* DeleteWorkerSessionRequest::release_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.DeleteWorkerSessionRequest.session_handle)
  return _impl_.session_handle_.Release();
}
inline void DeleteWorkerSessionRequest::set_allocated_session_handle(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_handle_.IsDefault()) {
          _impl_.session_handle_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DeleteWorkerSessionRequest.session_handle)
}

// -------------------------------------------------------------------

// DeleteWorkerSessionResponse

// -------------------------------------------------------------------

// RegisterGraphRequest

// string session_handle = 1;
inline void RegisterGraphRequest::clear_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.ClearToEmpty();
}
inline const std::string& RegisterGraphRequest::session_handle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RegisterGraphRequest.session_handle)
  return _internal_session_handle();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterGraphRequest::set_session_handle(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RegisterGraphRequest.session_handle)
}
inline std::string* RegisterGraphRequest::mutable_session_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.RegisterGraphRequest.session_handle)
  return _s;
}
inline const std::string& RegisterGraphRequest::_internal_session_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_handle_.Get();
}
inline void RegisterGraphRequest::_internal_set_session_handle(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(value, GetArena());
}
inline std::string* RegisterGraphRequest::_internal_mutable_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_handle_.Mutable( GetArena());
}
inline std::string* RegisterGraphRequest::release_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RegisterGraphRequest.session_handle)
  return _impl_.session_handle_.Release();
}
inline void RegisterGraphRequest::set_allocated_session_handle(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_handle_.IsDefault()) {
          _impl_.session_handle_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RegisterGraphRequest.session_handle)
}

// bool create_worker_session_called = 6;
inline void RegisterGraphRequest::clear_create_worker_session_called() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_worker_session_called_ = false;
}
inline bool RegisterGraphRequest::create_worker_session_called() const {
  // @@protoc_insertion_point(field_get:tensorflow.RegisterGraphRequest.create_worker_session_called)
  return _internal_create_worker_session_called();
}
inline void RegisterGraphRequest::set_create_worker_session_called(bool value) {
  _internal_set_create_worker_session_called(value);
  // @@protoc_insertion_point(field_set:tensorflow.RegisterGraphRequest.create_worker_session_called)
}
inline bool RegisterGraphRequest::_internal_create_worker_session_called() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.create_worker_session_called_;
}
inline void RegisterGraphRequest::_internal_set_create_worker_session_called(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_worker_session_called_ = value;
}

// .tensorflow.GraphDef graph_def = 2;
inline bool RegisterGraphRequest::has_graph_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.graph_def_ != nullptr);
  return value;
}
inline const ::tensorflow::GraphDef& RegisterGraphRequest::_internal_graph_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::GraphDef* p = _impl_.graph_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::GraphDef&>(::tensorflow::_GraphDef_default_instance_);
}
inline const ::tensorflow::GraphDef& RegisterGraphRequest::graph_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RegisterGraphRequest.graph_def)
  return _internal_graph_def();
}
inline void RegisterGraphRequest::unsafe_arena_set_allocated_graph_def(::tensorflow::GraphDef* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_def_);
  }
  _impl_.graph_def_ = reinterpret_cast<::tensorflow::GraphDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RegisterGraphRequest.graph_def)
}
inline ::tensorflow::GraphDef* RegisterGraphRequest::release_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::GraphDef* released = _impl_.graph_def_;
  _impl_.graph_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::GraphDef* RegisterGraphRequest::unsafe_arena_release_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RegisterGraphRequest.graph_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::GraphDef* temp = _impl_.graph_def_;
  _impl_.graph_def_ = nullptr;
  return temp;
}
inline ::tensorflow::GraphDef* RegisterGraphRequest::_internal_mutable_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.graph_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::GraphDef>(GetArena());
    _impl_.graph_def_ = reinterpret_cast<::tensorflow::GraphDef*>(p);
  }
  return _impl_.graph_def_;
}
inline ::tensorflow::GraphDef* RegisterGraphRequest::mutable_graph_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::GraphDef* _msg = _internal_mutable_graph_def();
  // @@protoc_insertion_point(field_mutable:tensorflow.RegisterGraphRequest.graph_def)
  return _msg;
}
inline void RegisterGraphRequest::set_allocated_graph_def(::tensorflow::GraphDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.graph_def_ = reinterpret_cast<::tensorflow::GraphDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RegisterGraphRequest.graph_def)
}

// bool has_control_flow = 3 [deprecated = true];
inline void RegisterGraphRequest::clear_has_control_flow() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_control_flow_ = false;
}
inline bool RegisterGraphRequest::has_control_flow() const {
  // @@protoc_insertion_point(field_get:tensorflow.RegisterGraphRequest.has_control_flow)
  return _internal_has_control_flow();
}
inline void RegisterGraphRequest::set_has_control_flow(bool value) {
  _internal_set_has_control_flow(value);
  // @@protoc_insertion_point(field_set:tensorflow.RegisterGraphRequest.has_control_flow)
}
inline bool RegisterGraphRequest::_internal_has_control_flow() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.has_control_flow_;
}
inline void RegisterGraphRequest::_internal_set_has_control_flow(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_control_flow_ = value;
}

// .tensorflow.GraphOptions graph_options = 4;
inline bool RegisterGraphRequest::has_graph_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.graph_options_ != nullptr);
  return value;
}
inline const ::tensorflow::GraphOptions& RegisterGraphRequest::_internal_graph_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::GraphOptions* p = _impl_.graph_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::GraphOptions&>(::tensorflow::_GraphOptions_default_instance_);
}
inline const ::tensorflow::GraphOptions& RegisterGraphRequest::graph_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RegisterGraphRequest.graph_options)
  return _internal_graph_options();
}
inline void RegisterGraphRequest::unsafe_arena_set_allocated_graph_options(::tensorflow::GraphOptions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_options_);
  }
  _impl_.graph_options_ = reinterpret_cast<::tensorflow::GraphOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RegisterGraphRequest.graph_options)
}
inline ::tensorflow::GraphOptions* RegisterGraphRequest::release_graph_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::GraphOptions* released = _impl_.graph_options_;
  _impl_.graph_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::GraphOptions* RegisterGraphRequest::unsafe_arena_release_graph_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RegisterGraphRequest.graph_options)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::GraphOptions* temp = _impl_.graph_options_;
  _impl_.graph_options_ = nullptr;
  return temp;
}
inline ::tensorflow::GraphOptions* RegisterGraphRequest::_internal_mutable_graph_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.graph_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::GraphOptions>(GetArena());
    _impl_.graph_options_ = reinterpret_cast<::tensorflow::GraphOptions*>(p);
  }
  return _impl_.graph_options_;
}
inline ::tensorflow::GraphOptions* RegisterGraphRequest::mutable_graph_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::GraphOptions* _msg = _internal_mutable_graph_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.RegisterGraphRequest.graph_options)
  return _msg;
}
inline void RegisterGraphRequest::set_allocated_graph_options(::tensorflow::GraphOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.graph_options_ = reinterpret_cast<::tensorflow::GraphOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RegisterGraphRequest.graph_options)
}

// .tensorflow.DebugOptions debug_options = 5;
inline bool RegisterGraphRequest::has_debug_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.debug_options_ != nullptr);
  return value;
}
inline const ::tensorflow::DebugOptions& RegisterGraphRequest::_internal_debug_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::DebugOptions* p = _impl_.debug_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::DebugOptions&>(::tensorflow::_DebugOptions_default_instance_);
}
inline const ::tensorflow::DebugOptions& RegisterGraphRequest::debug_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RegisterGraphRequest.debug_options)
  return _internal_debug_options();
}
inline void RegisterGraphRequest::unsafe_arena_set_allocated_debug_options(::tensorflow::DebugOptions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.debug_options_);
  }
  _impl_.debug_options_ = reinterpret_cast<::tensorflow::DebugOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RegisterGraphRequest.debug_options)
}
inline ::tensorflow::DebugOptions* RegisterGraphRequest::release_debug_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tensorflow::DebugOptions* released = _impl_.debug_options_;
  _impl_.debug_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::DebugOptions* RegisterGraphRequest::unsafe_arena_release_debug_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RegisterGraphRequest.debug_options)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tensorflow::DebugOptions* temp = _impl_.debug_options_;
  _impl_.debug_options_ = nullptr;
  return temp;
}
inline ::tensorflow::DebugOptions* RegisterGraphRequest::_internal_mutable_debug_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.debug_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::DebugOptions>(GetArena());
    _impl_.debug_options_ = reinterpret_cast<::tensorflow::DebugOptions*>(p);
  }
  return _impl_.debug_options_;
}
inline ::tensorflow::DebugOptions* RegisterGraphRequest::mutable_debug_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tensorflow::DebugOptions* _msg = _internal_mutable_debug_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.RegisterGraphRequest.debug_options)
  return _msg;
}
inline void RegisterGraphRequest::set_allocated_debug_options(::tensorflow::DebugOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.debug_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.debug_options_ = reinterpret_cast<::tensorflow::DebugOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RegisterGraphRequest.debug_options)
}

// int64 collective_graph_key = 7;
inline void RegisterGraphRequest::clear_collective_graph_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collective_graph_key_ = ::int64_t{0};
}
inline ::int64_t RegisterGraphRequest::collective_graph_key() const {
  // @@protoc_insertion_point(field_get:tensorflow.RegisterGraphRequest.collective_graph_key)
  return _internal_collective_graph_key();
}
inline void RegisterGraphRequest::set_collective_graph_key(::int64_t value) {
  _internal_set_collective_graph_key(value);
  // @@protoc_insertion_point(field_set:tensorflow.RegisterGraphRequest.collective_graph_key)
}
inline ::int64_t RegisterGraphRequest::_internal_collective_graph_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collective_graph_key_;
}
inline void RegisterGraphRequest::_internal_set_collective_graph_key(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collective_graph_key_ = value;
}

// .tensorflow.ConfigProto config_proto = 8;
inline bool RegisterGraphRequest::has_config_proto() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_proto_ != nullptr);
  return value;
}
inline const ::tensorflow::ConfigProto& RegisterGraphRequest::_internal_config_proto() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ConfigProto* p = _impl_.config_proto_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ConfigProto&>(::tensorflow::_ConfigProto_default_instance_);
}
inline const ::tensorflow::ConfigProto& RegisterGraphRequest::config_proto() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RegisterGraphRequest.config_proto)
  return _internal_config_proto();
}
inline void RegisterGraphRequest::unsafe_arena_set_allocated_config_proto(::tensorflow::ConfigProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_proto_);
  }
  _impl_.config_proto_ = reinterpret_cast<::tensorflow::ConfigProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RegisterGraphRequest.config_proto)
}
inline ::tensorflow::ConfigProto* RegisterGraphRequest::release_config_proto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tensorflow::ConfigProto* released = _impl_.config_proto_;
  _impl_.config_proto_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::ConfigProto* RegisterGraphRequest::unsafe_arena_release_config_proto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RegisterGraphRequest.config_proto)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tensorflow::ConfigProto* temp = _impl_.config_proto_;
  _impl_.config_proto_ = nullptr;
  return temp;
}
inline ::tensorflow::ConfigProto* RegisterGraphRequest::_internal_mutable_config_proto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_proto_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ConfigProto>(GetArena());
    _impl_.config_proto_ = reinterpret_cast<::tensorflow::ConfigProto*>(p);
  }
  return _impl_.config_proto_;
}
inline ::tensorflow::ConfigProto* RegisterGraphRequest::mutable_config_proto() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::tensorflow::ConfigProto* _msg = _internal_mutable_config_proto();
  // @@protoc_insertion_point(field_mutable:tensorflow.RegisterGraphRequest.config_proto)
  return _msg;
}
inline void RegisterGraphRequest::set_allocated_config_proto(::tensorflow::ConfigProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_proto_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.config_proto_ = reinterpret_cast<::tensorflow::ConfigProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RegisterGraphRequest.config_proto)
}

// -------------------------------------------------------------------

// RegisterGraphResponse

// string graph_handle = 1;
inline void RegisterGraphResponse::clear_graph_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.ClearToEmpty();
}
inline const std::string& RegisterGraphResponse::graph_handle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RegisterGraphResponse.graph_handle)
  return _internal_graph_handle();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterGraphResponse::set_graph_handle(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RegisterGraphResponse.graph_handle)
}
inline std::string* RegisterGraphResponse::mutable_graph_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_graph_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.RegisterGraphResponse.graph_handle)
  return _s;
}
inline const std::string& RegisterGraphResponse::_internal_graph_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_handle_.Get();
}
inline void RegisterGraphResponse::_internal_set_graph_handle(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.Set(value, GetArena());
}
inline std::string* RegisterGraphResponse::_internal_mutable_graph_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.graph_handle_.Mutable( GetArena());
}
inline std::string* RegisterGraphResponse::release_graph_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RegisterGraphResponse.graph_handle)
  return _impl_.graph_handle_.Release();
}
inline void RegisterGraphResponse::set_allocated_graph_handle(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.graph_handle_.IsDefault()) {
          _impl_.graph_handle_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RegisterGraphResponse.graph_handle)
}

// -------------------------------------------------------------------

// DeregisterGraphRequest

// string session_handle = 2;
inline void DeregisterGraphRequest::clear_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.ClearToEmpty();
}
inline const std::string& DeregisterGraphRequest::session_handle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeregisterGraphRequest.session_handle)
  return _internal_session_handle();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeregisterGraphRequest::set_session_handle(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.DeregisterGraphRequest.session_handle)
}
inline std::string* DeregisterGraphRequest::mutable_session_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.DeregisterGraphRequest.session_handle)
  return _s;
}
inline const std::string& DeregisterGraphRequest::_internal_session_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_handle_.Get();
}
inline void DeregisterGraphRequest::_internal_set_session_handle(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(value, GetArena());
}
inline std::string* DeregisterGraphRequest::_internal_mutable_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_handle_.Mutable( GetArena());
}
inline std::string* DeregisterGraphRequest::release_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.DeregisterGraphRequest.session_handle)
  return _impl_.session_handle_.Release();
}
inline void DeregisterGraphRequest::set_allocated_session_handle(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_handle_.IsDefault()) {
          _impl_.session_handle_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DeregisterGraphRequest.session_handle)
}

// bool create_worker_session_called = 3;
inline void DeregisterGraphRequest::clear_create_worker_session_called() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_worker_session_called_ = false;
}
inline bool DeregisterGraphRequest::create_worker_session_called() const {
  // @@protoc_insertion_point(field_get:tensorflow.DeregisterGraphRequest.create_worker_session_called)
  return _internal_create_worker_session_called();
}
inline void DeregisterGraphRequest::set_create_worker_session_called(bool value) {
  _internal_set_create_worker_session_called(value);
  // @@protoc_insertion_point(field_set:tensorflow.DeregisterGraphRequest.create_worker_session_called)
}
inline bool DeregisterGraphRequest::_internal_create_worker_session_called() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.create_worker_session_called_;
}
inline void DeregisterGraphRequest::_internal_set_create_worker_session_called(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_worker_session_called_ = value;
}

// string graph_handle = 1;
inline void DeregisterGraphRequest::clear_graph_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.ClearToEmpty();
}
inline const std::string& DeregisterGraphRequest::graph_handle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.DeregisterGraphRequest.graph_handle)
  return _internal_graph_handle();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeregisterGraphRequest::set_graph_handle(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.DeregisterGraphRequest.graph_handle)
}
inline std::string* DeregisterGraphRequest::mutable_graph_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_graph_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.DeregisterGraphRequest.graph_handle)
  return _s;
}
inline const std::string& DeregisterGraphRequest::_internal_graph_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_handle_.Get();
}
inline void DeregisterGraphRequest::_internal_set_graph_handle(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.Set(value, GetArena());
}
inline std::string* DeregisterGraphRequest::_internal_mutable_graph_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.graph_handle_.Mutable( GetArena());
}
inline std::string* DeregisterGraphRequest::release_graph_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.DeregisterGraphRequest.graph_handle)
  return _impl_.graph_handle_.Release();
}
inline void DeregisterGraphRequest::set_allocated_graph_handle(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.graph_handle_.IsDefault()) {
          _impl_.graph_handle_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DeregisterGraphRequest.graph_handle)
}

// -------------------------------------------------------------------

// DeregisterGraphResponse

// -------------------------------------------------------------------

// CleanupAllRequest

// repeated string container = 1;
inline int CleanupAllRequest::_internal_container_size() const {
  return _internal_container().size();
}
inline int CleanupAllRequest::container_size() const {
  return _internal_container_size();
}
inline void CleanupAllRequest::clear_container() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.container_.Clear();
}
inline std::string* CleanupAllRequest::add_container() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_container()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.CleanupAllRequest.container)
  return _s;
}
inline const std::string& CleanupAllRequest::container(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CleanupAllRequest.container)
  return _internal_container().Get(index);
}
inline std::string* CleanupAllRequest::mutable_container(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.CleanupAllRequest.container)
  return _internal_mutable_container()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CleanupAllRequest::set_container(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_container()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.CleanupAllRequest.container)
}
template <typename Arg_, typename... Args_>
inline void CleanupAllRequest::add_container(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_container(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.CleanupAllRequest.container)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CleanupAllRequest::container() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CleanupAllRequest.container)
  return _internal_container();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CleanupAllRequest::mutable_container() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CleanupAllRequest.container)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_container();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CleanupAllRequest::_internal_container() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.container_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CleanupAllRequest::_internal_mutable_container() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.container_;
}

// -------------------------------------------------------------------

// CleanupAllResponse

// -------------------------------------------------------------------

// ExecutorOpts

// bool record_costs = 1;
inline void ExecutorOpts::clear_record_costs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.record_costs_ = false;
}
inline bool ExecutorOpts::record_costs() const {
  // @@protoc_insertion_point(field_get:tensorflow.ExecutorOpts.record_costs)
  return _internal_record_costs();
}
inline void ExecutorOpts::set_record_costs(bool value) {
  _internal_set_record_costs(value);
  // @@protoc_insertion_point(field_set:tensorflow.ExecutorOpts.record_costs)
}
inline bool ExecutorOpts::_internal_record_costs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.record_costs_;
}
inline void ExecutorOpts::_internal_set_record_costs(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.record_costs_ = value;
}

// bool record_timeline = 3;
inline void ExecutorOpts::clear_record_timeline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.record_timeline_ = false;
}
inline bool ExecutorOpts::record_timeline() const {
  // @@protoc_insertion_point(field_get:tensorflow.ExecutorOpts.record_timeline)
  return _internal_record_timeline();
}
inline void ExecutorOpts::set_record_timeline(bool value) {
  _internal_set_record_timeline(value);
  // @@protoc_insertion_point(field_set:tensorflow.ExecutorOpts.record_timeline)
}
inline bool ExecutorOpts::_internal_record_timeline() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.record_timeline_;
}
inline void ExecutorOpts::_internal_set_record_timeline(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.record_timeline_ = value;
}

// bool record_partition_graphs = 4;
inline void ExecutorOpts::clear_record_partition_graphs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.record_partition_graphs_ = false;
}
inline bool ExecutorOpts::record_partition_graphs() const {
  // @@protoc_insertion_point(field_get:tensorflow.ExecutorOpts.record_partition_graphs)
  return _internal_record_partition_graphs();
}
inline void ExecutorOpts::set_record_partition_graphs(bool value) {
  _internal_set_record_partition_graphs(value);
  // @@protoc_insertion_point(field_set:tensorflow.ExecutorOpts.record_partition_graphs)
}
inline bool ExecutorOpts::_internal_record_partition_graphs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.record_partition_graphs_;
}
inline void ExecutorOpts::_internal_set_record_partition_graphs(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.record_partition_graphs_ = value;
}

// bool report_tensor_allocations_upon_oom = 5;
inline void ExecutorOpts::clear_report_tensor_allocations_upon_oom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_tensor_allocations_upon_oom_ = false;
}
inline bool ExecutorOpts::report_tensor_allocations_upon_oom() const {
  // @@protoc_insertion_point(field_get:tensorflow.ExecutorOpts.report_tensor_allocations_upon_oom)
  return _internal_report_tensor_allocations_upon_oom();
}
inline void ExecutorOpts::set_report_tensor_allocations_upon_oom(bool value) {
  _internal_set_report_tensor_allocations_upon_oom(value);
  // @@protoc_insertion_point(field_set:tensorflow.ExecutorOpts.report_tensor_allocations_upon_oom)
}
inline bool ExecutorOpts::_internal_report_tensor_allocations_upon_oom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.report_tensor_allocations_upon_oom_;
}
inline void ExecutorOpts::_internal_set_report_tensor_allocations_upon_oom(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_tensor_allocations_upon_oom_ = value;
}

// -------------------------------------------------------------------

// RunGraphRequest

// string session_handle = 8;
inline void RunGraphRequest::clear_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.ClearToEmpty();
}
inline const std::string& RunGraphRequest::session_handle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.session_handle)
  return _internal_session_handle();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RunGraphRequest::set_session_handle(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphRequest.session_handle)
}
inline std::string* RunGraphRequest::mutable_session_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphRequest.session_handle)
  return _s;
}
inline const std::string& RunGraphRequest::_internal_session_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_handle_.Get();
}
inline void RunGraphRequest::_internal_set_session_handle(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.Set(value, GetArena());
}
inline std::string* RunGraphRequest::_internal_mutable_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_handle_.Mutable( GetArena());
}
inline std::string* RunGraphRequest::release_session_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RunGraphRequest.session_handle)
  return _impl_.session_handle_.Release();
}
inline void RunGraphRequest::set_allocated_session_handle(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_handle_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_handle_.IsDefault()) {
          _impl_.session_handle_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RunGraphRequest.session_handle)
}

// bool create_worker_session_called = 10;
inline void RunGraphRequest::clear_create_worker_session_called() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_worker_session_called_ = false;
}
inline bool RunGraphRequest::create_worker_session_called() const {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.create_worker_session_called)
  return _internal_create_worker_session_called();
}
inline void RunGraphRequest::set_create_worker_session_called(bool value) {
  _internal_set_create_worker_session_called(value);
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphRequest.create_worker_session_called)
}
inline bool RunGraphRequest::_internal_create_worker_session_called() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.create_worker_session_called_;
}
inline void RunGraphRequest::_internal_set_create_worker_session_called(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_worker_session_called_ = value;
}

// string graph_handle = 1;
inline void RunGraphRequest::clear_graph_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.ClearToEmpty();
}
inline const std::string& RunGraphRequest::graph_handle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.graph_handle)
  return _internal_graph_handle();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RunGraphRequest::set_graph_handle(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphRequest.graph_handle)
}
inline std::string* RunGraphRequest::mutable_graph_handle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_graph_handle();
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphRequest.graph_handle)
  return _s;
}
inline const std::string& RunGraphRequest::_internal_graph_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_handle_.Get();
}
inline void RunGraphRequest::_internal_set_graph_handle(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.Set(value, GetArena());
}
inline std::string* RunGraphRequest::_internal_mutable_graph_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.graph_handle_.Mutable( GetArena());
}
inline std::string* RunGraphRequest::release_graph_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RunGraphRequest.graph_handle)
  return _impl_.graph_handle_.Release();
}
inline void RunGraphRequest::set_allocated_graph_handle(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_handle_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.graph_handle_.IsDefault()) {
          _impl_.graph_handle_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RunGraphRequest.graph_handle)
}

// int64 step_id = 2;
inline void RunGraphRequest::clear_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = ::int64_t{0};
}
inline ::int64_t RunGraphRequest::step_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.step_id)
  return _internal_step_id();
}
inline void RunGraphRequest::set_step_id(::int64_t value) {
  _internal_set_step_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphRequest.step_id)
}
inline ::int64_t RunGraphRequest::_internal_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_id_;
}
inline void RunGraphRequest::_internal_set_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = value;
}

// .tensorflow.ExecutorOpts exec_opts = 5;
inline bool RunGraphRequest::has_exec_opts() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.exec_opts_ != nullptr);
  return value;
}
inline void RunGraphRequest::clear_exec_opts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_opts_ != nullptr) _impl_.exec_opts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::ExecutorOpts& RunGraphRequest::_internal_exec_opts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ExecutorOpts* p = _impl_.exec_opts_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ExecutorOpts&>(::tensorflow::_ExecutorOpts_default_instance_);
}
inline const ::tensorflow::ExecutorOpts& RunGraphRequest::exec_opts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.exec_opts)
  return _internal_exec_opts();
}
inline void RunGraphRequest::unsafe_arena_set_allocated_exec_opts(::tensorflow::ExecutorOpts* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exec_opts_);
  }
  _impl_.exec_opts_ = reinterpret_cast<::tensorflow::ExecutorOpts*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RunGraphRequest.exec_opts)
}
inline ::tensorflow::ExecutorOpts* RunGraphRequest::release_exec_opts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ExecutorOpts* released = _impl_.exec_opts_;
  _impl_.exec_opts_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::ExecutorOpts* RunGraphRequest::unsafe_arena_release_exec_opts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RunGraphRequest.exec_opts)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ExecutorOpts* temp = _impl_.exec_opts_;
  _impl_.exec_opts_ = nullptr;
  return temp;
}
inline ::tensorflow::ExecutorOpts* RunGraphRequest::_internal_mutable_exec_opts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_opts_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ExecutorOpts>(GetArena());
    _impl_.exec_opts_ = reinterpret_cast<::tensorflow::ExecutorOpts*>(p);
  }
  return _impl_.exec_opts_;
}
inline ::tensorflow::ExecutorOpts* RunGraphRequest::mutable_exec_opts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::ExecutorOpts* _msg = _internal_mutable_exec_opts();
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphRequest.exec_opts)
  return _msg;
}
inline void RunGraphRequest::set_allocated_exec_opts(::tensorflow::ExecutorOpts* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.exec_opts_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.exec_opts_ = reinterpret_cast<::tensorflow::ExecutorOpts*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RunGraphRequest.exec_opts)
}

// repeated .tensorflow.NamedTensorProto send = 3;
inline int RunGraphRequest::_internal_send_size() const {
  return _internal_send().size();
}
inline int RunGraphRequest::send_size() const {
  return _internal_send_size();
}
inline ::tensorflow::NamedTensorProto* RunGraphRequest::mutable_send(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphRequest.send)
  return _internal_mutable_send()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>* RunGraphRequest::mutable_send()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RunGraphRequest.send)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_send();
}
inline const ::tensorflow::NamedTensorProto& RunGraphRequest::send(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.send)
  return _internal_send().Get(index);
}
inline ::tensorflow::NamedTensorProto* RunGraphRequest::add_send() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::NamedTensorProto* _add = _internal_mutable_send()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.RunGraphRequest.send)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>& RunGraphRequest::send() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.RunGraphRequest.send)
  return _internal_send();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>&
RunGraphRequest::_internal_send() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>*
RunGraphRequest::_internal_mutable_send() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.send_;
}

// repeated string recv_key = 4;
inline int RunGraphRequest::_internal_recv_key_size() const {
  return _internal_recv_key().size();
}
inline int RunGraphRequest::recv_key_size() const {
  return _internal_recv_key_size();
}
inline void RunGraphRequest::clear_recv_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recv_key_.Clear();
}
inline std::string* RunGraphRequest::add_recv_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_recv_key()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.RunGraphRequest.recv_key)
  return _s;
}
inline const std::string& RunGraphRequest::recv_key(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.recv_key)
  return _internal_recv_key().Get(index);
}
inline std::string* RunGraphRequest::mutable_recv_key(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphRequest.recv_key)
  return _internal_mutable_recv_key()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RunGraphRequest::set_recv_key(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_recv_key()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphRequest.recv_key)
}
template <typename Arg_, typename... Args_>
inline void RunGraphRequest::add_recv_key(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_recv_key(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.RunGraphRequest.recv_key)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RunGraphRequest::recv_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.RunGraphRequest.recv_key)
  return _internal_recv_key();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RunGraphRequest::mutable_recv_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RunGraphRequest.recv_key)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_recv_key();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RunGraphRequest::_internal_recv_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recv_key_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RunGraphRequest::_internal_mutable_recv_key() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.recv_key_;
}

// bool is_partial = 6;
inline void RunGraphRequest::clear_is_partial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_partial_ = false;
}
inline bool RunGraphRequest::is_partial() const {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.is_partial)
  return _internal_is_partial();
}
inline void RunGraphRequest::set_is_partial(bool value) {
  _internal_set_is_partial(value);
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphRequest.is_partial)
}
inline bool RunGraphRequest::_internal_is_partial() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_partial_;
}
inline void RunGraphRequest::_internal_set_is_partial(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_partial_ = value;
}

// bool is_last_partial_run = 7;
inline void RunGraphRequest::clear_is_last_partial_run() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_last_partial_run_ = false;
}
inline bool RunGraphRequest::is_last_partial_run() const {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.is_last_partial_run)
  return _internal_is_last_partial_run();
}
inline void RunGraphRequest::set_is_last_partial_run(bool value) {
  _internal_set_is_last_partial_run(value);
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphRequest.is_last_partial_run)
}
inline bool RunGraphRequest::_internal_is_last_partial_run() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_last_partial_run_;
}
inline void RunGraphRequest::_internal_set_is_last_partial_run(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_last_partial_run_ = value;
}

// bool store_errors_in_response_body = 9;
inline void RunGraphRequest::clear_store_errors_in_response_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_errors_in_response_body_ = false;
}
inline bool RunGraphRequest::store_errors_in_response_body() const {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.store_errors_in_response_body)
  return _internal_store_errors_in_response_body();
}
inline void RunGraphRequest::set_store_errors_in_response_body(bool value) {
  _internal_set_store_errors_in_response_body(value);
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphRequest.store_errors_in_response_body)
}
inline bool RunGraphRequest::_internal_store_errors_in_response_body() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.store_errors_in_response_body_;
}
inline void RunGraphRequest::_internal_set_store_errors_in_response_body(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_errors_in_response_body_ = value;
}

// int64 request_id = 11;
inline void RunGraphRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = ::int64_t{0};
}
inline ::int64_t RunGraphRequest::request_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphRequest.request_id)
  return _internal_request_id();
}
inline void RunGraphRequest::set_request_id(::int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphRequest.request_id)
}
inline ::int64_t RunGraphRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_;
}
inline void RunGraphRequest::_internal_set_request_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = value;
}

// -------------------------------------------------------------------

// RunGraphResponse

// repeated .tensorflow.NamedTensorProto recv = 1;
inline int RunGraphResponse::_internal_recv_size() const {
  return _internal_recv().size();
}
inline int RunGraphResponse::recv_size() const {
  return _internal_recv_size();
}
inline ::tensorflow::NamedTensorProto* RunGraphResponse::mutable_recv(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphResponse.recv)
  return _internal_mutable_recv()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>* RunGraphResponse::mutable_recv()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RunGraphResponse.recv)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_recv();
}
inline const ::tensorflow::NamedTensorProto& RunGraphResponse::recv(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphResponse.recv)
  return _internal_recv().Get(index);
}
inline ::tensorflow::NamedTensorProto* RunGraphResponse::add_recv() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::NamedTensorProto* _add = _internal_mutable_recv()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.RunGraphResponse.recv)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>& RunGraphResponse::recv() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.RunGraphResponse.recv)
  return _internal_recv();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>&
RunGraphResponse::_internal_recv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recv_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::NamedTensorProto>*
RunGraphResponse::_internal_mutable_recv() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.recv_;
}

// .tensorflow.StepStats step_stats = 2;
inline bool RunGraphResponse::has_step_stats() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.step_stats_ != nullptr);
  return value;
}
inline const ::tensorflow::StepStats& RunGraphResponse::_internal_step_stats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::StepStats* p = _impl_.step_stats_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::StepStats&>(::tensorflow::_StepStats_default_instance_);
}
inline const ::tensorflow::StepStats& RunGraphResponse::step_stats() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphResponse.step_stats)
  return _internal_step_stats();
}
inline void RunGraphResponse::unsafe_arena_set_allocated_step_stats(::tensorflow::StepStats* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.step_stats_);
  }
  _impl_.step_stats_ = reinterpret_cast<::tensorflow::StepStats*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RunGraphResponse.step_stats)
}
inline ::tensorflow::StepStats* RunGraphResponse::release_step_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::StepStats* released = _impl_.step_stats_;
  _impl_.step_stats_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::StepStats* RunGraphResponse::unsafe_arena_release_step_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RunGraphResponse.step_stats)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::StepStats* temp = _impl_.step_stats_;
  _impl_.step_stats_ = nullptr;
  return temp;
}
inline ::tensorflow::StepStats* RunGraphResponse::_internal_mutable_step_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.step_stats_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::StepStats>(GetArena());
    _impl_.step_stats_ = reinterpret_cast<::tensorflow::StepStats*>(p);
  }
  return _impl_.step_stats_;
}
inline ::tensorflow::StepStats* RunGraphResponse::mutable_step_stats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::StepStats* _msg = _internal_mutable_step_stats();
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphResponse.step_stats)
  return _msg;
}
inline void RunGraphResponse::set_allocated_step_stats(::tensorflow::StepStats* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.step_stats_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.step_stats_ = reinterpret_cast<::tensorflow::StepStats*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RunGraphResponse.step_stats)
}

// .tensorflow.CostGraphDef cost_graph = 3;
inline bool RunGraphResponse::has_cost_graph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cost_graph_ != nullptr);
  return value;
}
inline const ::tensorflow::CostGraphDef& RunGraphResponse::_internal_cost_graph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::CostGraphDef* p = _impl_.cost_graph_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::CostGraphDef&>(::tensorflow::_CostGraphDef_default_instance_);
}
inline const ::tensorflow::CostGraphDef& RunGraphResponse::cost_graph() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphResponse.cost_graph)
  return _internal_cost_graph();
}
inline void RunGraphResponse::unsafe_arena_set_allocated_cost_graph(::tensorflow::CostGraphDef* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cost_graph_);
  }
  _impl_.cost_graph_ = reinterpret_cast<::tensorflow::CostGraphDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RunGraphResponse.cost_graph)
}
inline ::tensorflow::CostGraphDef* RunGraphResponse::release_cost_graph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::CostGraphDef* released = _impl_.cost_graph_;
  _impl_.cost_graph_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::CostGraphDef* RunGraphResponse::unsafe_arena_release_cost_graph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RunGraphResponse.cost_graph)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::CostGraphDef* temp = _impl_.cost_graph_;
  _impl_.cost_graph_ = nullptr;
  return temp;
}
inline ::tensorflow::CostGraphDef* RunGraphResponse::_internal_mutable_cost_graph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cost_graph_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::CostGraphDef>(GetArena());
    _impl_.cost_graph_ = reinterpret_cast<::tensorflow::CostGraphDef*>(p);
  }
  return _impl_.cost_graph_;
}
inline ::tensorflow::CostGraphDef* RunGraphResponse::mutable_cost_graph() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::CostGraphDef* _msg = _internal_mutable_cost_graph();
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphResponse.cost_graph)
  return _msg;
}
inline void RunGraphResponse::set_allocated_cost_graph(::tensorflow::CostGraphDef* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cost_graph_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cost_graph_ = reinterpret_cast<::tensorflow::CostGraphDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RunGraphResponse.cost_graph)
}

// repeated .tensorflow.GraphDef partition_graph = 4;
inline int RunGraphResponse::_internal_partition_graph_size() const {
  return _internal_partition_graph().size();
}
inline int RunGraphResponse::partition_graph_size() const {
  return _internal_partition_graph_size();
}
inline ::tensorflow::GraphDef* RunGraphResponse::mutable_partition_graph(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphResponse.partition_graph)
  return _internal_mutable_partition_graph()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDef>* RunGraphResponse::mutable_partition_graph()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RunGraphResponse.partition_graph)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_partition_graph();
}
inline const ::tensorflow::GraphDef& RunGraphResponse::partition_graph(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphResponse.partition_graph)
  return _internal_partition_graph().Get(index);
}
inline ::tensorflow::GraphDef* RunGraphResponse::add_partition_graph() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::GraphDef* _add = _internal_mutable_partition_graph()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.RunGraphResponse.partition_graph)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDef>& RunGraphResponse::partition_graph() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.RunGraphResponse.partition_graph)
  return _internal_partition_graph();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDef>&
RunGraphResponse::_internal_partition_graph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partition_graph_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::GraphDef>*
RunGraphResponse::_internal_mutable_partition_graph() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.partition_graph_;
}

// .tensorflow.error.Code status_code = 5;
inline void RunGraphResponse::clear_status_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_code_ = 0;
}
inline ::tensorflow::error::Code RunGraphResponse::status_code() const {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphResponse.status_code)
  return _internal_status_code();
}
inline void RunGraphResponse::set_status_code(::tensorflow::error::Code value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphResponse.status_code)
}
inline ::tensorflow::error::Code RunGraphResponse::_internal_status_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::error::Code>(_impl_.status_code_);
}
inline void RunGraphResponse::_internal_set_status_code(::tensorflow::error::Code value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_code_ = value;
}

// string status_error_message = 6;
inline void RunGraphResponse::clear_status_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_error_message_.ClearToEmpty();
}
inline const std::string& RunGraphResponse::status_error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RunGraphResponse.status_error_message)
  return _internal_status_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RunGraphResponse::set_status_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RunGraphResponse.status_error_message)
}
inline std::string* RunGraphResponse::mutable_status_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status_error_message();
  // @@protoc_insertion_point(field_mutable:tensorflow.RunGraphResponse.status_error_message)
  return _s;
}
inline const std::string& RunGraphResponse::_internal_status_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_error_message_.Get();
}
inline void RunGraphResponse::_internal_set_status_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_error_message_.Set(value, GetArena());
}
inline std::string* RunGraphResponse::_internal_mutable_status_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_error_message_.Mutable( GetArena());
}
inline std::string* RunGraphResponse::release_status_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RunGraphResponse.status_error_message)
  return _impl_.status_error_message_.Release();
}
inline void RunGraphResponse::set_allocated_status_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_error_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_error_message_.IsDefault()) {
          _impl_.status_error_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RunGraphResponse.status_error_message)
}

// -------------------------------------------------------------------

// CleanupGraphRequest

// int64 step_id = 1;
inline void CleanupGraphRequest::clear_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = ::int64_t{0};
}
inline ::int64_t CleanupGraphRequest::step_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.CleanupGraphRequest.step_id)
  return _internal_step_id();
}
inline void CleanupGraphRequest::set_step_id(::int64_t value) {
  _internal_set_step_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.CleanupGraphRequest.step_id)
}
inline ::int64_t CleanupGraphRequest::_internal_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_id_;
}
inline void CleanupGraphRequest::_internal_set_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = value;
}

// -------------------------------------------------------------------

// CleanupGraphResponse

// -------------------------------------------------------------------

// RecvTensorRequest

// int64 step_id = 1;
inline void RecvTensorRequest::clear_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = ::int64_t{0};
}
inline ::int64_t RecvTensorRequest::step_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorRequest.step_id)
  return _internal_step_id();
}
inline void RecvTensorRequest::set_step_id(::int64_t value) {
  _internal_set_step_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvTensorRequest.step_id)
}
inline ::int64_t RecvTensorRequest::_internal_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_id_;
}
inline void RecvTensorRequest::_internal_set_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = value;
}

// string rendezvous_key = 2;
inline void RecvTensorRequest::clear_rendezvous_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rendezvous_key_.ClearToEmpty();
}
inline const std::string& RecvTensorRequest::rendezvous_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorRequest.rendezvous_key)
  return _internal_rendezvous_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RecvTensorRequest::set_rendezvous_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rendezvous_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RecvTensorRequest.rendezvous_key)
}
inline std::string* RecvTensorRequest::mutable_rendezvous_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rendezvous_key();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvTensorRequest.rendezvous_key)
  return _s;
}
inline const std::string& RecvTensorRequest::_internal_rendezvous_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rendezvous_key_.Get();
}
inline void RecvTensorRequest::_internal_set_rendezvous_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rendezvous_key_.Set(value, GetArena());
}
inline std::string* RecvTensorRequest::_internal_mutable_rendezvous_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rendezvous_key_.Mutable( GetArena());
}
inline std::string* RecvTensorRequest::release_rendezvous_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvTensorRequest.rendezvous_key)
  return _impl_.rendezvous_key_.Release();
}
inline void RecvTensorRequest::set_allocated_rendezvous_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rendezvous_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rendezvous_key_.IsDefault()) {
          _impl_.rendezvous_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvTensorRequest.rendezvous_key)
}

// bool dma_ok = 3;
inline void RecvTensorRequest::clear_dma_ok() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dma_ok_ = false;
}
inline bool RecvTensorRequest::dma_ok() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorRequest.dma_ok)
  return _internal_dma_ok();
}
inline void RecvTensorRequest::set_dma_ok(bool value) {
  _internal_set_dma_ok(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvTensorRequest.dma_ok)
}
inline bool RecvTensorRequest::_internal_dma_ok() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dma_ok_;
}
inline void RecvTensorRequest::_internal_set_dma_ok(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dma_ok_ = value;
}

// .tensorflow.DeviceLocality client_locality = 4;
inline bool RecvTensorRequest::has_client_locality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.client_locality_ != nullptr);
  return value;
}
inline const ::tensorflow::DeviceLocality& RecvTensorRequest::_internal_client_locality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::DeviceLocality* p = _impl_.client_locality_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::DeviceLocality&>(::tensorflow::_DeviceLocality_default_instance_);
}
inline const ::tensorflow::DeviceLocality& RecvTensorRequest::client_locality() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorRequest.client_locality)
  return _internal_client_locality();
}
inline void RecvTensorRequest::unsafe_arena_set_allocated_client_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_locality_);
  }
  _impl_.client_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorRequest.client_locality)
}
inline ::tensorflow::DeviceLocality* RecvTensorRequest::release_client_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceLocality* released = _impl_.client_locality_;
  _impl_.client_locality_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::DeviceLocality* RecvTensorRequest::unsafe_arena_release_client_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvTensorRequest.client_locality)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceLocality* temp = _impl_.client_locality_;
  _impl_.client_locality_ = nullptr;
  return temp;
}
inline ::tensorflow::DeviceLocality* RecvTensorRequest::_internal_mutable_client_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.client_locality_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::DeviceLocality>(GetArena());
    _impl_.client_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(p);
  }
  return _impl_.client_locality_;
}
inline ::tensorflow::DeviceLocality* RecvTensorRequest::mutable_client_locality() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::DeviceLocality* _msg = _internal_mutable_client_locality();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvTensorRequest.client_locality)
  return _msg;
}
inline void RecvTensorRequest::set_allocated_client_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_locality_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.client_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvTensorRequest.client_locality)
}

// .tensorflow.DeviceLocality server_locality = 5;
inline bool RecvTensorRequest::has_server_locality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.server_locality_ != nullptr);
  return value;
}
inline const ::tensorflow::DeviceLocality& RecvTensorRequest::_internal_server_locality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::DeviceLocality* p = _impl_.server_locality_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::DeviceLocality&>(::tensorflow::_DeviceLocality_default_instance_);
}
inline const ::tensorflow::DeviceLocality& RecvTensorRequest::server_locality() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorRequest.server_locality)
  return _internal_server_locality();
}
inline void RecvTensorRequest::unsafe_arena_set_allocated_server_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_locality_);
  }
  _impl_.server_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorRequest.server_locality)
}
inline ::tensorflow::DeviceLocality* RecvTensorRequest::release_server_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::DeviceLocality* released = _impl_.server_locality_;
  _impl_.server_locality_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::DeviceLocality* RecvTensorRequest::unsafe_arena_release_server_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvTensorRequest.server_locality)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::DeviceLocality* temp = _impl_.server_locality_;
  _impl_.server_locality_ = nullptr;
  return temp;
}
inline ::tensorflow::DeviceLocality* RecvTensorRequest::_internal_mutable_server_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_locality_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::DeviceLocality>(GetArena());
    _impl_.server_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(p);
  }
  return _impl_.server_locality_;
}
inline ::tensorflow::DeviceLocality* RecvTensorRequest::mutable_server_locality() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::DeviceLocality* _msg = _internal_mutable_server_locality();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvTensorRequest.server_locality)
  return _msg;
}
inline void RecvTensorRequest::set_allocated_server_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_locality_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.server_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvTensorRequest.server_locality)
}

// .google.protobuf.Any transport_options = 6;
inline bool RecvTensorRequest::has_transport_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transport_options_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& RecvTensorRequest::_internal_transport_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.transport_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& RecvTensorRequest::transport_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorRequest.transport_options)
  return _internal_transport_options();
}
inline void RecvTensorRequest::unsafe_arena_set_allocated_transport_options(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transport_options_);
  }
  _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorRequest.transport_options)
}
inline ::google::protobuf::Any* RecvTensorRequest::release_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Any* released = _impl_.transport_options_;
  _impl_.transport_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Any* RecvTensorRequest::unsafe_arena_release_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvTensorRequest.transport_options)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Any* temp = _impl_.transport_options_;
  _impl_.transport_options_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* RecvTensorRequest::_internal_mutable_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transport_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.transport_options_;
}
inline ::google::protobuf::Any* RecvTensorRequest::mutable_transport_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Any* _msg = _internal_mutable_transport_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvTensorRequest.transport_options)
  return _msg;
}
inline void RecvTensorRequest::set_allocated_transport_options(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transport_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvTensorRequest.transport_options)
}

// int64 request_id = 7;
inline void RecvTensorRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = ::int64_t{0};
}
inline ::int64_t RecvTensorRequest::request_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorRequest.request_id)
  return _internal_request_id();
}
inline void RecvTensorRequest::set_request_id(::int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvTensorRequest.request_id)
}
inline ::int64_t RecvTensorRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_;
}
inline void RecvTensorRequest::_internal_set_request_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = value;
}

// -------------------------------------------------------------------

// RecvTensorResponse

// .tensorflow.TensorProto tensor = 1;
inline bool RecvTensorResponse::has_tensor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tensor_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorProto& RecvTensorResponse::_internal_tensor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorProto* p = _impl_.tensor_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorProto&>(::tensorflow::_TensorProto_default_instance_);
}
inline const ::tensorflow::TensorProto& RecvTensorResponse::tensor() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorResponse.tensor)
  return _internal_tensor();
}
inline void RecvTensorResponse::unsafe_arena_set_allocated_tensor(::tensorflow::TensorProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_);
  }
  _impl_.tensor_ = reinterpret_cast<::tensorflow::TensorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorResponse.tensor)
}
inline ::tensorflow::TensorProto* RecvTensorResponse::release_tensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorProto* released = _impl_.tensor_;
  _impl_.tensor_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TensorProto* RecvTensorResponse::unsafe_arena_release_tensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvTensorResponse.tensor)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorProto* temp = _impl_.tensor_;
  _impl_.tensor_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorProto* RecvTensorResponse::_internal_mutable_tensor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tensor_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorProto>(GetArena());
    _impl_.tensor_ = reinterpret_cast<::tensorflow::TensorProto*>(p);
  }
  return _impl_.tensor_;
}
inline ::tensorflow::TensorProto* RecvTensorResponse::mutable_tensor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TensorProto* _msg = _internal_mutable_tensor();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvTensorResponse.tensor)
  return _msg;
}
inline void RecvTensorResponse::set_allocated_tensor(::tensorflow::TensorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tensor_ = reinterpret_cast<::tensorflow::TensorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvTensorResponse.tensor)
}

// bool is_dead = 2;
inline void RecvTensorResponse::clear_is_dead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_dead_ = false;
}
inline bool RecvTensorResponse::is_dead() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorResponse.is_dead)
  return _internal_is_dead();
}
inline void RecvTensorResponse::set_is_dead(bool value) {
  _internal_set_is_dead(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvTensorResponse.is_dead)
}
inline bool RecvTensorResponse::_internal_is_dead() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_dead_;
}
inline void RecvTensorResponse::_internal_set_is_dead(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_dead_ = value;
}

// int64 send_start_micros = 3;
inline void RecvTensorResponse::clear_send_start_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_start_micros_ = ::int64_t{0};
}
inline ::int64_t RecvTensorResponse::send_start_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorResponse.send_start_micros)
  return _internal_send_start_micros();
}
inline void RecvTensorResponse::set_send_start_micros(::int64_t value) {
  _internal_set_send_start_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvTensorResponse.send_start_micros)
}
inline ::int64_t RecvTensorResponse::_internal_send_start_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_start_micros_;
}
inline void RecvTensorResponse::_internal_set_send_start_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_start_micros_ = value;
}

// .google.protobuf.Any transport_options = 4;
inline bool RecvTensorResponse::has_transport_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transport_options_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& RecvTensorResponse::_internal_transport_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.transport_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& RecvTensorResponse::transport_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorResponse.transport_options)
  return _internal_transport_options();
}
inline void RecvTensorResponse::unsafe_arena_set_allocated_transport_options(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transport_options_);
  }
  _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorResponse.transport_options)
}
inline ::google::protobuf::Any* RecvTensorResponse::release_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Any* released = _impl_.transport_options_;
  _impl_.transport_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Any* RecvTensorResponse::unsafe_arena_release_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvTensorResponse.transport_options)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Any* temp = _impl_.transport_options_;
  _impl_.transport_options_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* RecvTensorResponse::_internal_mutable_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transport_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.transport_options_;
}
inline ::google::protobuf::Any* RecvTensorResponse::mutable_transport_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Any* _msg = _internal_mutable_transport_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvTensorResponse.transport_options)
  return _msg;
}
inline void RecvTensorResponse::set_allocated_transport_options(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transport_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvTensorResponse.transport_options)
}

// bool require_ack = 5;
inline void RecvTensorResponse::clear_require_ack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.require_ack_ = false;
}
inline bool RecvTensorResponse::require_ack() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvTensorResponse.require_ack)
  return _internal_require_ack();
}
inline void RecvTensorResponse::set_require_ack(bool value) {
  _internal_set_require_ack(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvTensorResponse.require_ack)
}
inline bool RecvTensorResponse::_internal_require_ack() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.require_ack_;
}
inline void RecvTensorResponse::_internal_set_require_ack(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.require_ack_ = value;
}

// -------------------------------------------------------------------

// MarkRecvFinishedRequest

// int64 request_id = 1;
inline void MarkRecvFinishedRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = ::int64_t{0};
}
inline ::int64_t MarkRecvFinishedRequest::request_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.MarkRecvFinishedRequest.request_id)
  return _internal_request_id();
}
inline void MarkRecvFinishedRequest::set_request_id(::int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.MarkRecvFinishedRequest.request_id)
}
inline ::int64_t MarkRecvFinishedRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_;
}
inline void MarkRecvFinishedRequest::_internal_set_request_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = value;
}

// -------------------------------------------------------------------

// MarkRecvFinishedResponse

// -------------------------------------------------------------------

// LoggingRequest

// bool enable_rpc_logging = 1;
inline void LoggingRequest::clear_enable_rpc_logging() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_rpc_logging_ = false;
}
inline bool LoggingRequest::enable_rpc_logging() const {
  // @@protoc_insertion_point(field_get:tensorflow.LoggingRequest.enable_rpc_logging)
  return _internal_enable_rpc_logging();
}
inline void LoggingRequest::set_enable_rpc_logging(bool value) {
  _internal_set_enable_rpc_logging(value);
  // @@protoc_insertion_point(field_set:tensorflow.LoggingRequest.enable_rpc_logging)
}
inline bool LoggingRequest::_internal_enable_rpc_logging() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_rpc_logging_;
}
inline void LoggingRequest::_internal_set_enable_rpc_logging(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_rpc_logging_ = value;
}

// bool disable_rpc_logging = 4;
inline void LoggingRequest::clear_disable_rpc_logging() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_rpc_logging_ = false;
}
inline bool LoggingRequest::disable_rpc_logging() const {
  // @@protoc_insertion_point(field_get:tensorflow.LoggingRequest.disable_rpc_logging)
  return _internal_disable_rpc_logging();
}
inline void LoggingRequest::set_disable_rpc_logging(bool value) {
  _internal_set_disable_rpc_logging(value);
  // @@protoc_insertion_point(field_set:tensorflow.LoggingRequest.disable_rpc_logging)
}
inline bool LoggingRequest::_internal_disable_rpc_logging() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disable_rpc_logging_;
}
inline void LoggingRequest::_internal_set_disable_rpc_logging(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_rpc_logging_ = value;
}

// bool clear = 2;
inline void LoggingRequest::clear_clear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_ = false;
}
inline bool LoggingRequest::clear() const {
  // @@protoc_insertion_point(field_get:tensorflow.LoggingRequest.clear)
  return _internal_clear();
}
inline void LoggingRequest::set_clear(bool value) {
  _internal_set_clear(value);
  // @@protoc_insertion_point(field_set:tensorflow.LoggingRequest.clear)
}
inline bool LoggingRequest::_internal_clear() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clear_;
}
inline void LoggingRequest::_internal_set_clear(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clear_ = value;
}

// repeated int64 fetch_step_id = 3;
inline int LoggingRequest::_internal_fetch_step_id_size() const {
  return _internal_fetch_step_id().size();
}
inline int LoggingRequest::fetch_step_id_size() const {
  return _internal_fetch_step_id_size();
}
inline void LoggingRequest::clear_fetch_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fetch_step_id_.Clear();
}
inline ::int64_t LoggingRequest::fetch_step_id(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.LoggingRequest.fetch_step_id)
  return _internal_fetch_step_id().Get(index);
}
inline void LoggingRequest::set_fetch_step_id(int index, ::int64_t value) {
  _internal_mutable_fetch_step_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.LoggingRequest.fetch_step_id)
}
inline void LoggingRequest::add_fetch_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_fetch_step_id()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.LoggingRequest.fetch_step_id)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& LoggingRequest::fetch_step_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.LoggingRequest.fetch_step_id)
  return _internal_fetch_step_id();
}
inline ::google::protobuf::RepeatedField<::int64_t>* LoggingRequest::mutable_fetch_step_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.LoggingRequest.fetch_step_id)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_fetch_step_id();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
LoggingRequest::_internal_fetch_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fetch_step_id_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* LoggingRequest::_internal_mutable_fetch_step_id() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.fetch_step_id_;
}

// -------------------------------------------------------------------

// LabeledStepStats

// int64 step_id = 1;
inline void LabeledStepStats::clear_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = ::int64_t{0};
}
inline ::int64_t LabeledStepStats::step_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.LabeledStepStats.step_id)
  return _internal_step_id();
}
inline void LabeledStepStats::set_step_id(::int64_t value) {
  _internal_set_step_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.LabeledStepStats.step_id)
}
inline ::int64_t LabeledStepStats::_internal_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_id_;
}
inline void LabeledStepStats::_internal_set_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = value;
}

// .tensorflow.StepStats step_stats = 2;
inline bool LabeledStepStats::has_step_stats() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.step_stats_ != nullptr);
  return value;
}
inline const ::tensorflow::StepStats& LabeledStepStats::_internal_step_stats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::StepStats* p = _impl_.step_stats_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::StepStats&>(::tensorflow::_StepStats_default_instance_);
}
inline const ::tensorflow::StepStats& LabeledStepStats::step_stats() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.LabeledStepStats.step_stats)
  return _internal_step_stats();
}
inline void LabeledStepStats::unsafe_arena_set_allocated_step_stats(::tensorflow::StepStats* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.step_stats_);
  }
  _impl_.step_stats_ = reinterpret_cast<::tensorflow::StepStats*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.LabeledStepStats.step_stats)
}
inline ::tensorflow::StepStats* LabeledStepStats::release_step_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::StepStats* released = _impl_.step_stats_;
  _impl_.step_stats_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::StepStats* LabeledStepStats::unsafe_arena_release_step_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.LabeledStepStats.step_stats)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::StepStats* temp = _impl_.step_stats_;
  _impl_.step_stats_ = nullptr;
  return temp;
}
inline ::tensorflow::StepStats* LabeledStepStats::_internal_mutable_step_stats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.step_stats_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::StepStats>(GetArena());
    _impl_.step_stats_ = reinterpret_cast<::tensorflow::StepStats*>(p);
  }
  return _impl_.step_stats_;
}
inline ::tensorflow::StepStats* LabeledStepStats::mutable_step_stats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::StepStats* _msg = _internal_mutable_step_stats();
  // @@protoc_insertion_point(field_mutable:tensorflow.LabeledStepStats.step_stats)
  return _msg;
}
inline void LabeledStepStats::set_allocated_step_stats(::tensorflow::StepStats* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.step_stats_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.step_stats_ = reinterpret_cast<::tensorflow::StepStats*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.LabeledStepStats.step_stats)
}

// -------------------------------------------------------------------

// LoggingResponse

// repeated .tensorflow.LabeledStepStats step = 1;
inline int LoggingResponse::_internal_step_size() const {
  return _internal_step().size();
}
inline int LoggingResponse::step_size() const {
  return _internal_step_size();
}
inline void LoggingResponse::clear_step() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_.Clear();
}
inline ::tensorflow::LabeledStepStats* LoggingResponse::mutable_step(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.LoggingResponse.step)
  return _internal_mutable_step()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::LabeledStepStats>* LoggingResponse::mutable_step()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.LoggingResponse.step)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_step();
}
inline const ::tensorflow::LabeledStepStats& LoggingResponse::step(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.LoggingResponse.step)
  return _internal_step().Get(index);
}
inline ::tensorflow::LabeledStepStats* LoggingResponse::add_step() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::LabeledStepStats* _add = _internal_mutable_step()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.LoggingResponse.step)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::LabeledStepStats>& LoggingResponse::step() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.LoggingResponse.step)
  return _internal_step();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::LabeledStepStats>&
LoggingResponse::_internal_step() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::LabeledStepStats>*
LoggingResponse::_internal_mutable_step() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.step_;
}

// -------------------------------------------------------------------

// TraceOpts

// double duration = 1;
inline void TraceOpts::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = 0;
}
inline double TraceOpts::duration() const {
  // @@protoc_insertion_point(field_get:tensorflow.TraceOpts.duration)
  return _internal_duration();
}
inline void TraceOpts::set_duration(double value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:tensorflow.TraceOpts.duration)
}
inline double TraceOpts::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_;
}
inline void TraceOpts::_internal_set_duration(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = value;
}

// bool use_step_profiler = 2;
inline void TraceOpts::clear_use_step_profiler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_step_profiler_ = false;
}
inline bool TraceOpts::use_step_profiler() const {
  // @@protoc_insertion_point(field_get:tensorflow.TraceOpts.use_step_profiler)
  return _internal_use_step_profiler();
}
inline void TraceOpts::set_use_step_profiler(bool value) {
  _internal_set_use_step_profiler(value);
  // @@protoc_insertion_point(field_set:tensorflow.TraceOpts.use_step_profiler)
}
inline bool TraceOpts::_internal_use_step_profiler() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_step_profiler_;
}
inline void TraceOpts::_internal_set_use_step_profiler(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_step_profiler_ = value;
}

// bool use_kernel_profiler = 3;
inline void TraceOpts::clear_use_kernel_profiler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_kernel_profiler_ = false;
}
inline bool TraceOpts::use_kernel_profiler() const {
  // @@protoc_insertion_point(field_get:tensorflow.TraceOpts.use_kernel_profiler)
  return _internal_use_kernel_profiler();
}
inline void TraceOpts::set_use_kernel_profiler(bool value) {
  _internal_set_use_kernel_profiler(value);
  // @@protoc_insertion_point(field_set:tensorflow.TraceOpts.use_kernel_profiler)
}
inline bool TraceOpts::_internal_use_kernel_profiler() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_kernel_profiler_;
}
inline void TraceOpts::_internal_set_use_kernel_profiler(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_kernel_profiler_ = value;
}

// bool use_extended_profiler = 4;
inline void TraceOpts::clear_use_extended_profiler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_extended_profiler_ = false;
}
inline bool TraceOpts::use_extended_profiler() const {
  // @@protoc_insertion_point(field_get:tensorflow.TraceOpts.use_extended_profiler)
  return _internal_use_extended_profiler();
}
inline void TraceOpts::set_use_extended_profiler(bool value) {
  _internal_set_use_extended_profiler(value);
  // @@protoc_insertion_point(field_set:tensorflow.TraceOpts.use_extended_profiler)
}
inline bool TraceOpts::_internal_use_extended_profiler() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_extended_profiler_;
}
inline void TraceOpts::_internal_set_use_extended_profiler(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_extended_profiler_ = value;
}

// bool use_gpu_profiler = 5;
inline void TraceOpts::clear_use_gpu_profiler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_gpu_profiler_ = false;
}
inline bool TraceOpts::use_gpu_profiler() const {
  // @@protoc_insertion_point(field_get:tensorflow.TraceOpts.use_gpu_profiler)
  return _internal_use_gpu_profiler();
}
inline void TraceOpts::set_use_gpu_profiler(bool value) {
  _internal_set_use_gpu_profiler(value);
  // @@protoc_insertion_point(field_set:tensorflow.TraceOpts.use_gpu_profiler)
}
inline bool TraceOpts::_internal_use_gpu_profiler() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_gpu_profiler_;
}
inline void TraceOpts::_internal_set_use_gpu_profiler(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_gpu_profiler_ = value;
}

// bool use_sample_profiler = 6;
inline void TraceOpts::clear_use_sample_profiler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_sample_profiler_ = false;
}
inline bool TraceOpts::use_sample_profiler() const {
  // @@protoc_insertion_point(field_get:tensorflow.TraceOpts.use_sample_profiler)
  return _internal_use_sample_profiler();
}
inline void TraceOpts::set_use_sample_profiler(bool value) {
  _internal_set_use_sample_profiler(value);
  // @@protoc_insertion_point(field_set:tensorflow.TraceOpts.use_sample_profiler)
}
inline bool TraceOpts::_internal_use_sample_profiler() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_sample_profiler_;
}
inline void TraceOpts::_internal_set_use_sample_profiler(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_sample_profiler_ = value;
}

// -------------------------------------------------------------------

// TracingRequest

// .tensorflow.TraceOpts options = 1;
inline bool TracingRequest::has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline void TracingRequest::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::TraceOpts& TracingRequest::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TraceOpts* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TraceOpts&>(::tensorflow::_TraceOpts_default_instance_);
}
inline const ::tensorflow::TraceOpts& TracingRequest::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TracingRequest.options)
  return _internal_options();
}
inline void TracingRequest::unsafe_arena_set_allocated_options(::tensorflow::TraceOpts* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = reinterpret_cast<::tensorflow::TraceOpts*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.TracingRequest.options)
}
inline ::tensorflow::TraceOpts* TracingRequest::release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TraceOpts* released = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TraceOpts* TracingRequest::unsafe_arena_release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.TracingRequest.options)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TraceOpts* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::tensorflow::TraceOpts* TracingRequest::_internal_mutable_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TraceOpts>(GetArena());
    _impl_.options_ = reinterpret_cast<::tensorflow::TraceOpts*>(p);
  }
  return _impl_.options_;
}
inline ::tensorflow::TraceOpts* TracingRequest::mutable_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TraceOpts* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.TracingRequest.options)
  return _msg;
}
inline void TracingRequest::set_allocated_options(::tensorflow::TraceOpts* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.options_ = reinterpret_cast<::tensorflow::TraceOpts*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TracingRequest.options)
}

// -------------------------------------------------------------------

// TracingResponse

// -------------------------------------------------------------------

// RecvBufRequest

// int64 step_id = 1;
inline void RecvBufRequest::clear_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = ::int64_t{0};
}
inline ::int64_t RecvBufRequest::step_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.step_id)
  return _internal_step_id();
}
inline void RecvBufRequest::set_step_id(::int64_t value) {
  _internal_set_step_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufRequest.step_id)
}
inline ::int64_t RecvBufRequest::_internal_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_id_;
}
inline void RecvBufRequest::_internal_set_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = value;
}

// string buf_rendezvous_key = 2;
inline void RecvBufRequest::clear_buf_rendezvous_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buf_rendezvous_key_.ClearToEmpty();
}
inline const std::string& RecvBufRequest::buf_rendezvous_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.buf_rendezvous_key)
  return _internal_buf_rendezvous_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RecvBufRequest::set_buf_rendezvous_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buf_rendezvous_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufRequest.buf_rendezvous_key)
}
inline std::string* RecvBufRequest::mutable_buf_rendezvous_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_buf_rendezvous_key();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvBufRequest.buf_rendezvous_key)
  return _s;
}
inline const std::string& RecvBufRequest::_internal_buf_rendezvous_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.buf_rendezvous_key_.Get();
}
inline void RecvBufRequest::_internal_set_buf_rendezvous_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buf_rendezvous_key_.Set(value, GetArena());
}
inline std::string* RecvBufRequest::_internal_mutable_buf_rendezvous_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.buf_rendezvous_key_.Mutable( GetArena());
}
inline std::string* RecvBufRequest::release_buf_rendezvous_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvBufRequest.buf_rendezvous_key)
  return _impl_.buf_rendezvous_key_.Release();
}
inline void RecvBufRequest::set_allocated_buf_rendezvous_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buf_rendezvous_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.buf_rendezvous_key_.IsDefault()) {
          _impl_.buf_rendezvous_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvBufRequest.buf_rendezvous_key)
}

// int64 num_bytes = 3;
inline void RecvBufRequest::clear_num_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_bytes_ = ::int64_t{0};
}
inline ::int64_t RecvBufRequest::num_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.num_bytes)
  return _internal_num_bytes();
}
inline void RecvBufRequest::set_num_bytes(::int64_t value) {
  _internal_set_num_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufRequest.num_bytes)
}
inline ::int64_t RecvBufRequest::_internal_num_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_bytes_;
}
inline void RecvBufRequest::_internal_set_num_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_bytes_ = value;
}

// fixed64 buf_ptr = 4;
inline void RecvBufRequest::clear_buf_ptr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buf_ptr_ = ::uint64_t{0u};
}
inline ::uint64_t RecvBufRequest::buf_ptr() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.buf_ptr)
  return _internal_buf_ptr();
}
inline void RecvBufRequest::set_buf_ptr(::uint64_t value) {
  _internal_set_buf_ptr(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufRequest.buf_ptr)
}
inline ::uint64_t RecvBufRequest::_internal_buf_ptr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.buf_ptr_;
}
inline void RecvBufRequest::_internal_set_buf_ptr(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buf_ptr_ = value;
}

// .tensorflow.DeviceLocality client_locality = 5;
inline bool RecvBufRequest::has_client_locality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.client_locality_ != nullptr);
  return value;
}
inline const ::tensorflow::DeviceLocality& RecvBufRequest::_internal_client_locality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::DeviceLocality* p = _impl_.client_locality_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::DeviceLocality&>(::tensorflow::_DeviceLocality_default_instance_);
}
inline const ::tensorflow::DeviceLocality& RecvBufRequest::client_locality() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.client_locality)
  return _internal_client_locality();
}
inline void RecvBufRequest::unsafe_arena_set_allocated_client_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_locality_);
  }
  _impl_.client_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvBufRequest.client_locality)
}
inline ::tensorflow::DeviceLocality* RecvBufRequest::release_client_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceLocality* released = _impl_.client_locality_;
  _impl_.client_locality_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::DeviceLocality* RecvBufRequest::unsafe_arena_release_client_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvBufRequest.client_locality)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceLocality* temp = _impl_.client_locality_;
  _impl_.client_locality_ = nullptr;
  return temp;
}
inline ::tensorflow::DeviceLocality* RecvBufRequest::_internal_mutable_client_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.client_locality_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::DeviceLocality>(GetArena());
    _impl_.client_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(p);
  }
  return _impl_.client_locality_;
}
inline ::tensorflow::DeviceLocality* RecvBufRequest::mutable_client_locality() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::DeviceLocality* _msg = _internal_mutable_client_locality();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvBufRequest.client_locality)
  return _msg;
}
inline void RecvBufRequest::set_allocated_client_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_locality_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.client_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvBufRequest.client_locality)
}

// .tensorflow.DeviceLocality server_locality = 6;
inline bool RecvBufRequest::has_server_locality() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.server_locality_ != nullptr);
  return value;
}
inline const ::tensorflow::DeviceLocality& RecvBufRequest::_internal_server_locality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::DeviceLocality* p = _impl_.server_locality_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::DeviceLocality&>(::tensorflow::_DeviceLocality_default_instance_);
}
inline const ::tensorflow::DeviceLocality& RecvBufRequest::server_locality() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.server_locality)
  return _internal_server_locality();
}
inline void RecvBufRequest::unsafe_arena_set_allocated_server_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_locality_);
  }
  _impl_.server_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvBufRequest.server_locality)
}
inline ::tensorflow::DeviceLocality* RecvBufRequest::release_server_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::DeviceLocality* released = _impl_.server_locality_;
  _impl_.server_locality_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::DeviceLocality* RecvBufRequest::unsafe_arena_release_server_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvBufRequest.server_locality)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::DeviceLocality* temp = _impl_.server_locality_;
  _impl_.server_locality_ = nullptr;
  return temp;
}
inline ::tensorflow::DeviceLocality* RecvBufRequest::_internal_mutable_server_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_locality_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::DeviceLocality>(GetArena());
    _impl_.server_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(p);
  }
  return _impl_.server_locality_;
}
inline ::tensorflow::DeviceLocality* RecvBufRequest::mutable_server_locality() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::DeviceLocality* _msg = _internal_mutable_server_locality();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvBufRequest.server_locality)
  return _msg;
}
inline void RecvBufRequest::set_allocated_server_locality(::tensorflow::DeviceLocality* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.server_locality_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.server_locality_ = reinterpret_cast<::tensorflow::DeviceLocality*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvBufRequest.server_locality)
}

// .google.protobuf.Any transport_options = 7;
inline bool RecvBufRequest::has_transport_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transport_options_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& RecvBufRequest::_internal_transport_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.transport_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& RecvBufRequest::transport_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.transport_options)
  return _internal_transport_options();
}
inline void RecvBufRequest::unsafe_arena_set_allocated_transport_options(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transport_options_);
  }
  _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvBufRequest.transport_options)
}
inline ::google::protobuf::Any* RecvBufRequest::release_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Any* released = _impl_.transport_options_;
  _impl_.transport_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Any* RecvBufRequest::unsafe_arena_release_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvBufRequest.transport_options)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Any* temp = _impl_.transport_options_;
  _impl_.transport_options_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* RecvBufRequest::_internal_mutable_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transport_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.transport_options_;
}
inline ::google::protobuf::Any* RecvBufRequest::mutable_transport_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Any* _msg = _internal_mutable_transport_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvBufRequest.transport_options)
  return _msg;
}
inline void RecvBufRequest::set_allocated_transport_options(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transport_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvBufRequest.transport_options)
}

// string src_device = 8;
inline void RecvBufRequest::clear_src_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_device_.ClearToEmpty();
}
inline const std::string& RecvBufRequest::src_device() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.src_device)
  return _internal_src_device();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RecvBufRequest::set_src_device(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_device_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufRequest.src_device)
}
inline std::string* RecvBufRequest::mutable_src_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_src_device();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvBufRequest.src_device)
  return _s;
}
inline const std::string& RecvBufRequest::_internal_src_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.src_device_.Get();
}
inline void RecvBufRequest::_internal_set_src_device(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_device_.Set(value, GetArena());
}
inline std::string* RecvBufRequest::_internal_mutable_src_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.src_device_.Mutable( GetArena());
}
inline std::string* RecvBufRequest::release_src_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvBufRequest.src_device)
  return _impl_.src_device_.Release();
}
inline void RecvBufRequest::set_allocated_src_device(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_device_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.src_device_.IsDefault()) {
          _impl_.src_device_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvBufRequest.src_device)
}

// string dst_device = 9;
inline void RecvBufRequest::clear_dst_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_device_.ClearToEmpty();
}
inline const std::string& RecvBufRequest::dst_device() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.dst_device)
  return _internal_dst_device();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RecvBufRequest::set_dst_device(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_device_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufRequest.dst_device)
}
inline std::string* RecvBufRequest::mutable_dst_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dst_device();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvBufRequest.dst_device)
  return _s;
}
inline const std::string& RecvBufRequest::_internal_dst_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dst_device_.Get();
}
inline void RecvBufRequest::_internal_set_dst_device(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_device_.Set(value, GetArena());
}
inline std::string* RecvBufRequest::_internal_mutable_dst_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dst_device_.Mutable( GetArena());
}
inline std::string* RecvBufRequest::release_dst_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvBufRequest.dst_device)
  return _impl_.dst_device_.Release();
}
inline void RecvBufRequest::set_allocated_dst_device(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_device_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dst_device_.IsDefault()) {
          _impl_.dst_device_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvBufRequest.dst_device)
}

// int64 request_id = 10;
inline void RecvBufRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = ::int64_t{0};
}
inline ::int64_t RecvBufRequest::request_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.request_id)
  return _internal_request_id();
}
inline void RecvBufRequest::set_request_id(::int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufRequest.request_id)
}
inline ::int64_t RecvBufRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_;
}
inline void RecvBufRequest::_internal_set_request_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = value;
}

// uint64 src_incarnation = 11;
inline void RecvBufRequest::clear_src_incarnation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_incarnation_ = ::uint64_t{0u};
}
inline ::uint64_t RecvBufRequest::src_incarnation() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRequest.src_incarnation)
  return _internal_src_incarnation();
}
inline void RecvBufRequest::set_src_incarnation(::uint64_t value) {
  _internal_set_src_incarnation(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufRequest.src_incarnation)
}
inline ::uint64_t RecvBufRequest::_internal_src_incarnation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.src_incarnation_;
}
inline void RecvBufRequest::_internal_set_src_incarnation(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_incarnation_ = value;
}

// -------------------------------------------------------------------

// RecvBufResponse

// fixed64 buf_ptr = 1;
inline void RecvBufResponse::clear_buf_ptr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buf_ptr_ = ::uint64_t{0u};
}
inline ::uint64_t RecvBufResponse::buf_ptr() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufResponse.buf_ptr)
  return _internal_buf_ptr();
}
inline void RecvBufResponse::set_buf_ptr(::uint64_t value) {
  _internal_set_buf_ptr(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufResponse.buf_ptr)
}
inline ::uint64_t RecvBufResponse::_internal_buf_ptr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.buf_ptr_;
}
inline void RecvBufResponse::_internal_set_buf_ptr(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buf_ptr_ = value;
}

// int64 num_bytes = 2;
inline void RecvBufResponse::clear_num_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_bytes_ = ::int64_t{0};
}
inline ::int64_t RecvBufResponse::num_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufResponse.num_bytes)
  return _internal_num_bytes();
}
inline void RecvBufResponse::set_num_bytes(::int64_t value) {
  _internal_set_num_bytes(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufResponse.num_bytes)
}
inline ::int64_t RecvBufResponse::_internal_num_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_bytes_;
}
inline void RecvBufResponse::_internal_set_num_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_bytes_ = value;
}

// bool is_dead = 3;
inline void RecvBufResponse::clear_is_dead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_dead_ = false;
}
inline bool RecvBufResponse::is_dead() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufResponse.is_dead)
  return _internal_is_dead();
}
inline void RecvBufResponse::set_is_dead(bool value) {
  _internal_set_is_dead(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufResponse.is_dead)
}
inline bool RecvBufResponse::_internal_is_dead() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_dead_;
}
inline void RecvBufResponse::_internal_set_is_dead(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_dead_ = value;
}

// .google.protobuf.Any transport_options = 4;
inline bool RecvBufResponse::has_transport_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transport_options_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& RecvBufResponse::_internal_transport_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.transport_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& RecvBufResponse::transport_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufResponse.transport_options)
  return _internal_transport_options();
}
inline void RecvBufResponse::unsafe_arena_set_allocated_transport_options(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transport_options_);
  }
  _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvBufResponse.transport_options)
}
inline ::google::protobuf::Any* RecvBufResponse::release_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.transport_options_;
  _impl_.transport_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Any* RecvBufResponse::unsafe_arena_release_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RecvBufResponse.transport_options)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.transport_options_;
  _impl_.transport_options_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* RecvBufResponse::_internal_mutable_transport_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transport_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.transport_options_;
}
inline ::google::protobuf::Any* RecvBufResponse::mutable_transport_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_transport_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvBufResponse.transport_options)
  return _msg;
}
inline void RecvBufResponse::set_allocated_transport_options(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transport_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.transport_options_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvBufResponse.transport_options)
}

// int64 send_start_micros = 5;
inline void RecvBufResponse::clear_send_start_micros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_start_micros_ = ::int64_t{0};
}
inline ::int64_t RecvBufResponse::send_start_micros() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufResponse.send_start_micros)
  return _internal_send_start_micros();
}
inline void RecvBufResponse::set_send_start_micros(::int64_t value) {
  _internal_set_send_start_micros(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufResponse.send_start_micros)
}
inline ::int64_t RecvBufResponse::_internal_send_start_micros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_start_micros_;
}
inline void RecvBufResponse::_internal_set_send_start_micros(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_start_micros_ = value;
}

// bool require_ack = 6;
inline void RecvBufResponse::clear_require_ack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.require_ack_ = false;
}
inline bool RecvBufResponse::require_ack() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufResponse.require_ack)
  return _internal_require_ack();
}
inline void RecvBufResponse::set_require_ack(bool value) {
  _internal_set_require_ack(value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufResponse.require_ack)
}
inline bool RecvBufResponse::_internal_require_ack() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.require_ack_;
}
inline void RecvBufResponse::_internal_set_require_ack(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.require_ack_ = value;
}

// -------------------------------------------------------------------

// CompleteGroupRequest

// int32 group_key = 1;
inline void CompleteGroupRequest::clear_group_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_key_ = 0;
}
inline ::int32_t CompleteGroupRequest::group_key() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupRequest.group_key)
  return _internal_group_key();
}
inline void CompleteGroupRequest::set_group_key(::int32_t value) {
  _internal_set_group_key(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteGroupRequest.group_key)
}
inline ::int32_t CompleteGroupRequest::_internal_group_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_key_;
}
inline void CompleteGroupRequest::_internal_set_group_key(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_key_ = value;
}

// int32 group_size = 2;
inline void CompleteGroupRequest::clear_group_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_size_ = 0;
}
inline ::int32_t CompleteGroupRequest::group_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupRequest.group_size)
  return _internal_group_size();
}
inline void CompleteGroupRequest::set_group_size(::int32_t value) {
  _internal_set_group_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteGroupRequest.group_size)
}
inline ::int32_t CompleteGroupRequest::_internal_group_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_size_;
}
inline void CompleteGroupRequest::_internal_set_group_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_size_ = value;
}

// string device_type = 3;
inline void CompleteGroupRequest::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.ClearToEmpty();
}
inline const std::string& CompleteGroupRequest::device_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupRequest.device_type)
  return _internal_device_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CompleteGroupRequest::set_device_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CompleteGroupRequest.device_type)
}
inline std::string* CompleteGroupRequest::mutable_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_type();
  // @@protoc_insertion_point(field_mutable:tensorflow.CompleteGroupRequest.device_type)
  return _s;
}
inline const std::string& CompleteGroupRequest::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_type_.Get();
}
inline void CompleteGroupRequest::_internal_set_device_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(value, GetArena());
}
inline std::string* CompleteGroupRequest::_internal_mutable_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_type_.Mutable( GetArena());
}
inline std::string* CompleteGroupRequest::release_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CompleteGroupRequest.device_type)
  return _impl_.device_type_.Release();
}
inline void CompleteGroupRequest::set_allocated_device_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_type_.IsDefault()) {
          _impl_.device_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CompleteGroupRequest.device_type)
}

// int32 collective_type = 5;
inline void CompleteGroupRequest::clear_collective_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collective_type_ = 0;
}
inline ::int32_t CompleteGroupRequest::collective_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupRequest.collective_type)
  return _internal_collective_type();
}
inline void CompleteGroupRequest::set_collective_type(::int32_t value) {
  _internal_set_collective_type(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteGroupRequest.collective_type)
}
inline ::int32_t CompleteGroupRequest::_internal_collective_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collective_type_;
}
inline void CompleteGroupRequest::_internal_set_collective_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collective_type_ = value;
}

// .tensorflow.DeviceAttributes device_attributes = 6;
inline bool CompleteGroupRequest::has_device_attributes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_attributes_ != nullptr);
  return value;
}
inline const ::tensorflow::DeviceAttributes& CompleteGroupRequest::_internal_device_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::DeviceAttributes* p = _impl_.device_attributes_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::DeviceAttributes&>(::tensorflow::_DeviceAttributes_default_instance_);
}
inline const ::tensorflow::DeviceAttributes& CompleteGroupRequest::device_attributes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupRequest.device_attributes)
  return _internal_device_attributes();
}
inline void CompleteGroupRequest::unsafe_arena_set_allocated_device_attributes(::tensorflow::DeviceAttributes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_attributes_);
  }
  _impl_.device_attributes_ = reinterpret_cast<::tensorflow::DeviceAttributes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CompleteGroupRequest.device_attributes)
}
inline ::tensorflow::DeviceAttributes* CompleteGroupRequest::release_device_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceAttributes* released = _impl_.device_attributes_;
  _impl_.device_attributes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::DeviceAttributes* CompleteGroupRequest::unsafe_arena_release_device_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CompleteGroupRequest.device_attributes)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::DeviceAttributes* temp = _impl_.device_attributes_;
  _impl_.device_attributes_ = nullptr;
  return temp;
}
inline ::tensorflow::DeviceAttributes* CompleteGroupRequest::_internal_mutable_device_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_attributes_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::DeviceAttributes>(GetArena());
    _impl_.device_attributes_ = reinterpret_cast<::tensorflow::DeviceAttributes*>(p);
  }
  return _impl_.device_attributes_;
}
inline ::tensorflow::DeviceAttributes* CompleteGroupRequest::mutable_device_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::DeviceAttributes* _msg = _internal_mutable_device_attributes();
  // @@protoc_insertion_point(field_mutable:tensorflow.CompleteGroupRequest.device_attributes)
  return _msg;
}
inline void CompleteGroupRequest::set_allocated_device_attributes(::tensorflow::DeviceAttributes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_attributes_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_attributes_ = reinterpret_cast<::tensorflow::DeviceAttributes*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CompleteGroupRequest.device_attributes)
}

// -------------------------------------------------------------------

// CompleteGroupResponse

// int32 group_key = 1;
inline void CompleteGroupResponse::clear_group_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_key_ = 0;
}
inline ::int32_t CompleteGroupResponse::group_key() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupResponse.group_key)
  return _internal_group_key();
}
inline void CompleteGroupResponse::set_group_key(::int32_t value) {
  _internal_set_group_key(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteGroupResponse.group_key)
}
inline ::int32_t CompleteGroupResponse::_internal_group_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_key_;
}
inline void CompleteGroupResponse::_internal_set_group_key(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_key_ = value;
}

// int32 group_size = 2;
inline void CompleteGroupResponse::clear_group_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_size_ = 0;
}
inline ::int32_t CompleteGroupResponse::group_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupResponse.group_size)
  return _internal_group_size();
}
inline void CompleteGroupResponse::set_group_size(::int32_t value) {
  _internal_set_group_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteGroupResponse.group_size)
}
inline ::int32_t CompleteGroupResponse::_internal_group_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_size_;
}
inline void CompleteGroupResponse::_internal_set_group_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_size_ = value;
}

// string device_type = 3;
inline void CompleteGroupResponse::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.ClearToEmpty();
}
inline const std::string& CompleteGroupResponse::device_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupResponse.device_type)
  return _internal_device_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CompleteGroupResponse::set_device_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CompleteGroupResponse.device_type)
}
inline std::string* CompleteGroupResponse::mutable_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_type();
  // @@protoc_insertion_point(field_mutable:tensorflow.CompleteGroupResponse.device_type)
  return _s;
}
inline const std::string& CompleteGroupResponse::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_type_.Get();
}
inline void CompleteGroupResponse::_internal_set_device_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(value, GetArena());
}
inline std::string* CompleteGroupResponse::_internal_mutable_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_type_.Mutable( GetArena());
}
inline std::string* CompleteGroupResponse::release_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CompleteGroupResponse.device_type)
  return _impl_.device_type_.Release();
}
inline void CompleteGroupResponse::set_allocated_device_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_type_.IsDefault()) {
          _impl_.device_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CompleteGroupResponse.device_type)
}

// int32 num_tasks = 4;
inline void CompleteGroupResponse::clear_num_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_tasks_ = 0;
}
inline ::int32_t CompleteGroupResponse::num_tasks() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupResponse.num_tasks)
  return _internal_num_tasks();
}
inline void CompleteGroupResponse::set_num_tasks(::int32_t value) {
  _internal_set_num_tasks(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteGroupResponse.num_tasks)
}
inline ::int32_t CompleteGroupResponse::_internal_num_tasks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_tasks_;
}
inline void CompleteGroupResponse::_internal_set_num_tasks(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_tasks_ = value;
}

// bytes communicator_key = 7;
inline void CompleteGroupResponse::clear_communicator_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.communicator_key_.ClearToEmpty();
}
inline const std::string& CompleteGroupResponse::communicator_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupResponse.communicator_key)
  return _internal_communicator_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CompleteGroupResponse::set_communicator_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.communicator_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CompleteGroupResponse.communicator_key)
}
inline std::string* CompleteGroupResponse::mutable_communicator_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_communicator_key();
  // @@protoc_insertion_point(field_mutable:tensorflow.CompleteGroupResponse.communicator_key)
  return _s;
}
inline const std::string& CompleteGroupResponse::_internal_communicator_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.communicator_key_.Get();
}
inline void CompleteGroupResponse::_internal_set_communicator_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.communicator_key_.Set(value, GetArena());
}
inline std::string* CompleteGroupResponse::_internal_mutable_communicator_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.communicator_key_.Mutable( GetArena());
}
inline std::string* CompleteGroupResponse::release_communicator_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CompleteGroupResponse.communicator_key)
  return _impl_.communicator_key_.Release();
}
inline void CompleteGroupResponse::set_allocated_communicator_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.communicator_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.communicator_key_.IsDefault()) {
          _impl_.communicator_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CompleteGroupResponse.communicator_key)
}

// repeated .tensorflow.DeviceAttributes device_attributes = 8;
inline int CompleteGroupResponse::_internal_device_attributes_size() const {
  return _internal_device_attributes().size();
}
inline int CompleteGroupResponse::device_attributes_size() const {
  return _internal_device_attributes_size();
}
inline ::tensorflow::DeviceAttributes* CompleteGroupResponse::mutable_device_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.CompleteGroupResponse.device_attributes)
  return _internal_mutable_device_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>* CompleteGroupResponse::mutable_device_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CompleteGroupResponse.device_attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_attributes();
}
inline const ::tensorflow::DeviceAttributes& CompleteGroupResponse::device_attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteGroupResponse.device_attributes)
  return _internal_device_attributes().Get(index);
}
inline ::tensorflow::DeviceAttributes* CompleteGroupResponse::add_device_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::DeviceAttributes* _add = _internal_mutable_device_attributes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.CompleteGroupResponse.device_attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>& CompleteGroupResponse::device_attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CompleteGroupResponse.device_attributes)
  return _internal_device_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>&
CompleteGroupResponse::_internal_device_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::DeviceAttributes>*
CompleteGroupResponse::_internal_mutable_device_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_attributes_;
}

// -------------------------------------------------------------------

// CompleteInstanceRequest

// string name = 1;
inline void CompleteInstanceRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CompleteInstanceRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CompleteInstanceRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.name)
}
inline std::string* CompleteInstanceRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.CompleteInstanceRequest.name)
  return _s;
}
inline const std::string& CompleteInstanceRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CompleteInstanceRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CompleteInstanceRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CompleteInstanceRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CompleteInstanceRequest.name)
  return _impl_.name_.Release();
}
inline void CompleteInstanceRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CompleteInstanceRequest.name)
}

// int32 type = 2;
inline void CompleteInstanceRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::int32_t CompleteInstanceRequest::type() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.type)
  return _internal_type();
}
inline void CompleteInstanceRequest::set_type(::int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.type)
}
inline ::int32_t CompleteInstanceRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_;
}
inline void CompleteInstanceRequest::_internal_set_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .tensorflow.DataType data_type = 3;
inline void CompleteInstanceRequest::clear_data_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_ = 0;
}
inline ::tensorflow::DataType CompleteInstanceRequest::data_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.data_type)
  return _internal_data_type();
}
inline void CompleteInstanceRequest::set_data_type(::tensorflow::DataType value) {
  _internal_set_data_type(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.data_type)
}
inline ::tensorflow::DataType CompleteInstanceRequest::_internal_data_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.data_type_);
}
inline void CompleteInstanceRequest::_internal_set_data_type(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_ = value;
}

// .tensorflow.TensorShapeProto shape = 4;
inline bool CompleteInstanceRequest::has_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shape_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorShapeProto& CompleteInstanceRequest::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorShapeProto* p = _impl_.shape_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorShapeProto&>(::tensorflow::_TensorShapeProto_default_instance_);
}
inline const ::tensorflow::TensorShapeProto& CompleteInstanceRequest::shape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.shape)
  return _internal_shape();
}
inline void CompleteInstanceRequest::unsafe_arena_set_allocated_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }
  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CompleteInstanceRequest.shape)
}
inline ::tensorflow::TensorShapeProto* CompleteInstanceRequest::release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* released = _impl_.shape_;
  _impl_.shape_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::TensorShapeProto* CompleteInstanceRequest::unsafe_arena_release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CompleteInstanceRequest.shape)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* temp = _impl_.shape_;
  _impl_.shape_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorShapeProto* CompleteInstanceRequest::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorShapeProto>(GetArena());
    _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(p);
  }
  return _impl_.shape_;
}
inline ::tensorflow::TensorShapeProto* CompleteInstanceRequest::mutable_shape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TensorShapeProto* _msg = _internal_mutable_shape();
  // @@protoc_insertion_point(field_mutable:tensorflow.CompleteInstanceRequest.shape)
  return _msg;
}
inline void CompleteInstanceRequest::set_allocated_shape(::tensorflow::TensorShapeProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CompleteInstanceRequest.shape)
}

// int32 group_key = 5;
inline void CompleteInstanceRequest::clear_group_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_key_ = 0;
}
inline ::int32_t CompleteInstanceRequest::group_key() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.group_key)
  return _internal_group_key();
}
inline void CompleteInstanceRequest::set_group_key(::int32_t value) {
  _internal_set_group_key(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.group_key)
}
inline ::int32_t CompleteInstanceRequest::_internal_group_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_key_;
}
inline void CompleteInstanceRequest::_internal_set_group_key(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_key_ = value;
}

// int32 group_size = 6;
inline void CompleteInstanceRequest::clear_group_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_size_ = 0;
}
inline ::int32_t CompleteInstanceRequest::group_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.group_size)
  return _internal_group_size();
}
inline void CompleteInstanceRequest::set_group_size(::int32_t value) {
  _internal_set_group_size(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.group_size)
}
inline ::int32_t CompleteInstanceRequest::_internal_group_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_size_;
}
inline void CompleteInstanceRequest::_internal_set_group_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_size_ = value;
}

// int32 instance_key = 7;
inline void CompleteInstanceRequest::clear_instance_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instance_key_ = 0;
}
inline ::int32_t CompleteInstanceRequest::instance_key() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.instance_key)
  return _internal_instance_key();
}
inline void CompleteInstanceRequest::set_instance_key(::int32_t value) {
  _internal_set_instance_key(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.instance_key)
}
inline ::int32_t CompleteInstanceRequest::_internal_instance_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instance_key_;
}
inline void CompleteInstanceRequest::_internal_set_instance_key(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instance_key_ = value;
}

// string device_type = 8;
inline void CompleteInstanceRequest::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.ClearToEmpty();
}
inline const std::string& CompleteInstanceRequest::device_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.device_type)
  return _internal_device_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CompleteInstanceRequest::set_device_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.device_type)
}
inline std::string* CompleteInstanceRequest::mutable_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_type();
  // @@protoc_insertion_point(field_mutable:tensorflow.CompleteInstanceRequest.device_type)
  return _s;
}
inline const std::string& CompleteInstanceRequest::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_type_.Get();
}
inline void CompleteInstanceRequest::_internal_set_device_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Set(value, GetArena());
}
inline std::string* CompleteInstanceRequest::_internal_mutable_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_type_.Mutable( GetArena());
}
inline std::string* CompleteInstanceRequest::release_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CompleteInstanceRequest.device_type)
  return _impl_.device_type_.Release();
}
inline void CompleteInstanceRequest::set_allocated_device_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_type_.IsDefault()) {
          _impl_.device_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CompleteInstanceRequest.device_type)
}

// repeated int32 subdiv_offset = 9;
inline int CompleteInstanceRequest::_internal_subdiv_offset_size() const {
  return _internal_subdiv_offset().size();
}
inline int CompleteInstanceRequest::subdiv_offset_size() const {
  return _internal_subdiv_offset_size();
}
inline void CompleteInstanceRequest::clear_subdiv_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subdiv_offset_.Clear();
}
inline ::int32_t CompleteInstanceRequest::subdiv_offset(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.subdiv_offset)
  return _internal_subdiv_offset().Get(index);
}
inline void CompleteInstanceRequest::set_subdiv_offset(int index, ::int32_t value) {
  _internal_mutable_subdiv_offset()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.subdiv_offset)
}
inline void CompleteInstanceRequest::add_subdiv_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_subdiv_offset()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.CompleteInstanceRequest.subdiv_offset)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& CompleteInstanceRequest::subdiv_offset() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CompleteInstanceRequest.subdiv_offset)
  return _internal_subdiv_offset();
}
inline ::google::protobuf::RepeatedField<::int32_t>* CompleteInstanceRequest::mutable_subdiv_offset()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CompleteInstanceRequest.subdiv_offset)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subdiv_offset();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
CompleteInstanceRequest::_internal_subdiv_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subdiv_offset_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* CompleteInstanceRequest::_internal_mutable_subdiv_offset() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subdiv_offset_;
}

// string device = 10;
inline void CompleteInstanceRequest::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.ClearToEmpty();
}
inline const std::string& CompleteInstanceRequest::device() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.device)
  return _internal_device();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CompleteInstanceRequest::set_device(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.device)
}
inline std::string* CompleteInstanceRequest::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:tensorflow.CompleteInstanceRequest.device)
  return _s;
}
inline const std::string& CompleteInstanceRequest::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_.Get();
}
inline void CompleteInstanceRequest::_internal_set_device(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.Set(value, GetArena());
}
inline std::string* CompleteInstanceRequest::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_.Mutable( GetArena());
}
inline std::string* CompleteInstanceRequest::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CompleteInstanceRequest.device)
  return _impl_.device_.Release();
}
inline void CompleteInstanceRequest::set_allocated_device(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.device_.IsDefault()) {
          _impl_.device_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CompleteInstanceRequest.device)
}

// bool is_source = 11;
inline void CompleteInstanceRequest::clear_is_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_source_ = false;
}
inline bool CompleteInstanceRequest::is_source() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.is_source)
  return _internal_is_source();
}
inline void CompleteInstanceRequest::set_is_source(bool value) {
  _internal_set_is_source(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.is_source)
}
inline bool CompleteInstanceRequest::_internal_is_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_source_;
}
inline void CompleteInstanceRequest::_internal_set_is_source(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_source_ = value;
}

// int64 step_id = 12;
inline void CompleteInstanceRequest::clear_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = ::int64_t{0};
}
inline ::int64_t CompleteInstanceRequest::step_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceRequest.step_id)
  return _internal_step_id();
}
inline void CompleteInstanceRequest::set_step_id(::int64_t value) {
  _internal_set_step_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceRequest.step_id)
}
inline ::int64_t CompleteInstanceRequest::_internal_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_id_;
}
inline void CompleteInstanceRequest::_internal_set_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_id_ = value;
}

// -------------------------------------------------------------------

// CompleteInstanceResponse

// int32 instance_key = 1;
inline void CompleteInstanceResponse::clear_instance_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instance_key_ = 0;
}
inline ::int32_t CompleteInstanceResponse::instance_key() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceResponse.instance_key)
  return _internal_instance_key();
}
inline void CompleteInstanceResponse::set_instance_key(::int32_t value) {
  _internal_set_instance_key(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceResponse.instance_key)
}
inline ::int32_t CompleteInstanceResponse::_internal_instance_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instance_key_;
}
inline void CompleteInstanceResponse::_internal_set_instance_key(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instance_key_ = value;
}

// int32 source_rank = 2;
inline void CompleteInstanceResponse::clear_source_rank() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_rank_ = 0;
}
inline ::int32_t CompleteInstanceResponse::source_rank() const {
  // @@protoc_insertion_point(field_get:tensorflow.CompleteInstanceResponse.source_rank)
  return _internal_source_rank();
}
inline void CompleteInstanceResponse::set_source_rank(::int32_t value) {
  _internal_set_source_rank(value);
  // @@protoc_insertion_point(field_set:tensorflow.CompleteInstanceResponse.source_rank)
}
inline ::int32_t CompleteInstanceResponse::_internal_source_rank() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_rank_;
}
inline void CompleteInstanceResponse::_internal_set_source_rank(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_rank_ = value;
}

// -------------------------------------------------------------------

// GetStepSequenceRequest

// repeated int64 graph_key = 1;
inline int GetStepSequenceRequest::_internal_graph_key_size() const {
  return _internal_graph_key().size();
}
inline int GetStepSequenceRequest::graph_key_size() const {
  return _internal_graph_key_size();
}
inline void GetStepSequenceRequest::clear_graph_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_key_.Clear();
}
inline ::int64_t GetStepSequenceRequest::graph_key(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.GetStepSequenceRequest.graph_key)
  return _internal_graph_key().Get(index);
}
inline void GetStepSequenceRequest::set_graph_key(int index, ::int64_t value) {
  _internal_mutable_graph_key()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.GetStepSequenceRequest.graph_key)
}
inline void GetStepSequenceRequest::add_graph_key(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_graph_key()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.GetStepSequenceRequest.graph_key)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& GetStepSequenceRequest::graph_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GetStepSequenceRequest.graph_key)
  return _internal_graph_key();
}
inline ::google::protobuf::RepeatedField<::int64_t>* GetStepSequenceRequest::mutable_graph_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GetStepSequenceRequest.graph_key)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_graph_key();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
GetStepSequenceRequest::_internal_graph_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_key_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* GetStepSequenceRequest::_internal_mutable_graph_key() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.graph_key_;
}

// -------------------------------------------------------------------

// StepSequence

// int64 graph_key = 1;
inline void StepSequence::clear_graph_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_key_ = ::int64_t{0};
}
inline ::int64_t StepSequence::graph_key() const {
  // @@protoc_insertion_point(field_get:tensorflow.StepSequence.graph_key)
  return _internal_graph_key();
}
inline void StepSequence::set_graph_key(::int64_t value) {
  _internal_set_graph_key(value);
  // @@protoc_insertion_point(field_set:tensorflow.StepSequence.graph_key)
}
inline ::int64_t StepSequence::_internal_graph_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_key_;
}
inline void StepSequence::_internal_set_graph_key(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_key_ = value;
}

// int64 next_step_id = 2;
inline void StepSequence::clear_next_step_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_step_id_ = ::int64_t{0};
}
inline ::int64_t StepSequence::next_step_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.StepSequence.next_step_id)
  return _internal_next_step_id();
}
inline void StepSequence::set_next_step_id(::int64_t value) {
  _internal_set_next_step_id(value);
  // @@protoc_insertion_point(field_set:tensorflow.StepSequence.next_step_id)
}
inline ::int64_t StepSequence::_internal_next_step_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_step_id_;
}
inline void StepSequence::_internal_set_next_step_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_step_id_ = value;
}

// -------------------------------------------------------------------

// GetStepSequenceResponse

// repeated .tensorflow.StepSequence step_sequence = 1;
inline int GetStepSequenceResponse::_internal_step_sequence_size() const {
  return _internal_step_sequence().size();
}
inline int GetStepSequenceResponse::step_sequence_size() const {
  return _internal_step_sequence_size();
}
inline void GetStepSequenceResponse::clear_step_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_sequence_.Clear();
}
inline ::tensorflow::StepSequence* GetStepSequenceResponse::mutable_step_sequence(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.GetStepSequenceResponse.step_sequence)
  return _internal_mutable_step_sequence()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::StepSequence>* GetStepSequenceResponse::mutable_step_sequence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.GetStepSequenceResponse.step_sequence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_step_sequence();
}
inline const ::tensorflow::StepSequence& GetStepSequenceResponse::step_sequence(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.GetStepSequenceResponse.step_sequence)
  return _internal_step_sequence().Get(index);
}
inline ::tensorflow::StepSequence* GetStepSequenceResponse::add_step_sequence() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::StepSequence* _add = _internal_mutable_step_sequence()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.GetStepSequenceResponse.step_sequence)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::StepSequence>& GetStepSequenceResponse::step_sequence() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.GetStepSequenceResponse.step_sequence)
  return _internal_step_sequence();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::StepSequence>&
GetStepSequenceResponse::_internal_step_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_sequence_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::StepSequence>*
GetStepSequenceResponse::_internal_mutable_step_sequence() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.step_sequence_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2fprotobuf_2fworker_2eproto_2epb_2eh
