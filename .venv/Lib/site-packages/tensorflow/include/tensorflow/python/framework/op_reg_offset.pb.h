// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/python/framework/op_reg_offset.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fpython_2fframework_2fop_5freg_5foffset_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fpython_2fframework_2fop_5freg_5foffset_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fpython_2fframework_2fop_5freg_5foffset_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fpython_2fframework_2fop_5freg_5foffset_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fpython_2fframework_2fop_5freg_5foffset_2eproto;
namespace tensorflow {
class OpRegOffset;
struct OpRegOffsetDefaultTypeInternal;
PROTOBUF_EXPORT extern OpRegOffsetDefaultTypeInternal _OpRegOffset_default_instance_;
class OpRegOffsets;
struct OpRegOffsetsDefaultTypeInternal;
PROTOBUF_EXPORT extern OpRegOffsetsDefaultTypeInternal _OpRegOffsets_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT OpRegOffset final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.OpRegOffset) */ {
 public:
  inline OpRegOffset() : OpRegOffset(nullptr) {}
  ~OpRegOffset() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpRegOffset(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpRegOffset(const OpRegOffset& from) : OpRegOffset(nullptr, from) {}
  inline OpRegOffset(OpRegOffset&& from) noexcept
      : OpRegOffset(nullptr, std::move(from)) {}
  inline OpRegOffset& operator=(const OpRegOffset& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpRegOffset& operator=(OpRegOffset&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpRegOffset& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpRegOffset* internal_default_instance() {
    return reinterpret_cast<const OpRegOffset*>(
        &_OpRegOffset_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OpRegOffset& a, OpRegOffset& b) { a.Swap(&b); }
  inline void Swap(OpRegOffset* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpRegOffset* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpRegOffset* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OpRegOffset>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpRegOffset& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpRegOffset& from) { OpRegOffset::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpRegOffset* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.OpRegOffset"; }

 protected:
  explicit OpRegOffset(::google::protobuf::Arena* arena);
  OpRegOffset(::google::protobuf::Arena* arena, const OpRegOffset& from);
  OpRegOffset(::google::protobuf::Arena* arena, OpRegOffset&& from) noexcept
      : OpRegOffset(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kFilepathFieldNumber = 2,
    kStartFieldNumber = 3,
    kEndFieldNumber = 4,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string filepath = 2;
  void clear_filepath() ;
  const std::string& filepath() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filepath(Arg_&& arg, Args_... args);
  std::string* mutable_filepath();
  PROTOBUF_NODISCARD std::string* release_filepath();
  void set_allocated_filepath(std::string* value);

  private:
  const std::string& _internal_filepath() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filepath(
      const std::string& value);
  std::string* _internal_mutable_filepath();

  public:
  // uint32 start = 3;
  void clear_start() ;
  ::uint32_t start() const;
  void set_start(::uint32_t value);

  private:
  ::uint32_t _internal_start() const;
  void _internal_set_start(::uint32_t value);

  public:
  // uint32 end = 4;
  void clear_end() ;
  ::uint32_t end() const;
  void set_end(::uint32_t value);

  private:
  ::uint32_t _internal_end() const;
  void _internal_set_end(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.OpRegOffset)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      43, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpRegOffset& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr filepath_;
    ::uint32_t start_;
    ::uint32_t end_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fpython_2fframework_2fop_5freg_5foffset_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT OpRegOffsets final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.OpRegOffsets) */ {
 public:
  inline OpRegOffsets() : OpRegOffsets(nullptr) {}
  ~OpRegOffsets() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpRegOffsets(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpRegOffsets(const OpRegOffsets& from) : OpRegOffsets(nullptr, from) {}
  inline OpRegOffsets(OpRegOffsets&& from) noexcept
      : OpRegOffsets(nullptr, std::move(from)) {}
  inline OpRegOffsets& operator=(const OpRegOffsets& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpRegOffsets& operator=(OpRegOffsets&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpRegOffsets& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpRegOffsets* internal_default_instance() {
    return reinterpret_cast<const OpRegOffsets*>(
        &_OpRegOffsets_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OpRegOffsets& a, OpRegOffsets& b) { a.Swap(&b); }
  inline void Swap(OpRegOffsets* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpRegOffsets* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpRegOffsets* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OpRegOffsets>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpRegOffsets& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpRegOffsets& from) { OpRegOffsets::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpRegOffsets* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.OpRegOffsets"; }

 protected:
  explicit OpRegOffsets(::google::protobuf::Arena* arena);
  OpRegOffsets(::google::protobuf::Arena* arena, const OpRegOffsets& from);
  OpRegOffsets(::google::protobuf::Arena* arena, OpRegOffsets&& from) noexcept
      : OpRegOffsets(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOffsetsFieldNumber = 1,
  };
  // repeated .tensorflow.OpRegOffset offsets = 1;
  int offsets_size() const;
  private:
  int _internal_offsets_size() const;

  public:
  void clear_offsets() ;
  ::tensorflow::OpRegOffset* mutable_offsets(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::OpRegOffset>* mutable_offsets();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::OpRegOffset>& _internal_offsets() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::OpRegOffset>* _internal_mutable_offsets();
  public:
  const ::tensorflow::OpRegOffset& offsets(int index) const;
  ::tensorflow::OpRegOffset* add_offsets();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::OpRegOffset>& offsets() const;
  // @@protoc_insertion_point(class_scope:tensorflow.OpRegOffsets)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpRegOffsets& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::OpRegOffset > offsets_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fpython_2fframework_2fop_5freg_5foffset_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OpRegOffset

// string name = 1;
inline void OpRegOffset::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& OpRegOffset::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpRegOffset.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpRegOffset::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.OpRegOffset.name)
}
inline std::string* OpRegOffset::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpRegOffset.name)
  return _s;
}
inline const std::string& OpRegOffset::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void OpRegOffset::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* OpRegOffset::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* OpRegOffset::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpRegOffset.name)
  return _impl_.name_.Release();
}
inline void OpRegOffset::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpRegOffset.name)
}

// string filepath = 2;
inline void OpRegOffset::clear_filepath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filepath_.ClearToEmpty();
}
inline const std::string& OpRegOffset::filepath() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpRegOffset.filepath)
  return _internal_filepath();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpRegOffset::set_filepath(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filepath_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.OpRegOffset.filepath)
}
inline std::string* OpRegOffset::mutable_filepath() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filepath();
  // @@protoc_insertion_point(field_mutable:tensorflow.OpRegOffset.filepath)
  return _s;
}
inline const std::string& OpRegOffset::_internal_filepath() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filepath_.Get();
}
inline void OpRegOffset::_internal_set_filepath(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filepath_.Set(value, GetArena());
}
inline std::string* OpRegOffset::_internal_mutable_filepath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.filepath_.Mutable( GetArena());
}
inline std::string* OpRegOffset::release_filepath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.OpRegOffset.filepath)
  return _impl_.filepath_.Release();
}
inline void OpRegOffset::set_allocated_filepath(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filepath_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filepath_.IsDefault()) {
          _impl_.filepath_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.OpRegOffset.filepath)
}

// uint32 start = 3;
inline void OpRegOffset::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_ = 0u;
}
inline ::uint32_t OpRegOffset::start() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpRegOffset.start)
  return _internal_start();
}
inline void OpRegOffset::set_start(::uint32_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpRegOffset.start)
}
inline ::uint32_t OpRegOffset::_internal_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_;
}
inline void OpRegOffset::_internal_set_start(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_ = value;
}

// uint32 end = 4;
inline void OpRegOffset::clear_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_ = 0u;
}
inline ::uint32_t OpRegOffset::end() const {
  // @@protoc_insertion_point(field_get:tensorflow.OpRegOffset.end)
  return _internal_end();
}
inline void OpRegOffset::set_end(::uint32_t value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:tensorflow.OpRegOffset.end)
}
inline ::uint32_t OpRegOffset::_internal_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_;
}
inline void OpRegOffset::_internal_set_end(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_ = value;
}

// -------------------------------------------------------------------

// OpRegOffsets

// repeated .tensorflow.OpRegOffset offsets = 1;
inline int OpRegOffsets::_internal_offsets_size() const {
  return _internal_offsets().size();
}
inline int OpRegOffsets::offsets_size() const {
  return _internal_offsets_size();
}
inline void OpRegOffsets::clear_offsets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offsets_.Clear();
}
inline ::tensorflow::OpRegOffset* OpRegOffsets::mutable_offsets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.OpRegOffsets.offsets)
  return _internal_mutable_offsets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::OpRegOffset>* OpRegOffsets::mutable_offsets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.OpRegOffsets.offsets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_offsets();
}
inline const ::tensorflow::OpRegOffset& OpRegOffsets::offsets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.OpRegOffsets.offsets)
  return _internal_offsets().Get(index);
}
inline ::tensorflow::OpRegOffset* OpRegOffsets::add_offsets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::OpRegOffset* _add = _internal_mutable_offsets()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.OpRegOffsets.offsets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::OpRegOffset>& OpRegOffsets::offsets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.OpRegOffsets.offsets)
  return _internal_offsets();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::OpRegOffset>&
OpRegOffsets::_internal_offsets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offsets_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::OpRegOffset>*
OpRegOffsets::_internal_mutable_offsets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.offsets_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fpython_2fframework_2fop_5freg_5foffset_2eproto_2epb_2eh
