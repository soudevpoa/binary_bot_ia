// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tsl/profiler/protobuf/profiler_analysis.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "tsl/profiler/protobuf/profiler_service.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto;
namespace tensorflow {
class EnumProfileSessionsAndToolsRequest;
struct EnumProfileSessionsAndToolsRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern EnumProfileSessionsAndToolsRequestDefaultTypeInternal _EnumProfileSessionsAndToolsRequest_default_instance_;
class EnumProfileSessionsAndToolsResponse;
struct EnumProfileSessionsAndToolsResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern EnumProfileSessionsAndToolsResponseDefaultTypeInternal _EnumProfileSessionsAndToolsResponse_default_instance_;
class NewProfileSessionRequest;
struct NewProfileSessionRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern NewProfileSessionRequestDefaultTypeInternal _NewProfileSessionRequest_default_instance_;
class NewProfileSessionResponse;
struct NewProfileSessionResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern NewProfileSessionResponseDefaultTypeInternal _NewProfileSessionResponse_default_instance_;
class ProfileSessionDataRequest;
struct ProfileSessionDataRequestDefaultTypeInternal;
PROTOBUF_EXPORT extern ProfileSessionDataRequestDefaultTypeInternal _ProfileSessionDataRequest_default_instance_;
class ProfileSessionDataRequest_ParametersEntry_DoNotUse;
struct ProfileSessionDataRequest_ParametersEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern ProfileSessionDataRequest_ParametersEntry_DoNotUseDefaultTypeInternal _ProfileSessionDataRequest_ParametersEntry_DoNotUse_default_instance_;
class ProfileSessionDataResponse;
struct ProfileSessionDataResponseDefaultTypeInternal;
PROTOBUF_EXPORT extern ProfileSessionDataResponseDefaultTypeInternal _ProfileSessionDataResponse_default_instance_;
class ProfileSessionInfo;
struct ProfileSessionInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern ProfileSessionInfoDefaultTypeInternal _ProfileSessionInfo_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT ProfileSessionInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ProfileSessionInfo) */ {
 public:
  inline ProfileSessionInfo() : ProfileSessionInfo(nullptr) {}
  ~ProfileSessionInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProfileSessionInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProfileSessionInfo(const ProfileSessionInfo& from) : ProfileSessionInfo(nullptr, from) {}
  inline ProfileSessionInfo(ProfileSessionInfo&& from) noexcept
      : ProfileSessionInfo(nullptr, std::move(from)) {}
  inline ProfileSessionInfo& operator=(const ProfileSessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfileSessionInfo& operator=(ProfileSessionInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProfileSessionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProfileSessionInfo* internal_default_instance() {
    return reinterpret_cast<const ProfileSessionInfo*>(
        &_ProfileSessionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ProfileSessionInfo& a, ProfileSessionInfo& b) { a.Swap(&b); }
  inline void Swap(ProfileSessionInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfileSessionInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProfileSessionInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ProfileSessionInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProfileSessionInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProfileSessionInfo& from) { ProfileSessionInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProfileSessionInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.ProfileSessionInfo"; }

 protected:
  explicit ProfileSessionInfo(::google::protobuf::Arena* arena);
  ProfileSessionInfo(::google::protobuf::Arena* arena, const ProfileSessionInfo& from);
  ProfileSessionInfo(::google::protobuf::Arena* arena, ProfileSessionInfo&& from) noexcept
      : ProfileSessionInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAvailableToolsFieldNumber = 2,
    kSessionIdFieldNumber = 1,
  };
  // repeated string available_tools = 2;
  int available_tools_size() const;
  private:
  int _internal_available_tools_size() const;

  public:
  void clear_available_tools() ;
  const std::string& available_tools(int index) const;
  std::string* mutable_available_tools(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_available_tools(int index, Arg_&& value, Args_... args);
  std::string* add_available_tools();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_available_tools(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& available_tools() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_available_tools();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_available_tools() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_available_tools();

  public:
  // string session_id = 1;
  void clear_session_id() ;
  const std::string& session_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_id(Arg_&& arg, Args_... args);
  std::string* mutable_session_id();
  PROTOBUF_NODISCARD std::string* release_session_id();
  void set_allocated_session_id(std::string* value);

  private:
  const std::string& _internal_session_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_id(
      const std::string& value);
  std::string* _internal_mutable_session_id();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ProfileSessionInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProfileSessionInfo& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> available_tools_;
    ::google::protobuf::internal::ArenaStringPtr session_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ProfileSessionDataResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ProfileSessionDataResponse) */ {
 public:
  inline ProfileSessionDataResponse() : ProfileSessionDataResponse(nullptr) {}
  ~ProfileSessionDataResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProfileSessionDataResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProfileSessionDataResponse(const ProfileSessionDataResponse& from) : ProfileSessionDataResponse(nullptr, from) {}
  inline ProfileSessionDataResponse(ProfileSessionDataResponse&& from) noexcept
      : ProfileSessionDataResponse(nullptr, std::move(from)) {}
  inline ProfileSessionDataResponse& operator=(const ProfileSessionDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfileSessionDataResponse& operator=(ProfileSessionDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProfileSessionDataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProfileSessionDataResponse* internal_default_instance() {
    return reinterpret_cast<const ProfileSessionDataResponse*>(
        &_ProfileSessionDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ProfileSessionDataResponse& a, ProfileSessionDataResponse& b) { a.Swap(&b); }
  inline void Swap(ProfileSessionDataResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfileSessionDataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProfileSessionDataResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ProfileSessionDataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProfileSessionDataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProfileSessionDataResponse& from) { ProfileSessionDataResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProfileSessionDataResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.ProfileSessionDataResponse"; }

 protected:
  explicit ProfileSessionDataResponse(::google::protobuf::Arena* arena);
  ProfileSessionDataResponse(::google::protobuf::Arena* arena, const ProfileSessionDataResponse& from);
  ProfileSessionDataResponse(::google::protobuf::Arena* arena, ProfileSessionDataResponse&& from) noexcept
      : ProfileSessionDataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 1,
    kOutputFormatFieldNumber = 2,
    kOutputFieldNumber = 3,
  };
  // string error_message = 1;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // string output_format = 2;
  void clear_output_format() ;
  const std::string& output_format() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_output_format(Arg_&& arg, Args_... args);
  std::string* mutable_output_format();
  PROTOBUF_NODISCARD std::string* release_output_format();
  void set_allocated_output_format(std::string* value);

  private:
  const std::string& _internal_output_format() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_output_format(
      const std::string& value);
  std::string* _internal_mutable_output_format();

  public:
  // bytes output = 3;
  void clear_output() ;
  const std::string& output() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_output(Arg_&& arg, Args_... args);
  std::string* mutable_output();
  PROTOBUF_NODISCARD std::string* release_output();
  void set_allocated_output(std::string* value);

  private:
  const std::string& _internal_output() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_output(
      const std::string& value);
  std::string* _internal_mutable_output();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ProfileSessionDataResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      72, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProfileSessionDataResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::google::protobuf::internal::ArenaStringPtr output_format_;
    ::google::protobuf::internal::ArenaStringPtr output_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto;
};
// -------------------------------------------------------------------

class ProfileSessionDataRequest_ParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ProfileSessionDataRequest_ParametersEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ProfileSessionDataRequest_ParametersEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ProfileSessionDataRequest_ParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProfileSessionDataRequest_ParametersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ProfileSessionDataRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ProfileSessionDataRequest_ParametersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ProfileSessionDataRequest_ParametersEntry_DoNotUse*>(
        &_ProfileSessionDataRequest_ParametersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT NewProfileSessionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.NewProfileSessionResponse) */ {
 public:
  inline NewProfileSessionResponse() : NewProfileSessionResponse(nullptr) {}
  ~NewProfileSessionResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewProfileSessionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NewProfileSessionResponse(const NewProfileSessionResponse& from) : NewProfileSessionResponse(nullptr, from) {}
  inline NewProfileSessionResponse(NewProfileSessionResponse&& from) noexcept
      : NewProfileSessionResponse(nullptr, std::move(from)) {}
  inline NewProfileSessionResponse& operator=(const NewProfileSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewProfileSessionResponse& operator=(NewProfileSessionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewProfileSessionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewProfileSessionResponse* internal_default_instance() {
    return reinterpret_cast<const NewProfileSessionResponse*>(
        &_NewProfileSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NewProfileSessionResponse& a, NewProfileSessionResponse& b) { a.Swap(&b); }
  inline void Swap(NewProfileSessionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewProfileSessionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewProfileSessionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NewProfileSessionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewProfileSessionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewProfileSessionResponse& from) { NewProfileSessionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NewProfileSessionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.NewProfileSessionResponse"; }

 protected:
  explicit NewProfileSessionResponse(::google::protobuf::Arena* arena);
  NewProfileSessionResponse(::google::protobuf::Arena* arena, const NewProfileSessionResponse& from);
  NewProfileSessionResponse(::google::protobuf::Arena* arena, NewProfileSessionResponse&& from) noexcept
      : NewProfileSessionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 1,
    kEmptyTraceFieldNumber = 2,
  };
  // string error_message = 1;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // bool empty_trace = 2;
  void clear_empty_trace() ;
  bool empty_trace() const;
  void set_empty_trace(bool value);

  private:
  bool _internal_empty_trace() const;
  void _internal_set_empty_trace(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.NewProfileSessionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NewProfileSessionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    bool empty_trace_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT EnumProfileSessionsAndToolsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.EnumProfileSessionsAndToolsRequest) */ {
 public:
  inline EnumProfileSessionsAndToolsRequest() : EnumProfileSessionsAndToolsRequest(nullptr) {}
  ~EnumProfileSessionsAndToolsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnumProfileSessionsAndToolsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnumProfileSessionsAndToolsRequest(const EnumProfileSessionsAndToolsRequest& from) : EnumProfileSessionsAndToolsRequest(nullptr, from) {}
  inline EnumProfileSessionsAndToolsRequest(EnumProfileSessionsAndToolsRequest&& from) noexcept
      : EnumProfileSessionsAndToolsRequest(nullptr, std::move(from)) {}
  inline EnumProfileSessionsAndToolsRequest& operator=(const EnumProfileSessionsAndToolsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnumProfileSessionsAndToolsRequest& operator=(EnumProfileSessionsAndToolsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnumProfileSessionsAndToolsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnumProfileSessionsAndToolsRequest* internal_default_instance() {
    return reinterpret_cast<const EnumProfileSessionsAndToolsRequest*>(
        &_EnumProfileSessionsAndToolsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(EnumProfileSessionsAndToolsRequest& a, EnumProfileSessionsAndToolsRequest& b) { a.Swap(&b); }
  inline void Swap(EnumProfileSessionsAndToolsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnumProfileSessionsAndToolsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnumProfileSessionsAndToolsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EnumProfileSessionsAndToolsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnumProfileSessionsAndToolsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnumProfileSessionsAndToolsRequest& from) { EnumProfileSessionsAndToolsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EnumProfileSessionsAndToolsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.EnumProfileSessionsAndToolsRequest"; }

 protected:
  explicit EnumProfileSessionsAndToolsRequest(::google::protobuf::Arena* arena);
  EnumProfileSessionsAndToolsRequest(::google::protobuf::Arena* arena, const EnumProfileSessionsAndToolsRequest& from);
  EnumProfileSessionsAndToolsRequest(::google::protobuf::Arena* arena, EnumProfileSessionsAndToolsRequest&& from) noexcept
      : EnumProfileSessionsAndToolsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRepositoryRootFieldNumber = 1,
  };
  // string repository_root = 1;
  void clear_repository_root() ;
  const std::string& repository_root() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_repository_root(Arg_&& arg, Args_... args);
  std::string* mutable_repository_root();
  PROTOBUF_NODISCARD std::string* release_repository_root();
  void set_allocated_repository_root(std::string* value);

  private:
  const std::string& _internal_repository_root() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_repository_root(
      const std::string& value);
  std::string* _internal_mutable_repository_root();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.EnumProfileSessionsAndToolsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      69, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnumProfileSessionsAndToolsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr repository_root_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ProfileSessionDataRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ProfileSessionDataRequest) */ {
 public:
  inline ProfileSessionDataRequest() : ProfileSessionDataRequest(nullptr) {}
  ~ProfileSessionDataRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProfileSessionDataRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProfileSessionDataRequest(const ProfileSessionDataRequest& from) : ProfileSessionDataRequest(nullptr, from) {}
  inline ProfileSessionDataRequest(ProfileSessionDataRequest&& from) noexcept
      : ProfileSessionDataRequest(nullptr, std::move(from)) {}
  inline ProfileSessionDataRequest& operator=(const ProfileSessionDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfileSessionDataRequest& operator=(ProfileSessionDataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProfileSessionDataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProfileSessionDataRequest* internal_default_instance() {
    return reinterpret_cast<const ProfileSessionDataRequest*>(
        &_ProfileSessionDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ProfileSessionDataRequest& a, ProfileSessionDataRequest& b) { a.Swap(&b); }
  inline void Swap(ProfileSessionDataRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfileSessionDataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProfileSessionDataRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ProfileSessionDataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProfileSessionDataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProfileSessionDataRequest& from) { ProfileSessionDataRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProfileSessionDataRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.ProfileSessionDataRequest"; }

 protected:
  explicit ProfileSessionDataRequest(::google::protobuf::Arena* arena);
  ProfileSessionDataRequest(::google::protobuf::Arena* arena, const ProfileSessionDataRequest& from);
  ProfileSessionDataRequest(::google::protobuf::Arena* arena, ProfileSessionDataRequest&& from) noexcept
      : ProfileSessionDataRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParametersFieldNumber = 4,
    kRepositoryRootFieldNumber = 1,
    kSessionIdFieldNumber = 2,
    kToolNameFieldNumber = 3,
    kHostNameFieldNumber = 5,
  };
  // map<string, string> parameters = 4;
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;

  public:
  void clear_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& parameters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_parameters();

  public:
  // string repository_root = 1;
  void clear_repository_root() ;
  const std::string& repository_root() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_repository_root(Arg_&& arg, Args_... args);
  std::string* mutable_repository_root();
  PROTOBUF_NODISCARD std::string* release_repository_root();
  void set_allocated_repository_root(std::string* value);

  private:
  const std::string& _internal_repository_root() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_repository_root(
      const std::string& value);
  std::string* _internal_mutable_repository_root();

  public:
  // string session_id = 2;
  void clear_session_id() ;
  const std::string& session_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_id(Arg_&& arg, Args_... args);
  std::string* mutable_session_id();
  PROTOBUF_NODISCARD std::string* release_session_id();
  void set_allocated_session_id(std::string* value);

  private:
  const std::string& _internal_session_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_id(
      const std::string& value);
  std::string* _internal_mutable_session_id();

  public:
  // string tool_name = 3;
  void clear_tool_name() ;
  const std::string& tool_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tool_name(Arg_&& arg, Args_... args);
  std::string* mutable_tool_name();
  PROTOBUF_NODISCARD std::string* release_tool_name();
  void set_allocated_tool_name(std::string* value);

  private:
  const std::string& _internal_tool_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tool_name(
      const std::string& value);
  std::string* _internal_mutable_tool_name();

  public:
  // string host_name = 5;
  void clear_host_name() ;
  const std::string& host_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host_name(Arg_&& arg, Args_... args);
  std::string* mutable_host_name();
  PROTOBUF_NODISCARD std::string* release_host_name();
  void set_allocated_host_name(std::string* value);

  private:
  const std::string& _internal_host_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host_name(
      const std::string& value);
  std::string* _internal_mutable_host_name();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ProfileSessionDataRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      98, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProfileSessionDataRequest& from_msg);
    ::google::protobuf::internal::MapField<ProfileSessionDataRequest_ParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        parameters_;
    ::google::protobuf::internal::ArenaStringPtr repository_root_;
    ::google::protobuf::internal::ArenaStringPtr session_id_;
    ::google::protobuf::internal::ArenaStringPtr tool_name_;
    ::google::protobuf::internal::ArenaStringPtr host_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT EnumProfileSessionsAndToolsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.EnumProfileSessionsAndToolsResponse) */ {
 public:
  inline EnumProfileSessionsAndToolsResponse() : EnumProfileSessionsAndToolsResponse(nullptr) {}
  ~EnumProfileSessionsAndToolsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnumProfileSessionsAndToolsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnumProfileSessionsAndToolsResponse(const EnumProfileSessionsAndToolsResponse& from) : EnumProfileSessionsAndToolsResponse(nullptr, from) {}
  inline EnumProfileSessionsAndToolsResponse(EnumProfileSessionsAndToolsResponse&& from) noexcept
      : EnumProfileSessionsAndToolsResponse(nullptr, std::move(from)) {}
  inline EnumProfileSessionsAndToolsResponse& operator=(const EnumProfileSessionsAndToolsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnumProfileSessionsAndToolsResponse& operator=(EnumProfileSessionsAndToolsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnumProfileSessionsAndToolsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnumProfileSessionsAndToolsResponse* internal_default_instance() {
    return reinterpret_cast<const EnumProfileSessionsAndToolsResponse*>(
        &_EnumProfileSessionsAndToolsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(EnumProfileSessionsAndToolsResponse& a, EnumProfileSessionsAndToolsResponse& b) { a.Swap(&b); }
  inline void Swap(EnumProfileSessionsAndToolsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnumProfileSessionsAndToolsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnumProfileSessionsAndToolsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EnumProfileSessionsAndToolsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnumProfileSessionsAndToolsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnumProfileSessionsAndToolsResponse& from) { EnumProfileSessionsAndToolsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EnumProfileSessionsAndToolsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.EnumProfileSessionsAndToolsResponse"; }

 protected:
  explicit EnumProfileSessionsAndToolsResponse(::google::protobuf::Arena* arena);
  EnumProfileSessionsAndToolsResponse(::google::protobuf::Arena* arena, const EnumProfileSessionsAndToolsResponse& from);
  EnumProfileSessionsAndToolsResponse(::google::protobuf::Arena* arena, EnumProfileSessionsAndToolsResponse&& from) noexcept
      : EnumProfileSessionsAndToolsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSessionsFieldNumber = 2,
    kErrorMessageFieldNumber = 1,
  };
  // repeated .tensorflow.ProfileSessionInfo sessions = 2;
  int sessions_size() const;
  private:
  int _internal_sessions_size() const;

  public:
  void clear_sessions() ;
  ::tensorflow::ProfileSessionInfo* mutable_sessions(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::ProfileSessionInfo>* mutable_sessions();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::ProfileSessionInfo>& _internal_sessions() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::ProfileSessionInfo>* _internal_mutable_sessions();
  public:
  const ::tensorflow::ProfileSessionInfo& sessions(int index) const;
  ::tensorflow::ProfileSessionInfo* add_sessions();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::ProfileSessionInfo>& sessions() const;
  // string error_message = 1;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.EnumProfileSessionsAndToolsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      68, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnumProfileSessionsAndToolsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::ProfileSessionInfo > sessions_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT NewProfileSessionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.NewProfileSessionRequest) */ {
 public:
  inline NewProfileSessionRequest() : NewProfileSessionRequest(nullptr) {}
  ~NewProfileSessionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewProfileSessionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NewProfileSessionRequest(const NewProfileSessionRequest& from) : NewProfileSessionRequest(nullptr, from) {}
  inline NewProfileSessionRequest(NewProfileSessionRequest&& from) noexcept
      : NewProfileSessionRequest(nullptr, std::move(from)) {}
  inline NewProfileSessionRequest& operator=(const NewProfileSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewProfileSessionRequest& operator=(NewProfileSessionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewProfileSessionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewProfileSessionRequest* internal_default_instance() {
    return reinterpret_cast<const NewProfileSessionRequest*>(
        &_NewProfileSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NewProfileSessionRequest& a, NewProfileSessionRequest& b) { a.Swap(&b); }
  inline void Swap(NewProfileSessionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewProfileSessionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewProfileSessionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NewProfileSessionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewProfileSessionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewProfileSessionRequest& from) { NewProfileSessionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NewProfileSessionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.NewProfileSessionRequest"; }

 protected:
  explicit NewProfileSessionRequest(::google::protobuf::Arena* arena);
  NewProfileSessionRequest(::google::protobuf::Arena* arena, const NewProfileSessionRequest& from);
  NewProfileSessionRequest(::google::protobuf::Arena* arena, NewProfileSessionRequest&& from) noexcept
      : NewProfileSessionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHostsFieldNumber = 3,
    kRepositoryRootFieldNumber = 2,
    kSessionIdFieldNumber = 4,
    kRequestFieldNumber = 1,
  };
  // repeated string hosts = 3;
  int hosts_size() const;
  private:
  int _internal_hosts_size() const;

  public:
  void clear_hosts() ;
  const std::string& hosts(int index) const;
  std::string* mutable_hosts(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hosts(int index, Arg_&& value, Args_... args);
  std::string* add_hosts();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_hosts(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& hosts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_hosts();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_hosts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_hosts();

  public:
  // string repository_root = 2;
  void clear_repository_root() ;
  const std::string& repository_root() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_repository_root(Arg_&& arg, Args_... args);
  std::string* mutable_repository_root();
  PROTOBUF_NODISCARD std::string* release_repository_root();
  void set_allocated_repository_root(std::string* value);

  private:
  const std::string& _internal_repository_root() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_repository_root(
      const std::string& value);
  std::string* _internal_mutable_repository_root();

  public:
  // string session_id = 4;
  void clear_session_id() ;
  const std::string& session_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_id(Arg_&& arg, Args_... args);
  std::string* mutable_session_id();
  PROTOBUF_NODISCARD std::string* release_session_id();
  void set_allocated_session_id(std::string* value);

  private:
  const std::string& _internal_session_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_id(
      const std::string& value);
  std::string* _internal_mutable_session_id();

  public:
  // .tensorflow.ProfileRequest request = 1;
  bool has_request() const;
  void clear_request() ;
  const ::tensorflow::ProfileRequest& request() const;
  PROTOBUF_NODISCARD ::tensorflow::ProfileRequest* release_request();
  ::tensorflow::ProfileRequest* mutable_request();
  void set_allocated_request(::tensorflow::ProfileRequest* value);
  void unsafe_arena_set_allocated_request(::tensorflow::ProfileRequest* value);
  ::tensorflow::ProfileRequest* unsafe_arena_release_request();

  private:
  const ::tensorflow::ProfileRequest& _internal_request() const;
  ::tensorflow::ProfileRequest* _internal_mutable_request();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.NewProfileSessionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      74, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NewProfileSessionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> hosts_;
    ::google::protobuf::internal::ArenaStringPtr repository_root_;
    ::google::protobuf::internal::ArenaStringPtr session_id_;
    ::tensorflow::ProfileRequest* request_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NewProfileSessionRequest

// .tensorflow.ProfileRequest request = 1;
inline bool NewProfileSessionRequest::has_request() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.request_ != nullptr);
  return value;
}
inline const ::tensorflow::ProfileRequest& NewProfileSessionRequest::_internal_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ProfileRequest* p = _impl_.request_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ProfileRequest&>(::tensorflow::_ProfileRequest_default_instance_);
}
inline const ::tensorflow::ProfileRequest& NewProfileSessionRequest::request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NewProfileSessionRequest.request)
  return _internal_request();
}
inline void NewProfileSessionRequest::unsafe_arena_set_allocated_request(::tensorflow::ProfileRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_);
  }
  _impl_.request_ = reinterpret_cast<::tensorflow::ProfileRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.NewProfileSessionRequest.request)
}
inline ::tensorflow::ProfileRequest* NewProfileSessionRequest::release_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ProfileRequest* released = _impl_.request_;
  _impl_.request_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::ProfileRequest* NewProfileSessionRequest::unsafe_arena_release_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.NewProfileSessionRequest.request)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ProfileRequest* temp = _impl_.request_;
  _impl_.request_ = nullptr;
  return temp;
}
inline ::tensorflow::ProfileRequest* NewProfileSessionRequest::_internal_mutable_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ProfileRequest>(GetArena());
    _impl_.request_ = reinterpret_cast<::tensorflow::ProfileRequest*>(p);
  }
  return _impl_.request_;
}
inline ::tensorflow::ProfileRequest* NewProfileSessionRequest::mutable_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::ProfileRequest* _msg = _internal_mutable_request();
  // @@protoc_insertion_point(field_mutable:tensorflow.NewProfileSessionRequest.request)
  return _msg;
}
inline void NewProfileSessionRequest::set_allocated_request(::tensorflow::ProfileRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.request_ = reinterpret_cast<::tensorflow::ProfileRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.NewProfileSessionRequest.request)
}

// string repository_root = 2;
inline void NewProfileSessionRequest::clear_repository_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.ClearToEmpty();
}
inline const std::string& NewProfileSessionRequest::repository_root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NewProfileSessionRequest.repository_root)
  return _internal_repository_root();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewProfileSessionRequest::set_repository_root(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.NewProfileSessionRequest.repository_root)
}
inline std::string* NewProfileSessionRequest::mutable_repository_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_repository_root();
  // @@protoc_insertion_point(field_mutable:tensorflow.NewProfileSessionRequest.repository_root)
  return _s;
}
inline const std::string& NewProfileSessionRequest::_internal_repository_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repository_root_.Get();
}
inline void NewProfileSessionRequest::_internal_set_repository_root(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.Set(value, GetArena());
}
inline std::string* NewProfileSessionRequest::_internal_mutable_repository_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.repository_root_.Mutable( GetArena());
}
inline std::string* NewProfileSessionRequest::release_repository_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.NewProfileSessionRequest.repository_root)
  return _impl_.repository_root_.Release();
}
inline void NewProfileSessionRequest::set_allocated_repository_root(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.repository_root_.IsDefault()) {
          _impl_.repository_root_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.NewProfileSessionRequest.repository_root)
}

// repeated string hosts = 3;
inline int NewProfileSessionRequest::_internal_hosts_size() const {
  return _internal_hosts().size();
}
inline int NewProfileSessionRequest::hosts_size() const {
  return _internal_hosts_size();
}
inline void NewProfileSessionRequest::clear_hosts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hosts_.Clear();
}
inline std::string* NewProfileSessionRequest::add_hosts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_hosts()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.NewProfileSessionRequest.hosts)
  return _s;
}
inline const std::string& NewProfileSessionRequest::hosts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NewProfileSessionRequest.hosts)
  return _internal_hosts().Get(index);
}
inline std::string* NewProfileSessionRequest::mutable_hosts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.NewProfileSessionRequest.hosts)
  return _internal_mutable_hosts()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NewProfileSessionRequest::set_hosts(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_hosts()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.NewProfileSessionRequest.hosts)
}
template <typename Arg_, typename... Args_>
inline void NewProfileSessionRequest::add_hosts(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_hosts(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.NewProfileSessionRequest.hosts)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NewProfileSessionRequest::hosts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.NewProfileSessionRequest.hosts)
  return _internal_hosts();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NewProfileSessionRequest::mutable_hosts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.NewProfileSessionRequest.hosts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hosts();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NewProfileSessionRequest::_internal_hosts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hosts_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NewProfileSessionRequest::_internal_mutable_hosts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hosts_;
}

// string session_id = 4;
inline void NewProfileSessionRequest::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.ClearToEmpty();
}
inline const std::string& NewProfileSessionRequest::session_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NewProfileSessionRequest.session_id)
  return _internal_session_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewProfileSessionRequest::set_session_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.NewProfileSessionRequest.session_id)
}
inline std::string* NewProfileSessionRequest::mutable_session_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_id();
  // @@protoc_insertion_point(field_mutable:tensorflow.NewProfileSessionRequest.session_id)
  return _s;
}
inline const std::string& NewProfileSessionRequest::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_.Get();
}
inline void NewProfileSessionRequest::_internal_set_session_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.Set(value, GetArena());
}
inline std::string* NewProfileSessionRequest::_internal_mutable_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_id_.Mutable( GetArena());
}
inline std::string* NewProfileSessionRequest::release_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.NewProfileSessionRequest.session_id)
  return _impl_.session_id_.Release();
}
inline void NewProfileSessionRequest::set_allocated_session_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_id_.IsDefault()) {
          _impl_.session_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.NewProfileSessionRequest.session_id)
}

// -------------------------------------------------------------------

// NewProfileSessionResponse

// string error_message = 1;
inline void NewProfileSessionResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& NewProfileSessionResponse::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.NewProfileSessionResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewProfileSessionResponse::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.NewProfileSessionResponse.error_message)
}
inline std::string* NewProfileSessionResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:tensorflow.NewProfileSessionResponse.error_message)
  return _s;
}
inline const std::string& NewProfileSessionResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void NewProfileSessionResponse::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* NewProfileSessionResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* NewProfileSessionResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.NewProfileSessionResponse.error_message)
  return _impl_.error_message_.Release();
}
inline void NewProfileSessionResponse::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_message_.IsDefault()) {
          _impl_.error_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.NewProfileSessionResponse.error_message)
}

// bool empty_trace = 2;
inline void NewProfileSessionResponse::clear_empty_trace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empty_trace_ = false;
}
inline bool NewProfileSessionResponse::empty_trace() const {
  // @@protoc_insertion_point(field_get:tensorflow.NewProfileSessionResponse.empty_trace)
  return _internal_empty_trace();
}
inline void NewProfileSessionResponse::set_empty_trace(bool value) {
  _internal_set_empty_trace(value);
  // @@protoc_insertion_point(field_set:tensorflow.NewProfileSessionResponse.empty_trace)
}
inline bool NewProfileSessionResponse::_internal_empty_trace() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.empty_trace_;
}
inline void NewProfileSessionResponse::_internal_set_empty_trace(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empty_trace_ = value;
}

// -------------------------------------------------------------------

// EnumProfileSessionsAndToolsRequest

// string repository_root = 1;
inline void EnumProfileSessionsAndToolsRequest::clear_repository_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.ClearToEmpty();
}
inline const std::string& EnumProfileSessionsAndToolsRequest::repository_root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.EnumProfileSessionsAndToolsRequest.repository_root)
  return _internal_repository_root();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EnumProfileSessionsAndToolsRequest::set_repository_root(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.EnumProfileSessionsAndToolsRequest.repository_root)
}
inline std::string* EnumProfileSessionsAndToolsRequest::mutable_repository_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_repository_root();
  // @@protoc_insertion_point(field_mutable:tensorflow.EnumProfileSessionsAndToolsRequest.repository_root)
  return _s;
}
inline const std::string& EnumProfileSessionsAndToolsRequest::_internal_repository_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repository_root_.Get();
}
inline void EnumProfileSessionsAndToolsRequest::_internal_set_repository_root(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.Set(value, GetArena());
}
inline std::string* EnumProfileSessionsAndToolsRequest::_internal_mutable_repository_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.repository_root_.Mutable( GetArena());
}
inline std::string* EnumProfileSessionsAndToolsRequest::release_repository_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.EnumProfileSessionsAndToolsRequest.repository_root)
  return _impl_.repository_root_.Release();
}
inline void EnumProfileSessionsAndToolsRequest::set_allocated_repository_root(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.repository_root_.IsDefault()) {
          _impl_.repository_root_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.EnumProfileSessionsAndToolsRequest.repository_root)
}

// -------------------------------------------------------------------

// ProfileSessionInfo

// string session_id = 1;
inline void ProfileSessionInfo::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.ClearToEmpty();
}
inline const std::string& ProfileSessionInfo::session_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileSessionInfo.session_id)
  return _internal_session_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileSessionInfo::set_session_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileSessionInfo.session_id)
}
inline std::string* ProfileSessionInfo::mutable_session_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_id();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileSessionInfo.session_id)
  return _s;
}
inline const std::string& ProfileSessionInfo::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_.Get();
}
inline void ProfileSessionInfo::_internal_set_session_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.Set(value, GetArena());
}
inline std::string* ProfileSessionInfo::_internal_mutable_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_id_.Mutable( GetArena());
}
inline std::string* ProfileSessionInfo::release_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileSessionInfo.session_id)
  return _impl_.session_id_.Release();
}
inline void ProfileSessionInfo::set_allocated_session_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_id_.IsDefault()) {
          _impl_.session_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileSessionInfo.session_id)
}

// repeated string available_tools = 2;
inline int ProfileSessionInfo::_internal_available_tools_size() const {
  return _internal_available_tools().size();
}
inline int ProfileSessionInfo::available_tools_size() const {
  return _internal_available_tools_size();
}
inline void ProfileSessionInfo::clear_available_tools() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_tools_.Clear();
}
inline std::string* ProfileSessionInfo::add_available_tools() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_available_tools()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.ProfileSessionInfo.available_tools)
  return _s;
}
inline const std::string& ProfileSessionInfo::available_tools(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileSessionInfo.available_tools)
  return _internal_available_tools().Get(index);
}
inline std::string* ProfileSessionInfo::mutable_available_tools(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileSessionInfo.available_tools)
  return _internal_mutable_available_tools()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ProfileSessionInfo::set_available_tools(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_available_tools()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.ProfileSessionInfo.available_tools)
}
template <typename Arg_, typename... Args_>
inline void ProfileSessionInfo::add_available_tools(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_available_tools(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.ProfileSessionInfo.available_tools)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ProfileSessionInfo::available_tools() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.ProfileSessionInfo.available_tools)
  return _internal_available_tools();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ProfileSessionInfo::mutable_available_tools() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ProfileSessionInfo.available_tools)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_available_tools();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ProfileSessionInfo::_internal_available_tools() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.available_tools_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ProfileSessionInfo::_internal_mutable_available_tools() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.available_tools_;
}

// -------------------------------------------------------------------

// EnumProfileSessionsAndToolsResponse

// string error_message = 1;
inline void EnumProfileSessionsAndToolsResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& EnumProfileSessionsAndToolsResponse::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.EnumProfileSessionsAndToolsResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EnumProfileSessionsAndToolsResponse::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.EnumProfileSessionsAndToolsResponse.error_message)
}
inline std::string* EnumProfileSessionsAndToolsResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:tensorflow.EnumProfileSessionsAndToolsResponse.error_message)
  return _s;
}
inline const std::string& EnumProfileSessionsAndToolsResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void EnumProfileSessionsAndToolsResponse::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* EnumProfileSessionsAndToolsResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* EnumProfileSessionsAndToolsResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.EnumProfileSessionsAndToolsResponse.error_message)
  return _impl_.error_message_.Release();
}
inline void EnumProfileSessionsAndToolsResponse::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_message_.IsDefault()) {
          _impl_.error_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.EnumProfileSessionsAndToolsResponse.error_message)
}

// repeated .tensorflow.ProfileSessionInfo sessions = 2;
inline int EnumProfileSessionsAndToolsResponse::_internal_sessions_size() const {
  return _internal_sessions().size();
}
inline int EnumProfileSessionsAndToolsResponse::sessions_size() const {
  return _internal_sessions_size();
}
inline void EnumProfileSessionsAndToolsResponse::clear_sessions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sessions_.Clear();
}
inline ::tensorflow::ProfileSessionInfo* EnumProfileSessionsAndToolsResponse::mutable_sessions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.EnumProfileSessionsAndToolsResponse.sessions)
  return _internal_mutable_sessions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::ProfileSessionInfo>* EnumProfileSessionsAndToolsResponse::mutable_sessions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.EnumProfileSessionsAndToolsResponse.sessions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sessions();
}
inline const ::tensorflow::ProfileSessionInfo& EnumProfileSessionsAndToolsResponse::sessions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.EnumProfileSessionsAndToolsResponse.sessions)
  return _internal_sessions().Get(index);
}
inline ::tensorflow::ProfileSessionInfo* EnumProfileSessionsAndToolsResponse::add_sessions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::ProfileSessionInfo* _add = _internal_mutable_sessions()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.EnumProfileSessionsAndToolsResponse.sessions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::ProfileSessionInfo>& EnumProfileSessionsAndToolsResponse::sessions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.EnumProfileSessionsAndToolsResponse.sessions)
  return _internal_sessions();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::ProfileSessionInfo>&
EnumProfileSessionsAndToolsResponse::_internal_sessions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sessions_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::ProfileSessionInfo>*
EnumProfileSessionsAndToolsResponse::_internal_mutable_sessions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sessions_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ProfileSessionDataRequest

// string repository_root = 1;
inline void ProfileSessionDataRequest::clear_repository_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.ClearToEmpty();
}
inline const std::string& ProfileSessionDataRequest::repository_root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileSessionDataRequest.repository_root)
  return _internal_repository_root();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileSessionDataRequest::set_repository_root(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileSessionDataRequest.repository_root)
}
inline std::string* ProfileSessionDataRequest::mutable_repository_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_repository_root();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileSessionDataRequest.repository_root)
  return _s;
}
inline const std::string& ProfileSessionDataRequest::_internal_repository_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repository_root_.Get();
}
inline void ProfileSessionDataRequest::_internal_set_repository_root(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.Set(value, GetArena());
}
inline std::string* ProfileSessionDataRequest::_internal_mutable_repository_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.repository_root_.Mutable( GetArena());
}
inline std::string* ProfileSessionDataRequest::release_repository_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileSessionDataRequest.repository_root)
  return _impl_.repository_root_.Release();
}
inline void ProfileSessionDataRequest::set_allocated_repository_root(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_root_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.repository_root_.IsDefault()) {
          _impl_.repository_root_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileSessionDataRequest.repository_root)
}

// string session_id = 2;
inline void ProfileSessionDataRequest::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.ClearToEmpty();
}
inline const std::string& ProfileSessionDataRequest::session_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileSessionDataRequest.session_id)
  return _internal_session_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileSessionDataRequest::set_session_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileSessionDataRequest.session_id)
}
inline std::string* ProfileSessionDataRequest::mutable_session_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_id();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileSessionDataRequest.session_id)
  return _s;
}
inline const std::string& ProfileSessionDataRequest::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_.Get();
}
inline void ProfileSessionDataRequest::_internal_set_session_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.Set(value, GetArena());
}
inline std::string* ProfileSessionDataRequest::_internal_mutable_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_id_.Mutable( GetArena());
}
inline std::string* ProfileSessionDataRequest::release_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileSessionDataRequest.session_id)
  return _impl_.session_id_.Release();
}
inline void ProfileSessionDataRequest::set_allocated_session_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_id_.IsDefault()) {
          _impl_.session_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileSessionDataRequest.session_id)
}

// string host_name = 5;
inline void ProfileSessionDataRequest::clear_host_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_name_.ClearToEmpty();
}
inline const std::string& ProfileSessionDataRequest::host_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileSessionDataRequest.host_name)
  return _internal_host_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileSessionDataRequest::set_host_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileSessionDataRequest.host_name)
}
inline std::string* ProfileSessionDataRequest::mutable_host_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileSessionDataRequest.host_name)
  return _s;
}
inline const std::string& ProfileSessionDataRequest::_internal_host_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_name_.Get();
}
inline void ProfileSessionDataRequest::_internal_set_host_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_name_.Set(value, GetArena());
}
inline std::string* ProfileSessionDataRequest::_internal_mutable_host_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.host_name_.Mutable( GetArena());
}
inline std::string* ProfileSessionDataRequest::release_host_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileSessionDataRequest.host_name)
  return _impl_.host_name_.Release();
}
inline void ProfileSessionDataRequest::set_allocated_host_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.host_name_.IsDefault()) {
          _impl_.host_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileSessionDataRequest.host_name)
}

// string tool_name = 3;
inline void ProfileSessionDataRequest::clear_tool_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tool_name_.ClearToEmpty();
}
inline const std::string& ProfileSessionDataRequest::tool_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileSessionDataRequest.tool_name)
  return _internal_tool_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileSessionDataRequest::set_tool_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tool_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileSessionDataRequest.tool_name)
}
inline std::string* ProfileSessionDataRequest::mutable_tool_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tool_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileSessionDataRequest.tool_name)
  return _s;
}
inline const std::string& ProfileSessionDataRequest::_internal_tool_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tool_name_.Get();
}
inline void ProfileSessionDataRequest::_internal_set_tool_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tool_name_.Set(value, GetArena());
}
inline std::string* ProfileSessionDataRequest::_internal_mutable_tool_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tool_name_.Mutable( GetArena());
}
inline std::string* ProfileSessionDataRequest::release_tool_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileSessionDataRequest.tool_name)
  return _impl_.tool_name_.Release();
}
inline void ProfileSessionDataRequest::set_allocated_tool_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tool_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tool_name_.IsDefault()) {
          _impl_.tool_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileSessionDataRequest.tool_name)
}

// map<string, string> parameters = 4;
inline int ProfileSessionDataRequest::_internal_parameters_size() const {
  return _internal_parameters().size();
}
inline int ProfileSessionDataRequest::parameters_size() const {
  return _internal_parameters_size();
}
inline void ProfileSessionDataRequest::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ProfileSessionDataRequest::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ProfileSessionDataRequest::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.ProfileSessionDataRequest.parameters)
  return _internal_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* ProfileSessionDataRequest::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ProfileSessionDataRequest::mutable_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.ProfileSessionDataRequest.parameters)
  return _internal_mutable_parameters();
}

// -------------------------------------------------------------------

// ProfileSessionDataResponse

// string error_message = 1;
inline void ProfileSessionDataResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& ProfileSessionDataResponse::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileSessionDataResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileSessionDataResponse::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileSessionDataResponse.error_message)
}
inline std::string* ProfileSessionDataResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileSessionDataResponse.error_message)
  return _s;
}
inline const std::string& ProfileSessionDataResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void ProfileSessionDataResponse::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* ProfileSessionDataResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* ProfileSessionDataResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileSessionDataResponse.error_message)
  return _impl_.error_message_.Release();
}
inline void ProfileSessionDataResponse::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_message_.IsDefault()) {
          _impl_.error_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileSessionDataResponse.error_message)
}

// string output_format = 2;
inline void ProfileSessionDataResponse::clear_output_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_format_.ClearToEmpty();
}
inline const std::string& ProfileSessionDataResponse::output_format() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileSessionDataResponse.output_format)
  return _internal_output_format();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileSessionDataResponse::set_output_format(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_format_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileSessionDataResponse.output_format)
}
inline std::string* ProfileSessionDataResponse::mutable_output_format() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_output_format();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileSessionDataResponse.output_format)
  return _s;
}
inline const std::string& ProfileSessionDataResponse::_internal_output_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_format_.Get();
}
inline void ProfileSessionDataResponse::_internal_set_output_format(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_format_.Set(value, GetArena());
}
inline std::string* ProfileSessionDataResponse::_internal_mutable_output_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.output_format_.Mutable( GetArena());
}
inline std::string* ProfileSessionDataResponse::release_output_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileSessionDataResponse.output_format)
  return _impl_.output_format_.Release();
}
inline void ProfileSessionDataResponse::set_allocated_output_format(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_format_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.output_format_.IsDefault()) {
          _impl_.output_format_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileSessionDataResponse.output_format)
}

// bytes output = 3;
inline void ProfileSessionDataResponse::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.ClearToEmpty();
}
inline const std::string& ProfileSessionDataResponse::output() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileSessionDataResponse.output)
  return _internal_output();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileSessionDataResponse::set_output(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileSessionDataResponse.output)
}
inline std::string* ProfileSessionDataResponse::mutable_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_output();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileSessionDataResponse.output)
  return _s;
}
inline const std::string& ProfileSessionDataResponse::_internal_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_.Get();
}
inline void ProfileSessionDataResponse::_internal_set_output(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.Set(value, GetArena());
}
inline std::string* ProfileSessionDataResponse::_internal_mutable_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.output_.Mutable( GetArena());
}
inline std::string* ProfileSessionDataResponse::release_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileSessionDataResponse.output)
  return _impl_.output_.Release();
}
inline void ProfileSessionDataResponse::set_allocated_output(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.output_.IsDefault()) {
          _impl_.output_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileSessionDataResponse.output)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tsl_2fprofiler_2fprotobuf_2fprofiler_5fanalysis_2eproto_2epb_2eh
