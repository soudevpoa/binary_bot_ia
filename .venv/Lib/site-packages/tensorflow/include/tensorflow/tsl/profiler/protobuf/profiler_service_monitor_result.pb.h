// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tsl/profiler/protobuf/profiler_service_monitor_result.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tsl_2fprofiler_2fprotobuf_2fprofiler_5fservice_5fmonitor_5fresult_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tsl_2fprofiler_2fprotobuf_2fprofiler_5fservice_5fmonitor_5fresult_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tsl_2fprofiler_2fprotobuf_2fprofiler_5fservice_5fmonitor_5fresult_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fservice_5fmonitor_5fresult_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tsl_2fprofiler_2fprotobuf_2fprofiler_5fservice_5fmonitor_5fresult_2eproto;
namespace tensorflow {
class ProfilerServiceMonitorResult;
struct ProfilerServiceMonitorResultDefaultTypeInternal;
PROTOBUF_EXPORT extern ProfilerServiceMonitorResultDefaultTypeInternal _ProfilerServiceMonitorResult_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
enum ProfilerServiceMonitorResult_ResponseType : int {
  ProfilerServiceMonitorResult_ResponseType_EMPTY_RESULT = 0,
  ProfilerServiceMonitorResult_ResponseType_UTIL_ONLY = 1,
  ProfilerServiceMonitorResult_ResponseType_UTIL_IDLE = 2,
  ProfilerServiceMonitorResult_ResponseType_UTIL_IDLE_STEP = 3,
  ProfilerServiceMonitorResult_ResponseType_ProfilerServiceMonitorResult_ResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ProfilerServiceMonitorResult_ResponseType_ProfilerServiceMonitorResult_ResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool ProfilerServiceMonitorResult_ResponseType_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t ProfilerServiceMonitorResult_ResponseType_internal_data_[];
constexpr ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult_ResponseType_ResponseType_MIN = static_cast<ProfilerServiceMonitorResult_ResponseType>(0);
constexpr ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult_ResponseType_ResponseType_MAX = static_cast<ProfilerServiceMonitorResult_ResponseType>(3);
constexpr int ProfilerServiceMonitorResult_ResponseType_ResponseType_ARRAYSIZE = 3 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
ProfilerServiceMonitorResult_ResponseType_descriptor();
template <typename T>
const std::string& ProfilerServiceMonitorResult_ResponseType_Name(T value) {
  static_assert(std::is_same<T, ProfilerServiceMonitorResult_ResponseType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ResponseType_Name().");
  return ProfilerServiceMonitorResult_ResponseType_Name(static_cast<ProfilerServiceMonitorResult_ResponseType>(value));
}
template <>
inline const std::string& ProfilerServiceMonitorResult_ResponseType_Name(ProfilerServiceMonitorResult_ResponseType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ProfilerServiceMonitorResult_ResponseType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ProfilerServiceMonitorResult_ResponseType_Parse(absl::string_view name, ProfilerServiceMonitorResult_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProfilerServiceMonitorResult_ResponseType>(
      ProfilerServiceMonitorResult_ResponseType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT ProfilerServiceMonitorResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ProfilerServiceMonitorResult) */ {
 public:
  inline ProfilerServiceMonitorResult() : ProfilerServiceMonitorResult(nullptr) {}
  ~ProfilerServiceMonitorResult() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProfilerServiceMonitorResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProfilerServiceMonitorResult(const ProfilerServiceMonitorResult& from) : ProfilerServiceMonitorResult(nullptr, from) {}
  inline ProfilerServiceMonitorResult(ProfilerServiceMonitorResult&& from) noexcept
      : ProfilerServiceMonitorResult(nullptr, std::move(from)) {}
  inline ProfilerServiceMonitorResult& operator=(const ProfilerServiceMonitorResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfilerServiceMonitorResult& operator=(ProfilerServiceMonitorResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProfilerServiceMonitorResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProfilerServiceMonitorResult* internal_default_instance() {
    return reinterpret_cast<const ProfilerServiceMonitorResult*>(
        &_ProfilerServiceMonitorResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ProfilerServiceMonitorResult& a, ProfilerServiceMonitorResult& b) { a.Swap(&b); }
  inline void Swap(ProfilerServiceMonitorResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfilerServiceMonitorResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProfilerServiceMonitorResult* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ProfilerServiceMonitorResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProfilerServiceMonitorResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProfilerServiceMonitorResult& from) { ProfilerServiceMonitorResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProfilerServiceMonitorResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.ProfilerServiceMonitorResult"; }

 protected:
  explicit ProfilerServiceMonitorResult(::google::protobuf::Arena* arena);
  ProfilerServiceMonitorResult(::google::protobuf::Arena* arena, const ProfilerServiceMonitorResult& from);
  ProfilerServiceMonitorResult(::google::protobuf::Arena* arena, ProfilerServiceMonitorResult&& from) noexcept
      : ProfilerServiceMonitorResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ResponseType = ProfilerServiceMonitorResult_ResponseType;
  static constexpr ResponseType EMPTY_RESULT = ProfilerServiceMonitorResult_ResponseType_EMPTY_RESULT;
  static constexpr ResponseType UTIL_ONLY = ProfilerServiceMonitorResult_ResponseType_UTIL_ONLY;
  static constexpr ResponseType UTIL_IDLE = ProfilerServiceMonitorResult_ResponseType_UTIL_IDLE;
  static constexpr ResponseType UTIL_IDLE_STEP = ProfilerServiceMonitorResult_ResponseType_UTIL_IDLE_STEP;
  static inline bool ResponseType_IsValid(int value) {
    return ProfilerServiceMonitorResult_ResponseType_IsValid(value);
  }
  static constexpr ResponseType ResponseType_MIN = ProfilerServiceMonitorResult_ResponseType_ResponseType_MIN;
  static constexpr ResponseType ResponseType_MAX = ProfilerServiceMonitorResult_ResponseType_ResponseType_MAX;
  static constexpr int ResponseType_ARRAYSIZE = ProfilerServiceMonitorResult_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ResponseType_descriptor() {
    return ProfilerServiceMonitorResult_ResponseType_descriptor();
  }
  template <typename T>
  static inline const std::string& ResponseType_Name(T value) {
    return ProfilerServiceMonitorResult_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(absl::string_view name, ResponseType* value) {
    return ProfilerServiceMonitorResult_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceIdleTimePercentFieldNumber = 2,
    kMatrixUnitUtilizationPercentFieldNumber = 3,
    kStepTimeMsAvgFieldNumber = 4,
    kStepTimeMsMinFieldNumber = 5,
    kStepTimeMsMaxFieldNumber = 6,
    kInfeedPercentAvgFieldNumber = 7,
    kInfeedPercentMinFieldNumber = 8,
    kInfeedPercentMaxFieldNumber = 9,
    kResponseTypeFieldNumber = 1,
  };
  // double device_idle_time_percent = 2;
  void clear_device_idle_time_percent() ;
  double device_idle_time_percent() const;
  void set_device_idle_time_percent(double value);

  private:
  double _internal_device_idle_time_percent() const;
  void _internal_set_device_idle_time_percent(double value);

  public:
  // double matrix_unit_utilization_percent = 3;
  void clear_matrix_unit_utilization_percent() ;
  double matrix_unit_utilization_percent() const;
  void set_matrix_unit_utilization_percent(double value);

  private:
  double _internal_matrix_unit_utilization_percent() const;
  void _internal_set_matrix_unit_utilization_percent(double value);

  public:
  // double step_time_ms_avg = 4;
  void clear_step_time_ms_avg() ;
  double step_time_ms_avg() const;
  void set_step_time_ms_avg(double value);

  private:
  double _internal_step_time_ms_avg() const;
  void _internal_set_step_time_ms_avg(double value);

  public:
  // double step_time_ms_min = 5;
  void clear_step_time_ms_min() ;
  double step_time_ms_min() const;
  void set_step_time_ms_min(double value);

  private:
  double _internal_step_time_ms_min() const;
  void _internal_set_step_time_ms_min(double value);

  public:
  // double step_time_ms_max = 6;
  void clear_step_time_ms_max() ;
  double step_time_ms_max() const;
  void set_step_time_ms_max(double value);

  private:
  double _internal_step_time_ms_max() const;
  void _internal_set_step_time_ms_max(double value);

  public:
  // double infeed_percent_avg = 7;
  void clear_infeed_percent_avg() ;
  double infeed_percent_avg() const;
  void set_infeed_percent_avg(double value);

  private:
  double _internal_infeed_percent_avg() const;
  void _internal_set_infeed_percent_avg(double value);

  public:
  // double infeed_percent_min = 8;
  void clear_infeed_percent_min() ;
  double infeed_percent_min() const;
  void set_infeed_percent_min(double value);

  private:
  double _internal_infeed_percent_min() const;
  void _internal_set_infeed_percent_min(double value);

  public:
  // double infeed_percent_max = 9;
  void clear_infeed_percent_max() ;
  double infeed_percent_max() const;
  void set_infeed_percent_max(double value);

  private:
  double _internal_infeed_percent_max() const;
  void _internal_set_infeed_percent_max(double value);

  public:
  // .tensorflow.ProfilerServiceMonitorResult.ResponseType response_type = 1;
  void clear_response_type() ;
  ::tensorflow::ProfilerServiceMonitorResult_ResponseType response_type() const;
  void set_response_type(::tensorflow::ProfilerServiceMonitorResult_ResponseType value);

  private:
  ::tensorflow::ProfilerServiceMonitorResult_ResponseType _internal_response_type() const;
  void _internal_set_response_type(::tensorflow::ProfilerServiceMonitorResult_ResponseType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ProfilerServiceMonitorResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProfilerServiceMonitorResult& from_msg);
    double device_idle_time_percent_;
    double matrix_unit_utilization_percent_;
    double step_time_ms_avg_;
    double step_time_ms_min_;
    double step_time_ms_max_;
    double infeed_percent_avg_;
    double infeed_percent_min_;
    double infeed_percent_max_;
    int response_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5fservice_5fmonitor_5fresult_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ProfilerServiceMonitorResult

// .tensorflow.ProfilerServiceMonitorResult.ResponseType response_type = 1;
inline void ProfilerServiceMonitorResult::clear_response_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_type_ = 0;
}
inline ::tensorflow::ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult::response_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfilerServiceMonitorResult.response_type)
  return _internal_response_type();
}
inline void ProfilerServiceMonitorResult::set_response_type(::tensorflow::ProfilerServiceMonitorResult_ResponseType value) {
  _internal_set_response_type(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfilerServiceMonitorResult.response_type)
}
inline ::tensorflow::ProfilerServiceMonitorResult_ResponseType ProfilerServiceMonitorResult::_internal_response_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::ProfilerServiceMonitorResult_ResponseType>(_impl_.response_type_);
}
inline void ProfilerServiceMonitorResult::_internal_set_response_type(::tensorflow::ProfilerServiceMonitorResult_ResponseType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_type_ = value;
}

// double device_idle_time_percent = 2;
inline void ProfilerServiceMonitorResult::clear_device_idle_time_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_idle_time_percent_ = 0;
}
inline double ProfilerServiceMonitorResult::device_idle_time_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfilerServiceMonitorResult.device_idle_time_percent)
  return _internal_device_idle_time_percent();
}
inline void ProfilerServiceMonitorResult::set_device_idle_time_percent(double value) {
  _internal_set_device_idle_time_percent(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfilerServiceMonitorResult.device_idle_time_percent)
}
inline double ProfilerServiceMonitorResult::_internal_device_idle_time_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_idle_time_percent_;
}
inline void ProfilerServiceMonitorResult::_internal_set_device_idle_time_percent(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_idle_time_percent_ = value;
}

// double matrix_unit_utilization_percent = 3;
inline void ProfilerServiceMonitorResult::clear_matrix_unit_utilization_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matrix_unit_utilization_percent_ = 0;
}
inline double ProfilerServiceMonitorResult::matrix_unit_utilization_percent() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfilerServiceMonitorResult.matrix_unit_utilization_percent)
  return _internal_matrix_unit_utilization_percent();
}
inline void ProfilerServiceMonitorResult::set_matrix_unit_utilization_percent(double value) {
  _internal_set_matrix_unit_utilization_percent(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfilerServiceMonitorResult.matrix_unit_utilization_percent)
}
inline double ProfilerServiceMonitorResult::_internal_matrix_unit_utilization_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matrix_unit_utilization_percent_;
}
inline void ProfilerServiceMonitorResult::_internal_set_matrix_unit_utilization_percent(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matrix_unit_utilization_percent_ = value;
}

// double step_time_ms_avg = 4;
inline void ProfilerServiceMonitorResult::clear_step_time_ms_avg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_time_ms_avg_ = 0;
}
inline double ProfilerServiceMonitorResult::step_time_ms_avg() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfilerServiceMonitorResult.step_time_ms_avg)
  return _internal_step_time_ms_avg();
}
inline void ProfilerServiceMonitorResult::set_step_time_ms_avg(double value) {
  _internal_set_step_time_ms_avg(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfilerServiceMonitorResult.step_time_ms_avg)
}
inline double ProfilerServiceMonitorResult::_internal_step_time_ms_avg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_time_ms_avg_;
}
inline void ProfilerServiceMonitorResult::_internal_set_step_time_ms_avg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_time_ms_avg_ = value;
}

// double step_time_ms_min = 5;
inline void ProfilerServiceMonitorResult::clear_step_time_ms_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_time_ms_min_ = 0;
}
inline double ProfilerServiceMonitorResult::step_time_ms_min() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfilerServiceMonitorResult.step_time_ms_min)
  return _internal_step_time_ms_min();
}
inline void ProfilerServiceMonitorResult::set_step_time_ms_min(double value) {
  _internal_set_step_time_ms_min(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfilerServiceMonitorResult.step_time_ms_min)
}
inline double ProfilerServiceMonitorResult::_internal_step_time_ms_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_time_ms_min_;
}
inline void ProfilerServiceMonitorResult::_internal_set_step_time_ms_min(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_time_ms_min_ = value;
}

// double step_time_ms_max = 6;
inline void ProfilerServiceMonitorResult::clear_step_time_ms_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_time_ms_max_ = 0;
}
inline double ProfilerServiceMonitorResult::step_time_ms_max() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfilerServiceMonitorResult.step_time_ms_max)
  return _internal_step_time_ms_max();
}
inline void ProfilerServiceMonitorResult::set_step_time_ms_max(double value) {
  _internal_set_step_time_ms_max(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfilerServiceMonitorResult.step_time_ms_max)
}
inline double ProfilerServiceMonitorResult::_internal_step_time_ms_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.step_time_ms_max_;
}
inline void ProfilerServiceMonitorResult::_internal_set_step_time_ms_max(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.step_time_ms_max_ = value;
}

// double infeed_percent_avg = 7;
inline void ProfilerServiceMonitorResult::clear_infeed_percent_avg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infeed_percent_avg_ = 0;
}
inline double ProfilerServiceMonitorResult::infeed_percent_avg() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfilerServiceMonitorResult.infeed_percent_avg)
  return _internal_infeed_percent_avg();
}
inline void ProfilerServiceMonitorResult::set_infeed_percent_avg(double value) {
  _internal_set_infeed_percent_avg(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfilerServiceMonitorResult.infeed_percent_avg)
}
inline double ProfilerServiceMonitorResult::_internal_infeed_percent_avg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infeed_percent_avg_;
}
inline void ProfilerServiceMonitorResult::_internal_set_infeed_percent_avg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infeed_percent_avg_ = value;
}

// double infeed_percent_min = 8;
inline void ProfilerServiceMonitorResult::clear_infeed_percent_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infeed_percent_min_ = 0;
}
inline double ProfilerServiceMonitorResult::infeed_percent_min() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfilerServiceMonitorResult.infeed_percent_min)
  return _internal_infeed_percent_min();
}
inline void ProfilerServiceMonitorResult::set_infeed_percent_min(double value) {
  _internal_set_infeed_percent_min(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfilerServiceMonitorResult.infeed_percent_min)
}
inline double ProfilerServiceMonitorResult::_internal_infeed_percent_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infeed_percent_min_;
}
inline void ProfilerServiceMonitorResult::_internal_set_infeed_percent_min(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infeed_percent_min_ = value;
}

// double infeed_percent_max = 9;
inline void ProfilerServiceMonitorResult::clear_infeed_percent_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infeed_percent_max_ = 0;
}
inline double ProfilerServiceMonitorResult::infeed_percent_max() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfilerServiceMonitorResult.infeed_percent_max)
  return _internal_infeed_percent_max();
}
inline void ProfilerServiceMonitorResult::set_infeed_percent_max(double value) {
  _internal_set_infeed_percent_max(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfilerServiceMonitorResult.infeed_percent_max)
}
inline double ProfilerServiceMonitorResult::_internal_infeed_percent_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infeed_percent_max_;
}
inline void ProfilerServiceMonitorResult::_internal_set_infeed_percent_max(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infeed_percent_max_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::ProfilerServiceMonitorResult_ResponseType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::ProfilerServiceMonitorResult_ResponseType>() {
  return ::tensorflow::ProfilerServiceMonitorResult_ResponseType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tsl_2fprofiler_2fprotobuf_2fprofiler_5fservice_5fmonitor_5fresult_2eproto_2epb_2eh
