// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tsl/profiler/protobuf/profiler_options.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto;
namespace tensorflow {
class ProfileOptions;
struct ProfileOptionsDefaultTypeInternal;
PROTOBUF_EXPORT extern ProfileOptionsDefaultTypeInternal _ProfileOptions_default_instance_;
class ProfileOptions_AdvancedConfigValue;
struct ProfileOptions_AdvancedConfigValueDefaultTypeInternal;
PROTOBUF_EXPORT extern ProfileOptions_AdvancedConfigValueDefaultTypeInternal _ProfileOptions_AdvancedConfigValue_default_instance_;
class ProfileOptions_AdvancedConfigurationEntry_DoNotUse;
struct ProfileOptions_AdvancedConfigurationEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern ProfileOptions_AdvancedConfigurationEntry_DoNotUseDefaultTypeInternal _ProfileOptions_AdvancedConfigurationEntry_DoNotUse_default_instance_;
class ProfileOptions_TraceOptions;
struct ProfileOptions_TraceOptionsDefaultTypeInternal;
PROTOBUF_EXPORT extern ProfileOptions_TraceOptionsDefaultTypeInternal _ProfileOptions_TraceOptions_default_instance_;
class RemoteProfilerSessionManagerOptions;
struct RemoteProfilerSessionManagerOptionsDefaultTypeInternal;
PROTOBUF_EXPORT extern RemoteProfilerSessionManagerOptionsDefaultTypeInternal _RemoteProfilerSessionManagerOptions_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
enum ProfileOptions_DeviceType : int {
  ProfileOptions_DeviceType_UNSPECIFIED = 0,
  ProfileOptions_DeviceType_CPU = 1,
  ProfileOptions_DeviceType_GPU = 2,
  ProfileOptions_DeviceType_TPU = 3,
  ProfileOptions_DeviceType_PLUGGABLE_DEVICE = 4,
  ProfileOptions_DeviceType_ProfileOptions_DeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ProfileOptions_DeviceType_ProfileOptions_DeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool ProfileOptions_DeviceType_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t ProfileOptions_DeviceType_internal_data_[];
constexpr ProfileOptions_DeviceType ProfileOptions_DeviceType_DeviceType_MIN = static_cast<ProfileOptions_DeviceType>(0);
constexpr ProfileOptions_DeviceType ProfileOptions_DeviceType_DeviceType_MAX = static_cast<ProfileOptions_DeviceType>(4);
constexpr int ProfileOptions_DeviceType_DeviceType_ARRAYSIZE = 4 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
ProfileOptions_DeviceType_descriptor();
template <typename T>
const std::string& ProfileOptions_DeviceType_Name(T value) {
  static_assert(std::is_same<T, ProfileOptions_DeviceType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DeviceType_Name().");
  return ProfileOptions_DeviceType_Name(static_cast<ProfileOptions_DeviceType>(value));
}
template <>
inline const std::string& ProfileOptions_DeviceType_Name(ProfileOptions_DeviceType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ProfileOptions_DeviceType_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ProfileOptions_DeviceType_Parse(absl::string_view name, ProfileOptions_DeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProfileOptions_DeviceType>(
      ProfileOptions_DeviceType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT ProfileOptions_TraceOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ProfileOptions.TraceOptions) */ {
 public:
  inline ProfileOptions_TraceOptions() : ProfileOptions_TraceOptions(nullptr) {}
  ~ProfileOptions_TraceOptions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProfileOptions_TraceOptions(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProfileOptions_TraceOptions(const ProfileOptions_TraceOptions& from) : ProfileOptions_TraceOptions(nullptr, from) {}
  inline ProfileOptions_TraceOptions(ProfileOptions_TraceOptions&& from) noexcept
      : ProfileOptions_TraceOptions(nullptr, std::move(from)) {}
  inline ProfileOptions_TraceOptions& operator=(const ProfileOptions_TraceOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfileOptions_TraceOptions& operator=(ProfileOptions_TraceOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProfileOptions_TraceOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProfileOptions_TraceOptions* internal_default_instance() {
    return reinterpret_cast<const ProfileOptions_TraceOptions*>(
        &_ProfileOptions_TraceOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ProfileOptions_TraceOptions& a, ProfileOptions_TraceOptions& b) { a.Swap(&b); }
  inline void Swap(ProfileOptions_TraceOptions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfileOptions_TraceOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProfileOptions_TraceOptions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ProfileOptions_TraceOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProfileOptions_TraceOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProfileOptions_TraceOptions& from) { ProfileOptions_TraceOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProfileOptions_TraceOptions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.ProfileOptions.TraceOptions"; }

 protected:
  explicit ProfileOptions_TraceOptions(::google::protobuf::Arena* arena);
  ProfileOptions_TraceOptions(::google::protobuf::Arena* arena, const ProfileOptions_TraceOptions& from);
  ProfileOptions_TraceOptions(::google::protobuf::Arena* arena, ProfileOptions_TraceOptions&& from) noexcept
      : ProfileOptions_TraceOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHostTracemeFilterMaskFieldNumber = 1,
  };
  // uint64 host_traceme_filter_mask = 1;
  void clear_host_traceme_filter_mask() ;
  ::uint64_t host_traceme_filter_mask() const;
  void set_host_traceme_filter_mask(::uint64_t value);

  private:
  ::uint64_t _internal_host_traceme_filter_mask() const;
  void _internal_set_host_traceme_filter_mask(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ProfileOptions.TraceOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProfileOptions_TraceOptions& from_msg);
    ::uint64_t host_traceme_filter_mask_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ProfileOptions_AdvancedConfigValue final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ProfileOptions.AdvancedConfigValue) */ {
 public:
  inline ProfileOptions_AdvancedConfigValue() : ProfileOptions_AdvancedConfigValue(nullptr) {}
  ~ProfileOptions_AdvancedConfigValue() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProfileOptions_AdvancedConfigValue(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProfileOptions_AdvancedConfigValue(const ProfileOptions_AdvancedConfigValue& from) : ProfileOptions_AdvancedConfigValue(nullptr, from) {}
  inline ProfileOptions_AdvancedConfigValue(ProfileOptions_AdvancedConfigValue&& from) noexcept
      : ProfileOptions_AdvancedConfigValue(nullptr, std::move(from)) {}
  inline ProfileOptions_AdvancedConfigValue& operator=(const ProfileOptions_AdvancedConfigValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfileOptions_AdvancedConfigValue& operator=(ProfileOptions_AdvancedConfigValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProfileOptions_AdvancedConfigValue& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kStringValue = 1,
    kBoolValue = 2,
    kInt64Value = 3,
    VALUE_NOT_SET = 0,
  };
  static inline const ProfileOptions_AdvancedConfigValue* internal_default_instance() {
    return reinterpret_cast<const ProfileOptions_AdvancedConfigValue*>(
        &_ProfileOptions_AdvancedConfigValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ProfileOptions_AdvancedConfigValue& a, ProfileOptions_AdvancedConfigValue& b) { a.Swap(&b); }
  inline void Swap(ProfileOptions_AdvancedConfigValue* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfileOptions_AdvancedConfigValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProfileOptions_AdvancedConfigValue* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ProfileOptions_AdvancedConfigValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProfileOptions_AdvancedConfigValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProfileOptions_AdvancedConfigValue& from) { ProfileOptions_AdvancedConfigValue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProfileOptions_AdvancedConfigValue* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.ProfileOptions.AdvancedConfigValue"; }

 protected:
  explicit ProfileOptions_AdvancedConfigValue(::google::protobuf::Arena* arena);
  ProfileOptions_AdvancedConfigValue(::google::protobuf::Arena* arena, const ProfileOptions_AdvancedConfigValue& from);
  ProfileOptions_AdvancedConfigValue(::google::protobuf::Arena* arena, ProfileOptions_AdvancedConfigValue&& from) noexcept
      : ProfileOptions_AdvancedConfigValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStringValueFieldNumber = 1,
    kBoolValueFieldNumber = 2,
    kInt64ValueFieldNumber = 3,
  };
  // string string_value = 1;
  bool has_string_value() const;
  void clear_string_value() ;
  const std::string& string_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_string_value(Arg_&& arg, Args_... args);
  std::string* mutable_string_value();
  PROTOBUF_NODISCARD std::string* release_string_value();
  void set_allocated_string_value(std::string* value);

  private:
  const std::string& _internal_string_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_value(
      const std::string& value);
  std::string* _internal_mutable_string_value();

  public:
  // bool bool_value = 2;
  bool has_bool_value() const;
  void clear_bool_value() ;
  bool bool_value() const;
  void set_bool_value(bool value);

  private:
  bool _internal_bool_value() const;
  void _internal_set_bool_value(bool value);

  public:
  // int64 int64_value = 3;
  bool has_int64_value() const;
  void clear_int64_value() ;
  ::int64_t int64_value() const;
  void set_int64_value(::int64_t value);

  private:
  ::int64_t _internal_int64_value() const;
  void _internal_set_int64_value(::int64_t value);

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.ProfileOptions.AdvancedConfigValue)
 private:
  class _Internal;
  void set_has_string_value();
  void set_has_bool_value();
  void set_has_int64_value();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      66, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProfileOptions_AdvancedConfigValue& from_msg);
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr string_value_;
      bool bool_value_;
      ::int64_t int64_value_;
    } value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto;
};
// -------------------------------------------------------------------

class ProfileOptions_AdvancedConfigurationEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ProfileOptions_AdvancedConfigurationEntry_DoNotUse, std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ProfileOptions_AdvancedConfigurationEntry_DoNotUse, std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ProfileOptions_AdvancedConfigurationEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProfileOptions_AdvancedConfigurationEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ProfileOptions_AdvancedConfigurationEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ProfileOptions_AdvancedConfigurationEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ProfileOptions_AdvancedConfigurationEntry_DoNotUse*>(
        &_ProfileOptions_AdvancedConfigurationEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      64, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ProfileOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ProfileOptions) */ {
 public:
  inline ProfileOptions() : ProfileOptions(nullptr) {}
  ~ProfileOptions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProfileOptions(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProfileOptions(const ProfileOptions& from) : ProfileOptions(nullptr, from) {}
  inline ProfileOptions(ProfileOptions&& from) noexcept
      : ProfileOptions(nullptr, std::move(from)) {}
  inline ProfileOptions& operator=(const ProfileOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProfileOptions& operator=(ProfileOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProfileOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProfileOptions* internal_default_instance() {
    return reinterpret_cast<const ProfileOptions*>(
        &_ProfileOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ProfileOptions& a, ProfileOptions& b) { a.Swap(&b); }
  inline void Swap(ProfileOptions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProfileOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProfileOptions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ProfileOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProfileOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProfileOptions& from) { ProfileOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProfileOptions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.ProfileOptions"; }

 protected:
  explicit ProfileOptions(::google::protobuf::Arena* arena);
  ProfileOptions(::google::protobuf::Arena* arena, const ProfileOptions& from);
  ProfileOptions(::google::protobuf::Arena* arena, ProfileOptions&& from) noexcept
      : ProfileOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TraceOptions = ProfileOptions_TraceOptions;
  using AdvancedConfigValue = ProfileOptions_AdvancedConfigValue;
  using DeviceType = ProfileOptions_DeviceType;
  static constexpr DeviceType UNSPECIFIED = ProfileOptions_DeviceType_UNSPECIFIED;
  static constexpr DeviceType CPU = ProfileOptions_DeviceType_CPU;
  static constexpr DeviceType GPU = ProfileOptions_DeviceType_GPU;
  static constexpr DeviceType TPU = ProfileOptions_DeviceType_TPU;
  static constexpr DeviceType PLUGGABLE_DEVICE = ProfileOptions_DeviceType_PLUGGABLE_DEVICE;
  static inline bool DeviceType_IsValid(int value) {
    return ProfileOptions_DeviceType_IsValid(value);
  }
  static constexpr DeviceType DeviceType_MIN = ProfileOptions_DeviceType_DeviceType_MIN;
  static constexpr DeviceType DeviceType_MAX = ProfileOptions_DeviceType_DeviceType_MAX;
  static constexpr int DeviceType_ARRAYSIZE = ProfileOptions_DeviceType_DeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* DeviceType_descriptor() {
    return ProfileOptions_DeviceType_descriptor();
  }
  template <typename T>
  static inline const std::string& DeviceType_Name(T value) {
    return ProfileOptions_DeviceType_Name(value);
  }
  static inline bool DeviceType_Parse(absl::string_view name, DeviceType* value) {
    return ProfileOptions_DeviceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAdvancedConfigurationFieldNumber = 12,
    kRepositoryPathFieldNumber = 10,
    kTraceOptionsFieldNumber = 11,
    kHostTracerLevelFieldNumber = 2,
    kDeviceTracerLevelFieldNumber = 3,
    kPythonTracerLevelFieldNumber = 4,
    kVersionFieldNumber = 5,
    kDeviceTypeFieldNumber = 6,
    kIncludeDatasetOpsFieldNumber = 1,
    kEnableHloProtoFieldNumber = 7,
    kRaiseErrorOnStartFailureFieldNumber = 13,
    kStartTimestampNsFieldNumber = 8,
    kDurationMsFieldNumber = 9,
  };
  // map<string, .tensorflow.ProfileOptions.AdvancedConfigValue> advanced_configuration = 12;
  int advanced_configuration_size() const;
  private:
  int _internal_advanced_configuration_size() const;

  public:
  void clear_advanced_configuration() ;
  const ::google::protobuf::Map<std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue>& advanced_configuration() const;
  ::google::protobuf::Map<std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue>* mutable_advanced_configuration();

  private:
  const ::google::protobuf::Map<std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue>& _internal_advanced_configuration() const;
  ::google::protobuf::Map<std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue>* _internal_mutable_advanced_configuration();

  public:
  // string repository_path = 10;
  void clear_repository_path() ;
  const std::string& repository_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_repository_path(Arg_&& arg, Args_... args);
  std::string* mutable_repository_path();
  PROTOBUF_NODISCARD std::string* release_repository_path();
  void set_allocated_repository_path(std::string* value);

  private:
  const std::string& _internal_repository_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_repository_path(
      const std::string& value);
  std::string* _internal_mutable_repository_path();

  public:
  // .tensorflow.ProfileOptions.TraceOptions trace_options = 11;
  bool has_trace_options() const;
  void clear_trace_options() ;
  const ::tensorflow::ProfileOptions_TraceOptions& trace_options() const;
  PROTOBUF_NODISCARD ::tensorflow::ProfileOptions_TraceOptions* release_trace_options();
  ::tensorflow::ProfileOptions_TraceOptions* mutable_trace_options();
  void set_allocated_trace_options(::tensorflow::ProfileOptions_TraceOptions* value);
  void unsafe_arena_set_allocated_trace_options(::tensorflow::ProfileOptions_TraceOptions* value);
  ::tensorflow::ProfileOptions_TraceOptions* unsafe_arena_release_trace_options();

  private:
  const ::tensorflow::ProfileOptions_TraceOptions& _internal_trace_options() const;
  ::tensorflow::ProfileOptions_TraceOptions* _internal_mutable_trace_options();

  public:
  // uint32 host_tracer_level = 2;
  void clear_host_tracer_level() ;
  ::uint32_t host_tracer_level() const;
  void set_host_tracer_level(::uint32_t value);

  private:
  ::uint32_t _internal_host_tracer_level() const;
  void _internal_set_host_tracer_level(::uint32_t value);

  public:
  // uint32 device_tracer_level = 3;
  void clear_device_tracer_level() ;
  ::uint32_t device_tracer_level() const;
  void set_device_tracer_level(::uint32_t value);

  private:
  ::uint32_t _internal_device_tracer_level() const;
  void _internal_set_device_tracer_level(::uint32_t value);

  public:
  // uint32 python_tracer_level = 4;
  void clear_python_tracer_level() ;
  ::uint32_t python_tracer_level() const;
  void set_python_tracer_level(::uint32_t value);

  private:
  ::uint32_t _internal_python_tracer_level() const;
  void _internal_set_python_tracer_level(::uint32_t value);

  public:
  // uint32 version = 5;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // .tensorflow.ProfileOptions.DeviceType device_type = 6;
  void clear_device_type() ;
  ::tensorflow::ProfileOptions_DeviceType device_type() const;
  void set_device_type(::tensorflow::ProfileOptions_DeviceType value);

  private:
  ::tensorflow::ProfileOptions_DeviceType _internal_device_type() const;
  void _internal_set_device_type(::tensorflow::ProfileOptions_DeviceType value);

  public:
  // bool include_dataset_ops = 1;
  void clear_include_dataset_ops() ;
  bool include_dataset_ops() const;
  void set_include_dataset_ops(bool value);

  private:
  bool _internal_include_dataset_ops() const;
  void _internal_set_include_dataset_ops(bool value);

  public:
  // bool enable_hlo_proto = 7;
  void clear_enable_hlo_proto() ;
  bool enable_hlo_proto() const;
  void set_enable_hlo_proto(bool value);

  private:
  bool _internal_enable_hlo_proto() const;
  void _internal_set_enable_hlo_proto(bool value);

  public:
  // bool raise_error_on_start_failure = 13;
  void clear_raise_error_on_start_failure() ;
  bool raise_error_on_start_failure() const;
  void set_raise_error_on_start_failure(bool value);

  private:
  bool _internal_raise_error_on_start_failure() const;
  void _internal_set_raise_error_on_start_failure(bool value);

  public:
  // uint64 start_timestamp_ns = 8;
  void clear_start_timestamp_ns() ;
  ::uint64_t start_timestamp_ns() const;
  void set_start_timestamp_ns(::uint64_t value);

  private:
  ::uint64_t _internal_start_timestamp_ns() const;
  void _internal_set_start_timestamp_ns(::uint64_t value);

  public:
  // uint64 duration_ms = 9;
  void clear_duration_ms() ;
  ::uint64_t duration_ms() const;
  void set_duration_ms(::uint64_t value);

  private:
  ::uint64_t _internal_duration_ms() const;
  void _internal_set_duration_ms(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ProfileOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 3,
      79, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProfileOptions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<ProfileOptions_AdvancedConfigurationEntry_DoNotUse, std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        advanced_configuration_;
    ::google::protobuf::internal::ArenaStringPtr repository_path_;
    ::tensorflow::ProfileOptions_TraceOptions* trace_options_;
    ::uint32_t host_tracer_level_;
    ::uint32_t device_tracer_level_;
    ::uint32_t python_tracer_level_;
    ::uint32_t version_;
    int device_type_;
    bool include_dataset_ops_;
    bool enable_hlo_proto_;
    bool raise_error_on_start_failure_;
    ::uint64_t start_timestamp_ns_;
    ::uint64_t duration_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RemoteProfilerSessionManagerOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RemoteProfilerSessionManagerOptions) */ {
 public:
  inline RemoteProfilerSessionManagerOptions() : RemoteProfilerSessionManagerOptions(nullptr) {}
  ~RemoteProfilerSessionManagerOptions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoteProfilerSessionManagerOptions(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoteProfilerSessionManagerOptions(const RemoteProfilerSessionManagerOptions& from) : RemoteProfilerSessionManagerOptions(nullptr, from) {}
  inline RemoteProfilerSessionManagerOptions(RemoteProfilerSessionManagerOptions&& from) noexcept
      : RemoteProfilerSessionManagerOptions(nullptr, std::move(from)) {}
  inline RemoteProfilerSessionManagerOptions& operator=(const RemoteProfilerSessionManagerOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoteProfilerSessionManagerOptions& operator=(RemoteProfilerSessionManagerOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoteProfilerSessionManagerOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoteProfilerSessionManagerOptions* internal_default_instance() {
    return reinterpret_cast<const RemoteProfilerSessionManagerOptions*>(
        &_RemoteProfilerSessionManagerOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RemoteProfilerSessionManagerOptions& a, RemoteProfilerSessionManagerOptions& b) { a.Swap(&b); }
  inline void Swap(RemoteProfilerSessionManagerOptions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoteProfilerSessionManagerOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoteProfilerSessionManagerOptions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RemoteProfilerSessionManagerOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoteProfilerSessionManagerOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoteProfilerSessionManagerOptions& from) { RemoteProfilerSessionManagerOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoteProfilerSessionManagerOptions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tensorflow.RemoteProfilerSessionManagerOptions"; }

 protected:
  explicit RemoteProfilerSessionManagerOptions(::google::protobuf::Arena* arena);
  RemoteProfilerSessionManagerOptions(::google::protobuf::Arena* arena, const RemoteProfilerSessionManagerOptions& from);
  RemoteProfilerSessionManagerOptions(::google::protobuf::Arena* arena, RemoteProfilerSessionManagerOptions&& from) noexcept
      : RemoteProfilerSessionManagerOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceAddressesFieldNumber = 2,
    kProfilerOptionsFieldNumber = 1,
    kSessionCreationTimestampNsFieldNumber = 3,
    kMaxSessionDurationMsFieldNumber = 4,
    kDelayMsFieldNumber = 5,
  };
  // repeated string service_addresses = 2;
  int service_addresses_size() const;
  private:
  int _internal_service_addresses_size() const;

  public:
  void clear_service_addresses() ;
  const std::string& service_addresses(int index) const;
  std::string* mutable_service_addresses(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_service_addresses(int index, Arg_&& value, Args_... args);
  std::string* add_service_addresses();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_service_addresses(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& service_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_service_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_service_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_service_addresses();

  public:
  // .tensorflow.ProfileOptions profiler_options = 1;
  bool has_profiler_options() const;
  void clear_profiler_options() ;
  const ::tensorflow::ProfileOptions& profiler_options() const;
  PROTOBUF_NODISCARD ::tensorflow::ProfileOptions* release_profiler_options();
  ::tensorflow::ProfileOptions* mutable_profiler_options();
  void set_allocated_profiler_options(::tensorflow::ProfileOptions* value);
  void unsafe_arena_set_allocated_profiler_options(::tensorflow::ProfileOptions* value);
  ::tensorflow::ProfileOptions* unsafe_arena_release_profiler_options();

  private:
  const ::tensorflow::ProfileOptions& _internal_profiler_options() const;
  ::tensorflow::ProfileOptions* _internal_mutable_profiler_options();

  public:
  // uint64 session_creation_timestamp_ns = 3;
  void clear_session_creation_timestamp_ns() ;
  ::uint64_t session_creation_timestamp_ns() const;
  void set_session_creation_timestamp_ns(::uint64_t value);

  private:
  ::uint64_t _internal_session_creation_timestamp_ns() const;
  void _internal_set_session_creation_timestamp_ns(::uint64_t value);

  public:
  // uint64 max_session_duration_ms = 4;
  void clear_max_session_duration_ms() ;
  ::uint64_t max_session_duration_ms() const;
  void set_max_session_duration_ms(::uint64_t value);

  private:
  ::uint64_t _internal_max_session_duration_ms() const;
  void _internal_set_max_session_duration_ms(::uint64_t value);

  public:
  // uint64 delay_ms = 5;
  void clear_delay_ms() ;
  ::uint64_t delay_ms() const;
  void set_delay_ms(::uint64_t value);

  private:
  ::uint64_t _internal_delay_ms() const;
  void _internal_set_delay_ms(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RemoteProfilerSessionManagerOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      72, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoteProfilerSessionManagerOptions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> service_addresses_;
    ::tensorflow::ProfileOptions* profiler_options_;
    ::uint64_t session_creation_timestamp_ns_;
    ::uint64_t max_session_duration_ms_;
    ::uint64_t delay_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ProfileOptions_TraceOptions

// uint64 host_traceme_filter_mask = 1;
inline void ProfileOptions_TraceOptions::clear_host_traceme_filter_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_traceme_filter_mask_ = ::uint64_t{0u};
}
inline ::uint64_t ProfileOptions_TraceOptions::host_traceme_filter_mask() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.TraceOptions.host_traceme_filter_mask)
  return _internal_host_traceme_filter_mask();
}
inline void ProfileOptions_TraceOptions::set_host_traceme_filter_mask(::uint64_t value) {
  _internal_set_host_traceme_filter_mask(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.TraceOptions.host_traceme_filter_mask)
}
inline ::uint64_t ProfileOptions_TraceOptions::_internal_host_traceme_filter_mask() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_traceme_filter_mask_;
}
inline void ProfileOptions_TraceOptions::_internal_set_host_traceme_filter_mask(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_traceme_filter_mask_ = value;
}

// -------------------------------------------------------------------

// ProfileOptions_AdvancedConfigValue

// string string_value = 1;
inline bool ProfileOptions_AdvancedConfigValue::has_string_value() const {
  return value_case() == kStringValue;
}
inline void ProfileOptions_AdvancedConfigValue::set_has_string_value() {
  _impl_._oneof_case_[0] = kStringValue;
}
inline void ProfileOptions_AdvancedConfigValue::clear_string_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kStringValue) {
    _impl_.value_.string_value_.Destroy();
    clear_has_value();
  }
}
inline const std::string& ProfileOptions_AdvancedConfigValue::string_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.AdvancedConfigValue.string_value)
  return _internal_string_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileOptions_AdvancedConfigValue::set_string_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStringValue) {
    clear_value();

    set_has_string_value();
    _impl_.value_.string_value_.InitDefault();
  }
  _impl_.value_.string_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.AdvancedConfigValue.string_value)
}
inline std::string* ProfileOptions_AdvancedConfigValue::mutable_string_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_string_value();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileOptions.AdvancedConfigValue.string_value)
  return _s;
}
inline const std::string& ProfileOptions_AdvancedConfigValue::_internal_string_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kStringValue) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.string_value_.Get();
}
inline void ProfileOptions_AdvancedConfigValue::_internal_set_string_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStringValue) {
    clear_value();

    set_has_string_value();
    _impl_.value_.string_value_.InitDefault();
  }
  _impl_.value_.string_value_.Set(value, GetArena());
}
inline std::string* ProfileOptions_AdvancedConfigValue::_internal_mutable_string_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStringValue) {
    clear_value();

    set_has_string_value();
    _impl_.value_.string_value_.InitDefault();
  }
  return _impl_.value_.string_value_.Mutable( GetArena());
}
inline std::string* ProfileOptions_AdvancedConfigValue::release_string_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileOptions.AdvancedConfigValue.string_value)
  if (value_case() != kStringValue) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.string_value_.Release();
}
inline void ProfileOptions_AdvancedConfigValue::set_allocated_string_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_string_value();
    _impl_.value_.string_value_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileOptions.AdvancedConfigValue.string_value)
}

// bool bool_value = 2;
inline bool ProfileOptions_AdvancedConfigValue::has_bool_value() const {
  return value_case() == kBoolValue;
}
inline void ProfileOptions_AdvancedConfigValue::set_has_bool_value() {
  _impl_._oneof_case_[0] = kBoolValue;
}
inline void ProfileOptions_AdvancedConfigValue::clear_bool_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kBoolValue) {
    _impl_.value_.bool_value_ = false;
    clear_has_value();
  }
}
inline bool ProfileOptions_AdvancedConfigValue::bool_value() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.AdvancedConfigValue.bool_value)
  return _internal_bool_value();
}
inline void ProfileOptions_AdvancedConfigValue::set_bool_value(bool value) {
  if (value_case() != kBoolValue) {
    clear_value();
    set_has_bool_value();
  }
  _impl_.value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.AdvancedConfigValue.bool_value)
}
inline bool ProfileOptions_AdvancedConfigValue::_internal_bool_value() const {
  if (value_case() == kBoolValue) {
    return _impl_.value_.bool_value_;
  }
  return false;
}

// int64 int64_value = 3;
inline bool ProfileOptions_AdvancedConfigValue::has_int64_value() const {
  return value_case() == kInt64Value;
}
inline void ProfileOptions_AdvancedConfigValue::set_has_int64_value() {
  _impl_._oneof_case_[0] = kInt64Value;
}
inline void ProfileOptions_AdvancedConfigValue::clear_int64_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kInt64Value) {
    _impl_.value_.int64_value_ = ::int64_t{0};
    clear_has_value();
  }
}
inline ::int64_t ProfileOptions_AdvancedConfigValue::int64_value() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.AdvancedConfigValue.int64_value)
  return _internal_int64_value();
}
inline void ProfileOptions_AdvancedConfigValue::set_int64_value(::int64_t value) {
  if (value_case() != kInt64Value) {
    clear_value();
    set_has_int64_value();
  }
  _impl_.value_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.AdvancedConfigValue.int64_value)
}
inline ::int64_t ProfileOptions_AdvancedConfigValue::_internal_int64_value() const {
  if (value_case() == kInt64Value) {
    return _impl_.value_.int64_value_;
  }
  return ::int64_t{0};
}

inline bool ProfileOptions_AdvancedConfigValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void ProfileOptions_AdvancedConfigValue::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline ProfileOptions_AdvancedConfigValue::ValueCase ProfileOptions_AdvancedConfigValue::value_case() const {
  return ProfileOptions_AdvancedConfigValue::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ProfileOptions

// uint32 version = 5;
inline void ProfileOptions::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
}
inline ::uint32_t ProfileOptions::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.version)
  return _internal_version();
}
inline void ProfileOptions::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.version)
}
inline ::uint32_t ProfileOptions::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void ProfileOptions::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// .tensorflow.ProfileOptions.DeviceType device_type = 6;
inline void ProfileOptions::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_ = 0;
}
inline ::tensorflow::ProfileOptions_DeviceType ProfileOptions::device_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.device_type)
  return _internal_device_type();
}
inline void ProfileOptions::set_device_type(::tensorflow::ProfileOptions_DeviceType value) {
  _internal_set_device_type(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.device_type)
}
inline ::tensorflow::ProfileOptions_DeviceType ProfileOptions::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::ProfileOptions_DeviceType>(_impl_.device_type_);
}
inline void ProfileOptions::_internal_set_device_type(::tensorflow::ProfileOptions_DeviceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_ = value;
}

// bool include_dataset_ops = 1;
inline void ProfileOptions::clear_include_dataset_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_dataset_ops_ = false;
}
inline bool ProfileOptions::include_dataset_ops() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.include_dataset_ops)
  return _internal_include_dataset_ops();
}
inline void ProfileOptions::set_include_dataset_ops(bool value) {
  _internal_set_include_dataset_ops(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.include_dataset_ops)
}
inline bool ProfileOptions::_internal_include_dataset_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_dataset_ops_;
}
inline void ProfileOptions::_internal_set_include_dataset_ops(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_dataset_ops_ = value;
}

// uint32 host_tracer_level = 2;
inline void ProfileOptions::clear_host_tracer_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_tracer_level_ = 0u;
}
inline ::uint32_t ProfileOptions::host_tracer_level() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.host_tracer_level)
  return _internal_host_tracer_level();
}
inline void ProfileOptions::set_host_tracer_level(::uint32_t value) {
  _internal_set_host_tracer_level(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.host_tracer_level)
}
inline ::uint32_t ProfileOptions::_internal_host_tracer_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_tracer_level_;
}
inline void ProfileOptions::_internal_set_host_tracer_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_tracer_level_ = value;
}

// uint32 device_tracer_level = 3;
inline void ProfileOptions::clear_device_tracer_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_tracer_level_ = 0u;
}
inline ::uint32_t ProfileOptions::device_tracer_level() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.device_tracer_level)
  return _internal_device_tracer_level();
}
inline void ProfileOptions::set_device_tracer_level(::uint32_t value) {
  _internal_set_device_tracer_level(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.device_tracer_level)
}
inline ::uint32_t ProfileOptions::_internal_device_tracer_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_tracer_level_;
}
inline void ProfileOptions::_internal_set_device_tracer_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_tracer_level_ = value;
}

// uint32 python_tracer_level = 4;
inline void ProfileOptions::clear_python_tracer_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.python_tracer_level_ = 0u;
}
inline ::uint32_t ProfileOptions::python_tracer_level() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.python_tracer_level)
  return _internal_python_tracer_level();
}
inline void ProfileOptions::set_python_tracer_level(::uint32_t value) {
  _internal_set_python_tracer_level(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.python_tracer_level)
}
inline ::uint32_t ProfileOptions::_internal_python_tracer_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.python_tracer_level_;
}
inline void ProfileOptions::_internal_set_python_tracer_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.python_tracer_level_ = value;
}

// bool enable_hlo_proto = 7;
inline void ProfileOptions::clear_enable_hlo_proto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_hlo_proto_ = false;
}
inline bool ProfileOptions::enable_hlo_proto() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.enable_hlo_proto)
  return _internal_enable_hlo_proto();
}
inline void ProfileOptions::set_enable_hlo_proto(bool value) {
  _internal_set_enable_hlo_proto(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.enable_hlo_proto)
}
inline bool ProfileOptions::_internal_enable_hlo_proto() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_hlo_proto_;
}
inline void ProfileOptions::_internal_set_enable_hlo_proto(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_hlo_proto_ = value;
}

// uint64 start_timestamp_ns = 8;
inline void ProfileOptions::clear_start_timestamp_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_timestamp_ns_ = ::uint64_t{0u};
}
inline ::uint64_t ProfileOptions::start_timestamp_ns() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.start_timestamp_ns)
  return _internal_start_timestamp_ns();
}
inline void ProfileOptions::set_start_timestamp_ns(::uint64_t value) {
  _internal_set_start_timestamp_ns(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.start_timestamp_ns)
}
inline ::uint64_t ProfileOptions::_internal_start_timestamp_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_timestamp_ns_;
}
inline void ProfileOptions::_internal_set_start_timestamp_ns(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_timestamp_ns_ = value;
}

// uint64 duration_ms = 9;
inline void ProfileOptions::clear_duration_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ms_ = ::uint64_t{0u};
}
inline ::uint64_t ProfileOptions::duration_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.duration_ms)
  return _internal_duration_ms();
}
inline void ProfileOptions::set_duration_ms(::uint64_t value) {
  _internal_set_duration_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.duration_ms)
}
inline ::uint64_t ProfileOptions::_internal_duration_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_ms_;
}
inline void ProfileOptions::_internal_set_duration_ms(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ms_ = value;
}

// string repository_path = 10;
inline void ProfileOptions::clear_repository_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_path_.ClearToEmpty();
}
inline const std::string& ProfileOptions::repository_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.repository_path)
  return _internal_repository_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProfileOptions::set_repository_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.repository_path)
}
inline std::string* ProfileOptions::mutable_repository_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_repository_path();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileOptions.repository_path)
  return _s;
}
inline const std::string& ProfileOptions::_internal_repository_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.repository_path_.Get();
}
inline void ProfileOptions::_internal_set_repository_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_path_.Set(value, GetArena());
}
inline std::string* ProfileOptions::_internal_mutable_repository_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.repository_path_.Mutable( GetArena());
}
inline std::string* ProfileOptions::release_repository_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileOptions.repository_path)
  return _impl_.repository_path_.Release();
}
inline void ProfileOptions::set_allocated_repository_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.repository_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.repository_path_.IsDefault()) {
          _impl_.repository_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileOptions.repository_path)
}

// .tensorflow.ProfileOptions.TraceOptions trace_options = 11;
inline bool ProfileOptions::has_trace_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trace_options_ != nullptr);
  return value;
}
inline void ProfileOptions::clear_trace_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trace_options_ != nullptr) _impl_.trace_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::ProfileOptions_TraceOptions& ProfileOptions::_internal_trace_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ProfileOptions_TraceOptions* p = _impl_.trace_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ProfileOptions_TraceOptions&>(::tensorflow::_ProfileOptions_TraceOptions_default_instance_);
}
inline const ::tensorflow::ProfileOptions_TraceOptions& ProfileOptions::trace_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.trace_options)
  return _internal_trace_options();
}
inline void ProfileOptions::unsafe_arena_set_allocated_trace_options(::tensorflow::ProfileOptions_TraceOptions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trace_options_);
  }
  _impl_.trace_options_ = reinterpret_cast<::tensorflow::ProfileOptions_TraceOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.ProfileOptions.trace_options)
}
inline ::tensorflow::ProfileOptions_TraceOptions* ProfileOptions::release_trace_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ProfileOptions_TraceOptions* released = _impl_.trace_options_;
  _impl_.trace_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::ProfileOptions_TraceOptions* ProfileOptions::unsafe_arena_release_trace_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.ProfileOptions.trace_options)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ProfileOptions_TraceOptions* temp = _impl_.trace_options_;
  _impl_.trace_options_ = nullptr;
  return temp;
}
inline ::tensorflow::ProfileOptions_TraceOptions* ProfileOptions::_internal_mutable_trace_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trace_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ProfileOptions_TraceOptions>(GetArena());
    _impl_.trace_options_ = reinterpret_cast<::tensorflow::ProfileOptions_TraceOptions*>(p);
  }
  return _impl_.trace_options_;
}
inline ::tensorflow::ProfileOptions_TraceOptions* ProfileOptions::mutable_trace_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::ProfileOptions_TraceOptions* _msg = _internal_mutable_trace_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.ProfileOptions.trace_options)
  return _msg;
}
inline void ProfileOptions::set_allocated_trace_options(::tensorflow::ProfileOptions_TraceOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.trace_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.trace_options_ = reinterpret_cast<::tensorflow::ProfileOptions_TraceOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ProfileOptions.trace_options)
}

// map<string, .tensorflow.ProfileOptions.AdvancedConfigValue> advanced_configuration = 12;
inline int ProfileOptions::_internal_advanced_configuration_size() const {
  return _internal_advanced_configuration().size();
}
inline int ProfileOptions::advanced_configuration_size() const {
  return _internal_advanced_configuration_size();
}
inline void ProfileOptions::clear_advanced_configuration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advanced_configuration_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue>& ProfileOptions::_internal_advanced_configuration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.advanced_configuration_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue>& ProfileOptions::advanced_configuration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.ProfileOptions.advanced_configuration)
  return _internal_advanced_configuration();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue>* ProfileOptions::_internal_mutable_advanced_configuration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.advanced_configuration_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::ProfileOptions_AdvancedConfigValue>* ProfileOptions::mutable_advanced_configuration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.ProfileOptions.advanced_configuration)
  return _internal_mutable_advanced_configuration();
}

// bool raise_error_on_start_failure = 13;
inline void ProfileOptions::clear_raise_error_on_start_failure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raise_error_on_start_failure_ = false;
}
inline bool ProfileOptions::raise_error_on_start_failure() const {
  // @@protoc_insertion_point(field_get:tensorflow.ProfileOptions.raise_error_on_start_failure)
  return _internal_raise_error_on_start_failure();
}
inline void ProfileOptions::set_raise_error_on_start_failure(bool value) {
  _internal_set_raise_error_on_start_failure(value);
  // @@protoc_insertion_point(field_set:tensorflow.ProfileOptions.raise_error_on_start_failure)
}
inline bool ProfileOptions::_internal_raise_error_on_start_failure() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raise_error_on_start_failure_;
}
inline void ProfileOptions::_internal_set_raise_error_on_start_failure(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raise_error_on_start_failure_ = value;
}

// -------------------------------------------------------------------

// RemoteProfilerSessionManagerOptions

// .tensorflow.ProfileOptions profiler_options = 1;
inline bool RemoteProfilerSessionManagerOptions::has_profiler_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.profiler_options_ != nullptr);
  return value;
}
inline void RemoteProfilerSessionManagerOptions::clear_profiler_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.profiler_options_ != nullptr) _impl_.profiler_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::ProfileOptions& RemoteProfilerSessionManagerOptions::_internal_profiler_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ProfileOptions* p = _impl_.profiler_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ProfileOptions&>(::tensorflow::_ProfileOptions_default_instance_);
}
inline const ::tensorflow::ProfileOptions& RemoteProfilerSessionManagerOptions::profiler_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.profiler_options)
  return _internal_profiler_options();
}
inline void RemoteProfilerSessionManagerOptions::unsafe_arena_set_allocated_profiler_options(::tensorflow::ProfileOptions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.profiler_options_);
  }
  _impl_.profiler_options_ = reinterpret_cast<::tensorflow::ProfileOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RemoteProfilerSessionManagerOptions.profiler_options)
}
inline ::tensorflow::ProfileOptions* RemoteProfilerSessionManagerOptions::release_profiler_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ProfileOptions* released = _impl_.profiler_options_;
  _impl_.profiler_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tensorflow::ProfileOptions* RemoteProfilerSessionManagerOptions::unsafe_arena_release_profiler_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RemoteProfilerSessionManagerOptions.profiler_options)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::ProfileOptions* temp = _impl_.profiler_options_;
  _impl_.profiler_options_ = nullptr;
  return temp;
}
inline ::tensorflow::ProfileOptions* RemoteProfilerSessionManagerOptions::_internal_mutable_profiler_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.profiler_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ProfileOptions>(GetArena());
    _impl_.profiler_options_ = reinterpret_cast<::tensorflow::ProfileOptions*>(p);
  }
  return _impl_.profiler_options_;
}
inline ::tensorflow::ProfileOptions* RemoteProfilerSessionManagerOptions::mutable_profiler_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::ProfileOptions* _msg = _internal_mutable_profiler_options();
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteProfilerSessionManagerOptions.profiler_options)
  return _msg;
}
inline void RemoteProfilerSessionManagerOptions::set_allocated_profiler_options(::tensorflow::ProfileOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.profiler_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.profiler_options_ = reinterpret_cast<::tensorflow::ProfileOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RemoteProfilerSessionManagerOptions.profiler_options)
}

// repeated string service_addresses = 2;
inline int RemoteProfilerSessionManagerOptions::_internal_service_addresses_size() const {
  return _internal_service_addresses().size();
}
inline int RemoteProfilerSessionManagerOptions::service_addresses_size() const {
  return _internal_service_addresses_size();
}
inline void RemoteProfilerSessionManagerOptions::clear_service_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_addresses_.Clear();
}
inline std::string* RemoteProfilerSessionManagerOptions::add_service_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_service_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  return _s;
}
inline const std::string& RemoteProfilerSessionManagerOptions::service_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  return _internal_service_addresses().Get(index);
}
inline std::string* RemoteProfilerSessionManagerOptions::mutable_service_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  return _internal_mutable_service_addresses()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RemoteProfilerSessionManagerOptions::set_service_addresses(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_service_addresses()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
}
template <typename Arg_, typename... Args_>
inline void RemoteProfilerSessionManagerOptions::add_service_addresses(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_service_addresses(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RemoteProfilerSessionManagerOptions::service_addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  return _internal_service_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RemoteProfilerSessionManagerOptions::mutable_service_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.RemoteProfilerSessionManagerOptions.service_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_service_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RemoteProfilerSessionManagerOptions::_internal_service_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.service_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RemoteProfilerSessionManagerOptions::_internal_mutable_service_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.service_addresses_;
}

// uint64 session_creation_timestamp_ns = 3;
inline void RemoteProfilerSessionManagerOptions::clear_session_creation_timestamp_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_creation_timestamp_ns_ = ::uint64_t{0u};
}
inline ::uint64_t RemoteProfilerSessionManagerOptions::session_creation_timestamp_ns() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.session_creation_timestamp_ns)
  return _internal_session_creation_timestamp_ns();
}
inline void RemoteProfilerSessionManagerOptions::set_session_creation_timestamp_ns(::uint64_t value) {
  _internal_set_session_creation_timestamp_ns(value);
  // @@protoc_insertion_point(field_set:tensorflow.RemoteProfilerSessionManagerOptions.session_creation_timestamp_ns)
}
inline ::uint64_t RemoteProfilerSessionManagerOptions::_internal_session_creation_timestamp_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_creation_timestamp_ns_;
}
inline void RemoteProfilerSessionManagerOptions::_internal_set_session_creation_timestamp_ns(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_creation_timestamp_ns_ = value;
}

// uint64 max_session_duration_ms = 4;
inline void RemoteProfilerSessionManagerOptions::clear_max_session_duration_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_session_duration_ms_ = ::uint64_t{0u};
}
inline ::uint64_t RemoteProfilerSessionManagerOptions::max_session_duration_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.max_session_duration_ms)
  return _internal_max_session_duration_ms();
}
inline void RemoteProfilerSessionManagerOptions::set_max_session_duration_ms(::uint64_t value) {
  _internal_set_max_session_duration_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.RemoteProfilerSessionManagerOptions.max_session_duration_ms)
}
inline ::uint64_t RemoteProfilerSessionManagerOptions::_internal_max_session_duration_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_session_duration_ms_;
}
inline void RemoteProfilerSessionManagerOptions::_internal_set_max_session_duration_ms(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_session_duration_ms_ = value;
}

// uint64 delay_ms = 5;
inline void RemoteProfilerSessionManagerOptions::clear_delay_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_ms_ = ::uint64_t{0u};
}
inline ::uint64_t RemoteProfilerSessionManagerOptions::delay_ms() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteProfilerSessionManagerOptions.delay_ms)
  return _internal_delay_ms();
}
inline void RemoteProfilerSessionManagerOptions::set_delay_ms(::uint64_t value) {
  _internal_set_delay_ms(value);
  // @@protoc_insertion_point(field_set:tensorflow.RemoteProfilerSessionManagerOptions.delay_ms)
}
inline ::uint64_t RemoteProfilerSessionManagerOptions::_internal_delay_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delay_ms_;
}
inline void RemoteProfilerSessionManagerOptions::_internal_set_delay_ms(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_ms_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::ProfileOptions_DeviceType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::ProfileOptions_DeviceType>() {
  return ::tensorflow::ProfileOptions_DeviceType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tsl_2fprofiler_2fprotobuf_2fprofiler_5foptions_2eproto_2epb_2eh
