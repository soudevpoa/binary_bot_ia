// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/pjrt/gpu/gpu_topology.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_xla_2fpjrt_2fgpu_2fgpu_5ftopology_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_xla_2fpjrt_2fgpu_2fgpu_5ftopology_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fpjrt_2fgpu_2fgpu_5ftopology_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fpjrt_2fgpu_2fgpu_5ftopology_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xla_2fpjrt_2fgpu_2fgpu_5ftopology_2eproto;
namespace xla {
class GpuTopologyProto;
struct GpuTopologyProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern GpuTopologyProtoDefaultTypeInternal _GpuTopologyProto_default_instance_;
}  // namespace xla
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xla {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT GpuTopologyProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.GpuTopologyProto) */ {
 public:
  inline GpuTopologyProto() : GpuTopologyProto(nullptr) {}
  ~GpuTopologyProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GpuTopologyProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline GpuTopologyProto(const GpuTopologyProto& from) : GpuTopologyProto(nullptr, from) {}
  inline GpuTopologyProto(GpuTopologyProto&& from) noexcept
      : GpuTopologyProto(nullptr, std::move(from)) {}
  inline GpuTopologyProto& operator=(const GpuTopologyProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpuTopologyProto& operator=(GpuTopologyProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GpuTopologyProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpuTopologyProto* internal_default_instance() {
    return reinterpret_cast<const GpuTopologyProto*>(
        &_GpuTopologyProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GpuTopologyProto& a, GpuTopologyProto& b) { a.Swap(&b); }
  inline void Swap(GpuTopologyProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpuTopologyProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GpuTopologyProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GpuTopologyProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GpuTopologyProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GpuTopologyProto& from) { GpuTopologyProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GpuTopologyProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.GpuTopologyProto"; }

 protected:
  explicit GpuTopologyProto(::google::protobuf::Arena* arena);
  GpuTopologyProto(::google::protobuf::Arena* arena, const GpuTopologyProto& from);
  GpuTopologyProto(::google::protobuf::Arena* arena, GpuTopologyProto&& from) noexcept
      : GpuTopologyProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceIdsFieldNumber = 1,
    kPlatformVersionFieldNumber = 3,
    kNumSlicesFieldNumber = 4,
    kNumHostsPerSliceFieldNumber = 5,
    kNumDevicesPerHostFieldNumber = 6,
  };
  // repeated int32 device_ids = 1;
  int device_ids_size() const;
  private:
  int _internal_device_ids_size() const;

  public:
  void clear_device_ids() ;
  ::int32_t device_ids(int index) const;
  void set_device_ids(int index, ::int32_t value);
  void add_device_ids(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& device_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_device_ids();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_device_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_device_ids();

  public:
  // string platform_version = 3;
  void clear_platform_version() ;
  const std::string& platform_version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_platform_version(Arg_&& arg, Args_... args);
  std::string* mutable_platform_version();
  PROTOBUF_NODISCARD std::string* release_platform_version();
  void set_allocated_platform_version(std::string* value);

  private:
  const std::string& _internal_platform_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_platform_version(
      const std::string& value);
  std::string* _internal_mutable_platform_version();

  public:
  // int32 num_slices = 4;
  void clear_num_slices() ;
  ::int32_t num_slices() const;
  void set_num_slices(::int32_t value);

  private:
  ::int32_t _internal_num_slices() const;
  void _internal_set_num_slices(::int32_t value);

  public:
  // int32 num_hosts_per_slice = 5;
  void clear_num_hosts_per_slice() ;
  ::int32_t num_hosts_per_slice() const;
  void set_num_hosts_per_slice(::int32_t value);

  private:
  ::int32_t _internal_num_hosts_per_slice() const;
  void _internal_set_num_hosts_per_slice(::int32_t value);

  public:
  // int32 num_devices_per_host = 6;
  void clear_num_devices_per_host() ;
  ::int32_t num_devices_per_host() const;
  void set_num_devices_per_host(::int32_t value);

  private:
  ::int32_t _internal_num_devices_per_host() const;
  void _internal_set_num_devices_per_host(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xla.GpuTopologyProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      45, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GpuTopologyProto& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> device_ids_;
    mutable ::google::protobuf::internal::CachedSize _device_ids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr platform_version_;
    ::int32_t num_slices_;
    ::int32_t num_hosts_per_slice_;
    ::int32_t num_devices_per_host_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fpjrt_2fgpu_2fgpu_5ftopology_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GpuTopologyProto

// repeated int32 device_ids = 1;
inline int GpuTopologyProto::_internal_device_ids_size() const {
  return _internal_device_ids().size();
}
inline int GpuTopologyProto::device_ids_size() const {
  return _internal_device_ids_size();
}
inline void GpuTopologyProto::clear_device_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_ids_.Clear();
}
inline ::int32_t GpuTopologyProto::device_ids(int index) const {
  // @@protoc_insertion_point(field_get:xla.GpuTopologyProto.device_ids)
  return _internal_device_ids().Get(index);
}
inline void GpuTopologyProto::set_device_ids(int index, ::int32_t value) {
  _internal_mutable_device_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:xla.GpuTopologyProto.device_ids)
}
inline void GpuTopologyProto::add_device_ids(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_device_ids()->Add(value);
  // @@protoc_insertion_point(field_add:xla.GpuTopologyProto.device_ids)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GpuTopologyProto::device_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.GpuTopologyProto.device_ids)
  return _internal_device_ids();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GpuTopologyProto::mutable_device_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.GpuTopologyProto.device_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_ids();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
GpuTopologyProto::_internal_device_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_ids_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GpuTopologyProto::_internal_mutable_device_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_ids_;
}

// string platform_version = 3;
inline void GpuTopologyProto::clear_platform_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_version_.ClearToEmpty();
}
inline const std::string& GpuTopologyProto::platform_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.GpuTopologyProto.platform_version)
  return _internal_platform_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GpuTopologyProto::set_platform_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.GpuTopologyProto.platform_version)
}
inline std::string* GpuTopologyProto::mutable_platform_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_platform_version();
  // @@protoc_insertion_point(field_mutable:xla.GpuTopologyProto.platform_version)
  return _s;
}
inline const std::string& GpuTopologyProto::_internal_platform_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.platform_version_.Get();
}
inline void GpuTopologyProto::_internal_set_platform_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_version_.Set(value, GetArena());
}
inline std::string* GpuTopologyProto::_internal_mutable_platform_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.platform_version_.Mutable( GetArena());
}
inline std::string* GpuTopologyProto::release_platform_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.GpuTopologyProto.platform_version)
  return _impl_.platform_version_.Release();
}
inline void GpuTopologyProto::set_allocated_platform_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.platform_version_.IsDefault()) {
          _impl_.platform_version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.GpuTopologyProto.platform_version)
}

// int32 num_slices = 4;
inline void GpuTopologyProto::clear_num_slices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_slices_ = 0;
}
inline ::int32_t GpuTopologyProto::num_slices() const {
  // @@protoc_insertion_point(field_get:xla.GpuTopologyProto.num_slices)
  return _internal_num_slices();
}
inline void GpuTopologyProto::set_num_slices(::int32_t value) {
  _internal_set_num_slices(value);
  // @@protoc_insertion_point(field_set:xla.GpuTopologyProto.num_slices)
}
inline ::int32_t GpuTopologyProto::_internal_num_slices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_slices_;
}
inline void GpuTopologyProto::_internal_set_num_slices(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_slices_ = value;
}

// int32 num_hosts_per_slice = 5;
inline void GpuTopologyProto::clear_num_hosts_per_slice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_hosts_per_slice_ = 0;
}
inline ::int32_t GpuTopologyProto::num_hosts_per_slice() const {
  // @@protoc_insertion_point(field_get:xla.GpuTopologyProto.num_hosts_per_slice)
  return _internal_num_hosts_per_slice();
}
inline void GpuTopologyProto::set_num_hosts_per_slice(::int32_t value) {
  _internal_set_num_hosts_per_slice(value);
  // @@protoc_insertion_point(field_set:xla.GpuTopologyProto.num_hosts_per_slice)
}
inline ::int32_t GpuTopologyProto::_internal_num_hosts_per_slice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_hosts_per_slice_;
}
inline void GpuTopologyProto::_internal_set_num_hosts_per_slice(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_hosts_per_slice_ = value;
}

// int32 num_devices_per_host = 6;
inline void GpuTopologyProto::clear_num_devices_per_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_devices_per_host_ = 0;
}
inline ::int32_t GpuTopologyProto::num_devices_per_host() const {
  // @@protoc_insertion_point(field_get:xla.GpuTopologyProto.num_devices_per_host)
  return _internal_num_devices_per_host();
}
inline void GpuTopologyProto::set_num_devices_per_host(::int32_t value) {
  _internal_set_num_devices_per_host(value);
  // @@protoc_insertion_point(field_set:xla.GpuTopologyProto.num_devices_per_host)
}
inline ::int32_t GpuTopologyProto::_internal_num_devices_per_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_devices_per_host_;
}
inline void GpuTopologyProto::_internal_set_num_devices_per_host(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_devices_per_host_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace xla


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_xla_2fpjrt_2fgpu_2fgpu_5ftopology_2eproto_2epb_2eh
