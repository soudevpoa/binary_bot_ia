// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/service/cpu/executable.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fcpu_2fexecutable_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fcpu_2fexecutable_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "xla/backends/cpu/runtime/thunk.pb.h"
#include "xla/service/hlo.pb.h"
#include "xla/xla.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fservice_2fcpu_2fexecutable_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fservice_2fcpu_2fexecutable_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xla_2fservice_2fcpu_2fexecutable_2eproto;
namespace xla {
namespace cpu {
class CompilationResultProto;
struct CompilationResultProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern CompilationResultProtoDefaultTypeInternal _CompilationResultProto_default_instance_;
class ObjFileProto;
struct ObjFileProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern ObjFileProtoDefaultTypeInternal _ObjFileProto_default_instance_;
class SymbolProto;
struct SymbolProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern SymbolProtoDefaultTypeInternal _SymbolProto_default_instance_;
}  // namespace cpu
}  // namespace xla
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xla {
namespace cpu {
enum SymbolProto_FunctionTypeId : int {
  SymbolProto_FunctionTypeId_UNKNOWN = 0,
  SymbolProto_FunctionTypeId_KERNEL = 1,
  SymbolProto_FunctionTypeId_COMPARATOR = 2,
  SymbolProto_FunctionTypeId_SymbolProto_FunctionTypeId_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SymbolProto_FunctionTypeId_SymbolProto_FunctionTypeId_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool SymbolProto_FunctionTypeId_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t SymbolProto_FunctionTypeId_internal_data_[];
constexpr SymbolProto_FunctionTypeId SymbolProto_FunctionTypeId_FunctionTypeId_MIN = static_cast<SymbolProto_FunctionTypeId>(0);
constexpr SymbolProto_FunctionTypeId SymbolProto_FunctionTypeId_FunctionTypeId_MAX = static_cast<SymbolProto_FunctionTypeId>(2);
constexpr int SymbolProto_FunctionTypeId_FunctionTypeId_ARRAYSIZE = 2 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
SymbolProto_FunctionTypeId_descriptor();
template <typename T>
const std::string& SymbolProto_FunctionTypeId_Name(T value) {
  static_assert(std::is_same<T, SymbolProto_FunctionTypeId>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FunctionTypeId_Name().");
  return SymbolProto_FunctionTypeId_Name(static_cast<SymbolProto_FunctionTypeId>(value));
}
template <>
inline const std::string& SymbolProto_FunctionTypeId_Name(SymbolProto_FunctionTypeId value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SymbolProto_FunctionTypeId_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool SymbolProto_FunctionTypeId_Parse(absl::string_view name, SymbolProto_FunctionTypeId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SymbolProto_FunctionTypeId>(
      SymbolProto_FunctionTypeId_descriptor(), name, value);
}
enum CompilationResultProto_ObjFileKind : int {
  CompilationResultProto_ObjFileKind_UNKNOWN = 0,
  CompilationResultProto_ObjFileKind_CLASSIC = 1,
  CompilationResultProto_ObjFileKind_KERNELS = 2,
  CompilationResultProto_ObjFileKind_CompilationResultProto_ObjFileKind_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CompilationResultProto_ObjFileKind_CompilationResultProto_ObjFileKind_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool CompilationResultProto_ObjFileKind_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t CompilationResultProto_ObjFileKind_internal_data_[];
constexpr CompilationResultProto_ObjFileKind CompilationResultProto_ObjFileKind_ObjFileKind_MIN = static_cast<CompilationResultProto_ObjFileKind>(0);
constexpr CompilationResultProto_ObjFileKind CompilationResultProto_ObjFileKind_ObjFileKind_MAX = static_cast<CompilationResultProto_ObjFileKind>(2);
constexpr int CompilationResultProto_ObjFileKind_ObjFileKind_ARRAYSIZE = 2 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
CompilationResultProto_ObjFileKind_descriptor();
template <typename T>
const std::string& CompilationResultProto_ObjFileKind_Name(T value) {
  static_assert(std::is_same<T, CompilationResultProto_ObjFileKind>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ObjFileKind_Name().");
  return CompilationResultProto_ObjFileKind_Name(static_cast<CompilationResultProto_ObjFileKind>(value));
}
template <>
inline const std::string& CompilationResultProto_ObjFileKind_Name(CompilationResultProto_ObjFileKind value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CompilationResultProto_ObjFileKind_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool CompilationResultProto_ObjFileKind_Parse(absl::string_view name, CompilationResultProto_ObjFileKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompilationResultProto_ObjFileKind>(
      CompilationResultProto_ObjFileKind_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT SymbolProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.cpu.SymbolProto) */ {
 public:
  inline SymbolProto() : SymbolProto(nullptr) {}
  ~SymbolProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SymbolProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline SymbolProto(const SymbolProto& from) : SymbolProto(nullptr, from) {}
  inline SymbolProto(SymbolProto&& from) noexcept
      : SymbolProto(nullptr, std::move(from)) {}
  inline SymbolProto& operator=(const SymbolProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbolProto& operator=(SymbolProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbolProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbolProto* internal_default_instance() {
    return reinterpret_cast<const SymbolProto*>(
        &_SymbolProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SymbolProto& a, SymbolProto& b) { a.Swap(&b); }
  inline void Swap(SymbolProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbolProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbolProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SymbolProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbolProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SymbolProto& from) { SymbolProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbolProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.cpu.SymbolProto"; }

 protected:
  explicit SymbolProto(::google::protobuf::Arena* arena);
  SymbolProto(::google::protobuf::Arena* arena, const SymbolProto& from);
  SymbolProto(::google::protobuf::Arena* arena, SymbolProto&& from) noexcept
      : SymbolProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FunctionTypeId = SymbolProto_FunctionTypeId;
  static constexpr FunctionTypeId UNKNOWN = SymbolProto_FunctionTypeId_UNKNOWN;
  static constexpr FunctionTypeId KERNEL = SymbolProto_FunctionTypeId_KERNEL;
  static constexpr FunctionTypeId COMPARATOR = SymbolProto_FunctionTypeId_COMPARATOR;
  static inline bool FunctionTypeId_IsValid(int value) {
    return SymbolProto_FunctionTypeId_IsValid(value);
  }
  static constexpr FunctionTypeId FunctionTypeId_MIN = SymbolProto_FunctionTypeId_FunctionTypeId_MIN;
  static constexpr FunctionTypeId FunctionTypeId_MAX = SymbolProto_FunctionTypeId_FunctionTypeId_MAX;
  static constexpr int FunctionTypeId_ARRAYSIZE = SymbolProto_FunctionTypeId_FunctionTypeId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* FunctionTypeId_descriptor() {
    return SymbolProto_FunctionTypeId_descriptor();
  }
  template <typename T>
  static inline const std::string& FunctionTypeId_Name(T value) {
    return SymbolProto_FunctionTypeId_Name(value);
  }
  static inline bool FunctionTypeId_Parse(absl::string_view name, FunctionTypeId* value) {
    return SymbolProto_FunctionTypeId_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kFunctionTypeIdFieldNumber = 1,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .xla.cpu.SymbolProto.FunctionTypeId function_type_id = 1;
  void clear_function_type_id() ;
  ::xla::cpu::SymbolProto_FunctionTypeId function_type_id() const;
  void set_function_type_id(::xla::cpu::SymbolProto_FunctionTypeId value);

  private:
  ::xla::cpu::SymbolProto_FunctionTypeId _internal_function_type_id() const;
  void _internal_set_function_type_id(::xla::cpu::SymbolProto_FunctionTypeId value);

  public:
  // @@protoc_insertion_point(class_scope:xla.cpu.SymbolProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      32, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SymbolProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    int function_type_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fcpu_2fexecutable_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ObjFileProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.cpu.ObjFileProto) */ {
 public:
  inline ObjFileProto() : ObjFileProto(nullptr) {}
  ~ObjFileProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ObjFileProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline ObjFileProto(const ObjFileProto& from) : ObjFileProto(nullptr, from) {}
  inline ObjFileProto(ObjFileProto&& from) noexcept
      : ObjFileProto(nullptr, std::move(from)) {}
  inline ObjFileProto& operator=(const ObjFileProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjFileProto& operator=(ObjFileProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObjFileProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObjFileProto* internal_default_instance() {
    return reinterpret_cast<const ObjFileProto*>(
        &_ObjFileProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ObjFileProto& a, ObjFileProto& b) { a.Swap(&b); }
  inline void Swap(ObjFileProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjFileProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObjFileProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ObjFileProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ObjFileProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ObjFileProto& from) { ObjFileProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ObjFileProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.cpu.ObjFileProto"; }

 protected:
  explicit ObjFileProto(::google::protobuf::Arena* arena);
  ObjFileProto(::google::protobuf::Arena* arena, const ObjFileProto& from);
  ObjFileProto(::google::protobuf::Arena* arena, ObjFileProto&& from) noexcept
      : ObjFileProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentsFieldNumber = 1,
    kNameFieldNumber = 2,
  };
  // bytes contents = 1;
  void clear_contents() ;
  const std::string& contents() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contents(Arg_&& arg, Args_... args);
  std::string* mutable_contents();
  PROTOBUF_NODISCARD std::string* release_contents();
  void set_allocated_contents(std::string* value);

  private:
  const std::string& _internal_contents() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contents(
      const std::string& value);
  std::string* _internal_mutable_contents();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:xla.cpu.ObjFileProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      33, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ObjFileProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr contents_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fcpu_2fexecutable_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CompilationResultProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.cpu.CompilationResultProto) */ {
 public:
  inline CompilationResultProto() : CompilationResultProto(nullptr) {}
  ~CompilationResultProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompilationResultProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompilationResultProto(const CompilationResultProto& from) : CompilationResultProto(nullptr, from) {}
  inline CompilationResultProto(CompilationResultProto&& from) noexcept
      : CompilationResultProto(nullptr, std::move(from)) {}
  inline CompilationResultProto& operator=(const CompilationResultProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompilationResultProto& operator=(CompilationResultProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompilationResultProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompilationResultProto* internal_default_instance() {
    return reinterpret_cast<const CompilationResultProto*>(
        &_CompilationResultProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CompilationResultProto& a, CompilationResultProto& b) { a.Swap(&b); }
  inline void Swap(CompilationResultProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompilationResultProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompilationResultProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CompilationResultProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompilationResultProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompilationResultProto& from) { CompilationResultProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompilationResultProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.cpu.CompilationResultProto"; }

 protected:
  explicit CompilationResultProto(::google::protobuf::Arena* arena);
  CompilationResultProto(::google::protobuf::Arena* arena, const CompilationResultProto& from);
  CompilationResultProto(::google::protobuf::Arena* arena, CompilationResultProto&& from) noexcept
      : CompilationResultProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ObjFileKind = CompilationResultProto_ObjFileKind;
  static constexpr ObjFileKind UNKNOWN = CompilationResultProto_ObjFileKind_UNKNOWN;
  static constexpr ObjFileKind CLASSIC = CompilationResultProto_ObjFileKind_CLASSIC;
  static constexpr ObjFileKind KERNELS = CompilationResultProto_ObjFileKind_KERNELS;
  static inline bool ObjFileKind_IsValid(int value) {
    return CompilationResultProto_ObjFileKind_IsValid(value);
  }
  static constexpr ObjFileKind ObjFileKind_MIN = CompilationResultProto_ObjFileKind_ObjFileKind_MIN;
  static constexpr ObjFileKind ObjFileKind_MAX = CompilationResultProto_ObjFileKind_ObjFileKind_MAX;
  static constexpr int ObjFileKind_ARRAYSIZE = CompilationResultProto_ObjFileKind_ObjFileKind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ObjFileKind_descriptor() {
    return CompilationResultProto_ObjFileKind_descriptor();
  }
  template <typename T>
  static inline const std::string& ObjFileKind_Name(T value) {
    return CompilationResultProto_ObjFileKind_Name(value);
  }
  static inline bool ObjFileKind_Parse(absl::string_view name, ObjFileKind* value) {
    return CompilationResultProto_ObjFileKind_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kCompiledSymbolsFieldNumber = 7,
    kObjectFilesFieldNumber = 8,
    kEntryFunctionNameFieldNumber = 3,
    kHloModuleFieldNumber = 1,
    kBufferAssignmentFieldNumber = 2,
    kThunkSequenceFieldNumber = 6,
    kObjFilesKindFieldNumber = 5,
  };
  // repeated .xla.cpu.SymbolProto compiled_symbols = 7;
  int compiled_symbols_size() const;
  private:
  int _internal_compiled_symbols_size() const;

  public:
  void clear_compiled_symbols() ;
  ::xla::cpu::SymbolProto* mutable_compiled_symbols(int index);
  ::google::protobuf::RepeatedPtrField<::xla::cpu::SymbolProto>* mutable_compiled_symbols();

  private:
  const ::google::protobuf::RepeatedPtrField<::xla::cpu::SymbolProto>& _internal_compiled_symbols() const;
  ::google::protobuf::RepeatedPtrField<::xla::cpu::SymbolProto>* _internal_mutable_compiled_symbols();
  public:
  const ::xla::cpu::SymbolProto& compiled_symbols(int index) const;
  ::xla::cpu::SymbolProto* add_compiled_symbols();
  const ::google::protobuf::RepeatedPtrField<::xla::cpu::SymbolProto>& compiled_symbols() const;
  // repeated .xla.cpu.ObjFileProto object_files = 8;
  int object_files_size() const;
  private:
  int _internal_object_files_size() const;

  public:
  void clear_object_files() ;
  ::xla::cpu::ObjFileProto* mutable_object_files(int index);
  ::google::protobuf::RepeatedPtrField<::xla::cpu::ObjFileProto>* mutable_object_files();

  private:
  const ::google::protobuf::RepeatedPtrField<::xla::cpu::ObjFileProto>& _internal_object_files() const;
  ::google::protobuf::RepeatedPtrField<::xla::cpu::ObjFileProto>* _internal_mutable_object_files();
  public:
  const ::xla::cpu::ObjFileProto& object_files(int index) const;
  ::xla::cpu::ObjFileProto* add_object_files();
  const ::google::protobuf::RepeatedPtrField<::xla::cpu::ObjFileProto>& object_files() const;
  // string entry_function_name = 3;
  void clear_entry_function_name() ;
  const std::string& entry_function_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_function_name(Arg_&& arg, Args_... args);
  std::string* mutable_entry_function_name();
  PROTOBUF_NODISCARD std::string* release_entry_function_name();
  void set_allocated_entry_function_name(std::string* value);

  private:
  const std::string& _internal_entry_function_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_function_name(
      const std::string& value);
  std::string* _internal_mutable_entry_function_name();

  public:
  // .xla.HloModuleProtoWithConfig hlo_module = 1;
  bool has_hlo_module() const;
  void clear_hlo_module() ;
  const ::xla::HloModuleProtoWithConfig& hlo_module() const;
  PROTOBUF_NODISCARD ::xla::HloModuleProtoWithConfig* release_hlo_module();
  ::xla::HloModuleProtoWithConfig* mutable_hlo_module();
  void set_allocated_hlo_module(::xla::HloModuleProtoWithConfig* value);
  void unsafe_arena_set_allocated_hlo_module(::xla::HloModuleProtoWithConfig* value);
  ::xla::HloModuleProtoWithConfig* unsafe_arena_release_hlo_module();

  private:
  const ::xla::HloModuleProtoWithConfig& _internal_hlo_module() const;
  ::xla::HloModuleProtoWithConfig* _internal_mutable_hlo_module();

  public:
  // .xla.BufferAssignmentProto buffer_assignment = 2;
  bool has_buffer_assignment() const;
  void clear_buffer_assignment() ;
  const ::xla::BufferAssignmentProto& buffer_assignment() const;
  PROTOBUF_NODISCARD ::xla::BufferAssignmentProto* release_buffer_assignment();
  ::xla::BufferAssignmentProto* mutable_buffer_assignment();
  void set_allocated_buffer_assignment(::xla::BufferAssignmentProto* value);
  void unsafe_arena_set_allocated_buffer_assignment(::xla::BufferAssignmentProto* value);
  ::xla::BufferAssignmentProto* unsafe_arena_release_buffer_assignment();

  private:
  const ::xla::BufferAssignmentProto& _internal_buffer_assignment() const;
  ::xla::BufferAssignmentProto* _internal_mutable_buffer_assignment();

  public:
  // .xla.cpu.ThunkSequenceProto thunk_sequence = 6;
  bool has_thunk_sequence() const;
  void clear_thunk_sequence() ;
  const ::xla::cpu::ThunkSequenceProto& thunk_sequence() const;
  PROTOBUF_NODISCARD ::xla::cpu::ThunkSequenceProto* release_thunk_sequence();
  ::xla::cpu::ThunkSequenceProto* mutable_thunk_sequence();
  void set_allocated_thunk_sequence(::xla::cpu::ThunkSequenceProto* value);
  void unsafe_arena_set_allocated_thunk_sequence(::xla::cpu::ThunkSequenceProto* value);
  ::xla::cpu::ThunkSequenceProto* unsafe_arena_release_thunk_sequence();

  private:
  const ::xla::cpu::ThunkSequenceProto& _internal_thunk_sequence() const;
  ::xla::cpu::ThunkSequenceProto* _internal_mutable_thunk_sequence();

  public:
  // .xla.cpu.CompilationResultProto.ObjFileKind obj_files_kind = 5;
  void clear_obj_files_kind() ;
  ::xla::cpu::CompilationResultProto_ObjFileKind obj_files_kind() const;
  void set_obj_files_kind(::xla::cpu::CompilationResultProto_ObjFileKind value);

  private:
  ::xla::cpu::CompilationResultProto_ObjFileKind _internal_obj_files_kind() const;
  void _internal_set_obj_files_kind(::xla::cpu::CompilationResultProto_ObjFileKind value);

  public:
  // @@protoc_insertion_point(class_scope:xla.cpu.CompilationResultProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 5,
      58, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CompilationResultProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::xla::cpu::SymbolProto > compiled_symbols_;
    ::google::protobuf::RepeatedPtrField< ::xla::cpu::ObjFileProto > object_files_;
    ::google::protobuf::internal::ArenaStringPtr entry_function_name_;
    ::xla::HloModuleProtoWithConfig* hlo_module_;
    ::xla::BufferAssignmentProto* buffer_assignment_;
    ::xla::cpu::ThunkSequenceProto* thunk_sequence_;
    int obj_files_kind_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fcpu_2fexecutable_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SymbolProto

// .xla.cpu.SymbolProto.FunctionTypeId function_type_id = 1;
inline void SymbolProto::clear_function_type_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.function_type_id_ = 0;
}
inline ::xla::cpu::SymbolProto_FunctionTypeId SymbolProto::function_type_id() const {
  // @@protoc_insertion_point(field_get:xla.cpu.SymbolProto.function_type_id)
  return _internal_function_type_id();
}
inline void SymbolProto::set_function_type_id(::xla::cpu::SymbolProto_FunctionTypeId value) {
  _internal_set_function_type_id(value);
  // @@protoc_insertion_point(field_set:xla.cpu.SymbolProto.function_type_id)
}
inline ::xla::cpu::SymbolProto_FunctionTypeId SymbolProto::_internal_function_type_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::xla::cpu::SymbolProto_FunctionTypeId>(_impl_.function_type_id_);
}
inline void SymbolProto::_internal_set_function_type_id(::xla::cpu::SymbolProto_FunctionTypeId value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.function_type_id_ = value;
}

// string name = 2;
inline void SymbolProto::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SymbolProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.cpu.SymbolProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SymbolProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.cpu.SymbolProto.name)
}
inline std::string* SymbolProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:xla.cpu.SymbolProto.name)
  return _s;
}
inline const std::string& SymbolProto::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SymbolProto::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SymbolProto::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SymbolProto::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.cpu.SymbolProto.name)
  return _impl_.name_.Release();
}
inline void SymbolProto::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.cpu.SymbolProto.name)
}

// -------------------------------------------------------------------

// ObjFileProto

// bytes contents = 1;
inline void ObjFileProto::clear_contents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contents_.ClearToEmpty();
}
inline const std::string& ObjFileProto::contents() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.cpu.ObjFileProto.contents)
  return _internal_contents();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ObjFileProto::set_contents(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contents_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.cpu.ObjFileProto.contents)
}
inline std::string* ObjFileProto::mutable_contents() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contents();
  // @@protoc_insertion_point(field_mutable:xla.cpu.ObjFileProto.contents)
  return _s;
}
inline const std::string& ObjFileProto::_internal_contents() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contents_.Get();
}
inline void ObjFileProto::_internal_set_contents(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contents_.Set(value, GetArena());
}
inline std::string* ObjFileProto::_internal_mutable_contents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contents_.Mutable( GetArena());
}
inline std::string* ObjFileProto::release_contents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.cpu.ObjFileProto.contents)
  return _impl_.contents_.Release();
}
inline void ObjFileProto::set_allocated_contents(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contents_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contents_.IsDefault()) {
          _impl_.contents_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.cpu.ObjFileProto.contents)
}

// string name = 2;
inline void ObjFileProto::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ObjFileProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.cpu.ObjFileProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ObjFileProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.cpu.ObjFileProto.name)
}
inline std::string* ObjFileProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:xla.cpu.ObjFileProto.name)
  return _s;
}
inline const std::string& ObjFileProto::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ObjFileProto::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ObjFileProto::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ObjFileProto::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.cpu.ObjFileProto.name)
  return _impl_.name_.Release();
}
inline void ObjFileProto::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.cpu.ObjFileProto.name)
}

// -------------------------------------------------------------------

// CompilationResultProto

// .xla.HloModuleProtoWithConfig hlo_module = 1;
inline bool CompilationResultProto::has_hlo_module() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hlo_module_ != nullptr);
  return value;
}
inline const ::xla::HloModuleProtoWithConfig& CompilationResultProto::_internal_hlo_module() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::HloModuleProtoWithConfig* p = _impl_.hlo_module_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::HloModuleProtoWithConfig&>(::xla::_HloModuleProtoWithConfig_default_instance_);
}
inline const ::xla::HloModuleProtoWithConfig& CompilationResultProto::hlo_module() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.cpu.CompilationResultProto.hlo_module)
  return _internal_hlo_module();
}
inline void CompilationResultProto::unsafe_arena_set_allocated_hlo_module(::xla::HloModuleProtoWithConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hlo_module_);
  }
  _impl_.hlo_module_ = reinterpret_cast<::xla::HloModuleProtoWithConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.cpu.CompilationResultProto.hlo_module)
}
inline ::xla::HloModuleProtoWithConfig* CompilationResultProto::release_hlo_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::HloModuleProtoWithConfig* released = _impl_.hlo_module_;
  _impl_.hlo_module_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xla::HloModuleProtoWithConfig* CompilationResultProto::unsafe_arena_release_hlo_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.cpu.CompilationResultProto.hlo_module)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::HloModuleProtoWithConfig* temp = _impl_.hlo_module_;
  _impl_.hlo_module_ = nullptr;
  return temp;
}
inline ::xla::HloModuleProtoWithConfig* CompilationResultProto::_internal_mutable_hlo_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hlo_module_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::HloModuleProtoWithConfig>(GetArena());
    _impl_.hlo_module_ = reinterpret_cast<::xla::HloModuleProtoWithConfig*>(p);
  }
  return _impl_.hlo_module_;
}
inline ::xla::HloModuleProtoWithConfig* CompilationResultProto::mutable_hlo_module() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xla::HloModuleProtoWithConfig* _msg = _internal_mutable_hlo_module();
  // @@protoc_insertion_point(field_mutable:xla.cpu.CompilationResultProto.hlo_module)
  return _msg;
}
inline void CompilationResultProto::set_allocated_hlo_module(::xla::HloModuleProtoWithConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hlo_module_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.hlo_module_ = reinterpret_cast<::xla::HloModuleProtoWithConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.cpu.CompilationResultProto.hlo_module)
}

// .xla.BufferAssignmentProto buffer_assignment = 2;
inline bool CompilationResultProto::has_buffer_assignment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.buffer_assignment_ != nullptr);
  return value;
}
inline const ::xla::BufferAssignmentProto& CompilationResultProto::_internal_buffer_assignment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::BufferAssignmentProto* p = _impl_.buffer_assignment_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::BufferAssignmentProto&>(::xla::_BufferAssignmentProto_default_instance_);
}
inline const ::xla::BufferAssignmentProto& CompilationResultProto::buffer_assignment() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.cpu.CompilationResultProto.buffer_assignment)
  return _internal_buffer_assignment();
}
inline void CompilationResultProto::unsafe_arena_set_allocated_buffer_assignment(::xla::BufferAssignmentProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.buffer_assignment_);
  }
  _impl_.buffer_assignment_ = reinterpret_cast<::xla::BufferAssignmentProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.cpu.CompilationResultProto.buffer_assignment)
}
inline ::xla::BufferAssignmentProto* CompilationResultProto::release_buffer_assignment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::BufferAssignmentProto* released = _impl_.buffer_assignment_;
  _impl_.buffer_assignment_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xla::BufferAssignmentProto* CompilationResultProto::unsafe_arena_release_buffer_assignment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.cpu.CompilationResultProto.buffer_assignment)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::BufferAssignmentProto* temp = _impl_.buffer_assignment_;
  _impl_.buffer_assignment_ = nullptr;
  return temp;
}
inline ::xla::BufferAssignmentProto* CompilationResultProto::_internal_mutable_buffer_assignment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.buffer_assignment_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::BufferAssignmentProto>(GetArena());
    _impl_.buffer_assignment_ = reinterpret_cast<::xla::BufferAssignmentProto*>(p);
  }
  return _impl_.buffer_assignment_;
}
inline ::xla::BufferAssignmentProto* CompilationResultProto::mutable_buffer_assignment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::xla::BufferAssignmentProto* _msg = _internal_mutable_buffer_assignment();
  // @@protoc_insertion_point(field_mutable:xla.cpu.CompilationResultProto.buffer_assignment)
  return _msg;
}
inline void CompilationResultProto::set_allocated_buffer_assignment(::xla::BufferAssignmentProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.buffer_assignment_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.buffer_assignment_ = reinterpret_cast<::xla::BufferAssignmentProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.cpu.CompilationResultProto.buffer_assignment)
}

// string entry_function_name = 3;
inline void CompilationResultProto::clear_entry_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_function_name_.ClearToEmpty();
}
inline const std::string& CompilationResultProto::entry_function_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.cpu.CompilationResultProto.entry_function_name)
  return _internal_entry_function_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CompilationResultProto::set_entry_function_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_function_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.cpu.CompilationResultProto.entry_function_name)
}
inline std::string* CompilationResultProto::mutable_entry_function_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entry_function_name();
  // @@protoc_insertion_point(field_mutable:xla.cpu.CompilationResultProto.entry_function_name)
  return _s;
}
inline const std::string& CompilationResultProto::_internal_entry_function_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_function_name_.Get();
}
inline void CompilationResultProto::_internal_set_entry_function_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_function_name_.Set(value, GetArena());
}
inline std::string* CompilationResultProto::_internal_mutable_entry_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entry_function_name_.Mutable( GetArena());
}
inline std::string* CompilationResultProto::release_entry_function_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.cpu.CompilationResultProto.entry_function_name)
  return _impl_.entry_function_name_.Release();
}
inline void CompilationResultProto::set_allocated_entry_function_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_function_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entry_function_name_.IsDefault()) {
          _impl_.entry_function_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.cpu.CompilationResultProto.entry_function_name)
}

// .xla.cpu.CompilationResultProto.ObjFileKind obj_files_kind = 5;
inline void CompilationResultProto::clear_obj_files_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.obj_files_kind_ = 0;
}
inline ::xla::cpu::CompilationResultProto_ObjFileKind CompilationResultProto::obj_files_kind() const {
  // @@protoc_insertion_point(field_get:xla.cpu.CompilationResultProto.obj_files_kind)
  return _internal_obj_files_kind();
}
inline void CompilationResultProto::set_obj_files_kind(::xla::cpu::CompilationResultProto_ObjFileKind value) {
  _internal_set_obj_files_kind(value);
  // @@protoc_insertion_point(field_set:xla.cpu.CompilationResultProto.obj_files_kind)
}
inline ::xla::cpu::CompilationResultProto_ObjFileKind CompilationResultProto::_internal_obj_files_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::xla::cpu::CompilationResultProto_ObjFileKind>(_impl_.obj_files_kind_);
}
inline void CompilationResultProto::_internal_set_obj_files_kind(::xla::cpu::CompilationResultProto_ObjFileKind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.obj_files_kind_ = value;
}

// .xla.cpu.ThunkSequenceProto thunk_sequence = 6;
inline bool CompilationResultProto::has_thunk_sequence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.thunk_sequence_ != nullptr);
  return value;
}
inline const ::xla::cpu::ThunkSequenceProto& CompilationResultProto::_internal_thunk_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::cpu::ThunkSequenceProto* p = _impl_.thunk_sequence_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::cpu::ThunkSequenceProto&>(::xla::cpu::_ThunkSequenceProto_default_instance_);
}
inline const ::xla::cpu::ThunkSequenceProto& CompilationResultProto::thunk_sequence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.cpu.CompilationResultProto.thunk_sequence)
  return _internal_thunk_sequence();
}
inline void CompilationResultProto::unsafe_arena_set_allocated_thunk_sequence(::xla::cpu::ThunkSequenceProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.thunk_sequence_);
  }
  _impl_.thunk_sequence_ = reinterpret_cast<::xla::cpu::ThunkSequenceProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.cpu.CompilationResultProto.thunk_sequence)
}
inline ::xla::cpu::ThunkSequenceProto* CompilationResultProto::release_thunk_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::xla::cpu::ThunkSequenceProto* released = _impl_.thunk_sequence_;
  _impl_.thunk_sequence_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xla::cpu::ThunkSequenceProto* CompilationResultProto::unsafe_arena_release_thunk_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.cpu.CompilationResultProto.thunk_sequence)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::xla::cpu::ThunkSequenceProto* temp = _impl_.thunk_sequence_;
  _impl_.thunk_sequence_ = nullptr;
  return temp;
}
inline ::xla::cpu::ThunkSequenceProto* CompilationResultProto::_internal_mutable_thunk_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.thunk_sequence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::cpu::ThunkSequenceProto>(GetArena());
    _impl_.thunk_sequence_ = reinterpret_cast<::xla::cpu::ThunkSequenceProto*>(p);
  }
  return _impl_.thunk_sequence_;
}
inline ::xla::cpu::ThunkSequenceProto* CompilationResultProto::mutable_thunk_sequence() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::xla::cpu::ThunkSequenceProto* _msg = _internal_mutable_thunk_sequence();
  // @@protoc_insertion_point(field_mutable:xla.cpu.CompilationResultProto.thunk_sequence)
  return _msg;
}
inline void CompilationResultProto::set_allocated_thunk_sequence(::xla::cpu::ThunkSequenceProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.thunk_sequence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.thunk_sequence_ = reinterpret_cast<::xla::cpu::ThunkSequenceProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.cpu.CompilationResultProto.thunk_sequence)
}

// repeated .xla.cpu.SymbolProto compiled_symbols = 7;
inline int CompilationResultProto::_internal_compiled_symbols_size() const {
  return _internal_compiled_symbols().size();
}
inline int CompilationResultProto::compiled_symbols_size() const {
  return _internal_compiled_symbols_size();
}
inline void CompilationResultProto::clear_compiled_symbols() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compiled_symbols_.Clear();
}
inline ::xla::cpu::SymbolProto* CompilationResultProto::mutable_compiled_symbols(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xla.cpu.CompilationResultProto.compiled_symbols)
  return _internal_mutable_compiled_symbols()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xla::cpu::SymbolProto>* CompilationResultProto::mutable_compiled_symbols()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.cpu.CompilationResultProto.compiled_symbols)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_compiled_symbols();
}
inline const ::xla::cpu::SymbolProto& CompilationResultProto::compiled_symbols(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.cpu.CompilationResultProto.compiled_symbols)
  return _internal_compiled_symbols().Get(index);
}
inline ::xla::cpu::SymbolProto* CompilationResultProto::add_compiled_symbols() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xla::cpu::SymbolProto* _add = _internal_mutable_compiled_symbols()->Add();
  // @@protoc_insertion_point(field_add:xla.cpu.CompilationResultProto.compiled_symbols)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xla::cpu::SymbolProto>& CompilationResultProto::compiled_symbols() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.cpu.CompilationResultProto.compiled_symbols)
  return _internal_compiled_symbols();
}
inline const ::google::protobuf::RepeatedPtrField<::xla::cpu::SymbolProto>&
CompilationResultProto::_internal_compiled_symbols() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compiled_symbols_;
}
inline ::google::protobuf::RepeatedPtrField<::xla::cpu::SymbolProto>*
CompilationResultProto::_internal_mutable_compiled_symbols() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.compiled_symbols_;
}

// repeated .xla.cpu.ObjFileProto object_files = 8;
inline int CompilationResultProto::_internal_object_files_size() const {
  return _internal_object_files().size();
}
inline int CompilationResultProto::object_files_size() const {
  return _internal_object_files_size();
}
inline void CompilationResultProto::clear_object_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_files_.Clear();
}
inline ::xla::cpu::ObjFileProto* CompilationResultProto::mutable_object_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xla.cpu.CompilationResultProto.object_files)
  return _internal_mutable_object_files()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xla::cpu::ObjFileProto>* CompilationResultProto::mutable_object_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.cpu.CompilationResultProto.object_files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_object_files();
}
inline const ::xla::cpu::ObjFileProto& CompilationResultProto::object_files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.cpu.CompilationResultProto.object_files)
  return _internal_object_files().Get(index);
}
inline ::xla::cpu::ObjFileProto* CompilationResultProto::add_object_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xla::cpu::ObjFileProto* _add = _internal_mutable_object_files()->Add();
  // @@protoc_insertion_point(field_add:xla.cpu.CompilationResultProto.object_files)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xla::cpu::ObjFileProto>& CompilationResultProto::object_files() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.cpu.CompilationResultProto.object_files)
  return _internal_object_files();
}
inline const ::google::protobuf::RepeatedPtrField<::xla::cpu::ObjFileProto>&
CompilationResultProto::_internal_object_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.object_files_;
}
inline ::google::protobuf::RepeatedPtrField<::xla::cpu::ObjFileProto>*
CompilationResultProto::_internal_mutable_object_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.object_files_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace cpu
}  // namespace xla


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::xla::cpu::SymbolProto_FunctionTypeId> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::xla::cpu::SymbolProto_FunctionTypeId>() {
  return ::xla::cpu::SymbolProto_FunctionTypeId_descriptor();
}
template <>
struct is_proto_enum<::xla::cpu::CompilationResultProto_ObjFileKind> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::xla::cpu::CompilationResultProto_ObjFileKind>() {
  return ::xla::cpu::CompilationResultProto_ObjFileKind_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fcpu_2fexecutable_2eproto_2epb_2eh
