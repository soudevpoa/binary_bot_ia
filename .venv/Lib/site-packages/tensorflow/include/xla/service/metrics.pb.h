// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/service/metrics.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fmetrics_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fmetrics_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fservice_2fmetrics_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fservice_2fmetrics_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xla_2fservice_2fmetrics_2eproto;
namespace xla {
class CompilationLogEntry;
struct CompilationLogEntryDefaultTypeInternal;
PROTOBUF_EXPORT extern CompilationLogEntryDefaultTypeInternal _CompilationLogEntry_default_instance_;
class JobInfo;
struct JobInfoDefaultTypeInternal;
PROTOBUF_EXPORT extern JobInfoDefaultTypeInternal _JobInfo_default_instance_;
class KeyValueMetric;
struct KeyValueMetricDefaultTypeInternal;
PROTOBUF_EXPORT extern KeyValueMetricDefaultTypeInternal _KeyValueMetric_default_instance_;
class PassMetrics;
struct PassMetricsDefaultTypeInternal;
PROTOBUF_EXPORT extern PassMetricsDefaultTypeInternal _PassMetrics_default_instance_;
}  // namespace xla
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xla {
enum CompilationLogEntry_CompilationStage : int {
  CompilationLogEntry_CompilationStage_UNSPECIFIED = 0,
  CompilationLogEntry_CompilationStage_END_TO_END = 1,
  CompilationLogEntry_CompilationStage_HLO_PASSES = 2,
  CompilationLogEntry_CompilationStage_CODE_GENERATION = 3,
  CompilationLogEntry_CompilationStage_BACKEND_PASSES = 4,
  CompilationLogEntry_CompilationStage_CompilationLogEntry_CompilationStage_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CompilationLogEntry_CompilationStage_CompilationLogEntry_CompilationStage_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT bool CompilationLogEntry_CompilationStage_IsValid(int value);
PROTOBUF_EXPORT extern const uint32_t CompilationLogEntry_CompilationStage_internal_data_[];
constexpr CompilationLogEntry_CompilationStage CompilationLogEntry_CompilationStage_CompilationStage_MIN = static_cast<CompilationLogEntry_CompilationStage>(0);
constexpr CompilationLogEntry_CompilationStage CompilationLogEntry_CompilationStage_CompilationStage_MAX = static_cast<CompilationLogEntry_CompilationStage>(4);
constexpr int CompilationLogEntry_CompilationStage_CompilationStage_ARRAYSIZE = 4 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor*
CompilationLogEntry_CompilationStage_descriptor();
template <typename T>
const std::string& CompilationLogEntry_CompilationStage_Name(T value) {
  static_assert(std::is_same<T, CompilationLogEntry_CompilationStage>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CompilationStage_Name().");
  return CompilationLogEntry_CompilationStage_Name(static_cast<CompilationLogEntry_CompilationStage>(value));
}
template <>
inline const std::string& CompilationLogEntry_CompilationStage_Name(CompilationLogEntry_CompilationStage value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CompilationLogEntry_CompilationStage_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool CompilationLogEntry_CompilationStage_Parse(absl::string_view name, CompilationLogEntry_CompilationStage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompilationLogEntry_CompilationStage>(
      CompilationLogEntry_CompilationStage_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT KeyValueMetric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.KeyValueMetric) */ {
 public:
  inline KeyValueMetric() : KeyValueMetric(nullptr) {}
  ~KeyValueMetric() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KeyValueMetric(
      ::google::protobuf::internal::ConstantInitialized);

  inline KeyValueMetric(const KeyValueMetric& from) : KeyValueMetric(nullptr, from) {}
  inline KeyValueMetric(KeyValueMetric&& from) noexcept
      : KeyValueMetric(nullptr, std::move(from)) {}
  inline KeyValueMetric& operator=(const KeyValueMetric& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueMetric& operator=(KeyValueMetric&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeyValueMetric& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeyValueMetric* internal_default_instance() {
    return reinterpret_cast<const KeyValueMetric*>(
        &_KeyValueMetric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(KeyValueMetric& a, KeyValueMetric& b) { a.Swap(&b); }
  inline void Swap(KeyValueMetric* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeyValueMetric* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeyValueMetric* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KeyValueMetric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KeyValueMetric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KeyValueMetric& from) { KeyValueMetric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KeyValueMetric* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.KeyValueMetric"; }

 protected:
  explicit KeyValueMetric(::google::protobuf::Arena* arena);
  KeyValueMetric(::google::protobuf::Arena* arena, const KeyValueMetric& from);
  KeyValueMetric(::google::protobuf::Arena* arena, KeyValueMetric&& from) noexcept
      : KeyValueMetric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // int64 value = 2;
  void clear_value() ;
  ::int64_t value() const;
  void set_value(::int64_t value);

  private:
  ::int64_t _internal_value() const;
  void _internal_set_value(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:xla.KeyValueMetric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      30, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KeyValueMetric& from_msg);
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::int64_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT JobInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.JobInfo) */ {
 public:
  inline JobInfo() : JobInfo(nullptr) {}
  ~JobInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JobInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline JobInfo(const JobInfo& from) : JobInfo(nullptr, from) {}
  inline JobInfo(JobInfo&& from) noexcept
      : JobInfo(nullptr, std::move(from)) {}
  inline JobInfo& operator=(const JobInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobInfo& operator=(JobInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JobInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const JobInfo* internal_default_instance() {
    return reinterpret_cast<const JobInfo*>(
        &_JobInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(JobInfo& a, JobInfo& b) { a.Swap(&b); }
  inline void Swap(JobInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JobInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JobInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<JobInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JobInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JobInfo& from) { JobInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JobInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.JobInfo"; }

 protected:
  explicit JobInfo(::google::protobuf::Arena* arena);
  JobInfo(::google::protobuf::Arena* arena, const JobInfo& from);
  JobInfo(::google::protobuf::Arena* arena, JobInfo&& from) noexcept
      : JobInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kCellFieldNumber = 2,
    kUserFieldNumber = 3,
    kUidFieldNumber = 4,
    kTaskIdFieldNumber = 5,
    kTaskUidFieldNumber = 6,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string cell = 2;
  bool has_cell() const;
  void clear_cell() ;
  const std::string& cell() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cell(Arg_&& arg, Args_... args);
  std::string* mutable_cell();
  PROTOBUF_NODISCARD std::string* release_cell();
  void set_allocated_cell(std::string* value);

  private:
  const std::string& _internal_cell() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cell(
      const std::string& value);
  std::string* _internal_mutable_cell();

  public:
  // optional string user = 3;
  bool has_user() const;
  void clear_user() ;
  const std::string& user() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user(Arg_&& arg, Args_... args);
  std::string* mutable_user();
  PROTOBUF_NODISCARD std::string* release_user();
  void set_allocated_user(std::string* value);

  private:
  const std::string& _internal_user() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user(
      const std::string& value);
  std::string* _internal_mutable_user();

  public:
  // optional int64 uid = 4;
  bool has_uid() const;
  void clear_uid() ;
  ::int64_t uid() const;
  void set_uid(::int64_t value);

  private:
  ::int64_t _internal_uid() const;
  void _internal_set_uid(::int64_t value);

  public:
  // optional int64 task_id = 5;
  bool has_task_id() const;
  void clear_task_id() ;
  ::int64_t task_id() const;
  void set_task_id(::int64_t value);

  private:
  ::int64_t _internal_task_id() const;
  void _internal_set_task_id(::int64_t value);

  public:
  // optional int64 task_uid = 6;
  bool has_task_uid() const;
  void clear_task_uid() ;
  ::int64_t task_uid() const;
  void set_task_uid(::int64_t value);

  private:
  ::int64_t _internal_task_uid() const;
  void _internal_set_task_uid(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:xla.JobInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      32, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JobInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr cell_;
    ::google::protobuf::internal::ArenaStringPtr user_;
    ::int64_t uid_;
    ::int64_t task_id_;
    ::int64_t task_uid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT PassMetrics final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.PassMetrics) */ {
 public:
  inline PassMetrics() : PassMetrics(nullptr) {}
  ~PassMetrics() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PassMetrics(
      ::google::protobuf::internal::ConstantInitialized);

  inline PassMetrics(const PassMetrics& from) : PassMetrics(nullptr, from) {}
  inline PassMetrics(PassMetrics&& from) noexcept
      : PassMetrics(nullptr, std::move(from)) {}
  inline PassMetrics& operator=(const PassMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline PassMetrics& operator=(PassMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PassMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const PassMetrics* internal_default_instance() {
    return reinterpret_cast<const PassMetrics*>(
        &_PassMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PassMetrics& a, PassMetrics& b) { a.Swap(&b); }
  inline void Swap(PassMetrics* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PassMetrics* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PassMetrics* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PassMetrics>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PassMetrics& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PassMetrics& from) { PassMetrics::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PassMetrics* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.PassMetrics"; }

 protected:
  explicit PassMetrics(::google::protobuf::Arena* arena);
  PassMetrics(::google::protobuf::Arena* arena, const PassMetrics& from);
  PassMetrics(::google::protobuf::Arena* arena, PassMetrics&& from) noexcept
      : PassMetrics(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKvMetricsFieldNumber = 5,
    kPassNameFieldNumber = 2,
    kPassDurationFieldNumber = 3,
    kCustomMetricsFieldNumber = 4,
    kModuleIdFieldNumber = 1,
  };
  // repeated .xla.KeyValueMetric kv_metrics = 5;
  int kv_metrics_size() const;
  private:
  int _internal_kv_metrics_size() const;

  public:
  void clear_kv_metrics() ;
  ::xla::KeyValueMetric* mutable_kv_metrics(int index);
  ::google::protobuf::RepeatedPtrField<::xla::KeyValueMetric>* mutable_kv_metrics();

  private:
  const ::google::protobuf::RepeatedPtrField<::xla::KeyValueMetric>& _internal_kv_metrics() const;
  ::google::protobuf::RepeatedPtrField<::xla::KeyValueMetric>* _internal_mutable_kv_metrics();
  public:
  const ::xla::KeyValueMetric& kv_metrics(int index) const;
  ::xla::KeyValueMetric* add_kv_metrics();
  const ::google::protobuf::RepeatedPtrField<::xla::KeyValueMetric>& kv_metrics() const;
  // string pass_name = 2;
  void clear_pass_name() ;
  const std::string& pass_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pass_name(Arg_&& arg, Args_... args);
  std::string* mutable_pass_name();
  PROTOBUF_NODISCARD std::string* release_pass_name();
  void set_allocated_pass_name(std::string* value);

  private:
  const std::string& _internal_pass_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pass_name(
      const std::string& value);
  std::string* _internal_mutable_pass_name();

  public:
  // .google.protobuf.Duration pass_duration = 3;
  bool has_pass_duration() const;
  void clear_pass_duration() ;
  const ::google::protobuf::Duration& pass_duration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_pass_duration();
  ::google::protobuf::Duration* mutable_pass_duration();
  void set_allocated_pass_duration(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_pass_duration(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_pass_duration();

  private:
  const ::google::protobuf::Duration& _internal_pass_duration() const;
  ::google::protobuf::Duration* _internal_mutable_pass_duration();

  public:
  // .google.protobuf.Any custom_metrics = 4;
  bool has_custom_metrics() const;
  void clear_custom_metrics() ;
  const ::google::protobuf::Any& custom_metrics() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_custom_metrics();
  ::google::protobuf::Any* mutable_custom_metrics();
  void set_allocated_custom_metrics(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_custom_metrics(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_custom_metrics();

  private:
  const ::google::protobuf::Any& _internal_custom_metrics() const;
  ::google::protobuf::Any* _internal_mutable_custom_metrics();

  public:
  // uint64 module_id = 1;
  void clear_module_id() ;
  ::uint64_t module_id() const;
  void set_module_id(::uint64_t value);

  private:
  ::uint64_t _internal_module_id() const;
  void _internal_set_module_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:xla.PassMetrics)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      33, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PassMetrics& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::xla::KeyValueMetric > kv_metrics_;
    ::google::protobuf::internal::ArenaStringPtr pass_name_;
    ::google::protobuf::Duration* pass_duration_;
    ::google::protobuf::Any* custom_metrics_;
    ::uint64_t module_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CompilationLogEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.CompilationLogEntry) */ {
 public:
  inline CompilationLogEntry() : CompilationLogEntry(nullptr) {}
  ~CompilationLogEntry() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompilationLogEntry(
      ::google::protobuf::internal::ConstantInitialized);

  inline CompilationLogEntry(const CompilationLogEntry& from) : CompilationLogEntry(nullptr, from) {}
  inline CompilationLogEntry(CompilationLogEntry&& from) noexcept
      : CompilationLogEntry(nullptr, std::move(from)) {}
  inline CompilationLogEntry& operator=(const CompilationLogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompilationLogEntry& operator=(CompilationLogEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompilationLogEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompilationLogEntry* internal_default_instance() {
    return reinterpret_cast<const CompilationLogEntry*>(
        &_CompilationLogEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CompilationLogEntry& a, CompilationLogEntry& b) { a.Swap(&b); }
  inline void Swap(CompilationLogEntry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompilationLogEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompilationLogEntry* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CompilationLogEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompilationLogEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompilationLogEntry& from) { CompilationLogEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CompilationLogEntry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.CompilationLogEntry"; }

 protected:
  explicit CompilationLogEntry(::google::protobuf::Arena* arena);
  CompilationLogEntry(::google::protobuf::Arena* arena, const CompilationLogEntry& from);
  CompilationLogEntry(::google::protobuf::Arena* arena, CompilationLogEntry&& from) noexcept
      : CompilationLogEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CompilationStage = CompilationLogEntry_CompilationStage;
  static constexpr CompilationStage UNSPECIFIED = CompilationLogEntry_CompilationStage_UNSPECIFIED;
  static constexpr CompilationStage END_TO_END = CompilationLogEntry_CompilationStage_END_TO_END;
  static constexpr CompilationStage HLO_PASSES = CompilationLogEntry_CompilationStage_HLO_PASSES;
  static constexpr CompilationStage CODE_GENERATION = CompilationLogEntry_CompilationStage_CODE_GENERATION;
  static constexpr CompilationStage BACKEND_PASSES = CompilationLogEntry_CompilationStage_BACKEND_PASSES;
  static inline bool CompilationStage_IsValid(int value) {
    return CompilationLogEntry_CompilationStage_IsValid(value);
  }
  static constexpr CompilationStage CompilationStage_MIN = CompilationLogEntry_CompilationStage_CompilationStage_MIN;
  static constexpr CompilationStage CompilationStage_MAX = CompilationLogEntry_CompilationStage_CompilationStage_MAX;
  static constexpr int CompilationStage_ARRAYSIZE = CompilationLogEntry_CompilationStage_CompilationStage_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* CompilationStage_descriptor() {
    return CompilationLogEntry_CompilationStage_descriptor();
  }
  template <typename T>
  static inline const std::string& CompilationStage_Name(T value) {
    return CompilationLogEntry_CompilationStage_Name(value);
  }
  static inline bool CompilationStage_Parse(absl::string_view name, CompilationStage* value) {
    return CompilationLogEntry_CompilationStage_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPassMetricsFieldNumber = 5,
    kModuleIdsFieldNumber = 6,
    kHloModuleNameFieldNumber = 8,
    kTimestampFieldNumber = 1,
    kDurationFieldNumber = 3,
    kJobInfoFieldNumber = 7,
    kStageFieldNumber = 2,
    kTaskIndexFieldNumber = 4,
  };
  // repeated .xla.PassMetrics pass_metrics = 5;
  int pass_metrics_size() const;
  private:
  int _internal_pass_metrics_size() const;

  public:
  void clear_pass_metrics() ;
  ::xla::PassMetrics* mutable_pass_metrics(int index);
  ::google::protobuf::RepeatedPtrField<::xla::PassMetrics>* mutable_pass_metrics();

  private:
  const ::google::protobuf::RepeatedPtrField<::xla::PassMetrics>& _internal_pass_metrics() const;
  ::google::protobuf::RepeatedPtrField<::xla::PassMetrics>* _internal_mutable_pass_metrics();
  public:
  const ::xla::PassMetrics& pass_metrics(int index) const;
  ::xla::PassMetrics* add_pass_metrics();
  const ::google::protobuf::RepeatedPtrField<::xla::PassMetrics>& pass_metrics() const;
  // repeated uint64 module_ids = 6;
  int module_ids_size() const;
  private:
  int _internal_module_ids_size() const;

  public:
  void clear_module_ids() ;
  ::uint64_t module_ids(int index) const;
  void set_module_ids(int index, ::uint64_t value);
  void add_module_ids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& module_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_module_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_module_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_module_ids();

  public:
  // string hlo_module_name = 8;
  void clear_hlo_module_name() ;
  const std::string& hlo_module_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hlo_module_name(Arg_&& arg, Args_... args);
  std::string* mutable_hlo_module_name();
  PROTOBUF_NODISCARD std::string* release_hlo_module_name();
  void set_allocated_hlo_module_name(std::string* value);

  private:
  const std::string& _internal_hlo_module_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hlo_module_name(
      const std::string& value);
  std::string* _internal_mutable_hlo_module_name();

  public:
  // .google.protobuf.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // .google.protobuf.Duration duration = 3;
  bool has_duration() const;
  void clear_duration() ;
  const ::google::protobuf::Duration& duration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_duration();
  ::google::protobuf::Duration* mutable_duration();
  void set_allocated_duration(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_duration(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_duration();

  private:
  const ::google::protobuf::Duration& _internal_duration() const;
  ::google::protobuf::Duration* _internal_mutable_duration();

  public:
  // .xla.JobInfo job_info = 7;
  bool has_job_info() const;
  void clear_job_info() ;
  const ::xla::JobInfo& job_info() const;
  PROTOBUF_NODISCARD ::xla::JobInfo* release_job_info();
  ::xla::JobInfo* mutable_job_info();
  void set_allocated_job_info(::xla::JobInfo* value);
  void unsafe_arena_set_allocated_job_info(::xla::JobInfo* value);
  ::xla::JobInfo* unsafe_arena_release_job_info();

  private:
  const ::xla::JobInfo& _internal_job_info() const;
  ::xla::JobInfo* _internal_mutable_job_info();

  public:
  // .xla.CompilationLogEntry.CompilationStage stage = 2;
  void clear_stage() ;
  ::xla::CompilationLogEntry_CompilationStage stage() const;
  void set_stage(::xla::CompilationLogEntry_CompilationStage value);

  private:
  ::xla::CompilationLogEntry_CompilationStage _internal_stage() const;
  void _internal_set_stage(::xla::CompilationLogEntry_CompilationStage value);

  public:
  // int32 task_index = 4;
  void clear_task_index() ;
  ::int32_t task_index() const;
  void set_task_index(::int32_t value);

  private:
  ::int32_t _internal_task_index() const;
  void _internal_set_task_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xla.CompilationLogEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 4,
      55, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CompilationLogEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::xla::PassMetrics > pass_metrics_;
    ::google::protobuf::RepeatedField<::uint64_t> module_ids_;
    mutable ::google::protobuf::internal::CachedSize _module_ids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr hlo_module_name_;
    ::google::protobuf::Timestamp* timestamp_;
    ::google::protobuf::Duration* duration_;
    ::xla::JobInfo* job_info_;
    int stage_;
    ::int32_t task_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fmetrics_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// KeyValueMetric

// string key = 1;
inline void KeyValueMetric::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& KeyValueMetric::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.KeyValueMetric.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KeyValueMetric::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.KeyValueMetric.key)
}
inline std::string* KeyValueMetric::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:xla.KeyValueMetric.key)
  return _s;
}
inline const std::string& KeyValueMetric::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void KeyValueMetric::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* KeyValueMetric::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* KeyValueMetric::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.KeyValueMetric.key)
  return _impl_.key_.Release();
}
inline void KeyValueMetric::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.KeyValueMetric.key)
}

// int64 value = 2;
inline void KeyValueMetric::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = ::int64_t{0};
}
inline ::int64_t KeyValueMetric::value() const {
  // @@protoc_insertion_point(field_get:xla.KeyValueMetric.value)
  return _internal_value();
}
inline void KeyValueMetric::set_value(::int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:xla.KeyValueMetric.value)
}
inline ::int64_t KeyValueMetric::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void KeyValueMetric::_internal_set_value(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// PassMetrics

// uint64 module_id = 1;
inline void PassMetrics::clear_module_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_id_ = ::uint64_t{0u};
}
inline ::uint64_t PassMetrics::module_id() const {
  // @@protoc_insertion_point(field_get:xla.PassMetrics.module_id)
  return _internal_module_id();
}
inline void PassMetrics::set_module_id(::uint64_t value) {
  _internal_set_module_id(value);
  // @@protoc_insertion_point(field_set:xla.PassMetrics.module_id)
}
inline ::uint64_t PassMetrics::_internal_module_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_id_;
}
inline void PassMetrics::_internal_set_module_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_id_ = value;
}

// string pass_name = 2;
inline void PassMetrics::clear_pass_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pass_name_.ClearToEmpty();
}
inline const std::string& PassMetrics::pass_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.PassMetrics.pass_name)
  return _internal_pass_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PassMetrics::set_pass_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pass_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.PassMetrics.pass_name)
}
inline std::string* PassMetrics::mutable_pass_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pass_name();
  // @@protoc_insertion_point(field_mutable:xla.PassMetrics.pass_name)
  return _s;
}
inline const std::string& PassMetrics::_internal_pass_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pass_name_.Get();
}
inline void PassMetrics::_internal_set_pass_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pass_name_.Set(value, GetArena());
}
inline std::string* PassMetrics::_internal_mutable_pass_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pass_name_.Mutable( GetArena());
}
inline std::string* PassMetrics::release_pass_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.PassMetrics.pass_name)
  return _impl_.pass_name_.Release();
}
inline void PassMetrics::set_allocated_pass_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pass_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pass_name_.IsDefault()) {
          _impl_.pass_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.PassMetrics.pass_name)
}

// .google.protobuf.Duration pass_duration = 3;
inline bool PassMetrics::has_pass_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pass_duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& PassMetrics::_internal_pass_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.pass_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& PassMetrics::pass_duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.PassMetrics.pass_duration)
  return _internal_pass_duration();
}
inline void PassMetrics::unsafe_arena_set_allocated_pass_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pass_duration_);
  }
  _impl_.pass_duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.PassMetrics.pass_duration)
}
inline ::google::protobuf::Duration* PassMetrics::release_pass_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.pass_duration_;
  _impl_.pass_duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* PassMetrics::unsafe_arena_release_pass_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.PassMetrics.pass_duration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.pass_duration_;
  _impl_.pass_duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* PassMetrics::_internal_mutable_pass_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pass_duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.pass_duration_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.pass_duration_;
}
inline ::google::protobuf::Duration* PassMetrics::mutable_pass_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_pass_duration();
  // @@protoc_insertion_point(field_mutable:xla.PassMetrics.pass_duration)
  return _msg;
}
inline void PassMetrics::set_allocated_pass_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pass_duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pass_duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.PassMetrics.pass_duration)
}

// .google.protobuf.Any custom_metrics = 4;
inline bool PassMetrics::has_custom_metrics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.custom_metrics_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& PassMetrics::_internal_custom_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.custom_metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& PassMetrics::custom_metrics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.PassMetrics.custom_metrics)
  return _internal_custom_metrics();
}
inline void PassMetrics::unsafe_arena_set_allocated_custom_metrics(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.custom_metrics_);
  }
  _impl_.custom_metrics_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.PassMetrics.custom_metrics)
}
inline ::google::protobuf::Any* PassMetrics::release_custom_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Any* released = _impl_.custom_metrics_;
  _impl_.custom_metrics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Any* PassMetrics::unsafe_arena_release_custom_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.PassMetrics.custom_metrics)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Any* temp = _impl_.custom_metrics_;
  _impl_.custom_metrics_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* PassMetrics::_internal_mutable_custom_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.custom_metrics_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.custom_metrics_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.custom_metrics_;
}
inline ::google::protobuf::Any* PassMetrics::mutable_custom_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Any* _msg = _internal_mutable_custom_metrics();
  // @@protoc_insertion_point(field_mutable:xla.PassMetrics.custom_metrics)
  return _msg;
}
inline void PassMetrics::set_allocated_custom_metrics(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.custom_metrics_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.custom_metrics_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.PassMetrics.custom_metrics)
}

// repeated .xla.KeyValueMetric kv_metrics = 5;
inline int PassMetrics::_internal_kv_metrics_size() const {
  return _internal_kv_metrics().size();
}
inline int PassMetrics::kv_metrics_size() const {
  return _internal_kv_metrics_size();
}
inline void PassMetrics::clear_kv_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kv_metrics_.Clear();
}
inline ::xla::KeyValueMetric* PassMetrics::mutable_kv_metrics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xla.PassMetrics.kv_metrics)
  return _internal_mutable_kv_metrics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xla::KeyValueMetric>* PassMetrics::mutable_kv_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.PassMetrics.kv_metrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_kv_metrics();
}
inline const ::xla::KeyValueMetric& PassMetrics::kv_metrics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.PassMetrics.kv_metrics)
  return _internal_kv_metrics().Get(index);
}
inline ::xla::KeyValueMetric* PassMetrics::add_kv_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xla::KeyValueMetric* _add = _internal_mutable_kv_metrics()->Add();
  // @@protoc_insertion_point(field_add:xla.PassMetrics.kv_metrics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xla::KeyValueMetric>& PassMetrics::kv_metrics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.PassMetrics.kv_metrics)
  return _internal_kv_metrics();
}
inline const ::google::protobuf::RepeatedPtrField<::xla::KeyValueMetric>&
PassMetrics::_internal_kv_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kv_metrics_;
}
inline ::google::protobuf::RepeatedPtrField<::xla::KeyValueMetric>*
PassMetrics::_internal_mutable_kv_metrics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.kv_metrics_;
}

// -------------------------------------------------------------------

// JobInfo

// optional string name = 1;
inline bool JobInfo::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void JobInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& JobInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.JobInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JobInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.JobInfo.name)
}
inline std::string* JobInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:xla.JobInfo.name)
  return _s;
}
inline const std::string& JobInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void JobInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* JobInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* JobInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.JobInfo.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void JobInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.JobInfo.name)
}

// optional string cell = 2;
inline bool JobInfo::has_cell() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void JobInfo::clear_cell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cell_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& JobInfo::cell() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.JobInfo.cell)
  return _internal_cell();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JobInfo::set_cell(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.cell_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.JobInfo.cell)
}
inline std::string* JobInfo::mutable_cell() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cell();
  // @@protoc_insertion_point(field_mutable:xla.JobInfo.cell)
  return _s;
}
inline const std::string& JobInfo::_internal_cell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cell_.Get();
}
inline void JobInfo::_internal_set_cell(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.cell_.Set(value, GetArena());
}
inline std::string* JobInfo::_internal_mutable_cell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.cell_.Mutable( GetArena());
}
inline std::string* JobInfo::release_cell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.JobInfo.cell)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.cell_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cell_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void JobInfo::set_allocated_cell(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.cell_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cell_.IsDefault()) {
          _impl_.cell_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.JobInfo.cell)
}

// optional string user = 3;
inline bool JobInfo::has_user() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void JobInfo::clear_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& JobInfo::user() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.JobInfo.user)
  return _internal_user();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JobInfo::set_user(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.user_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.JobInfo.user)
}
inline std::string* JobInfo::mutable_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user();
  // @@protoc_insertion_point(field_mutable:xla.JobInfo.user)
  return _s;
}
inline const std::string& JobInfo::_internal_user() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_.Get();
}
inline void JobInfo::_internal_set_user(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.user_.Set(value, GetArena());
}
inline std::string* JobInfo::_internal_mutable_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.user_.Mutable( GetArena());
}
inline std::string* JobInfo::release_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.JobInfo.user)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.user_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void JobInfo::set_allocated_user(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.user_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.user_.IsDefault()) {
          _impl_.user_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.JobInfo.user)
}

// optional int64 uid = 4;
inline bool JobInfo::has_uid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void JobInfo::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t JobInfo::uid() const {
  // @@protoc_insertion_point(field_get:xla.JobInfo.uid)
  return _internal_uid();
}
inline void JobInfo::set_uid(::int64_t value) {
  _internal_set_uid(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:xla.JobInfo.uid)
}
inline ::int64_t JobInfo::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void JobInfo::_internal_set_uid(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// optional int64 task_id = 5;
inline bool JobInfo::has_task_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void JobInfo::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t JobInfo::task_id() const {
  // @@protoc_insertion_point(field_get:xla.JobInfo.task_id)
  return _internal_task_id();
}
inline void JobInfo::set_task_id(::int64_t value) {
  _internal_set_task_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:xla.JobInfo.task_id)
}
inline ::int64_t JobInfo::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_;
}
inline void JobInfo::_internal_set_task_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = value;
}

// optional int64 task_uid = 6;
inline bool JobInfo::has_task_uid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void JobInfo::clear_task_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_uid_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t JobInfo::task_uid() const {
  // @@protoc_insertion_point(field_get:xla.JobInfo.task_uid)
  return _internal_task_uid();
}
inline void JobInfo::set_task_uid(::int64_t value) {
  _internal_set_task_uid(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:xla.JobInfo.task_uid)
}
inline ::int64_t JobInfo::_internal_task_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_uid_;
}
inline void JobInfo::_internal_set_task_uid(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_uid_ = value;
}

// -------------------------------------------------------------------

// CompilationLogEntry

// .google.protobuf.Timestamp timestamp = 1;
inline bool CompilationLogEntry::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CompilationLogEntry::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CompilationLogEntry::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.CompilationLogEntry.timestamp)
  return _internal_timestamp();
}
inline void CompilationLogEntry::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilationLogEntry.timestamp)
}
inline ::google::protobuf::Timestamp* CompilationLogEntry::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* CompilationLogEntry::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.CompilationLogEntry.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* CompilationLogEntry::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* CompilationLogEntry::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:xla.CompilationLogEntry.timestamp)
  return _msg;
}
inline void CompilationLogEntry::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.CompilationLogEntry.timestamp)
}

// .xla.CompilationLogEntry.CompilationStage stage = 2;
inline void CompilationLogEntry::clear_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = 0;
}
inline ::xla::CompilationLogEntry_CompilationStage CompilationLogEntry::stage() const {
  // @@protoc_insertion_point(field_get:xla.CompilationLogEntry.stage)
  return _internal_stage();
}
inline void CompilationLogEntry::set_stage(::xla::CompilationLogEntry_CompilationStage value) {
  _internal_set_stage(value);
  // @@protoc_insertion_point(field_set:xla.CompilationLogEntry.stage)
}
inline ::xla::CompilationLogEntry_CompilationStage CompilationLogEntry::_internal_stage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::xla::CompilationLogEntry_CompilationStage>(_impl_.stage_);
}
inline void CompilationLogEntry::_internal_set_stage(::xla::CompilationLogEntry_CompilationStage value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = value;
}

// .google.protobuf.Duration duration = 3;
inline bool CompilationLogEntry::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& CompilationLogEntry::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& CompilationLogEntry::duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.CompilationLogEntry.duration)
  return _internal_duration();
}
inline void CompilationLogEntry::unsafe_arena_set_allocated_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }
  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilationLogEntry.duration)
}
inline ::google::protobuf::Duration* CompilationLogEntry::release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* released = _impl_.duration_;
  _impl_.duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* CompilationLogEntry::unsafe_arena_release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.CompilationLogEntry.duration)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* temp = _impl_.duration_;
  _impl_.duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* CompilationLogEntry::_internal_mutable_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.duration_;
}
inline ::google::protobuf::Duration* CompilationLogEntry::mutable_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Duration* _msg = _internal_mutable_duration();
  // @@protoc_insertion_point(field_mutable:xla.CompilationLogEntry.duration)
  return _msg;
}
inline void CompilationLogEntry::set_allocated_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.CompilationLogEntry.duration)
}

// int32 task_index = 4;
inline void CompilationLogEntry::clear_task_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_index_ = 0;
}
inline ::int32_t CompilationLogEntry::task_index() const {
  // @@protoc_insertion_point(field_get:xla.CompilationLogEntry.task_index)
  return _internal_task_index();
}
inline void CompilationLogEntry::set_task_index(::int32_t value) {
  _internal_set_task_index(value);
  // @@protoc_insertion_point(field_set:xla.CompilationLogEntry.task_index)
}
inline ::int32_t CompilationLogEntry::_internal_task_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_index_;
}
inline void CompilationLogEntry::_internal_set_task_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_index_ = value;
}

// repeated .xla.PassMetrics pass_metrics = 5;
inline int CompilationLogEntry::_internal_pass_metrics_size() const {
  return _internal_pass_metrics().size();
}
inline int CompilationLogEntry::pass_metrics_size() const {
  return _internal_pass_metrics_size();
}
inline void CompilationLogEntry::clear_pass_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pass_metrics_.Clear();
}
inline ::xla::PassMetrics* CompilationLogEntry::mutable_pass_metrics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xla.CompilationLogEntry.pass_metrics)
  return _internal_mutable_pass_metrics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xla::PassMetrics>* CompilationLogEntry::mutable_pass_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.CompilationLogEntry.pass_metrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pass_metrics();
}
inline const ::xla::PassMetrics& CompilationLogEntry::pass_metrics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.CompilationLogEntry.pass_metrics)
  return _internal_pass_metrics().Get(index);
}
inline ::xla::PassMetrics* CompilationLogEntry::add_pass_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xla::PassMetrics* _add = _internal_mutable_pass_metrics()->Add();
  // @@protoc_insertion_point(field_add:xla.CompilationLogEntry.pass_metrics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xla::PassMetrics>& CompilationLogEntry::pass_metrics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.CompilationLogEntry.pass_metrics)
  return _internal_pass_metrics();
}
inline const ::google::protobuf::RepeatedPtrField<::xla::PassMetrics>&
CompilationLogEntry::_internal_pass_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pass_metrics_;
}
inline ::google::protobuf::RepeatedPtrField<::xla::PassMetrics>*
CompilationLogEntry::_internal_mutable_pass_metrics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pass_metrics_;
}

// repeated uint64 module_ids = 6;
inline int CompilationLogEntry::_internal_module_ids_size() const {
  return _internal_module_ids().size();
}
inline int CompilationLogEntry::module_ids_size() const {
  return _internal_module_ids_size();
}
inline void CompilationLogEntry::clear_module_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_ids_.Clear();
}
inline ::uint64_t CompilationLogEntry::module_ids(int index) const {
  // @@protoc_insertion_point(field_get:xla.CompilationLogEntry.module_ids)
  return _internal_module_ids().Get(index);
}
inline void CompilationLogEntry::set_module_ids(int index, ::uint64_t value) {
  _internal_mutable_module_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:xla.CompilationLogEntry.module_ids)
}
inline void CompilationLogEntry::add_module_ids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_module_ids()->Add(value);
  // @@protoc_insertion_point(field_add:xla.CompilationLogEntry.module_ids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& CompilationLogEntry::module_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.CompilationLogEntry.module_ids)
  return _internal_module_ids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CompilationLogEntry::mutable_module_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.CompilationLogEntry.module_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_module_ids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
CompilationLogEntry::_internal_module_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_ids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CompilationLogEntry::_internal_mutable_module_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.module_ids_;
}

// .xla.JobInfo job_info = 7;
inline bool CompilationLogEntry::has_job_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.job_info_ != nullptr);
  return value;
}
inline void CompilationLogEntry::clear_job_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.job_info_ != nullptr) _impl_.job_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::xla::JobInfo& CompilationLogEntry::_internal_job_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::JobInfo* p = _impl_.job_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::JobInfo&>(::xla::_JobInfo_default_instance_);
}
inline const ::xla::JobInfo& CompilationLogEntry::job_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.CompilationLogEntry.job_info)
  return _internal_job_info();
}
inline void CompilationLogEntry::unsafe_arena_set_allocated_job_info(::xla::JobInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.job_info_);
  }
  _impl_.job_info_ = reinterpret_cast<::xla::JobInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilationLogEntry.job_info)
}
inline ::xla::JobInfo* CompilationLogEntry::release_job_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::xla::JobInfo* released = _impl_.job_info_;
  _impl_.job_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xla::JobInfo* CompilationLogEntry::unsafe_arena_release_job_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.CompilationLogEntry.job_info)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::xla::JobInfo* temp = _impl_.job_info_;
  _impl_.job_info_ = nullptr;
  return temp;
}
inline ::xla::JobInfo* CompilationLogEntry::_internal_mutable_job_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.job_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::JobInfo>(GetArena());
    _impl_.job_info_ = reinterpret_cast<::xla::JobInfo*>(p);
  }
  return _impl_.job_info_;
}
inline ::xla::JobInfo* CompilationLogEntry::mutable_job_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::xla::JobInfo* _msg = _internal_mutable_job_info();
  // @@protoc_insertion_point(field_mutable:xla.CompilationLogEntry.job_info)
  return _msg;
}
inline void CompilationLogEntry::set_allocated_job_info(::xla::JobInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.job_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.job_info_ = reinterpret_cast<::xla::JobInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.CompilationLogEntry.job_info)
}

// string hlo_module_name = 8;
inline void CompilationLogEntry::clear_hlo_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hlo_module_name_.ClearToEmpty();
}
inline const std::string& CompilationLogEntry::hlo_module_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.CompilationLogEntry.hlo_module_name)
  return _internal_hlo_module_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CompilationLogEntry::set_hlo_module_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hlo_module_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.CompilationLogEntry.hlo_module_name)
}
inline std::string* CompilationLogEntry::mutable_hlo_module_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hlo_module_name();
  // @@protoc_insertion_point(field_mutable:xla.CompilationLogEntry.hlo_module_name)
  return _s;
}
inline const std::string& CompilationLogEntry::_internal_hlo_module_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hlo_module_name_.Get();
}
inline void CompilationLogEntry::_internal_set_hlo_module_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hlo_module_name_.Set(value, GetArena());
}
inline std::string* CompilationLogEntry::_internal_mutable_hlo_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hlo_module_name_.Mutable( GetArena());
}
inline std::string* CompilationLogEntry::release_hlo_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.CompilationLogEntry.hlo_module_name)
  return _impl_.hlo_module_name_.Release();
}
inline void CompilationLogEntry::set_allocated_hlo_module_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hlo_module_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hlo_module_name_.IsDefault()) {
          _impl_.hlo_module_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xla.CompilationLogEntry.hlo_module_name)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace xla


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::xla::CompilationLogEntry_CompilationStage> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::xla::CompilationLogEntry_CompilationStage>() {
  return ::xla::CompilationLogEntry_CompilationStage_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fmetrics_2eproto_2epb_2eh
