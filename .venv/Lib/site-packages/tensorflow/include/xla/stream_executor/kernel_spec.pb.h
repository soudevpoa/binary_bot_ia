// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/stream_executor/kernel_spec.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_xla_2fstream_5fexecutor_2fkernel_5fspec_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_xla_2fstream_5fexecutor_2fkernel_5fspec_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fstream_5fexecutor_2fkernel_5fspec_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fstream_5fexecutor_2fkernel_5fspec_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xla_2fstream_5fexecutor_2fkernel_5fspec_2eproto;
namespace stream_executor {
class CudaCubinProto;
struct CudaCubinProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern CudaCubinProtoDefaultTypeInternal _CudaCubinProto_default_instance_;
class CudaPtxProto;
struct CudaPtxProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern CudaPtxProtoDefaultTypeInternal _CudaPtxProto_default_instance_;
class KernelLoaderSpecProto;
struct KernelLoaderSpecProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern KernelLoaderSpecProtoDefaultTypeInternal _KernelLoaderSpecProto_default_instance_;
}  // namespace stream_executor
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace stream_executor {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT CudaPtxProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stream_executor.CudaPtxProto) */ {
 public:
  inline CudaPtxProto() : CudaPtxProto(nullptr) {}
  ~CudaPtxProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CudaPtxProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline CudaPtxProto(const CudaPtxProto& from) : CudaPtxProto(nullptr, from) {}
  inline CudaPtxProto(CudaPtxProto&& from) noexcept
      : CudaPtxProto(nullptr, std::move(from)) {}
  inline CudaPtxProto& operator=(const CudaPtxProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline CudaPtxProto& operator=(CudaPtxProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CudaPtxProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const CudaPtxProto* internal_default_instance() {
    return reinterpret_cast<const CudaPtxProto*>(
        &_CudaPtxProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CudaPtxProto& a, CudaPtxProto& b) { a.Swap(&b); }
  inline void Swap(CudaPtxProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CudaPtxProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CudaPtxProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CudaPtxProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CudaPtxProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CudaPtxProto& from) { CudaPtxProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CudaPtxProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stream_executor.CudaPtxProto"; }

 protected:
  explicit CudaPtxProto(::google::protobuf::Arena* arena);
  CudaPtxProto(::google::protobuf::Arena* arena, const CudaPtxProto& from);
  CudaPtxProto(::google::protobuf::Arena* arena, CudaPtxProto&& from) noexcept
      : CudaPtxProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // string data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:stream_executor.CudaPtxProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CudaPtxProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fstream_5fexecutor_2fkernel_5fspec_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CudaCubinProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stream_executor.CudaCubinProto) */ {
 public:
  inline CudaCubinProto() : CudaCubinProto(nullptr) {}
  ~CudaCubinProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CudaCubinProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline CudaCubinProto(const CudaCubinProto& from) : CudaCubinProto(nullptr, from) {}
  inline CudaCubinProto(CudaCubinProto&& from) noexcept
      : CudaCubinProto(nullptr, std::move(from)) {}
  inline CudaCubinProto& operator=(const CudaCubinProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline CudaCubinProto& operator=(CudaCubinProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CudaCubinProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const CudaCubinProto* internal_default_instance() {
    return reinterpret_cast<const CudaCubinProto*>(
        &_CudaCubinProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CudaCubinProto& a, CudaCubinProto& b) { a.Swap(&b); }
  inline void Swap(CudaCubinProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CudaCubinProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CudaCubinProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CudaCubinProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CudaCubinProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CudaCubinProto& from) { CudaCubinProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CudaCubinProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stream_executor.CudaCubinProto"; }

 protected:
  explicit CudaCubinProto(::google::protobuf::Arena* arena);
  CudaCubinProto(::google::protobuf::Arena* arena, const CudaCubinProto& from);
  CudaCubinProto(::google::protobuf::Arena* arena, CudaCubinProto&& from) noexcept
      : CudaCubinProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:stream_executor.CudaCubinProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CudaCubinProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fstream_5fexecutor_2fkernel_5fspec_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_EXPORT KernelLoaderSpecProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stream_executor.KernelLoaderSpecProto) */ {
 public:
  inline KernelLoaderSpecProto() : KernelLoaderSpecProto(nullptr) {}
  ~KernelLoaderSpecProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KernelLoaderSpecProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline KernelLoaderSpecProto(const KernelLoaderSpecProto& from) : KernelLoaderSpecProto(nullptr, from) {}
  inline KernelLoaderSpecProto(KernelLoaderSpecProto&& from) noexcept
      : KernelLoaderSpecProto(nullptr, std::move(from)) {}
  inline KernelLoaderSpecProto& operator=(const KernelLoaderSpecProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelLoaderSpecProto& operator=(KernelLoaderSpecProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KernelLoaderSpecProto& default_instance() {
    return *internal_default_instance();
  }
  enum PayloadCase {
    kPtx = 1,
    kCubin = 2,
    PAYLOAD_NOT_SET = 0,
  };
  static inline const KernelLoaderSpecProto* internal_default_instance() {
    return reinterpret_cast<const KernelLoaderSpecProto*>(
        &_KernelLoaderSpecProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(KernelLoaderSpecProto& a, KernelLoaderSpecProto& b) { a.Swap(&b); }
  inline void Swap(KernelLoaderSpecProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KernelLoaderSpecProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KernelLoaderSpecProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KernelLoaderSpecProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KernelLoaderSpecProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KernelLoaderSpecProto& from) { KernelLoaderSpecProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KernelLoaderSpecProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "stream_executor.KernelLoaderSpecProto"; }

 protected:
  explicit KernelLoaderSpecProto(::google::protobuf::Arena* arena);
  KernelLoaderSpecProto(::google::protobuf::Arena* arena, const KernelLoaderSpecProto& from);
  KernelLoaderSpecProto(::google::protobuf::Arena* arena, KernelLoaderSpecProto&& from) noexcept
      : KernelLoaderSpecProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKernelNameFieldNumber = 4,
    kArityFieldNumber = 3,
    kPtxFieldNumber = 1,
    kCubinFieldNumber = 2,
  };
  // string kernel_name = 4;
  void clear_kernel_name() ;
  const std::string& kernel_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kernel_name(Arg_&& arg, Args_... args);
  std::string* mutable_kernel_name();
  PROTOBUF_NODISCARD std::string* release_kernel_name();
  void set_allocated_kernel_name(std::string* value);

  private:
  const std::string& _internal_kernel_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_kernel_name(
      const std::string& value);
  std::string* _internal_mutable_kernel_name();

  public:
  // int32 arity = 3;
  void clear_arity() ;
  ::int32_t arity() const;
  void set_arity(::int32_t value);

  private:
  ::int32_t _internal_arity() const;
  void _internal_set_arity(::int32_t value);

  public:
  // .stream_executor.CudaPtxProto ptx = 1;
  bool has_ptx() const;
  private:
  bool _internal_has_ptx() const;

  public:
  void clear_ptx() ;
  const ::stream_executor::CudaPtxProto& ptx() const;
  PROTOBUF_NODISCARD ::stream_executor::CudaPtxProto* release_ptx();
  ::stream_executor::CudaPtxProto* mutable_ptx();
  void set_allocated_ptx(::stream_executor::CudaPtxProto* value);
  void unsafe_arena_set_allocated_ptx(::stream_executor::CudaPtxProto* value);
  ::stream_executor::CudaPtxProto* unsafe_arena_release_ptx();

  private:
  const ::stream_executor::CudaPtxProto& _internal_ptx() const;
  ::stream_executor::CudaPtxProto* _internal_mutable_ptx();

  public:
  // .stream_executor.CudaCubinProto cubin = 2;
  bool has_cubin() const;
  private:
  bool _internal_has_cubin() const;

  public:
  void clear_cubin() ;
  const ::stream_executor::CudaCubinProto& cubin() const;
  PROTOBUF_NODISCARD ::stream_executor::CudaCubinProto* release_cubin();
  ::stream_executor::CudaCubinProto* mutable_cubin();
  void set_allocated_cubin(::stream_executor::CudaCubinProto* value);
  void unsafe_arena_set_allocated_cubin(::stream_executor::CudaCubinProto* value);
  ::stream_executor::CudaCubinProto* unsafe_arena_release_cubin();

  private:
  const ::stream_executor::CudaCubinProto& _internal_cubin() const;
  ::stream_executor::CudaCubinProto* _internal_mutable_cubin();

  public:
  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:stream_executor.KernelLoaderSpecProto)
 private:
  class _Internal;
  void set_has_ptx();
  void set_has_cubin();
  inline bool has_payload() const;
  inline void clear_has_payload();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 4, 2,
      57, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KernelLoaderSpecProto& from_msg);
    ::google::protobuf::internal::ArenaStringPtr kernel_name_;
    ::int32_t arity_;
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::stream_executor::CudaPtxProto* ptx_;
      ::stream_executor::CudaCubinProto* cubin_;
    } payload_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fstream_5fexecutor_2fkernel_5fspec_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CudaPtxProto

// string data = 1;
inline void CudaPtxProto::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& CudaPtxProto::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stream_executor.CudaPtxProto.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CudaPtxProto::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stream_executor.CudaPtxProto.data)
}
inline std::string* CudaPtxProto::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:stream_executor.CudaPtxProto.data)
  return _s;
}
inline const std::string& CudaPtxProto::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CudaPtxProto::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* CudaPtxProto::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* CudaPtxProto::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stream_executor.CudaPtxProto.data)
  return _impl_.data_.Release();
}
inline void CudaPtxProto::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stream_executor.CudaPtxProto.data)
}

// -------------------------------------------------------------------

// CudaCubinProto

// bytes data = 1;
inline void CudaCubinProto::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& CudaCubinProto::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stream_executor.CudaCubinProto.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CudaCubinProto::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stream_executor.CudaCubinProto.data)
}
inline std::string* CudaCubinProto::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:stream_executor.CudaCubinProto.data)
  return _s;
}
inline const std::string& CudaCubinProto::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CudaCubinProto::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* CudaCubinProto::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* CudaCubinProto::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stream_executor.CudaCubinProto.data)
  return _impl_.data_.Release();
}
inline void CudaCubinProto::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stream_executor.CudaCubinProto.data)
}

// -------------------------------------------------------------------

// KernelLoaderSpecProto

// .stream_executor.CudaPtxProto ptx = 1;
inline bool KernelLoaderSpecProto::has_ptx() const {
  return payload_case() == kPtx;
}
inline bool KernelLoaderSpecProto::_internal_has_ptx() const {
  return payload_case() == kPtx;
}
inline void KernelLoaderSpecProto::set_has_ptx() {
  _impl_._oneof_case_[0] = kPtx;
}
inline void KernelLoaderSpecProto::clear_ptx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPtx) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ptx_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ptx_);
    }
    clear_has_payload();
  }
}
inline ::stream_executor::CudaPtxProto* KernelLoaderSpecProto::release_ptx() {
  // @@protoc_insertion_point(field_release:stream_executor.KernelLoaderSpecProto.ptx)
  if (payload_case() == kPtx) {
    clear_has_payload();
    auto* temp = _impl_.payload_.ptx_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.ptx_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stream_executor::CudaPtxProto& KernelLoaderSpecProto::_internal_ptx() const {
  return payload_case() == kPtx ? *_impl_.payload_.ptx_ : reinterpret_cast<::stream_executor::CudaPtxProto&>(::stream_executor::_CudaPtxProto_default_instance_);
}
inline const ::stream_executor::CudaPtxProto& KernelLoaderSpecProto::ptx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stream_executor.KernelLoaderSpecProto.ptx)
  return _internal_ptx();
}
inline ::stream_executor::CudaPtxProto* KernelLoaderSpecProto::unsafe_arena_release_ptx() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stream_executor.KernelLoaderSpecProto.ptx)
  if (payload_case() == kPtx) {
    clear_has_payload();
    auto* temp = _impl_.payload_.ptx_;
    _impl_.payload_.ptx_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void KernelLoaderSpecProto::unsafe_arena_set_allocated_ptx(::stream_executor::CudaPtxProto* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_ptx();
    _impl_.payload_.ptx_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stream_executor.KernelLoaderSpecProto.ptx)
}
inline ::stream_executor::CudaPtxProto* KernelLoaderSpecProto::_internal_mutable_ptx() {
  if (payload_case() != kPtx) {
    clear_payload();
    set_has_ptx();
    _impl_.payload_.ptx_ =
        ::google::protobuf::Message::DefaultConstruct<::stream_executor::CudaPtxProto>(GetArena());
  }
  return _impl_.payload_.ptx_;
}
inline ::stream_executor::CudaPtxProto* KernelLoaderSpecProto::mutable_ptx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stream_executor::CudaPtxProto* _msg = _internal_mutable_ptx();
  // @@protoc_insertion_point(field_mutable:stream_executor.KernelLoaderSpecProto.ptx)
  return _msg;
}

// .stream_executor.CudaCubinProto cubin = 2;
inline bool KernelLoaderSpecProto::has_cubin() const {
  return payload_case() == kCubin;
}
inline bool KernelLoaderSpecProto::_internal_has_cubin() const {
  return payload_case() == kCubin;
}
inline void KernelLoaderSpecProto::set_has_cubin() {
  _impl_._oneof_case_[0] = kCubin;
}
inline void KernelLoaderSpecProto::clear_cubin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kCubin) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.cubin_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.cubin_);
    }
    clear_has_payload();
  }
}
inline ::stream_executor::CudaCubinProto* KernelLoaderSpecProto::release_cubin() {
  // @@protoc_insertion_point(field_release:stream_executor.KernelLoaderSpecProto.cubin)
  if (payload_case() == kCubin) {
    clear_has_payload();
    auto* temp = _impl_.payload_.cubin_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.cubin_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::stream_executor::CudaCubinProto& KernelLoaderSpecProto::_internal_cubin() const {
  return payload_case() == kCubin ? *_impl_.payload_.cubin_ : reinterpret_cast<::stream_executor::CudaCubinProto&>(::stream_executor::_CudaCubinProto_default_instance_);
}
inline const ::stream_executor::CudaCubinProto& KernelLoaderSpecProto::cubin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stream_executor.KernelLoaderSpecProto.cubin)
  return _internal_cubin();
}
inline ::stream_executor::CudaCubinProto* KernelLoaderSpecProto::unsafe_arena_release_cubin() {
  // @@protoc_insertion_point(field_unsafe_arena_release:stream_executor.KernelLoaderSpecProto.cubin)
  if (payload_case() == kCubin) {
    clear_has_payload();
    auto* temp = _impl_.payload_.cubin_;
    _impl_.payload_.cubin_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void KernelLoaderSpecProto::unsafe_arena_set_allocated_cubin(::stream_executor::CudaCubinProto* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_cubin();
    _impl_.payload_.cubin_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stream_executor.KernelLoaderSpecProto.cubin)
}
inline ::stream_executor::CudaCubinProto* KernelLoaderSpecProto::_internal_mutable_cubin() {
  if (payload_case() != kCubin) {
    clear_payload();
    set_has_cubin();
    _impl_.payload_.cubin_ =
        ::google::protobuf::Message::DefaultConstruct<::stream_executor::CudaCubinProto>(GetArena());
  }
  return _impl_.payload_.cubin_;
}
inline ::stream_executor::CudaCubinProto* KernelLoaderSpecProto::mutable_cubin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::stream_executor::CudaCubinProto* _msg = _internal_mutable_cubin();
  // @@protoc_insertion_point(field_mutable:stream_executor.KernelLoaderSpecProto.cubin)
  return _msg;
}

// int32 arity = 3;
inline void KernelLoaderSpecProto::clear_arity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arity_ = 0;
}
inline ::int32_t KernelLoaderSpecProto::arity() const {
  // @@protoc_insertion_point(field_get:stream_executor.KernelLoaderSpecProto.arity)
  return _internal_arity();
}
inline void KernelLoaderSpecProto::set_arity(::int32_t value) {
  _internal_set_arity(value);
  // @@protoc_insertion_point(field_set:stream_executor.KernelLoaderSpecProto.arity)
}
inline ::int32_t KernelLoaderSpecProto::_internal_arity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.arity_;
}
inline void KernelLoaderSpecProto::_internal_set_arity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arity_ = value;
}

// string kernel_name = 4;
inline void KernelLoaderSpecProto::clear_kernel_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kernel_name_.ClearToEmpty();
}
inline const std::string& KernelLoaderSpecProto::kernel_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stream_executor.KernelLoaderSpecProto.kernel_name)
  return _internal_kernel_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KernelLoaderSpecProto::set_kernel_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kernel_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:stream_executor.KernelLoaderSpecProto.kernel_name)
}
inline std::string* KernelLoaderSpecProto::mutable_kernel_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kernel_name();
  // @@protoc_insertion_point(field_mutable:stream_executor.KernelLoaderSpecProto.kernel_name)
  return _s;
}
inline const std::string& KernelLoaderSpecProto::_internal_kernel_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kernel_name_.Get();
}
inline void KernelLoaderSpecProto::_internal_set_kernel_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kernel_name_.Set(value, GetArena());
}
inline std::string* KernelLoaderSpecProto::_internal_mutable_kernel_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.kernel_name_.Mutable( GetArena());
}
inline std::string* KernelLoaderSpecProto::release_kernel_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stream_executor.KernelLoaderSpecProto.kernel_name)
  return _impl_.kernel_name_.Release();
}
inline void KernelLoaderSpecProto::set_allocated_kernel_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kernel_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.kernel_name_.IsDefault()) {
          _impl_.kernel_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:stream_executor.KernelLoaderSpecProto.kernel_name)
}

inline bool KernelLoaderSpecProto::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void KernelLoaderSpecProto::clear_has_payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline KernelLoaderSpecProto::PayloadCase KernelLoaderSpecProto::payload_case() const {
  return KernelLoaderSpecProto::PayloadCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace stream_executor


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_xla_2fstream_5fexecutor_2fkernel_5fspec_2eproto_2epb_2eh
